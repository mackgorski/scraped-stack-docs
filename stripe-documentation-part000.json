[
  {
    "url": "https://docs.stripe.com/",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/52d6e32f24e1d2872960ba1d0cb8aac5.webp)\n\n## Documentation\n\nExplore our guides and examples to integrate Stripe.\n\n[\n\nGet started with payments\n\n\n\n](https://docs.stripe.com/payments?payments=popular)\n\n[\n\nExplore all products\n\n\n\n](#products)\n\n[Sign in](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2F) or [create an account](https://dashboard.stripe.com/register) to load your test API keys.\n\n[\n\nTest cards\n\n\n\n](https://docs.stripe.com/testing#cards)\n\n## No-code\n\n*   [Sell and get paid online](https://docs.stripe.com/no-code/payment-links)\n*   [Invoice clients and customers](https://docs.stripe.com/no-code/invoices)\n*   [Set up recurring payments](https://docs.stripe.com/no-code/subscriptions)\n\n## Stripe hosted\n\n*   [Use a prebuilt checkout page](https://docs.stripe.com/payments/checkout)\n*   [Set up the customer portal](https://docs.stripe.com/no-code/customer-portal)\n*   [Create pricing table](https://docs.stripe.com/no-code/pricing-table)\n\n## For developers\n\n*   [API reference](https://docs.stripe.com/api)\n*   [Development quickstart](https://docs.stripe.com/get-started/development-environment)\n*   [Browse our sample projects](https://docs.stripe.com/samples)\n\n## Try it out\n\n[](https://docs.stripe.com/stripe-cli#install)\n\n[Sign in](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2F) to edit real requests.\n\n[\n\nLearn more about Payment Intents\n\n\n\n](https://docs.stripe.com/payments/payment-intents)\n\n## Browse by product![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPayments\n\n[\n\nPaymentsOnline payments\n\n\n\n](https://docs.stripe.com/payments)[\n\nTerminalIn-person and omnichannel payments\n\n\n\n](https://docs.stripe.com/terminal)[\n\nConnectPayments for platforms\n\n\n\n](https://docs.stripe.com/connect)[\n\nRadarFraud and risk management\n\n\n\n](https://docs.stripe.com/radar)[\n\nClimateCarbon removal\n\n\n\n](https://docs.stripe.com/climate/faqs)[\n\nIdentityOnline identity verification\n\n\n\n](https://docs.stripe.com/identity)[\n\nFinancial ConnectionsConnect users' financial accounts\n\n\n\n](https://docs.stripe.com/financial-connections)\n\nFinance automation\n\n[\n\nBillingSubscriptions and recurring payments\n\n\n\n](https://docs.stripe.com/billing)[\n\nTaxSales tax and VAT automation\n\n\n\n](https://docs.stripe.com/tax)[\n\nRevenue RecognitionAccounting automation\n\n\n\n](https://docs.stripe.com/billing/revenue-recognition)[\n\nSigmaCustom reports\n\n\n\n](https://docs.stripe.com/stripe-data/access-data-in-dashboard)[\n\nData PipelineData warehouse sync\n\n\n\n](https://docs.stripe.com/stripe-data/access-data-in-warehouse)[\n\nAtlasStartup incorporation\n\n\n\n](https://docs.stripe.com/atlas)\n\nBanking as a service\n\n[\n\nIssuingCard creation\n\n\n\n](https://docs.stripe.com/issuing)[\n\nTreasuryBuilding blocks for financial services\n\n\n\n](https://docs.stripe.com/treasury)[\n\nCapitalBusiness financing\n\n\n\n](https://docs.stripe.com/capital/how-stripe-capital-works)\n\nPrebuilt components\n\n[\n\nPayment LinksNo-code payments\n\n\n\n](https://docs.stripe.com/payments/payment-links)[\n\nCheckoutPrebuilt, Stripe-hosted checkout page\n\n\n\n](https://docs.stripe.com/payments/checkout)[\n\nElementsSecure frontend UI components\n\n\n\n](https://docs.stripe.com/payments/elements)\n\nNeed help? [Contact Support](https://support.stripe.com/).\n\nJoin our [early access program](https://insiders.stripe.dev/).\n\nCheck out our [product changelog](https://stripe.com/blog/changelog).\n\nQuestions? [Contact Sales](https://stripe.com/contact/sales).\n\nPowered by [Markdoc](https://markdoc.dev/)\n\nSign up for developer updates:\n\nYou can unsubscribe at any time. Read our [privacy policy](https://stripe.com/privacy).",
    "title": "Stripe Documentation",
    "description": "Explore our guides and examples to integrate Stripe.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax",
    "markdown": "# Stripe Tax | Stripe DocumentationThe Stripe Docs logo\n\n## Automate sales tax, VAT, and GST compliance on all your transactions—low or no code integrations available.",
    "title": "Stripe Tax | Stripe Documentation",
    "description": "Automate sales tax, VAT, and GST compliance on all your transactions—low or no code integrations available.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n[Skip to content](#main-content)\n\n## Billing\n\n## Create and manage subscriptions, track usage, and issue invoices.\n\nSign up for developer updates:",
    "title": "Billing | Stripe Documentation",
    "description": "Create and manage subscriptions, track usage, and issue invoices.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/revenue-recognition",
    "markdown": "# Revenue Recognition overview | Stripe DocumentationThe Stripe Docs logo\n\n## Automate your accrual accounting process with Stripe Revenue Recognition.\n\nRevenue recognition is a fundamental part of accrual accounting. Generally accepted accounting principles (GAAP) state that you recognize revenue when you realize and earn it, which might be earlier or later than when you actually receive cash. Correctly recognizing and deferring revenue enables you to have the most accurate insights into your business profitability and financial health.\n\n## Who needs revenue recognition ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nRevenue recognition is critical for many types of businesses, especially:\n\n*   Public companies or large businesses with over 25 million USD in annual revenue—because they’re legally required to comply with ASC 606 and GAAP and IFRS accounting standards.\n*   Startups that need to follow accrual accounting to raise money from investors or get a loan from a bank.\n*   Subscription and service-based businesses.\n*   Businesses where customers pay up front before receiving a good or service.\n\nRevenue recognition can provide these businesses with a clear picture of their performance.\n\nRevenue recognition gets complicated quickly as businesses scale with larger product lines and increased payment volumes. For subscription businesses that need to manage changes, refunds, disputes, and prorations, revenue recognition can be especially complex. Such subscription updates can complicate the process of recognizing and deferring revenue accurately and compliantly.\n\n### New accounting standards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nOn May 28, 2014, the Financial Accounting Standards Board (FASB) and International Accounting Standards Board (IASB) jointly issued [Accounting Standards Codification (ASC) 606](https://asc.fasb.org/606/tableOfContent), a new framework for businesses to recognize revenue from contracts with customers.\n\n## Stripe Revenue Recognition ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe Revenue Recognition helps you simplify the process of recognizing revenue without the need for engineering involvement or lengthy configurations. Stripe Revenue Recognition offers you:\n\n*   Recognized and deferred [revenue summaries](https://docs.stripe.com/revenue-recognition/reports/monthly-summary)\n*   Downloadable accounting [reports and waterfall](https://docs.stripe.com/revenue-recognition/reports/waterfall) charts\n*   Interactive revenue numbers for full [audit](https://docs.stripe.com/revenue-recognition/reports/audit-numbers) transparency\n*   Configurable revenue recognition [rules](https://docs.stripe.com/revenue-recognition/rules) and accounting period controls\n\nRead more about Stripe’s revenue recognition [methodology](https://docs.stripe.com/revenue-recognition/methodology).",
    "title": "Revenue Recognition overview | Stripe Documentation",
    "description": "Automate your accrual accounting process with Stripe Revenue Recognition.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-data/access-data-in-dashboard",
    "markdown": "# Access data in Stripe with Sigma\n\n## Generate custom reports for charges, refunds, disputes, and more with Sigma.\n\n[Sigma](https://stripe.com/sigma) makes all your transactional data available within an interactive SQL environment in the Stripe Dashboard. Sigma lets you create fully customized reports using information about your payments, subscriptions, customers, payouts, and so on.\n\nWith Sigma, you can:\n\n*   Get the information you need that best reflects your business and Stripe integration.\n    \n*   Export in CSV format to import into your tools.\n    \n*   Fetch the data you need on a schedule of your choosing.\n    \n\n## Get started![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBegin building custom reports using [templates](https://docs.stripe.com/stripe-data/write-queries#templates). Learn more about [writing queries and the broad range of reporting functions](https://docs.stripe.com/stripe-data/write-queries).\n\n## Financial reports in Sigma![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[Financial Reports](https://docs.stripe.com/reports) give you the data you need to complete your accounting and reconciliation workflows. You can use Sigma to create customized versions of these reports tailored to your needs and find queries to generate Stripe’s financial reports in the templates section of the Sigma sidebar. Additionally, you can find the schema for the underlying tables that drive financial reports in the schema section of the sidebar.\n\nYou can recreate the following reports and their connected variants in Sigma:\n\n| Report group | Sigma template name | API report type |\n| --- | --- | --- |\n| **Balance Report** | Itemized balance change from activity | `balance_change_from_activity.itemized.3` |\n|     | Itemized payouts | `payouts.itemized.3` |\n| **Payout reconciliation report** | Itemized payout reconciliation | `payout_reconciliation.itemized.5` |\n|     | Itemized ending balance reconciliation | `ending_balance_reconciliation.itemized.4` |\n\nReports follow the same availability rules as the Stripe Dashboard. Payout Reconciliation reports are only available for users with the **Automatic payouts** setting enabled, and connect variants of reports are only available for users on [Stripe Connect](https://docs.stripe.com/connect).\n\n### Opening a Financial Report in Sigma![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo generate a Financial Report in Sigma, navigate to the [templates](https://docs.stripe.com/stripe-data/write-queries#templates) section of your Sigma Dashboard and search for the report you want to generate. Click the template, then click **Run** in the top right corner.\n\nBy default, these reports run on the last completed month that all data is available for. You can change the dates by making a copy of the template and editing the report date intervals.\n\nDescriptions of the columns produced by financial report queries are available in the [Financial Reporting documentation](https://docs.stripe.com/reports/select-a-report).\n\n### Considerations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe Financial Reports you generate from your Sigma Dashboard might slightly differ from those you generate on the Stripe Dashboard.\n\n*   **Data availability:** For Financial Reports, you can find the most recent day of available data by selecting **month to date** or opening the date picker calendar. In Sigma, the `data_load_time` parameter provides the timestamp that data is available through.\n*   **Time zone:** Financial Reports in the Stripe Dashboard filter reports by the local time zone by default, but you can switch them to use the UTC time zone. Sigma filters templates by the UTC time zone.\n*   **Date range:** A selected date range for Stripe Dashboard financial reports, such as Jan. 13 to Jan. 14, filters reports from January 13 00:00:00 up to January 14 23:59:59. A chosen date range filter for Sigma templates for January 13 to January 14 filters reports from Jan 13 00:00:00 up to January 13 23:59:59.\n*   **Currency:** Financial Reports in the Stripe Dashboard always filter data to a single currency. By default, the Sigma report templates return all currencies. You can add a `WHERE` clause to your Sigma query to restrict your results to a single currency.\n*   **Metadata:** Financial reports allow you to include metadata. Sigma templates don’t include it. You can add metadata to your reports by following the `Metadata to column` Sigma template.\n\n## Unsubscribing from Sigma![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you currently have an active Sigma subscription and want to cancel it for any reason, unsubscribe from [Sigma in the settings page](https://dashboard.stripe.com/settings/sigma) of the Stripe Dashboard by clicking **Cancel Stripe Sigma subscription**. You can continue using Sigma until the end of the billing cycle, at which point the subscription ends.\n\n### See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Query transaction data](https://docs.stripe.com/stripe-data/query-transactions)\n*   [Query Billing data](https://docs.stripe.com/stripe-data/query-billing-data)\n*   [Sigma and Data Pipeline for Connect platforms](https://docs.stripe.com/stripe-data/query-connect-data)\n*   [Query Issuing data](https://docs.stripe.com/stripe-data/query-issuing-data)\n*   [Query Stripe fees data](https://docs.stripe.com/stripe-data/query-stripe-fees-data)\n*   [Schedule queries with Sigma](https://docs.stripe.com/stripe-data/schedule-queries)\n*   [Migrate queries onto the new Sigma version](https://docs.stripe.com/stripe-data/migrate-queries)",
    "title": "Access data in Stripe with Sigma | Stripe Documentation",
    "description": "Generate custom reports for charges, refunds, disputes, and more with Sigma.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-data/access-data-in-warehouse",
    "markdown": "# Access data in your data warehouse with Data Pipeline\n\n## Sync your Stripe account with Snowflake, Amazon Redshift, Google Cloud Storage, and other data storage services.\n\n[Data Pipeline](https://dashboard.stripe.com/settings/stripe-data-pipeline) is a no-code product that sends all your Stripe data to a variety of data storage destinations. This allows you to centralize your Stripe data with other business data to help close your books and get more detailed business insights.\n\nWith Data Pipeline, you can:\n\n*   Automatically export your complete Stripe data in a fast and reliable manner.\n*   Stop relying on third-party extract, transform, and load (ETL) pipelines or home-built API integrations.\n*   Combine data from all your Stripe accounts into one data warehouse.\n*   Integrate Stripe data with your other business data for more complete business insights.\n\n#### Caution\n\nBecause of data localization requirements, Stripe doesn’t offer Data Pipeline services to customers, businesses, or users in India.\n\n### Destination Support![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Data Pipeline supports two variations of destinations.\n\n*   [Data warehouses](https://docs.stripe.com/stripe-data/access-data-in-warehouse/data-warehouses) (Snowflake, Amazon Redshift)\n    *   For data warehouse destinations, Stripe sends a data share to your data warehouse.\n    *   After you accept the data share, you can access your core Stripe data in Snowflake or Amazon Redshift within 12 hours.\n    *   After the initial load, your Stripe data [refreshes regularly](https://docs.stripe.com/stripe-data/available-data), delivering an incremental or full load of data every 3 hours.\n*   [Cloud storage](https://docs.stripe.com/stripe-data/access-data-in-warehouse/cloud-storage) (Google Cloud Storage, Azure Blob Storage)\n    *   For our cloud storage destinations, Stripe sends [Parquet](https://parquet.apache.org/) files directly to a cloud storage location you own.\n    *   After the initial load, your Stripe data [refreshes regularly](https://docs.stripe.com/stripe-data/available-data), delivering a new full load of your data every 6 hours.\n\n### Database schemas![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYour warehouse data is split into two database schemas based on the API mode used to create the data.\n\n| Schema name | Description |\n| --- | --- |\n| `STRIPE` | Data populated from live mode |\n| `STRIPE_TESTMODE` | Data populated from [test mode](https://docs.stripe.com/test-mode \"test mode\") |\n\n### Multiple Stripe accounts with the same data warehouse![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you share data from multiple Stripe accounts with the same data warehouse, you can identify these separately. Every table has a `merchant_id` column, which allows you to filter the data by account.\n\n### Example use case![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn some cases, you might want to combine information from your proprietary data with Stripe data. The following schema shows an `orders` table that lists data about an order for a company:\n\n| date | order\\_no | stripe\\_txn\\_no | customer\\_name | price | items |\n| --- | --- | --- | --- | --- | --- |\n| 7/12/2024 | 1   | bt\\_xcVXgHcBfi83m94 | John Smith | 5   | 1 book |\n\nThe table above doesn’t contain data regarding transaction fees or [payouts](https://docs.stripe.com/payouts \"payout\") because that data exists solely within Stripe. In Stripe, the `balance_transactions` table contains the following information, but lacks proprietary data regarding customer names and items purchased:\n\n| id  | amount | available\\_on | fee | net | automatic\\_transfer\\_id |\n| --- | --- | --- | --- | --- | --- |\n| bt\\_xcVXgHcBfi83m94 | 500 | 7/12/2024 | 50  | 450 | po\\_rC4ocAkjGy8zl3j |\n\nTo access your proprietary data alongside your Stripe data, combine the `orders` table with Stripe’s `balance_transactions` table:\n\n`select   orders.date,   orders.order_no,   orders.stripe_txn_no,   bts.amount,   bts.fee,   bts.automatic_transfer_id from mycompany.orders join stripe.balance_transactions bts on orders.stripe_txn_no = bts.id;`\n\nAfter it completes, the following information is available:\n\n| date | order\\_no | Stripe\\_txn\\_no | amount | fee | automatic\\_transfer\\_id |\n| --- | --- | --- | --- | --- | --- |\n| 7/12/2024 | 1   | bt\\_xcVXgHcBfi83m94 | 500 | 50  | po\\_rC4ocAkjGy8zl3j |\n\n#### Datasets![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can see a list of available datasets under **Datasets** in the [schema documentation](https://dashboard.stripe.com/stripe-schema) page in the Dashboard. Available datasets might vary by region, subject to local product availability and regulations. Data Pipeline separately shares each dataset, which contains one or more warehouse tables, as data becomes available. Data Pipeline updates some tables on different schedules based on the availability of new data. See [data freshness](https://docs.stripe.com/stripe-data/available-data) for more information on available datasets and refresh schedules.\n\n### Email notifications![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can also subscribe to email notifications for critical updates in the [Dashboard](https://dashboard.stripe.com/settings/stripe-data-pipeline).\n\n## Turn off Data Pipeline![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can turn off Data Pipeline in the Dashboard [settings page](https://dashboard.stripe.com/settings/stripe-data-pipeline) by clicking **Turn off**. After you disconnect, you lose access to your data share immediately.\n\n### See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Query transaction data](https://docs.stripe.com/stripe-data/query-transactions)\n*   [Query Billing data](https://docs.stripe.com/stripe-data/query-billing-data)\n*   [Sigma and Data Pipeline for Connect platforms](https://docs.stripe.com/stripe-data/query-connect-data)\n*   [Query Issuing data](https://docs.stripe.com/stripe-data/query-issuing-data)\n*   [Query Stripe fees data](https://docs.stripe.com/stripe-data/query-stripe-fees-data)",
    "title": "Access data in your data warehouse with Data Pipeline | Stripe Documentation",
    "description": "Sync your Stripe account with Snowflake, Amazon Redshift, Google Cloud Storage, and other data storage services.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/atlas",
    "markdown": "# Stripe Atlas | Stripe DocumentationThe Stripe Docs logo\n\n## Start a US company from anywhere in the world using Stripe Atlas.\n\nLaunch your startup with Stripe Atlas and we’ll generate the documents you need, form your company in Delaware, hire a registered agent, and get your US Tax ID. [Create an account](https://dashboard.stripe.com/register/atlas) to start your company with Stripe Atlas.\n\n#### Note\n\nStripe Atlas provides founders with legal information and access to self-service tools. We aren’t a law firm and don’t provide legal, tax, or accounting advice. Founders’ needs will vary. If you have unique considerations or are contributing highly valuable intellectual property to your company, please talk with your lawyer before proceeding.\n\n## Form your company![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Post-formation resources![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Stripe Atlas | Stripe Documentation",
    "description": "Start a US company from anywhere in the world using Stripe Atlas.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Issuing\n\n## Learn how to use the Stripe Issuing API to create, manage, and distribute payment cards for your business.",
    "title": "Issuing | Stripe Documentation",
    "description": "Learn how to use the Stripe Issuing API to create, manage, and distribute payment cards for your business.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/treasury",
    "markdown": "# Overview of Stripe Treasury | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about the Stripe Treasury API.\n\n[Stripe Treasury](https://stripe.com/treasury) is a Banking as a Service (BaaS) API for [Connect](https://docs.stripe.com/connect \"Connect\") platforms that lets you embed financial services in your product. Stripe provides the infrastructure in partnership with trusted banks.\n\nWith Treasury, you can enable your connected accounts to hold funds, pay bills, earn yield, and manage their cash flow. Many platforms also use [Stripe Issuing](https://docs.stripe.com/issuing) to issue cards for accessing Treasury accounts.\n\nTo request access to Treasury test mode, fill out the [Treasury form](https://go.stripe.global/treasury-inquiry).\n\nBusinesses serving US-based commercial businesses are immediately granted access to test mode after completing the form. All other businesses require review by Stripe to verify whether we can support them. For more information on which businesses can use Treasury, see our [Treasury requirements guide](https://docs.stripe.com/treasury/requirements).\n\n## Building blocks for financial services![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Treasury provides modular components for building a full-featured, scalable financial product.\n\nSet up your connected accounts as Treasury customers, verify their identity, and provision Treasury financial accounts with one of our bank partners.\n\n*   ID verification\n*   [KYC](https://en.wikipedia.org/wiki/Know_your_customer \"know your customer\") checks\n*   Sanctions screening\n\n## Treasury use cases![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following are examples of some common Stripe Treasury use cases:\n\n*   **Spend management**: Build a spend management product for your customers to store funds on your platform and manage spending with branded cards.\n*   **Store and spend account**: Create FDIC insurance-eligible accounts that allow businesses to store funds, earn yield, deposit checks, and pay contractors and vendors with ACH and wire transfers.\n*   **Programmatic money movement**: Facilitate money movement between your platform’s connected accounts and from connected accounts to third-party accounts.\n\n## Treasury account architecture![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWith Stripe Connect, you onboard customers to your platform as connected accounts. You can create a Treasury account for each connected account to access your financial products. The following diagram illustrates an overview of a platform with Stripe Treasury integration.\n\n![Diagram of a platform integrated with Treasury, showing customers, platform, connected and financial accounts, external bank accounts, payment cards, and money movement.](https://b.stripecdn.com/docs-statics-srv/assets/architecture.59cac501261250e0ebe9785c6f9701ce.png)Treasury account architecture\n\n### Connected accounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nConnected accounts are sellers or service providers that use a platform. For example, as a digital storefront platform owner, you provide an e-commerce framework that businesses can use to establish online stores and collect payments. Each business that uses the storefront platform is a connected account.\n\nTreasury only supports connected accounts that don’t use a Stripe-hosted dashboard and where your platform is responsible for requirements collection and loss liability, including Custom connected accounts. Learn how to [create connected accounts](https://docs.stripe.com/connect/design-an-integration?connect-onboarding-surface=api&connect-dashboard-type=none&connect-economic-model=buy-rate&connect-loss-liability-owner=platform&connect-charge-type=direct) that work with Treasury.\n\nAs a platform with connected accounts, you’re responsible for maintaining a minimum API version, communicating terms of service updates to your connected accounts, handling information requests from them, and providing them with support. Because your platform is ultimately responsible for the losses your connected accounts incur, you’re also responsible for vetting them for fraud. To learn more, read the [Treasury fraud guide](https://docs.stripe.com/treasury/examples/fraud-guide).\n\n### Financial accounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUsing Treasury endpoints of the [Stripe API](https://docs.stripe.com/api), you can create financial accounts and attach them to connected accounts in a one-to-one relationship (unless you’re enrolled in the [Multi FA beta](https://docs.stripe.com/treasury/account-management/financial-accounts#create-a-financialaccount)).\n\nYou can fund the financial accounts of your platform’s connected accounts and move money between them. Your connected accounts can also fund their Treasury financial accounts using a bank external to Stripe. If your platform uses Stripe Issuing, you can provide payment cards linked to the financial account balance of your connected accounts.\n\nTreasury financial accounts have routing numbers because they’re backed by US banking partners, and balances are eligible for FDIC pass-through insurance.\n\n## Sample integration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFollow our two-part sample integration to see how Treasury works:\n\n1.  [Use Treasury to set up financial accounts and create cards with Issuing](https://docs.stripe.com/treasury/examples/financial-accounts).\n2.  [Use Treasury with SetupIntents and PaymentMethods to move money](https://docs.stripe.com/treasury/examples/moving-money).\n\nStripe Treasury is provided in the US by Stripe Payments Company, licensed money transmitter, with funds held at Stripe’s bank partners, Members FDIC. Card and other credit products are provided by Celtic Bank, Member FDIC and serviced by Stripe, Inc. and its affiliate Stripe Servicing, Inc.",
    "title": "Overview of Stripe Treasury | Stripe Documentation",
    "description": "Learn about the Stripe Treasury API.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/capital/how-stripe-capital-works",
    "markdown": "# How Stripe Capital Works | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how Stripe Capital can help you grow your business.\n\nStripe Capital offers financing for eligible users processing payments through Stripe. Under the Stripe Capital program, loans don’t have late fees, early repayment fees, or origination fees. Instead, the total amount you owe is your loan amount plus a flat fee. Your payments are withheld directly from your sales on Stripe.\n\n## Review your offer![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe uses a [combination of eligibility criteria](https://docs.stripe.com/capital/eligibility) (including overall processing volume and history on Stripe) to extend a financing offer. If your US business is eligible, and has at least 9 months of processing history, Stripe might send you an email and Dashboard notification to advise you of an available offer.\n\nYour offer is available for 30 days, after which, we re-evaluate your business to see if you’re eligible for an additional offer. Log into the [Capital tab](https://dashboard.stripe.com/capital) of your Dashboard to use a slider to customize the amount of your offer up to the maximum offer amount. The loan terms adjust based on the amount you choose. If you’re seeking financing at a later time, continue checking your email and the Capital tab of your Dashboard to make sure you’re reviewing your most current offer. We might even extend additional offers to you while you’re actively paying down your current loan.\n\nAfter you select an offer, we’ll review your application. If you’re approved, we transfer the funds to your Stripe account, typically in as few as 1-2 business days. To make sure funds successfully disburse from your Stripe account, you must set a valid bank account as your primary payout method.\n\n## No impact to your personal credit![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nApplying for financing through Stripe Capital doesn’t require a personal credit check and won’t affect your personal credit score. Additionally, Stripe Capital reports performance for US businesses to the Small Business Financial Exchange, who uses this information to build a financial profile for your business, which can help your business get access to credit with other providers.\n\n## Linked accounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou always have control over the accounts that you share with Stripe and can [update or disconnect your linked accounts](https://docs.stripe.com/get-started/account/linked-external-accounts) at any time.\n\n## Repayment![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe total cost of your financing is your loan amount plus a flat fee. Repayment of your loan occurs automatically by deducting a percentage of your Stripe sales, known as the _repayment rate_. This means you pay down more when your business has higher sales and less if business slows down. The single flat fee isn’t charged upfront— it’s paid over the length of the loan.\n\nEvery loan has a maximum term (for example, 18 months) which is listed on your loan agreement. There’s no prepayment penalty, and you can make additional payments or pay the total amount you owe in full at any point in the [Capital tab](https://dashboard.stripe.com/capital) of your Dashboard.\n\nStripe automatically evaluates you for a new offer as you pay down your loan, regardless of whether you make additional payments or pay it off early.\n\n## Minimum payment![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou must repay a minimum amount toward your loan every payment period. Stripe automatically deducts a percentage of your sales at the repayment rate, which counts toward your minimum. If the total amount you repay through sales doesn’t meet the minimum, you must pay the remaining amount at the end of the period. If you haven’t met the minimum by the end of each payment period, Stripe automatically debits the balance needed to meet your minimum from your bank account or account balance. You can also make manual payments toward your minimum through your Dashboard.\n\nYou can view your minimum in the [Capital tab](https://dashboard.stripe.com/capital) of your Dashboard or in your loan agreement.\n\nIf you’re unable to meet your minimum for one or more periods, reach out to support and we’ll work with you to get back on track and meet your loan obligations. If you continue to miss your minimums, we might take additional action, as detailed in your loan agreement.\n\n#### Fixed payment loans\n\nIf your loan has a fixed monthly payment instead of a minimum payment, Stripe stops witholding from your Stripe sales when you meet the fixed payment amount. If your sales witholdings don’t meet the fixed payment by the end of the payment period, Stripe automatically debits the balance. You can also make manual payments at any time through your Dashboard using the **Make payment** option.\n\n### Examples![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following example scenarios demonstrate how the minimum payment process works.\n\n**Example 1: You successfully meet your minimum through daily sales deductions.**\n\n*   Your minimum amount is 2,000 USD for the 60-day period ending on March 1.\n*   In that period, you repaid 2,500 USD of your loan balance through Stripe deducting a fixed percentage of your sales volume (the repayment rate).\n*   You’ve successfully met your minimum plus an additional 500 USD toward your total balance for this payment period.\n*   In the next 60-day period, you still must meet the minimum of 2,000 USD.\n\n**Example 2: You don’t meet your minimum through daily sales deductions.**\n\n*   Your minimum is 2,000 USD for the 60-day period ending on March 1.\n*   In that period, you repaid 1,500 USD of your loan balance through Stripe deducting a fixed percentage of your sales volume (the repayment rate).\n*   On March 1, you still owe 500 USD toward your minimum (2,000 USD – 1,500 USD = 500 USD) and you must pay the remaining balance of your minimum.\n*   On March 1, Stripe automatically debits 500 USD from your bank account or account balance to meet your minimum.\n\n## Security interests![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe Stripe Capital loan agreement includes security interests taken as collateral for your loan. A UCC-1 financing statement might be filed in connection with your loan based on several factors, including the size of your loan, facts and circumstances about your business, and so on.\n\nAfter you finish paying off your loan, you can [contact us](mailto:capital@stripe.com) with a request to terminate a UCC-1 filing.\n\n#### Unknown secured party\n\nCreditors sometimes use a third party to file and maintain lien positions as the registered agent of the creditor. Wolters Kluwer is Stripe Capital’s third-party representative. If you’re unsure of what creditor the third party is acting on behalf of, we recommend that you contact the third party directly.\n\n## Taxes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTax reporting often depends on your specific situation, so we encourage you to talk with a tax advisor. In general, funds through Stripe Capital wouldn’t be considered taxable income at the time of receipt, and the amounts withheld to satisfy your obligations aren’t tax deductible.\n\nStripe Capital loans are issued by Celtic Bank, a Utah-Chartered Industrial Bank Member FDIC.",
    "title": "How Stripe Capital Works | Stripe Documentation",
    "description": "Learn how Stripe Capital can help you grow your business.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/payments/payment-links",
    "markdown": "# Payment Links | Stripe DocumentationThe Stripe Docs logo\n\n## Sell online without building a digital storefront.\n\nAccept a payment or sell subscriptions without building additional standalone websites or applications with Payment Links. Share the link as many times as you want on social media, in emails, or on your website.\n\nPayment Links supports [20+ payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#payment-method-product-support)—including credit and debit cards, Apple Pay, and Google Pay. The Payment Link automatically matches your customer’s preferred browser language for [30+ languages](https://support.stripe.com/questions/supported-languages-for-stripe-checkout-and-payment-links). If you don’t have a Stripe account, [sign up now](https://dashboard.stripe.com/register/payment_links).\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/0bf124f94479ea72ead56c0aad4e7557.svg)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/c63e01cc65f29058b5709a0b8bcabf8b.svg)\n\n## Get started ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Explore advanced options ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Compare Invoicing and Payment Links ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nInvoicing and Payment Links are two of the easiest ways to start accepting payments with Stripe without writing any code. Use the following table to compare the two products, and to understand which works best for your use case:\n\n| **Product** | **Invoicing** | **Payment Links** |\n| --- | --- | --- |\n| **Description** | Use [invoices](https://dashboard.stripe.com/invoices) to collect one-time or recurring payments from a specific customer. | Use [Payment Links](https://dashboard.stripe.com/payment-links) to sell a product, a subscription, or accept a donation. |\n| **Customer** | *   Specific individuals or businesses<br>*   You can’t reuse invoices, but you can duplicate them and edit the details for another customer. | *   Anyone with the link<br>*   Reuse multiple times with multiple customers, or limit the number of purchases. |\n| **Integration effort** | No coding | No coding |\n| **Stripe-hosted payment page** |     |     |\n| **Sharing options** | *   You can [email from the Dashboard](https://docs.stripe.com/invoicing/dashboard#create-invoice).<br>*   Copy the [invoice link](https://docs.stripe.com/invoicing/hosted-invoice-page#email-links) to share over email or SMS.<br>*   [Send a PDF](https://docs.stripe.com/invoicing/hosted-invoice-page).<br>*   [Auto-charge](https://docs.stripe.com/invoicing/automatic-charging?dashboard-or-api=dashboard) the payment method on file. | *   [Show a QR code](https://docs.stripe.com/payment-links/share#create-qr-code).<br>*   [Copy the link](https://docs.stripe.com/payment-links/share#share-online) to share it over email, SMS, or social media.<br>*   Add a [buy button](https://docs.stripe.com/payment-links/buy-button) to your website. |\n| **UI customization** | Editable template1 | Limited customization2 |\n| **Payment methods** | *   Choose from over 40 [payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#choose-how-to-add-payment-methods).<br>*   Manage your payment methods in the [Dashboard](https://dashboard.stripe.com/settings/payment_methods) without coding. | *   [Dynamically display](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods) over 40 [payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#choose-how-to-add-payment-methods)3.<br>*   Manage your payment methods in the [Dashboard](https://dashboard.stripe.com/settings/payment_methods) without coding. |\n| **[Stripe Tax](https://docs.stripe.com/tax) support** |     |     |\n| **Preferred language support** | *   Over 30 languages<br>*   Set the Dashboard [language preference](https://docs.stripe.com/invoicing/customize#customer-language) for each customer. | *   Over 30 languages<br>*   Match the [browser language setting](https://support.stripe.com/questions/supported-languages-for-stripe-checkout-and-payment-links) for each customer, or set the language with a URL parameter. |\n| **Recurring payments** | Use Stripe Billing to send a subscription or recurring invoice. [No-code subscriptions](https://dashboard.stripe.com/subscriptions?create=subscription) are available | Create a payment link for a subscription. |\n| **Collection tools** | [Automatic collection](https://docs.stripe.com/invoicing/automatic-collection) features, including Smart Retries and reminder emails are available. | [Revenue recovery](https://docs.stripe.com/billing/revenue-recovery) features, including Smart Retries and reminder emails are available for subscription payment links. |\n| **Reconciliation** | Auto-reconciliation of bank payments | Simple reconciliation by using URL parameters |\n| **Customers can choose what to pay** |     |     |\n| **Collect partial payments or set up payment plans** |     |     |\n| **Customers can edit quantities** |     |     |\n| **Coupons or discounts** |     |     |\n| **Send a quote or estimate and convert it to an invoice once finalized** |     |     |\n| **Upsells and cross-sells** |     |     |\n| **PCI compliance handling** | 4   |     |\n\n1 Use the [editable template](https://docs.stripe.com/invoicing/customize) to incorporate your own icons, brand colors, payment terms, page sizes, as well as memo and footer fields.  \n2 With [limited customization](https://docs.stripe.com/payment-links/customize), you can access 20 preset fonts, three predefined border radiuses, and options for adjusting your logo, background, product images, and the color of your own button.  \n3 Dynamic payment methods filter for eligibility, displaying the most relevant payment methods to maximize conversion. Payment method availability [varies by product](https://docs.stripe.com/payments/payment-methods/integration-options#product-support).  \n4 See the best practices for [globally compliant invoices](https://docs.stripe.com/invoicing/global-invoicing).",
    "title": "Payment Links | Stripe Documentation",
    "description": "Accept a payment or sell subscriptions without building additional standalone websites or applications with Payment Links. Share the link as many times as you want on social media, in emails, or on your website.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/payments/elements",
    "markdown": "# Stripe Web Elements | Stripe DocumentationThe Stripe Docs logo\n\n## Create your own checkout flows with prebuilt UI components.\n\n[Stripe Elements](https://stripe.com/payments/elements) is a set of prebuilt UI components for building your web checkout flow. It’s available as a feature of [Stripe.js](https://docs.stripe.com/js), our foundational JavaScript library for building payment flows. Stripe.js tokenizes sensitive payment details within an Element without ever having them touch your server.\n\nElements features include:\n\n*   Automatic input formatting as customers type\n*   Complete UI translations to match your customer’s preferred language\n*   Responsive design to fit seamlessly on any screen size\n*   Custom styling rules so you can match the look and feel of your site\n*   One-click checkout with [Link](https://stripe.com/link)\n\n[](https://docs.stripe.com/payments/payment-element \"Payment Element\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/payment-element.750bc8af6d17414b54dc09ae8acb8efb.svg)](https://docs.stripe.com/payments/payment-element \"Payment Element\")\n\nAccept a payment with one or multiple payment methods securely, including cards.\n\n[](https://docs.stripe.com/elements/express-checkout-element \"Express Checkout Element\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/wallet-element.c96ed64cf20f79da4cd61d96699a3ff3.svg)](https://docs.stripe.com/elements/express-checkout-element \"Express Checkout Element\")\n\nDisplay popular Wallets like Apple Pay, Google Pay, and PayPal.\n\n[](https://docs.stripe.com/payments/elements/link-authentication-element \"Link Authentication Element\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/link-element.9773d44cacda7df8846963ff92cdd4b6.svg)](https://docs.stripe.com/payments/elements/link-authentication-element \"Link Authentication Element\")\n\n[Link Authentication Element](https://docs.stripe.com/payments/elements/link-authentication-element \"Link Authentication Element\")\n\nLink auto-fills your customers’ payment and shipping details to reduce friction and deliver an easy and secure checkout experience.\n\n[](https://docs.stripe.com/elements/address-element \"Address Element\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/shipping-element.01362d4c55a5a5bfe5ce171e3cc6b953.svg)](https://docs.stripe.com/elements/address-element \"Address Element\")\n\nCollect address information and display Link saved addresses.\n\n#### Note\n\n### Customize the appearance of Elements\n\nPick from prebuilt themes, add your own color and size variables, or adjust individual components for more advanced use cases.\n\n[](https://docs.stripe.com/elements/appearance-api)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/customize@2x.e4101cdeb47e80bca9181a73da5581cf.png)",
    "title": "Stripe Web Elements | Stripe Documentation",
    "description": "Create your own checkout flows with prebuilt UI components.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/get-started",
    "markdown": "# Get started | Stripe DocumentationThe Stripe Docs logo\n\n## Create an account and learn how to start using Stripe.\n\nStart using Stripe\n\nSet up a Stripe account, migrate your customer data, and learn how to immediately protect yourself from fraud.\n\nIf you’re ready to start developing, see our [Checkout quickstart](https://docs.stripe.com/checkout/quickstart).\n\n[](https://dashboard.stripe.com/register)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/get-started-hero.df33114d2906584b94ad36e4e2588d16.png)\n\n## Accept payments ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Plan your integration ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Set up Stripe ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## For developers ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Prevent fraud ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## More resources![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Developer resources](https://docs.stripe.com/development)Sign up for the newsletter, follow Stripe on X, or chat with the community on the official Discord.\n*   [Support site](https://support.stripe.com/)Learn the answers to common account questions and get troubleshooting tips and tricks.",
    "title": "Get started | Stripe Documentation",
    "description": "Create an account and learn how to start using Stripe.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/payments",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Payments\n\n## Find a guide to integrate Stripe's payments APIs.\n\n[](https://docs.stripe.com/checkout/quickstart \"Accept online payments\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/Integration-builder.c2d65ad9d3fff3b068d39e7d61c4dade.svg)](https://docs.stripe.com/checkout/quickstart \"Accept online payments\")\n\nBuild a payment form or use a prebuilt checkout page to accept online payments.\n\n[](https://docs.stripe.com/billing/quickstart \"Create a subscription\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/Subscriptions.ab795f59a7ed682b0ce5756527b7b915.svg)](https://docs.stripe.com/billing/quickstart \"Create a subscription\")\n\nSet up recurring billing for your SaaS or e-commerce business.\n\n## Multiparty payments![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBuild a platform, marketplace, or any two-sided business with Stripe [Connect](https://docs.stripe.com/connect \"Connect\").\n\n[](https://docs.stripe.com/connect/add-and-pay-out-guide \"Pay out money\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/Payouts-diagram.04991d9ccc606f94f299d80f983b7ad0.svg)](https://docs.stripe.com/connect/add-and-pay-out-guide \"Pay out money\")\n\nUse top-ups to add money and pay out your sellers or service providers.\n\n## Clone a sample project ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Add payment methods![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## More guides![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Payments | Stripe Documentation",
    "description": "Find a guide to integrate Stripe's payments APIs.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/finance-automation",
    "markdown": "# Revenue and finance automation | Stripe DocumentationThe Stripe Docs logo\n\n## Use Stripe to automate the revenue lifecycle of your business.\n\nAcquire customers, collect revenue, close your books, and automate sales taxes\n\nStripe’s tools integrate with your existing systems, automate your revenue and finance processes, and grow your business.\n\n[\n\nGet started with Stripe Billing\n\n\n\n](https://docs.stripe.com/billing)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/rfa-hero.6171909726b810b57f8af57da8a956b1.png)\n\n## Grow your business with billing ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nUse Stripe Billing to accept recurring payments, retain revenue, and automate workflows for pricing models that include flat rate and usage-based.\n\n[](https://docs.stripe.com/subscriptions \"Subscriptions\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/Billing_Thumbnail.97b884a31a24d1e69dd87e798e1b54f9.svg)](https://docs.stripe.com/subscriptions \"Subscriptions\")\n\nIdeal for:Collecting recurring payments, billing customersHow it works:Create usage-based or sales-negotiated subscriptions to charge customers on a recurring schedule.\n\n[](https://docs.stripe.com/invoicing/dashboard \"Invoices\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/Recurring-invoice.4380e31c85c72f8c8048b042c6f5c504.svg)](https://docs.stripe.com/invoicing/dashboard \"Invoices\")\n\nIdeal for:Sending an invoice to specific customerHow it works:Stripe emails your customer an invoice and a link they can use to pay the invoice online.\n\n[](https://docs.stripe.com/payment-links \"Payment Links\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/Pay-link.4ba8b313406b2547ed3b720f81b58632.svg)](https://docs.stripe.com/payment-links \"Payment Links\")\n\nIdeal for:Selling products without a websiteHow it works:Create a subscription link in the Dashboard and share it with your customers.\n\n## Calculate, collect, and file sales tax and VAT automatically ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe Tax enables compliance automatically by collecting tax and notifying you about locales where your business needs to register and pay tax. It also automatically generates the reports you need to file.\n\n[](https://docs.stripe.com/tax/set-up \"Set up Stripe Tax\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/setup.4467b3f3ee77c6af9e6e4683fe3c7629.png)](https://docs.stripe.com/tax/set-up \"Set up Stripe Tax\")\n\nConfigure your business and product information in the Dashboard to enable automatic tax calculation.\n\n[](https://docs.stripe.com/tax/monitoring \"Know where to register\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/threshold-monitoring.47b93a77c470acd8c7689e41bf60fd48.png)](https://docs.stripe.com/tax/monitoring \"Know where to register\")\n\nMonitor your tax obligations in the Dashboard, including where you’ve met the threshold to register and where you’re approaching it.\n\n[](https://docs.stripe.com/tax/reports \"Easy file reporting\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/us-local-reports.2feed5a0c813b40f5312ccba07ca8521.png)](https://docs.stripe.com/tax/reports \"Easy file reporting\")\n\nLearn about your reporting options on Stripe.\n\n## Close your books quickly and accurately ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nReduce the cost and risk of manual financial processes with accurate, automated revenue accounting.\n\n[](https://docs.stripe.com/revenue-recognition \"Revenue recognition\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/revenue-recognition.b80ff778d613a23e11d4817f92ade748.png)](https://docs.stripe.com/revenue-recognition \"Revenue recognition\")\n\nAutomate your accrual accounting process to meet ASC 606 and IFRS 15 compliance.\n\n## All of your data in one place ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nGet real-time business insights that empower teams to make faster, reliable decisions.\n\n[](https://docs.stripe.com/stripe-data/access-data-in-dashboard \"Create custom reports\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/custom-reporting.91d56c42e608320509d8216df2c235b0.png)](https://docs.stripe.com/stripe-data/access-data-in-dashboard \"Create custom reports\")\n\nUse Sigma to generate reports from the Dashboard about charges, refunds, disputes, and other critical operational and finance metrics.\n\n## Launch your business ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nReady to start a company? Launch your startup with Stripe Atlas and we’ll generate the documents you need, form your company in Delaware, hire a registered agent, and get your US Tax ID.",
    "title": "Revenue and finance automation | Stripe Documentation",
    "description": "Use Stripe's revenue and finance automation solutions to collect and manage your recurring revenue, subscriptions, invoicing, tax collection, reporting, and data management and analysis.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/financial-services",
    "markdown": "# Banking as a service | Stripe DocumentationThe Stripe Docs logo\n\nEmbed financial services in your platform that enable your customers to store funds, move money, and attach cards.",
    "title": "Banking as a service | Stripe Documentation",
    "description": "Use Stripe to move, control, and borrow money.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/development",
    "markdown": "# Developer tools | Stripe DocumentationThe Stripe Docs logo\n\n## Get up and running with SDKs, API keys, and integration tools.\n\nExplore libraries and tools for interacting with your Stripe integration\n\nFast-track local development with the essential tools needed for a Stripe integration.\n\n[](https://docs.stripe.com/libraries)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/stripe-cli.dfdd7710717be8cb82486c38d77d4572.png)\n\n## Security![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Extend Stripe![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Partners![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Developer tools | Stripe Documentation",
    "description": "Get up and running with SDKs, API keys, and integration tools.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/no-code",
    "markdown": "# No-code options for using Stripe\n\n## Get started quickly, without writing any code.\n\nUse Stripe without writing code\n\nLearn which Stripe features are best for your business, then read instructions for getting started. No code required.\n\n[](https://docs.stripe.com/no-code/get-started)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/no-code.83d695b276c7a0549aeae2c8d16e14c9.png)\n\n## Accept payments![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Host your customer experience on Stripe![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## More resources![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Developer resources](https://docs.stripe.com/development)Sign up for the newsletter, follow Stripe on X, or chat with the community on the official Discord.\n*   [Support site](https://support.stripe.com/)Learn the answers to common account questions and get troubleshooting tips and tricks.",
    "title": "No-code options for using Stripe | Stripe Documentation",
    "description": "Get started quickly, without writing any code.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/no-code/payment-links",
    "markdown": "# Create Payment Links | Stripe DocumentationThe Stripe Docs logo\n\n## Quickly accept payments for goods, services, subscriptions, tips, or donations.\n\n[Payment Links](https://docs.stripe.com/payment-links) are a simple way for customers to pay you when you sell online. Create one link that you can share with everyone.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/0bf124f94479ea72ead56c0aad4e7557.svg)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/c63e01cc65f29058b5709a0b8bcabf8b.svg)\n\n## Create a payment link![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBefore you begin, decide what pricing model works best for you:\n\n*   **Products or subscriptions**: Best for e-commerce or SaaS where you’re selling products for a fixed price.\n*   **Customers choose what to pay**: Best for donations, tipping, or pay-what-you-want. This pricing model currently doesn’t support recurring payments or recurring donations. Learn more about the requirements for [accepting tips or donations](https://support.stripe.com/questions/requirements-for-accepting-tips-or-donations).\n\nTo let your customers choose what to pay, create a payment link by completing the following steps:\n\n1.  In the Dashboard, open the [Payment Links](https://dashboard.stripe.com/payment-links/create/customer-chooses-pricing) page and click **New** (or click the plus sign () and select **Payment link**).\n2.  Fill out the payment details.\n3.  (Optional) Set a preset amount.\n4.  (Optional) Set minimum and maximum payment amounts. By default, the maximum payment amount is 10,000.00 USD. [Contact support](https://support.stripe.com/) to increase this limit.\n5.  Click **Create link**.\n\n## Payment Links on mobile ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIf you’re creating a product or subscription, use the [Stripe Dashboard iOS app](https://apps.apple.com/app/apple-store/id978516833?pt=91215812&ct=stripe-mobile-app-docs-plinks&mt=8) to create a payment link on your mobile device. In the app, go to **Payments** > **Payment Links** to create a payment link (or click the create icon () and select **Payment link**). The iOS app doesn’t currently support creating links where your customers choose how much to pay.\n\n## Configure payment methods ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWith [Dynamic payment methods](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods), Stripe displays the most relevant and compatible payment methods to your customers, including Apple Pay and Google Pay. Stripe enables certain payment methods for you by default. We might also enable additional payment methods after notifying you. Use the [Dashboard](https://dashboard.stripe.com/settings/payment_methods) to enable or disable payment methods at any time. Learn more about [supported payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#payment-method-product-support) and [different types of payment methods](https://stripe.com/guides/payment-methods-guide).\n\nYou can review what payment methods your customers see in the [Dashboard](https://dashboard.stripe.com/settings/payment_methods/review) by entering a transaction ID or setting an order amount and currency.",
    "title": "Create Payment Links | Stripe Documentation",
    "description": "If you want to start selling online, Payment Links offer a simple way for customers to pay you. Learn how to create one that you can share with everyone without writing code.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/no-code/invoices",
    "markdown": "# Use invoices | Stripe DocumentationThe Stripe Docs logo\n\nBy default, customers can pay invoices with any of the payment methods that you enable in your [invoice template](https://dashboard.stripe.com/settings/billing/invoice). If you’re a first-time user, Stripe automatically enables card, [Link](https://docs.stripe.com/payments/link), bank transfers, Cash App Pay, and WeChat Pay payment methods. To enable additional payment methods, you need to activate them in your [Payment methods settings](https://dashboard.stripe.com/settings/payment_methods).\n\nIn some situations, restrictions might prevent payment methods from being used for an invoice. For instance, a payment method might only operate in one currency, or have limitations on the amount that can be paid. Stripe doesn’t automatically select a payment method when these limitations prevent it from being used. To learn more, read about [supported payment methods](https://docs.stripe.com/invoicing/payment-methods#supported).\n\n![Choose additional payment methods](https://b.stripecdn.com/docs-statics-srv/assets/supported-payment-methods.194614192ca2c72656bc0587e8e21f46.png)\n\nChoose additional payment methods",
    "title": "Use invoices | Stripe Documentation",
    "description": "Send an invoice your customers can pay online.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/no-code/subscriptions",
    "markdown": "# Create subscriptions | Stripe DocumentationThe Stripe Docs logo\n\n## Set up recurring payments by offering subscriptions to your service.\n\nSubscriptions represent what your customer is paying for and how much and how often you’re charging them for the product. You can subscribe customers manually through the Dashboard. You can also let them sign up through your website or a [Payment Link](https://docs.stripe.com/payment-links/create?pricing-model=standard).\n\nThis page shows you how to manually create and edit a subscription in your Stripe Dashboard.\n\n## Create a subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo create a subscription:\n\n1.  In the Stripe Dashboard, go to the [subscriptions](https://dashboard.stripe.com/test/subscriptions) page.\n    \n2.  Click **+Create subscription**.\n    \n3.  Find or add a customer.\n    \n4.  Enter the pricing and product information. You can add multiple products.\n    \n5.  Set the start and end date of the subscription.\n    \n6.  Set the starting date for the billing cycle. This defines when the next invoice is generated. Depending on your settings, the saved payment method on file might also be charged automatically on the billing cycle date. Learn more about the [billing cycle date](https://docs.stripe.com/billing/subscriptions/billing-cycle).\n    \n7.  (Optional) Add the default tax behavior, a coupon, a free trial, or metadata.\n    \n8.  (Optional) Maximize revenue for your business by enabling [revenue recovery](https://docs.stripe.com/billing/revenue-recovery) features in the Dashboard. You can automatically retry failed payments, build custom automations, configure customer emails, and more.\n    \n\n#### Note\n\nHere are two other ways to create subscriptions:\n\n*   Click **Create** > **Subscription** in the upper right hand corner of the Dashboard.\n*   Type `c` `s` anywhere in the Dashboard to open the subscription editor.\n\n### Advanced options![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Edit a subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo edit a subscription:\n\n1.  Go to the [subscriptions](https://dashboard.stripe.com/test/subscriptions) page.\n    \n2.  Find the subscription you want to modify, click the overflow menu (), then click **Update subscription**. You can also click the next to the subscription name. From this menu, you can also:\n    \n    *   **Cancel the subscription**. In the modal that opens, select the date to cancel the subscription—immediately, at the end of the current period, or on a custom date. You can also select the option to refund the last payment for this subscription and create a [credit note](https://docs.stripe.com/invoicing/dashboard/credit-notes) for your records.\n        \n    *   **Pause payment collection**. In the modal that opens, select the duration of the pause—indefinite or ending on a custom date—and how invoices should behave during the pause.\n        \n    *   **Share payment update link**. In the modal that opens, you can share a link with the customer to update their payment details. For more information, see [Share payment update link](https://docs.stripe.com/billing/subscriptions/update-payment-method).\n        \n3.  Make your changes to the subscription.\n    \n4.  Click **Update subscription**.\n    \n\n## Delete a subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can’t delete a subscription. But you can cancel it or pause payment collection. See [editing a subscription](#edit-susbscription) for those details.",
    "title": "Create subscriptions | Stripe Documentation",
    "description": "Set up recurring payments by offering subscriptions to your service.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/get-started/development-environment",
    "markdown": "# Set up your development environment\n\nStripe’s server-side helper libraries (also known as server-side SDKs) and command-line interface (CLI) allow you to interact with Stripe’s REST APIs. Start with the Stripe CLI and make Stripe API calls without writing a line of code.\n\nUse the SDKs to avoid writing boilerplate code. To start sending requests from your environment, choose a language to follow a quickstart guide.\n\nIn this quickstart, you install the [Stripe CLI](https://docs.stripe.com/stripe-cli/overview)—an essential tool that gets you command line access to your Stripe integration. You also install the [Stripe Ruby server-side SDK](https://github.com/stripe/stripe-ruby) to get access to Stripe APIs from applications written in Ruby.\n\n## What you learn![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn this quickstart, you’ll learn:\n\n*   How to call Stripe APIs without writing a line of code\n*   How to manage third-party dependencies using a bundler with RubyGems\n*   How to install the Stripe Ruby SDK v12.0.0\n*   How to send your first SDK request\n\n[](#setup-cli)\n\nFirst, [create a Stripe account](https://dashboard.stripe.com/register) or [sign in](https://dashboard.stripe.com/login).\n\n### Install![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFrom the command-line, use an install script or download and extract a versioned archive file for your operating system to install the CLI.\n\nTo install the Stripe CLI with [homebrew](https://brew.sh/), run:\n\n`brew install stripe/stripe-cli/stripe`\n\n### Authenticate![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLogin and authenticate your Stripe user [Account](https://docs.stripe.com/get-started/account/activate) to generate a set of _restricted keys_. To learn more, see [Stripe CLI keys and permissions](https://docs.stripe.com/stripe-cli/keys).\n\nPress the **Enter** key on your keyboard to complete the authentication process in your browser.\n\n### Confirm setup![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nNow that you’ve installed the CLI, you can make a single API request to [Create a product](https://docs.stripe.com/api/products/create).\n\n`stripe products create \\ --name=\"My First Product\" \\ --description=\"Created with the Stripe CLI\"`\n\nLook for the product identifier (in `id`) in the response object. Save it for the next step.\n\nIf everything worked, the command-line displays the following response.\n\n`{   \"id\":` \n\n`\"prod_LTenIrmp8Q67sa\"`\n\n`,   \"object\": \"product\",`\n\nNext, call [Create a price](https://docs.stripe.com/api/prices/create) to attach a price of 30 USD. Swap the placeholder in `product` with your product identifier (for example, `prod_LTenIrmp8Q67sa`).\n\n`stripe prices create \\   --unit-amount=3000 \\   --currency=usd \\   --product=`\n\n`{{PRODUCT_ID}}`\n\nIf everything worked, the command-line displays the following response.\n\n`{   \"id\":` \n\n`\"price_1KzlAMJJDeE9fu01WMJJr79o\"`\n\n`,   \"object\": \"price\",`\n\n[](#sdk-deps)\n\nWe recommend managing third-party dependencies using the [RubyGems](http://rubygems.org/) command-line tool, which allows you to add new libraries and include them in your Ruby projects. Check whether RubyGems is installed:\n\n### Install RubyGems![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you get `gem: command not found`, [download RubyGems](http://rubygems.org/pages/download) from their downloads page.\n\n[](#install-sdk)\n\nThe latest version of the Stripe Ruby server-side SDK is v12.0.0. It supports Ruby versions 2.3+.\n\nCheck your Ruby version:\n\n### Install the library![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[Create a gem file](https://guides.rubygems.org/make-your-own-gem/) and install the generated gem using a bundler with [RubyGems](https://rubygems.org/).\n\nAdd the latest version of the [Stripe gem](https://rubygems.org/gems/stripe) to a project:\n\nInstall the required gems from your specified sources:\n\n### Installation alternatives![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[](#test-install)\n\nNow that you have the Ruby SDK installed, you can create a subscription [Product](https://docs.stripe.com/api/products/create) and attach a [Price](https://docs.stripe.com/api/prices/create) with a couple API requests. We’re using the product identifier returned in the response to create the price in this example.\n\n#### Note\n\nThis sample uses your Stripe user [account](https://docs.stripe.com/get-started/account/activate)’s default keys for [test mode](https://docs.stripe.com/test-mode \"test mode\"). Only you can see these values.\n\n`require 'rubygems' require 'stripe' Stripe.api_key = \"sk_test_4eC39HqLyjWDarjtT1zdp7dc\"  starter_subscription = Stripe::Product.create(   name: 'Starter Subscription',   description: '$12/Month subscription', )  starter_subscription_price = Stripe::Price.create(   currency: 'usd',   unit_amount: 1200,   recurring: {interval: 'month'},   product: starter_subscription['id'], )  puts \"Success! Here is your starter subscription product id: #{starter_subscription.id}\" puts \"Success! Here is your starter subscription price id: #{starter_subscription_price.id}\"`\n\nSave the file as `create_price.rb`. From the command line, `cd` to the directory containing the file you just saved and run:\n\nIf everything worked, the command line shows the following response. Save these identifiers so you can use them while building your integration.\n\n`Success! Here is your starter subscription product id: prod_0KxBDl589O8KAxCG1alJgiA6 Success! Here is your starter subscription price id: price_0KxBDm589O8KAxCGMgG7scjb`",
    "title": "Set up your development environment | Stripe Documentation",
    "description": "Get familiar with the Stripe CLI and our core SDKs.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api",
    "markdown": "# Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi)\n\nThe Stripe API is organized around [REST](http://en.wikipedia.org/wiki/Representational_State_Transfer). Our API has predictable resource-oriented URLs, accepts [form-encoded](https://en.wikipedia.org/wiki/POST_(HTTP)#Use_for_submitting_web_forms) request bodies, returns [JSON-encoded](http://www.json.org/) responses, and uses standard HTTP response codes, authentication, and verbs.\n\nYou can use the Stripe API in test mode, which doesn’t affect your live data or interact with the banking networks. The API key you use to [authenticate](https://docs.stripe.com/api/authentication) the request determines whether the request is live mode or test mode.\n\nThe Stripe API doesn’t support bulk updates. You can work on only one object per request.\n\nThe Stripe API differs for every account as we release new [versions](https://docs.stripe.com/api/versioning) and tailor functionality. [Log in](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi) to see docs with your test key and data.\n\n## Not a developer?\n\nUse Stripe’s [no-code options](https://docs.stripe.com/payments/no-code) or apps from [our partners](https://stripe.partners/) to get started with Stripe and to do more with your Stripe account—no code required.\n\nClient Libraries\n\nBy default, the Stripe API Docs demonstrate using curl to interact with the API over HTTP. Select one of our official [client libraries](https://docs.stripe.com/libraries) to see examples in code.\n\n## [Authentication](https://docs.stripe.com/api/authentication)\n\nThe Stripe API uses [API keys](https://docs.stripe.com/keys) to authenticate requests. You can view and manage your API keys in [the Stripe Dashboard](https://dashboard.stripe.com/login?redirect=/apikeys).\n\nTest mode secret keys have the prefix `sk_test_` and live mode secret keys have the prefix `sk_live_`. Alternatively, you can use [restricted API keys](https://docs.stripe.com/keys#limit-access) for granular permissions.\n\nYour API keys carry many privileges, so be sure to keep them secure! Do not share your secret API keys in publicly accessible areas such as GitHub, client-side code, and so forth.\n\nAll API requests must be made over [HTTPS](http://en.wikipedia.org/wiki/HTTP_Secure). Calls made over plain HTTP will fail. API requests without authentication will also fail.\n\n```\ncurl https://api.stripe.com/v1/charges \\  -u sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:# The colon prevents curl from asking for a password.\n```\n\nYour API Key\n\nA sample test API key is included in all the examples here, so you can test any example right away. Do not submit any personally identifiable information in requests made with this key.\n\nTo test requests using your account, replace the sample API key with your actual API key or [sign in](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi).\n\n## [Connected Accounts](https://docs.stripe.com/api/connected-accounts)\n\nTo act as connected accounts, clients can issue requests using the `Stripe-Account` special header. Make sure that this header contains a Stripe account ID, which usually starts with the `acct_` prefix.\n\nThe value is set per-request as shown in the adjacent code sample. Methods on the returned object reuse the same account ID.\n\n*   Related guide: [Making API calls for connected accounts](https://docs.stripe.com/connect/authentication)\n\n```\ncurl https://api.stripe.com/v1/charges/ch_3LmjFA2eZvKYlo2C09TLIsrw \\  -u sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc: \\  -H \"Stripe-Account: acct_1032D82eZvKYlo2C\" \\  -G\n```\n\n## [Errors](https://docs.stripe.com/api/errors)\n\nStripe uses conventional HTTP response codes to indicate the success or failure of an API request. In general: Codes in the `2xx` range indicate success. Codes in the `4xx` range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.). Codes in the `5xx` range indicate an error with Stripe’s servers (these are rare).\n\nSome `4xx` errors that could be handled programmatically (e.g., a card is [declined](https://docs.stripe.com/declines)) include an [error code](https://docs.stripe.com/error-codes) that briefly explains the error reported.\n\n### Attributes\n\n*   The type of error returned. One of `api_error`, `card_error`, `idempotency_error`, or `invalid_request_error`\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `api_error` |\n    | `card_error` |\n    | `idempotency_error` |\n    | `invalid_request_error` |\n    \n*   For some errors that could be handled programmatically, a short string indicating the [error code](https://docs.stripe.com/error-codes) reported.\n    \n*   #### \n    \n    decline\\_codenullable string\n    \n*   A human-readable message providing more details about the error. For card errors, these messages can be shown to your users.\n    \n*   If the error is parameter-specific, the parameter related to the error. For example, you can use this to display a message near the correct form field.\n    \n*   #### \n    \n    payment\\_intentnullable object\n    \n\n### More\n\n*   #### \n    \n    payment\\_method\\_typenullable string\n    \n\n*   #### \n    \n    request\\_log\\_urlnullable string\n    \n*   #### \n    \n    setup\\_intentnullable object\n    \n\n*   #### \n    \n    payment\\_methodnullable object\n    \n\nHTTP Status Code Summary\n\n|     |     |     |\n| --- | --- | --- |\n| 200 | OK  | Everything worked as expected. |\n| 400 | Bad Request | The request was unacceptable, often due to missing a required parameter. |\n| 401 | Unauthorized | No valid API key provided. |\n| 402 | Request Failed | The parameters were valid but the request failed. |\n| 403 | Forbidden | The API key doesn’t have permissions to perform the request. |\n| 404 | Not Found | The requested resource doesn’t exist. |\n| 409 | Conflict | The request conflicts with another request (perhaps due to using the same idempotent key). |\n| 429 | Too Many Requests | Too many requests hit the API too quickly. We recommend an exponential backoff of your requests. |\n| 500, 502, 503, 504 | Server Errors | Something went wrong on Stripe’s end. (These are rare.) |\n\nError Types\n\n|     |     |\n| --- | --- |\n| `api_error` | API errors cover any other type of problem (e.g., a temporary problem with Stripe’s servers), and are extremely uncommon. |\n| `card_error` | Card errors are the most common type of error you should expect to handle. They result when the user enters a card that can’t be charged for some reason. |\n| `idempotency_error` | Idempotency errors occur when an `Idempotency-Key` is re-used on a request that does not match the first request’s API endpoint and parameters. |\n| `invalid_request_error` | Invalid request errors arise when your request has invalid parameters. |\n\n## [Handling errors](https://docs.stripe.com/api/errors/handling)\n\nOur Client libraries raise exceptions for many reasons, such as a failed charge, invalid parameters, authentication errors, and network unavailability. We recommend writing code that gracefully handles all possible API exceptions.\n\n*   Related guide: [Error Handling](https://docs.stripe.com/error-handling)\n\n```\n# Select a client library to see examples of# handling different kinds of errors.\n```",
    "title": "Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/samples",
    "markdown": "# Browse sample projects | Stripe DocumentationThe Stripe Docs logo\n\n## Explore the library of sample projects using Stripe.\n\nPlatformFrontendBackendProducts\n\n*   [\n    \n    Accept payments with Stripe Checkout\n    \n    Use Checkout to quickly collect one-time payments.\n    \n    ProductCheckout\n    \n    Platform\n    \n    Languages.NET, Go, Java, Node, PHP, Python, Ruby, HTML, React\n    \n    \n    \n    ](https://github.com/stripe-samples/checkout-one-time-payments)\n*   [\n    \n    Set up subscriptions with fixed price\n    \n    Create a subscription for an online service with fixed-price options, and work with Stripe Elements to host a payment form on your servers.\n    \n    ProductBilling\n    \n    Platform\n    \n    Languages.NET, Go, Java, Node, PHP, Python, Ruby, React, JavaScript\n    \n    \n    \n    ](https://github.com/stripe-samples/subscription-use-cases/tree/main/fixed-price-subscriptions)\n*   [\n    \n    Set up subscriptions with metered usage\n    \n    Create a subscription for an online service with metered usage options, and work with Stripe Elements to host a payment form on your servers.\n    \n    ProductBilling\n    \n    Platform\n    \n    Languages.NET, Go, Java, Node, PHP, Python, Ruby, HTML\n    \n    \n    \n    ](https://github.com/stripe-samples/subscription-use-cases/tree/main/usage-based-subscriptions)\n*   [\n    \n    Accept a payment with a payment element\n    \n    Accept payments with a secure, embeddable UI component.\n    \n    ProductElements\n    \n    Platform\n    \n    LanguagesNode, Ruby, PHP, Python, Java, Go, .NET, HTML, React, Vue.js\n    \n    \n    \n    ](https://github.com/stripe-samples/accept-a-payment/tree/main/payment-element)\n*   [\n    \n    Accept a payment with a custom form\n    \n    Build a custom payments integration by embedding UI components on your site using Stripe Elements.\n    \n    ProductElements\n    \n    Platform\n    \n    LanguagesNode, Ruby, PHP, Python, Java, Go, .NET, React, HTML, Kotlin, Swift\n    \n    \n    \n    ](https://github.com/stripe-samples/accept-a-payment/tree/main/custom-payment-flow)\n*   [\n    \n    Accept a payment with Stripe Checkout\n    \n    Redirect to a Stripe-hosted payment page using Stripe Checkout.\n    \n    ProductCheckout\n    \n    Platform\n    \n    LanguagesNode, Ruby, PHP, Python, Java, Go, .NET, React, HTML, Vue.js\n    \n    \n    \n    ](https://github.com/stripe-samples/accept-a-payment/tree/main/prebuilt-checkout-page)\n*   [\n    \n    Oasis Hubs Stripe Connect and Metered Billing Demo\n    \n    Sample application showing a Stripe Connect and Billing integration using ASP.NET Core.\n    \n    ProductConnect\n    \n    Platform\n    \n    Languages.NET, HTML\n    \n    \n    \n    ](https://github.com/stripe-samples/oasis-hubs-dotnet)\n*   [\n    \n    Apps on devices\n    \n    Deploy your Android apps on Stripe SmartPOS Android devices.\n    \n    ProductTerminal\n    \n    Platform\n    \n    LanguagesKotlin\n    \n    \n    \n    ](https://github.com/stripe-samples/terminal-apps-on-devices)\n*   [\n    \n    Tap to Pay with Stripe - Android demo\n    \n    Accept contactless payments on a compatible Android device with the Stripe Terminal SDK.\n    \n    ProductTerminal\n    \n    Platform\n    \n    LanguagesKotlin\n    \n    \n    \n    ](https://github.com/stripe-samples/tap-to-pay-android-demo)\n*   [\n    \n    Identity verification\n    \n    Securely collect and verify identity documents.\n    \n    ProductIdentity\n    \n    Platform\n    \n    LanguagesNode, Ruby, PHP, Python, Java, Go, .NET, HTML\n    \n    \n    \n    ](https://docs.stripe.com/samples/identity/modal)\n*   [\n    \n    Fully embedded Connect platform integration\n    \n    Integrate with Connect embedded Components to build a fully embedded Connect integration.\n    \n    ProductConnect\n    \n    Platform\n    \n    LanguagesNode, React\n    \n    \n    \n    ](https://github.com/stripe/stripe-connect-furever-demo)",
    "title": "Browse sample projects | Stripe Documentation",
    "description": "Browse the source code of sample Stripe integrations.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/payments/payment-intents",
    "markdown": "# The Payment Intents API | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to use the Payment Intents API for Stripe payments.\n\nUse the [Payment Intents](https://docs.stripe.com/api/payment_intents) API to build an integration that can handle complex payment flows with a status that changes over the [PaymentIntent’s lifecycle](https://docs.stripe.com/payments/paymentintents/lifecycle). It tracks a payment from creation through checkout, and triggers additional authentication steps when required.\n\nSome of the advantages of using the [Payment Intents](https://docs.stripe.com/api/payment_intents) API include:\n\n*   Automatic authentication handling\n*   No double charges\n*   No [idempotency key](https://docs.stripe.com/api/idempotent_requests) issues\n*   Support for [Strong Customer Authentication](https://docs.stripe.com/strong-customer-authentication \"Strong Customer Authentication\") (SCA) and similar regulatory changes\n\n## A complete set of APIs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nUse the [Payment Intents](https://docs.stripe.com/api/payment_intents) API together with the [Setup Intents](https://docs.stripe.com/api/setup_intents) and [Payment Methods](https://docs.stripe.com/api/payment_methods) APIs. These APIs help you handle dynamic payments (for example, additional authentication like [3D Secure](https://docs.stripe.com/payments/3d-secure \"3D Secure (3DS)\")) and prepare you for expansion to other countries while allowing you to support new regulations and regional payment methods.\n\nBuilding an integration with the Payment Intents API involves two actions: creating and [confirming](https://docs.stripe.com/api/payment_intents/confirm \"confirm\") a PaymentIntent. Each PaymentIntent typically correlates with a single shopping cart or customer session in your application. The PaymentIntent encapsulates details about the transaction, such as the supported payment methods, the amount to collect, and the desired currency.\n\n## Creating a PaymentIntent![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo get started, see the [accept a payment guide](https://docs.stripe.com/payments/accept-a-payment?ui=elements). It describes how to create a PaymentIntent on the server and pass its [client secret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret \"PaymentIntent client secret\") to the client instead of passing the entire PaymentIntent object.\n\nWhen you [create the PaymentIntent](https://docs.stripe.com/api/payment_intents/create), you can specify options like the amount and currency:\n\n`curl https://api.stripe.com/v1/payment_intents \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d amount=1099 \\  -d currency=usd`\n\n### Best practices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n*   We recommend creating a PaymentIntent as soon as you know the amount, such as when the customer begins the checkout process, to help track your [purchase funnel](https://en.wikipedia.org/wiki/Purchase_funnel). If the amount changes, you can [update](https://docs.stripe.com/api#update_payment_intent) its [amount](https://docs.stripe.com/api#payment_intent_object-amount). For example, if your customer backs out of the checkout process and adds new items to their cart, you may need to update the amount when they start the checkout process again.\n    \n*   If the checkout process is interrupted and resumes later, attempt to reuse the same PaymentIntent instead of creating a new one. Each PaymentIntent has a unique ID that you can use to [retrieve](https://docs.stripe.com/api#retrieve_payment_intent) it if you need it again. In the data model of your application, you can store the ID of the PaymentIntent on the customer’s shopping cart or session to facilitate retrieval. The benefit of reusing the PaymentIntent is that the [object state](https://docs.stripe.com/payments/paymentintents/lifecycle) helps track any failed payment attempts for a given cart or session.\n    \n*   Remember to provide an [idempotency key](https://docs.stripe.com/api/idempotent_requests) to prevent the creation of duplicate PaymentIntents for the same purchase. This key is typically based on the ID that you associate with the cart or customer session in your application.\n    \n\n## Passing the client secret to the client side ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe PaymentIntent contains a [client secret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret), a key that’s unique to the individual PaymentIntent. On the client side of your application, Stripe.js uses the client secret as a parameter when invoking functions (such as [stripe.confirmCardPayment](https://docs.stripe.com/js#stripe-confirm-card-payment) or [stripe.handleCardAction](https://docs.stripe.com/js#stripe-handle-card-action)) to complete the payment.\n\n### Retrieve the client secret![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe PaymentIntent includes a [client secret](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-client_secret \"PaymentIntent client secret\") that the client side uses to securely complete the payment process. You can use different approaches to pass the client secret to the client side.\n\nRetrieve the client secret from an endpoint on your server, using the browser’s `fetch` function. This approach is best if your client side is a single-page application, particularly one built with a modern frontend framework like React. Create the server endpoint that serves the client secret:\n\n`get '/secret' do   intent = # ... Create or retrieve the PaymentIntent   {client_secret: intent.client_secret}.to_json end`\n\nAnd then fetch the client secret with JavaScript on the client side:\n\n`(async () => {   const response = await fetch('/secret');   const {client_secret: clientSecret} = await response.json();   // Render the form using the clientSecret })();`\n\n#### Caution\n\nYou can use the client secret to complete the payment process with the amount specified on the PaymentIntent. Don’t log it, embed it in URLs, or expose it to anyone other than the customer. Make sure that you have [TLS](https://docs.stripe.com/security/guide#tls \"TLS\") on any page that includes the client secret.\n\n## After the payment![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAfter the client confirms the payment, it is a best practice for your server to [monitor webhooks](https://docs.stripe.com/payments/payment-intents/verifying-status#webhooks) to detect when the payment successfully completes or fails.\n\nA `PaymentIntent` might have more than one [Charge](https://docs.stripe.com/api/charges) object associated with it if there were multiple payment attempts, for examples retries. For each charge you can inspect the [outcome](https://docs.stripe.com/api/charges/object#charge_object-outcome) and [details of the payment method](https://docs.stripe.com/api/charges/object#charge_object-payment_method_details) used.\n\n## Optimizing payment methods for future payments ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe [setup\\_future\\_usage](https://docs.stripe.com/api/payment_intents/object#payment_intent_object-setup_future_usage) parameter saves payment methods to use again in the future. For cards, it also optimizes authorization rates in compliance with regional legislation and network rules, such as [SCA](https://docs.stripe.com/strong-customer-authentication). To determine which value to use, consider how you want to use this payment method in the future.\n\n| How you intend to use the payment method | setup\\_future\\_usage enum value to use |\n| --- | --- |\n| On-session payments only | `on_session` |\n| Off-session payments only | `off_session` |\n| Both on and off-session payments | `off_session` |\n\nYou can still accept off-session payments with a card set up for on-session payments, but the bank is more likely to reject the off-session payment and require authentication from the cardholder.\n\nThe following example shows how to create a PaymentIntent and specify `setup_future_usage`:\n\n`curl https://api.stripe.com/v1/payment_intents \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d amount=1099 \\  -d currency=usd \\  -d setup_future_usage=off_session`\n\n#### Caution\n\nSetups for off-session payments are more likely to incur additional friction. Use on-session setup if you don’t intend to accept off-session payments with the saved card.\n\n## Dynamic statement descriptor ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nBy default, your Stripe account’s [statement descriptor](https://docs.stripe.com/get-started/account/activate#public-business-information) appears on customer statements whenever you charge their card. To provide a different description on a per-payment basis, include the `statement_descriptor` parameter.\n\n`curl https://api.stripe.com/v1/payment_intents \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d amount=1099 \\  -d currency=usd \\  -d \"payment_method_types[]\"=card \\  -d statement_descriptor=\"Custom descriptor\"`\n\nStatement descriptors are limited to 22 characters, can’t use the special characters `<`, `>`, `'`, `\"`, or `*`, and must not consist solely of numbers. When using dynamic statement descriptors, the dynamic text is appended to the [statement descriptor prefix](https://dashboard.stripe.com/settings/public) set in the Stripe Dashboard. An asterisk (`*`) and an empty space are also added to separate the default statement descriptor from the dynamic portion. These 2 characters count towards the 22 character limit.\n\nStripe supports adding [metadata](https://docs.stripe.com/api#metadata) to the most common requests you make, such as processing payments. Metadata isn’t shown to customers or factored into whether or not a payment is declined or blocked by our fraud prevention system.\n\nThrough metadata, you can associate information that’s meaningful to you with Stripe activity.\n\nAny metadata you include is viewable in the Dashboard (for example, when looking at the page for an individual payment), and is also available in common reports. As an example, you can attach the order ID for your store to the PaymentIntent for that order. Doing so allows you to easily reconcile payments in Stripe to orders in your system.\n\nIf you’re using [Radar for Fraud Teams](https://docs.stripe.com/radar \"Radar for Fraud Teams\"), consider passing additional customer information and order information as metadata. Then you can write [Radar rules using metadata attributes](https://docs.stripe.com/radar/rules/reference#metadata-attributes) and have more information available within the Dashboard, which can expedite your review process.\n\nWhen a PaymentIntent creates a charge, the PaymentIntent copies its metadata to the charge. Subsequent updates to the PaymentIntent’s metadata won’t modify the metadata of charges previously created by the PaymentIntent.\n\n`curl https://api.stripe.com/v1/payment_intents \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d amount=1099 \\  -d currency=usd \\  -d \"payment_method_types[]\"=card \\  -d \"metadata[order_id]\"=6735`\n\n#### Caution\n\nDon’t store any sensitive information (personally identifiable information, card details, and so on) as metadata or in the `description` parameter of the PaymentIntent.\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Accept a payment online](https://docs.stripe.com/payments/accept-a-payment?platform=web)\n*   [Accept a payment in an iOS app](https://docs.stripe.com/payments/accept-a-payment?platform=ios)\n*   [Accept a payment in an Android app](https://docs.stripe.com/payments/accept-a-payment?platform=android)\n*   [Set up future payments](https://docs.stripe.com/payments/save-and-reuse)",
    "title": "The Payment Intents API | Stripe Documentation",
    "description": "Learn how to use the Payment Intents API for Stripe payments.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/terminal",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Terminal\n\n## Use Stripe Terminal to accept in-person payments and extend Stripe payments to your point of sale.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/terminal-hero.5758b3003f62903c82f1178adffb3aa6.png)\n\n## Learn about Terminal![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Terminal is available in the following countries:\n\n### Availability![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAustralia\n\nBelgium\n\nCanada\n\nDenmark\n\nFrance\n\nGermany\n\nIreland\n\nItaly\n\nNetherlands\n\nSingapore\n\nSpain\n\nSweden\n\nUnited Kingdom\n\nUnited States\n\n### Available in Beta![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAustria\n\nCzech Republic\n\nFinland\n\nLuxembourg\n\nMalaysia\n\nNew Zealand\n\nNorway\n\nPortugal\n\nSwitzerland\n\nYou can only collect payments in your local currency with [supported card brands](https://docs.stripe.com/terminal/payments/collect-card-payment/supported-card-brands). Stripe Terminal offers pre-certified readers and Tap to Pay, which allows users to accept in-person contactless payments with a compatible [iPhone](https://docs.stripe.com/terminal/payments/setup-reader/tap-to-pay?platform=ios) or [Android](https://docs.stripe.com/terminal/payments/setup-reader/tap-to-pay?platform=android) device and the Stripe Terminal SDK. Hardware must be shipped to physical addresses (not PO boxes). If you’re outside the available countries, you can [request an invite](https://stripe.com/terminal#request-invite) to test Terminal.\n\n## Design your integration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/terminal-connect.5566b290bc3a8817733a41b2155512a9.png)\n\n## In-person fundamentals![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Terminal | Stripe Documentation",
    "description": "Use Stripe Terminal to accept in-person payments and extend Stripe payments to your point of sale.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/radar",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Radar\n\n## Use Stripe Radar to protect your business against fraud.\n\n[Stripe Radar](https://stripe.com/radar) provides real-time fraud protection and requires no additional development time.\n\n[Radar for Fraud Teams](https://stripe.com/radar/fraud-teams) adds customization capabilities and deeper insights and trend analysis for your business.\n\n## Design your integration with your fraud strategy![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## View the Radar Dashboard to understand how fraud affects your business![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Customize your fraud interventions with Radar for Fraud Teams![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Radar | Stripe Documentation",
    "description": "Use Stripe Radar to protect your business against fraud.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/connect",
    "markdown": "# Stripe Connect | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to route payments between multiple parties.\n\n[\n\nConnect\n\n\n\n\n\n](https://docs.stripe.com/connect)\n\nGet started\n\nChoose how to onboard accounts, set up dashboards, accept payments, pay out, and more.\n\n[\n\nDesign your Connect integration\n\n\n\n](https://docs.stripe.com/connect/design-an-integration)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/connect_overview.330026f5b1463495ce7365a10f7f491b.png)\n\n### Availability\n\n## Example integrations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[](https://docs.stripe.com/connect/collect-then-transfer-guide?platform=no-code \"Collect and pay out\")\n\n[Collect and pay out](https://docs.stripe.com/connect/collect-then-transfer-guide?platform=no-code \"Collect and pay out\")\n\n[\n\nUse Payment Links to collect payments from customers and automatically pay out a portion to your sellers or service providers.\n\nNo code\n\n\n\n](https://docs.stripe.com/connect/collect-then-transfer-guide?platform=no-code \"Collect and pay out\")\n\n[](https://docs.stripe.com/connect/add-and-pay-out-guide?dashboard-or-api=dashboard \"Pay out money\")\n\n[Pay out money](https://docs.stripe.com/connect/add-and-pay-out-guide?dashboard-or-api=dashboard \"Pay out money\")\n\n[\n\nAdd money from your bank to pay out your sellers or service providers.\n\nNo code\n\n\n\n](https://docs.stripe.com/connect/add-and-pay-out-guide?dashboard-or-api=dashboard \"Pay out money\")\n\n[](https://docs.stripe.com/connect/enable-payment-acceptance-guide \"Enable other businesses to accept payments directly\")\n\n[Enable other businesses to accept payments directly](https://docs.stripe.com/connect/enable-payment-acceptance-guide \"Enable other businesses to accept payments directly\")\n\n[\n\nFacilitate direct payments between other businesses and their own customers.\n\n](https://docs.stripe.com/connect/enable-payment-acceptance-guide \"Enable other businesses to accept payments directly\")\n\n## Onboard accounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[Choose how to onboard accounts](https://docs.stripe.com/connect/onboarding) to begin using Connect.\n\n[](https://docs.stripe.com/connect/hosted-onboarding \"Stripe-hosted onboarding\")\n\n[Stripe-hosted onboarding](https://docs.stripe.com/connect/hosted-onboarding \"Stripe-hosted onboarding\")\n\n[\n\nOnboard accounts through a Stripe-hosted onboarding form.\n\n](https://docs.stripe.com/connect/hosted-onboarding \"Stripe-hosted onboarding\")\n\n[](https://docs.stripe.com/connect/embedded-onboarding \"Embedded onboarding\")\n\n[Embedded onboarding](https://docs.stripe.com/connect/embedded-onboarding \"Embedded onboarding\")\n\n[\n\nOnboard accounts using highly themeable components you embed in your website.\n\n](https://docs.stripe.com/connect/embedded-onboarding \"Embedded onboarding\")\n\n[](https://docs.stripe.com/connect/api-onboarding \"API onboarding\")\n\n[API onboarding](https://docs.stripe.com/connect/api-onboarding \"API onboarding\")\n\n[\n\nOnboard accounts using the Stripe API with full control over your own UI.\n\n](https://docs.stripe.com/connect/api-onboarding \"API onboarding\")\n\n[](https://docs.stripe.com/connect/onboarding/quickstart)\n\n[Onboarding quickstart](https://docs.stripe.com/connect/onboarding/quickstart)\n\n## Accept payments![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[Choose a charge type](https://docs.stripe.com/connect/charges) to accept payments.\n\n[](https://docs.stripe.com/connect/direct-charges \"Create direct charges\")\n\n[Create direct charges](https://docs.stripe.com/connect/direct-charges \"Create direct charges\")\n\n[\n\nCustomers directly transact with your connected account.\n\n](https://docs.stripe.com/connect/direct-charges \"Create direct charges\")\n\n[](https://docs.stripe.com/connect/destination-charges \"Create destination charges\")\n\n[Create destination charges](https://docs.stripe.com/connect/destination-charges \"Create destination charges\")\n\n[\n\nCustomers transact with your platform for products or services provided by your connected account.\n\n](https://docs.stripe.com/connect/destination-charges \"Create destination charges\")\n\n[](https://docs.stripe.com/connect/separate-charges-and-transfers \"Create separate charges and transfers\")\n\n[Create separate charges and transfers](https://docs.stripe.com/connect/separate-charges-and-transfers \"Create separate charges and transfers\")\n\n[\n\nTransactions involves multiple parties and a specific party isn’t known at the time of charge.\n\n](https://docs.stripe.com/connect/separate-charges-and-transfers \"Create separate charges and transfers\")\n\n[\n\nConnect\n\n\n\n\n\n](https://docs.stripe.com/connect)\n\nEmbed dashboard components in your website\n\nUse Connect embedded components to add connected account dashboard functionality to your website.\n\n[\n\nEmbedded components quickstart\n\n\n\n](https://docs.stripe.com/connect/connect-embedded-components/quickstart)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/embedded_components.42dbb2af91eacece27fe470bcd8befbd.png)\n\n## Connect fundamentals![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[](https://docs.stripe.com/connect/onboarding \"Onboarding\")\n\n[Onboarding](https://docs.stripe.com/connect/onboarding \"Onboarding\")\n\n[\n\nCreate a Stripe-hosted onboarding flow or create your own custom flow with the Stripe API.\n\n](https://docs.stripe.com/connect/onboarding \"Onboarding\")\n\n[](https://docs.stripe.com/connect/charges \"Charge types\")\n\n[Charge types](https://docs.stripe.com/connect/charges \"Charge types\")\n\n[\n\nLearn about the different charge types to split payments between your platform and your accounts.\n\n](https://docs.stripe.com/connect/charges \"Charge types\")\n\n[](https://docs.stripe.com/connect/payouts-connected-accounts \"Payouts\")\n\n[Payouts](https://docs.stripe.com/connect/payouts-connected-accounts \"Payouts\")\n\n[\n\nManage external accounts and pay out your users.\n\n](https://docs.stripe.com/connect/payouts-connected-accounts \"Payouts\")\n\n[](https://docs.stripe.com/connect/tax-reporting \"Tax reporting\")\n\n[Tax reporting](https://docs.stripe.com/connect/tax-reporting \"Tax reporting\")\n\n[\n\nLearn how to manage US tax reporting for your Connect platform.\n\n](https://docs.stripe.com/connect/tax-reporting \"Tax reporting\")\n\n## Enhance your Connect integration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[](https://docs.stripe.com/tax/connect \"Use Stripe Tax with Connect\")\n\n[Use Stripe Tax with Connect](https://docs.stripe.com/tax/connect \"Use Stripe Tax with Connect\")\n\n[\n\nCalculate, collect, and report taxes for your platform or connected accounts.\n\n](https://docs.stripe.com/tax/connect \"Use Stripe Tax with Connect\")",
    "title": "Stripe Connect | Stripe Documentation",
    "description": "Learn how to route payments between multiple parties.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/climate/faqs",
    "markdown": "# Climate Commitments | Stripe DocumentationThe Stripe Docs logo\n\n## Direct a fraction of your revenue to help advance carbon removal.\n\nHelp emerging permanent carbon removal technologies scale by allocating a fraction of your revenue to Climate Commitments in the [Dashboard](https://dashboard.stripe.com/setup/climate/activate). Stripe puts these contributions toward projects that remove carbon dioxide (CO2) from the atmosphere to help those projects scale. We select [various projects with the help of scientific expert reviewers](https://stripe.com/climate) and use a [transparent application process](https://github.com/stripe/negative-emissions-source-materials). Following the common pattern of a portfolio approach, some projects might deliver results, and others might fail. To make carbon neutral or net zero claims, use [Climate Orders](https://docs.stripe.com/climate/orders).\n\n## Manage and understand your commitment![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can manage your contribution percentage and monitor impact in the [Dashboard](https://dashboard.stripe.com/climate). Stripe Climate Commitments also sends you regular updates with details about your contribution.\n\n## Enable Climate Commitments for Connect![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can enable Climate Commitments for your platform, without affecting accounts on your platform, in your [Dashboard](https://dashboard.stripe.com/climate). If you take an application fee from your connected accounts, you’ll see this reflected in your percentage-based contributions. For destination charges, we apply the percentage-based contribution to the charge minus the transferred amount. For separate charges and transfers, we apply the percentage-based contribution to the entire charge amount.\n\n**For Standard accounts**:\n\n*   You can allow new Standard account users to enable Climate contributions during onboarding with the [Climate setting in the Dashboard](https://dashboard.stripe.com/settings/connect/climate). This contributes a portion of their revenue towards carbon removal.\n\n![The Stripe Climate onboarding page for connected accounts](https://b.stripecdn.com/docs-statics-srv/assets/ClimateConnectOnboardingPreview.b8ec04318a01e28f3a24b6ffc0381911.png)\n\nOptional step shown during Standard account onboarding\n\n*   Existing Standard accounts can log into their Dashboard to independently enable Climate Commitments. Doing so won’t affect your platform. To inform your Standard connected accounts about Climate Commitments, you can share this direct link to the Climate section of their Dashboard: [https://dashboard.stripe.com/get-started/climate](https://dashboard.stripe.com/get-started/climate).\n\nYou can demonstrate and explain your commitment to users by doing the following:\n\n*   Use the Climate badge\n*   Use reference language from the [Stripe Climate](http://stripe.com/climate) page\n*   Direct them to our [initial carbon removal purchases](https://stripe.com/blog/first-negative-emissions-purchases) blog post\n*   Direct them to your Stripe-hosted custom [webpage](https://dashboard.stripe.com/climate)\n\nThe Climate badge is only available on [Stripe Checkout](https://docs.stripe.com/payments/checkout), [Invoices](https://docs.stripe.com/invoicing), or [Receipts](https://docs.stripe.com/receipts?payment-ui=payment-links). If you use a different product, you can download our badge asset kit to add the Climate logo to your site. The badge asset kit is available for download from your Climate page. However, all Climate Commitments users can publish a free, custom climate page in a few clicks. This is also available from the same Climate page.",
    "title": "Climate Commitments | Stripe Documentation",
    "description": "Direct a fraction of your revenue to help advance carbon removal.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/financial-connections",
    "markdown": "# Stripe Financial Connections | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to access permissioned data from your users' financial accounts.\n\nStripe Financial Connections allows users to securely share their financial data with your business. With one simple integration you can instantly verify bank accounts for ACH payments, reduce underwriting risk with [balances](https://docs.stripe.com/financial-connections/balances) data, mitigate fraud by verifying account [ownership](https://docs.stripe.com/financial-connections/ownership) details, and build new fintech products with [transactions](https://docs.stripe.com/financial-connections/transactions) data.\n\nFinancial Connections enables your users to connect their accounts in fewer steps with [Link](https://support.stripe.com/questions/link-for-financial-connections-support-for-businesses), allowing them to save and quickly reuse their bank account details across Stripe merchants.\n\n## Use cases![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Supported data types![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Learn more![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Stripe Financial Connections | Stripe Documentation",
    "description": "Learn how to access permissioned data from your users' financial accounts.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/identity",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n[Skip to content](#main-content)\n\n## Identity\n\n## Learn how to verify identities using Stripe Identity.\n\nSign up for developer updates:",
    "title": "Identity | Stripe Documentation",
    "description": "Learn how to verify identities using Stripe Identity.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-cli",
    "markdown": "# Get started with the Stripe CLI\n\n## Build, test, and manage your Stripe integration directly from the command line.\n\nThe Stripe CLI is a developer tool to help you build, test, and manage your integration with Stripe directly from the command line. It’s simple to install, works on macOS, Windows, and Linux, and offers a range of functionality to enhance your developer experience with Stripe. You can use the Stripe CLI to:\n\n*   Create, retrieve, update, or delete any of your Stripe resources in test mode (for example, create a product)\n*   Stream real-time API requests and events happening in your account\n*   Trigger events to test your webhooks integration\n\n[](#install)\n\nFrom the command-line, use an install script or download and extract a versioned archive file for your operating system to install the CLI.\n\nTo install the Stripe CLI with [homebrew](https://brew.sh/), run:\n\n`brew install stripe/stripe-cli/stripe`\n\n[](#login-account)\n\nLogin and authenticate your Stripe user [Account](https://docs.stripe.com/get-started/account/activate) to generate a set of _restricted keys_. To learn more, see [Stripe CLI keys and permissions](https://docs.stripe.com/stripe-cli/keys).\n\nPress the **Enter** key on your keyboard to complete the authentication process in your browser.\n\n1.  Optionally, if you don’t want to use a browser, use the `--interactive` flag to authenticate with an existing API secret key or restricted key. This can be helpful when authenticating to the CLI without a browser, such as in a CI/CD pipeline.\n\n`stripe login --interactive`\n\n1.  Optionally, use the `--api-key` flag to specify your API secret key inline each time you send a request.\n\n`stripe login --api-key` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n[](#get-started)\n\nWatch this video to learn different ways to use the Stripe CLI. It covers how to configure the CLI, download sample code, and work with Stripe objects.",
    "title": "Get started with the Stripe CLI | Stripe Documentation",
    "description": "Build, test, and manage your Stripe integration directly from the command line.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/subscriptions/subscription-schedules",
    "markdown": "# Subscription schedules | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about subscription schedules and how to use them.\n\nUse [subscription schedules](https://docs.stripe.com/api/subscription_schedules) to automate changes to subscriptions over time. You can [create](https://docs.stripe.com/api/subscription_schedules/create) subscriptions directly through a schedule or you can add a schedule to an existing subscription. Use the [phases](https://docs.stripe.com/api/subscription_schedules/object#subscription_schedule_object-phases) attribute to define the changes you want to make to the subscription. After a schedule completes all of its phases, it completes based on its [end\\_behavior](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-end_behavior).\n\nSome changes you might want to schedule include:\n\n*   Starting a subscription on a future date\n*   Backdating a subscription to a past date\n*   Upgrading or downgrading a subscription\n\nSubscription schedules are available in both the Stripe Billing Dashboard and the API. Here’s a quick video of how subscription schedules work in the Dashboard:\n\nSubscription schedules in the Dashboard\n\nThe rest of this document explains subscription schedules in more detail. To see a list of examples, see the [use cases](https://docs.stripe.com/billing/subscriptions/subscription-schedules/use-cases) page.\n\n## Phases ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen creating a subscription schedule, use the [phases](https://docs.stripe.com/api/subscription_schedules/object#subscription_schedule_object-phases) attribute to define when changes occur and what properties of the subscription to change. For example, you might offer a coupon for 50% off for the first three months of a subscription. In this scenario, you’d create a subscription schedule where the first phase is three months long and contains the 50% off coupon. In the second phase, the subscription would be reverted to the normal cost and the coupon would be removed. Phases must be sequential, meaning only one phase can be active at a given time.\n\n### Set the length of a phase ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe [interval](https://docs.stripe.com/api/prices/object#price_object-recurring-interval) of a price determines how often to bill for a subscription. For example, a monthly interval is billed every month. Phases have an [iterations](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-phases-iterations) attribute that you use to specify how long a phase should last. Multiply this value by the interval to determine the length of the phase. If a subscription schedule uses a price with a monthly interval and you set `iterations=2`, the phase lasts for two months.\n\nThe `end_date` of one phase has to be the `start_date` for the next phase. Using `iterations` automatically sets the `start_date` and `end_date` properly. You can set these values manually, but Stripe recommends using `iterations` instead. Because manually setting the start and end dates is prone to errors, only use it for advanced use cases.\n\n### Transition to the next phase ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nPhase transitions happen automatically after the `end_date` on a phase is reached. When a phase starts, Stripe updates the subscription based on the attributes of the next phase. You can optionally enable [proration](https://docs.stripe.com/api/subscription_schedules/object#subscription_schedule_object-phases-proration_behavior) to credit the user for unused items or time on the plan.\n\n### Use trials ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can add trial periods by setting [trial end](https://docs.stripe.com/api/subscription_schedules/create#create_subscription_schedule-phases-trial_end) on a phase. If you want the entire phase to be a trial, set the value of `trial_end` to the same time as the `end_date` of the phase. You can also set `trial_end` to a time before the `end_date` if you want to make only part of the phase a trial. When scheduling updates, you must specify the new `trial_end` on each phase.\n\n### Complete a schedule ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSubscription schedules end after the last phase is complete. At this point, the subscription is left in place and is no longer associated with the schedule. If you want to cancel a subscription after the last phase of a schedule completes, you can set [end\\_behavior](https://docs.stripe.com/api/subscription_schedules/object#subscription_schedule_object-end_behavior) to `cancel`.\n\n### Phase attribute inheritance ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen a phase becomes active, all attributes set on the phase are also set on the subscription. After the phase ends, attributes remain the same unless the next phase modifies them, or if the schedule has no default setting. You can set some attributes on both schedules and phases. This includes:\n\nIf one of these attributes is defined on the schedule, it becomes the default for all phases. When the same property is defined on both the schedule and the phase, the phase attribute overrides the schedule attribute. This behavior is explained more below:\n\n| Schedule attribute present | Phase attribute present | Outcome |\n| --- | --- | --- |\n| No  | No  | Defaults to the customer or account settings |\n| Yes | No  | Schedule attribute set |\n| Yes | Yes | Phase attribute set |\n| No  | Yes | Phase attribute set |\n\n### Use phase metadata ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can use subscription schedule phases to set metadata on the underlying subscription. This allows you to control the metadata on a subscription with scheduled updates.\n\nTo use phase metadata with the API, set [metadata](https://docs.stripe.com/api/subscription_schedules/object#subscription_schedule_object-phases-metadata) on the phases of a subscription schedule. When the underlying subscription enters a phase:\n\n*   Metadata from the phase with non-empty values are _added_ to the metadata on the subscription if the keys _aren’t_ already present in the latter.\n*   Metadata from the phase with non-empty values are used to _update_ the metadata on the subscription if the keys _are_ already present in the latter.\n*   Metadata from the phase with _empty values_ are used to _unset_ the corresponding keys in the metadata on the subscription.\n\nTo unset all keys in the subscription’s metadata, update the subscription directly or unset every key individually from the phase’s metadata. Updating the underlying subscription’s metadata directly doesn’t affect the current phase’s metadata.\n\nThe following example illustrates a subscription schedule with two phases, where each phase has its own metadata:\n\n`{   ...   \"object\": \"subscription_schedule\",   \"phases\": [     { // Phase 1       ...       \"metadata\": {         \"channel\": \"self-serve\",         \"region\": \"apac\",         \"upsell-products\": \"alpha\"       },     },     { // Phase 2       ...       \"metadata\": {         \"channel\": \"sales\",         \"churn-risk\": \"high\",         \"upsell-products\": \"\"       },     }   ], }`\n\nWhen this schedule creates a new subscription and the subscription enters `Phase 1`, the three keys in `Phase 1` metadata are added to the subscription’s metadata. Hence, the subscription in `Phase 1` has the following metadata:\n\n`{   ...   \"object\": \"subscription\",   \"metadata\": {     \"channel\": \"self-serve\",     \"region\": \"apac\",     \"upsell-products\": \"alpha\"   }, }`\n\nWhen the subscription enters `Phase 2`, the subscription’s metadata is updated:\n\n*   The value of `channel` is updated because a value is specified on the phase’s metadata and the subscription already has metadata with that key.\n*   The value of `region` is unchanged because it’s not specified on the phase.\n*   `churn-risk` is added because this is a new key.\n*   `upsell-products` is unset because an empty value is specified on the phase.\n\nHence, the subscription in `Phase 2` has the following metadata:\n\n`{   ...   \"object\": \"subscription\",   \"metadata\": {     \"channel\": \"sales\",     \"region\": \"apac\",     \"churn-risk\": \"high\"   } }`\n\nLearn how to [copy subscription metadata onto subscription invoices](https://docs.stripe.com/billing/invoices/subscription#subscription-metadata).\n\n## Create subscription schedules ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe [use cases](https://docs.stripe.com/billing/subscriptions/subscription-schedules/use-cases) page has more thorough examples but below is a basic example of creating a subscription schedule using a customer. Creating a schedule this way automatically creates the subscription as well.\n\n#### Note\n\nUnlike when you create a subscription directly, the first invoice of a subscription schedule with `collection_method` set to `charge_automatically` behaves like a recurring invoice and _isn’t_ immediately finalized at the time the schedule’s subscription is created. The invoice begins in a `draft` status and is finalized by Stripe [about 1 hour after creation](https://docs.stripe.com/billing/subscriptions/webhooks#understand).\n\nThis means that, for example, creating a charge-automatically subscription schedule with `start_date=now` also creates a subscription and an invoice in the `draft` status. This gives you a 1-hour window to [make edits to the invoice](https://docs.stripe.com/api/invoices/update). Later, the invoice is auto-advanced into the `open` or `paid` status depending on the outcome of the asynchronous payment attempt at finalization time.\n\n`curl https://api.stripe.com/v1/subscription_schedules \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d customer=cus_GBHHxuvBvO26Ea \\  -d start_date=now \\  -d end_behavior=release \\  -d \"phases[0][items][0][price]\"=price_1GqNdGAJVYItwOKqEHb \\  -d \"phases[0][items][0][quantity]\"=1 \\  -d \"phases[0][iterations]\"=12`\n\nThis schedule:\n\n*   Starts as soon as it’s created.\n*   Sets the subscription to one instance of the product at `price_1GqNdGAJVYItwOKqEHb`.\n*   Goes through 12 iterations and then releases the subscription from the schedule.\n\nYou can also create subscription schedules by passing a subscription ID:\n\n`curl https://api.stripe.com/v1/subscription_schedules \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d from_subscription=sub_GB98WOvaRAWPl6`\n\nCreating a schedule this way uses attributes on the subscription to set attributes on the schedule.\n\nSimilar to other Stripe APIs, you can retrieve and update [subscription schedules](https://docs.stripe.com/api/subscription_schedules). You can also cancel and release them. Cancelling a subscription schedule cancels the subscription as well. If you only want to remove a schedule from a subscription, use the [release](https://docs.stripe.com/api/subscription_schedules/release) call.\n\n### Create subscription schedules without code![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can create multi-phase subscription schedules without using code in the Stripe Billing subscription editor. To do so, follow these steps:\n\n1.  In the Dashboard, open the [subscription editor](https://dashboard.stripe.com/subscriptions?create=subscription).\n2.  Add a customer.\n3.  Add a price to the product selection dropdown.\n4.  Set a duration for the first phase of the subscription schedule.\n5.  Click **\\+ Add phase**.\n6.  Select your next phase duration, or just **forever** to keep the subscription going.\n7.  Make the required changes to your new phase. You can change the quantity, change the price, add or remove coupons, reset the billing cycle date, change proration behavior, or update metadata. If you change the metadata in a phase, it updates the subscription’s metadata when that phase activates.\n8.  Save the new phase.\n9.  Add any additional phases as needed.\n10.  Create a subscription.\n\n## Update subscription schedules ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can only update the current and future phases on subscription schedules. You need to pass in all current and future phases when you update a subscription schedule. You also need to pass in any previously set parameters that you want to keep. Any parameters that were previously set are unset for the existing phase unless you pass those in the update request. You still receive information in the response about past phases.\n\nYou can include up to 10 current or future phases. Updating the active phase updates the underlying subscription as well. For example, this call maintains the existing start and end dates, but updates the `quantity` to two:\n\n`curl https://api.stripe.com/v1/subscription_schedules/`\n\n`{{SUBSCRIPTION_SCHEDULE_ID}}`\n\n `\\  -u \"  sk_test_4eC39HqLyjWDarjtT1zdp7dc  :\" \\  -d \"phases[0][items][0][price]\"=  {{PRICE_ID}}   \\  -d \"phases[0][items][0][quantity]\"=2 \\  -d \"phases[0][start_date]\"=1577865600 \\  -d \"phases[0][end_date]\"=1580544000`\n\nYou can also end the current phase immediately and start a new phase. This moves the active phase to the past and immediately applies the new phase to the subscription. The example below ends the current phase and starts a new phase:\n\n`curl https://api.stripe.com/v1/subscription_schedules/`\n\n`{{SUBSCRIPTION_SCHEDULE_ID}}`\n\n `\\  -u \"  sk_test_4eC39HqLyjWDarjtT1zdp7dc  :\" \\  -d \"phases[0][items][0][price]\"=  {{PRICE_ID}}   \\  -d \"phases[0][items][0][quantity]\"=1 \\  -d \"phases[0][start_date]\"=1577865600 \\  -d \"phases[0][end_date]\"=now \\  -d \"phases[1][items][0][price]\"=  {{PRICE_ID}}   \\  -d \"phases[1][items][0][quantity]\"=2 \\  -d \"phases[1][start_date]\"=now \\  -d \"phases[1][end_date]\"=1580544000`\n\nTo add additional phases to a subscription schedule, pass in the current phase, and then define your new phases:\n\n`curl https://api.stripe.com/v1/subscription_schedules/`\n\n`{{SUBSCRIPTION_SCHEDULE_ID}}`\n\n `\\  -u \"  sk_test_4eC39HqLyjWDarjtT1zdp7dc  :\" \\  -d \"phases[0][items][0][price]\"=  {{PRICE_ID}}   \\  -d \"phases[0][items][0][quantity]\"=1 \\  -d \"phases[0][start_date]\"=1577865600 \\  -d \"phases[0][end_date]\"=1580544000 \\  -d \"phases[1][items][0][price]\"=  {{PRICE_ID}}   \\  -d \"phases[1][items][0][quantity]\"=2 \\  -d \"phases[1][iterations]\"=1`\n\n### Update subscription schedules without code![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can update existing subscriptions to have future subscription schedule phases using the Stripe Billing subscription editor. To do so, follow these steps:\n\n1.  In the Dashboard, go to the [Subscriptions](https://dashboard.stripe.com/subscriptions) page, select an existing subscription, and click **Actions** > **Update subscription**.\n2.  Set a duration for the current phase of the subscription schedule by selecting an end date.\n3.  Click **+Add phase**.\n4.  Select your next phase duration, or just select **forever** to keep the subscription going.\n5.  Make the required changes to your new phase. You can change the quantity, change the price, add or remove coupons, reset the billing cycle date, change proration behavior, or update metadata. If you change the metadata in a phase, it updates the subscription’s metadata when that phase activates.\n6.  Save the new phase.\n7.  Add any additional phases as needed.\n8.  Create a subscription.\n\n## Preview an invoice![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUse the [schedule](https://docs.stripe.com/api/invoices/upcoming#upcoming_invoice-schedule) parameter in the [upcoming invoice API](https://docs.stripe.com/api/invoices/upcoming) to preview the next invoice for a subscription schedule.\n\n`curl https://api.stripe.com/v1/invoices/create_preview \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d schedule=  {{SUBSCRIPTION_SCHEDULE_ID}}    `\n\n### Previewing schedule creation and updates![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUse the parameters in [schedule\\_details](https://docs.stripe.com/api/invoices/upcoming#upcoming_invoice-schedule_details) to preview creating or updating a subscription schedule. Pass an existing [schedule](https://docs.stripe.com/api/invoices/upcoming#upcoming_invoice-schedule) to tell Stripe whether it’s a creation or an update.\n\nPass all of the current and future [phases](https://docs.stripe.com/api/invoices/upcoming#upcoming_invoice-schedule_details-phases) you’re previewing.\n\nFor example, the following code previews the first invoice for a subscription schedule with `1` phase that lasts for `12` billing periods.\n\n`curl https://api.stripe.com/v1/invoices/create_preview \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"customer_details[address][line1]\"=\"920 5th Ave\" \\  -d \"customer_details[address][city]\"=Seattle \\  -d \"customer_details[address][state]\"=WA \\  -d \"customer_details[address][postal_code]\"=98104 \\  -d \"customer_details[address][country]\"=US \\  -d \"schedule_details[phases][0][start_date]\"=now \\  -d \"schedule_details[phases][0][items][0][price]\"=  {{PRICE_ID}}   \\  -d \"schedule_details[phases][0][items][0][quantity]\"=1 \\  -d \"schedule_details[phases][0][iterations]\"=12`\n\n## Dashboard limitations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can create and update subscription schedules without code in the [Dashboard](https://dashboard.stripe.com/test/subscriptions).\n\nIn the Dashboard, you can set the following settings globally across all phases, but not on a per phase basis:\n\n*   Billing thresholds\n*   Payment methods\n*   Invoice settings\n*   Subscription description\n*   Trial days (only works with the first phase)\n\nThe following parameters aren’t supported in the Dashboard:\n\n*   Subscription schedule metadata\n*   Phase item metadata\n*   Currency\n*   All Connect parameters",
    "title": "Subscription schedules | Stripe Documentation",
    "description": "Learn how to use subscription schedules to automate changes to subscriptions over time.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/subscriptions/build-subscriptions",
    "markdown": "# Build a subscriptions integration | Stripe DocumentationThe Stripe Docs logo\n\n## Create and manage subscriptions to accept recurring payments.\n\n![Checkout subscription page](https://b.stripecdn.com/docs-statics-srv/assets/checkout-subs-preview.d409ee79bf1f3280b9dfd3968b314c21.png)\n\n## What you’ll build ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis guide describes how to sell fixed-price monthly subscriptions using [Stripe Checkout](https://docs.stripe.com/payments/checkout).\n\nThis guide shows you how to:\n\n*   Model your business by building a product catalog\n*   Add a Checkout session to your site, including a button and success and cancellation pages\n*   Monitor subscription events and provision access to your service\n*   Set up the [customer portal](https://docs.stripe.com/customer-management)\n*   Add a customer portal session to your site, including a button and redirect\n*   Let customers manage their subscription through the portal\n\nAfter you complete the integration, you can extend it to:\n\n*   [Display taxes](https://docs.stripe.com/payments/checkout/taxes)\n*   [Apply discounts](https://docs.stripe.com/billing/subscriptions/coupons#using-coupons-in-checkout)\n*   [Offer customers a free trial period](https://docs.stripe.com/billing/subscriptions/trials)\n*   [Add more payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#low-code)\n*   [Integrate the hosted invoice page](https://docs.stripe.com/invoicing/hosted-invoice-page)\n*   [Use Checkout in setup mode](https://docs.stripe.com/payments/save-and-reuse)\n*   [Set up metered billing](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing), [pricing tiers](https://docs.stripe.com/products-prices/pricing-models#tiered-pricing), and [usage-based pricing](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing)\n*   [Manage prorations](https://docs.stripe.com/billing/subscriptions/prorations)\n*   [Allow customers to subscribe to multiple products](https://docs.stripe.com/billing/subscriptions/multiple-products)\n*   [Integrate entitlements to manage access to your product’s features](https://docs.stripe.com/billing/entitlements)\n\n[](#set-up-stripe)\n\nInstall the Stripe client of your choice:\n\n`# Available as a gem sudo gem install stripe`\n\n`# If you use bundler, you can add this line to your Gemfile gem 'stripe'`\n\nInstall the Stripe CLI (optional). The CLI provides [webhook](https://docs.stripe.com/webhooks#test-webhook) testing, and you can run it to create your products and prices.\n\n`# Install Homebrew to run this command: [https://brew.sh/](https://brew.sh/) brew install stripe/stripe-cli/stripe  # Connect the CLI to your dashboard stripe login`\n\nFor additional install options, see [Get started with the Stripe CLI](https://docs.stripe.com/stripe-cli).\n\n[](#create-pricing-model)\n\nCreate your [products](https://docs.stripe.com/api/products \"subscription products\") and their [prices](https://docs.stripe.com/api/prices \"Prices\") in the Dashboard or with the Stripe CLI.\n\nThis example uses a fixed-price service with two different service-level options: Basic and Premium. For each service-level option, you need to create a product and a recurring price. (If you want to add a one-time charge for something like a setup fee, create a third product with a one-time price. To keep things simple, this example doesn’t include a one-time charge.)\n\nIn this example, each product bills at monthly intervals. The price for the Basic product is 5 USD. The price for the Premium product is 15 USD.\n\nGo to the [Add a product](https://dashboard.stripe.com/test/products/create) page and create two products. Add one price for each product, each with a monthly recurring billing period:\n\n*   Premium product: Premium service with extra features\n    \n    *   Price: Standard pricing | 15 USD\n*   Basic product: Basic service with minimum features\n    \n    *   Price: Standard pricing | 5 USD\n\nAfter you create the prices, record the price IDs so you can use them in other steps. Price IDs look like this: `price_G0FvDp6vZvdwRZ`.\n\nWhen you’re ready, use the **Copy to live mode** button at the top right of the page to clone your product from [test mode to live mode](https://docs.stripe.com/keys#test-live-modes).\n\nIf you offer multiple billing intervals, use Checkout to [upsell](https://docs.stripe.com/payments/checkout/upsells) customers on longer billing intervals and collect more revenue upfront.\n\nFor other pricing models, see [Billing examples](https://docs.stripe.com/products-prices/pricing-models).\n\n[](#create-session)\n\nAdd a checkout button to your website that calls a server-side endpoint to create a Checkout Session.\n\n`<html>   <head>     <title>Checkout</title>   </head>   <body>     <form action=\"/create-checkout-session\" method=\"POST\">       <!-- Note: If using PHP set the action to /create-checkout-session.php -->        <input type=\"hidden\" name=\"priceId\" value=\"price_G0FvDp6vZvdwRZ\" />       <button type=\"submit\">Checkout</button>     </form>   </body> </html>`\n\nOn the backend of your application, define an endpoint that [creates the session](https://docs.stripe.com/api/checkout/sessions/create) for your frontend to call. You need these values:\n\n*   The price ID of the subscription the customer is signing up for—your frontend passes this value\n*   Your `success_url`, a page on your website that Checkout returns your customer to after they complete the payment\n\nYou can optionally provide `cancel_url`, a page on your website that Checkout returns your customer to if they cancel the payment process. You can also configure a [billing cycle anchor](https://docs.stripe.com/billing/subscriptions/billing-cycle) to your subscription in this call.\n\nIf you created a one-time price in [step 2](https://docs.stripe.com/billing/subscriptions/build-subscriptions#create-pricing-model), pass that price ID as well. After creating a Checkout Session, redirect your customer to the [URL](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-url) returned in the response.\n\n#### Note\n\n`# Set your secret key. Remember to switch to your live secret key in production. # See your keys here: [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys) Stripe.api_key =` \n\n`'sk_test_4eC39HqLyjWDarjtT1zdp7dc'`\n\n`# The price ID passed from the front end. #   price_id = params['priceId'] price_id = '{{PRICE_ID}}'  session = Stripe::Checkout::Session.create({   success_url: 'https://example.com/success.html?session_id={CHECKOUT_SESSION_ID}',   cancel_url: 'https://example.com/canceled.html',   mode: 'subscription',   line_items: [{     # For metered billing, do not pass quantity     quantity: 1,     price: price_id,   }], })  # Redirect to the URL returned on the session #   redirect session.url, 303`\n\nThis example customizes the `success_url` by appending the Session ID. For more information about this approach, see the documentation on how to [Customize your success page](https://docs.stripe.com/payments/checkout/custom-success-page).\n\nFrom your [Dashboard](https://dashboard.stripe.com/settings/payment_methods), enable the payment methods you want to accept from your customers. Checkout supports [several payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#payment-method-product-support).\n\n[\n\n## Provision and monitor subscriptions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#provision-and-monitor)\n\nAfter the subscription signup succeeds, the customer returns to your website at the `success_url`, which initiates a `checkout.session.completed` [webhooks](https://docs.stripe.com/webhooks \"webhook\"). When you receive a `checkout.session.completed` event, you can [provision the subscription](https://docs.stripe.com/billing/subscriptions/overview#provisioning). Continue to provision each month (if billing monthly) as you receive `invoice.paid` events. If you receive an `invoice.payment_failed` event, notify your customer and send them to the customer portal to update their payment method.\n\nTo determine the next step for your system’s logic, check the event type and parse the payload of each [event object](https://docs.stripe.com/api/events/object), such as `invoice.paid`. Store the `subscription.id` and `customer.id` event objects in your database for verification.\n\nFor testing purposes, you can monitor events in the [Dashboard](https://dashboard.stripe.com/events). For production, set up a webhook endpoint and subscribe to appropriate event types. If you don’t know your `STRIPE_WEBHOOK_SECRET` key, click the [webhook](https://dashboard.stripe.com/webhooks) in the Dashboard to view it.\n\n`# Set your secret key. Remember to switch to your live secret key in production. # See your keys here: [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys) Stripe.api_key =` \n\n`'sk_test_4eC39HqLyjWDarjtT1zdp7dc'`\n\n`post '/webhook' do   webhook_secret = '{{STRIPE_WEBHOOK_SECRET}}'    payload = request.body.read   if !webhook_secret.empty?     # Retrieve the event by verifying the signature using the raw body and secret if webhook signing is configured.     sig_header = request.env['HTTP_STRIPE_SIGNATURE']     event = nil      begin       event = Stripe::Webhook.construct_event(         payload, sig_header, webhook_secret       )     rescue JSON::ParserError => e       # Invalid payload       status 400       return     rescue Stripe::SignatureVerificationError => e       # Invalid signature       puts '⚠️  Webhook signature verification failed.'       status 400       return     end   else     data = JSON.parse(payload, symbolize_names: true)     event = Stripe::Event.construct_from(data)   end   # Get the type of webhook event sent   event_type = event['type']   data = event['data']   data_object = data['object']    case event_type   when 'checkout.session.completed'     # Payment is successful and the subscription is created.     # You should provision the subscription and save the customer ID to your database.   when 'invoice.paid'     # Continue to provision the subscription as payments continue to be made.     # Store the status in your database and check when a user accesses your service.     # This approach helps you avoid hitting rate limits.   when 'invoice.payment_failed'     # The payment failed or the customer does not have a valid payment method.     # The subscription becomes past_due. Notify your customer and send them to the     # customer portal to update their payment information.   else     puts \"Unhandled event type: \\#{event.type}\"   end    status 200 end`\n\nThe minimum event types to monitor:\n\n| Event name | Description |\n| --- | --- |\n| `checkout.session.completed` | Sent when a customer clicks the Pay or Subscribe button in Checkout, informing you of a new purchase. |\n| `invoice.paid` | Sent each billing interval when a payment succeeds. |\n| `invoice.payment_failed` | Sent each billing interval if there is an issue with your customer’s payment method. |\n\nFor even more events to monitor, see [Subscription webhooks](https://docs.stripe.com/billing/subscriptions/webhooks).\n\n[](#configure-portal)\n\nThe [customer portal](https://docs.stripe.com/customer-management) lets your customers directly manage their existing subscriptions and invoices.\n\nUse [the Dashboard](https://dashboard.stripe.com/test/settings/billing/portal) to configure the portal. At a minimum, make sure to configure it so that customers can update their payment methods. See [Integrating the customer portal](https://docs.stripe.com/customer-management) for information about other settings you can configure.\n\n[](#create-portal-session)\n\nDefine an endpoint that [creates the customer portal session](https://docs.stripe.com/api/customer_portal/sessions/create) for your frontend to call. Here `CUSTOMER_ID` refers to the customer ID created by a Checkout Session that you saved while processing the `checkout.session.completed` webhook. You can also set a default redirect link for the portal in the Dashboard.\n\nPass an optional `return_url` value for the page on your site to redirect your customer to after they finish managing their subscription:\n\n`# Set your secret key. Remember to switch to your live secret key in production. # See your keys here: [https://dashboard.stripe.com/apikeys](https://dashboard.stripe.com/apikeys) Stripe.api_key =` \n\n`'sk_test_4eC39HqLyjWDarjtT1zdp7dc'`\n\n`# This is the URL to which users will be redirected after they are done # managing their billing. return_url = '{{DOMAIN_URL}}'  customer_id = '{{CUSTOMER_ID}}'  session = Stripe::BillingPortal::Session.create({   customer: customer_id,   return_url: return_url, })  # Redirect to the URL for the session #   redirect session.url, 303`\n\n[](#send-to-portal)\n\nOn your frontend, add a button to the page at the `success_url` that provides a link to the customer portal:\n\n`<html>   <head>     <title>Manage Billing</title>   </head>   <body>     <form action=\"/customer-portal\" method=\"POST\">       <!-- Note: If using PHP set the action to /customer-portal.php -->       <button type=\"submit\">Manage Billing</button>     </form>   </body> </html>`\n\nAfter exiting the customer portal, the Customer returns to your website at the `return_url`. Continue to [monitor webhooks](https://docs.stripe.com/billing/subscriptions/webhooks) to track the state of the Customer’s subscription.\n\nIf you configure the customer portal to allow actions such as canceling a subscription, see [Integrating the customer portal](https://docs.stripe.com/customer-management/integrate-customer-portal#webhooks) for additional events to monitor.\n\n[](#test)\n\n### Test payment methods![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUse the following table to test different payment methods and scenarios.\n\n| Payment method | Scenario | How to test |\n| --- | --- | --- |\n| BECS Direct Debit | Your customer successfully pays with BECS Direct Debit. | Fill out the form using the account number `900123456` and BSB `000-000`. The confirmed PaymentIntent initially transitions to `processing`, then transitions to the `succeeded` status three minutes later. |\n| BECS Direct Debit | Your customer’s payment fails with an `account_closed` error code. | Fill out the form using the account number `111111113` and BSB `000-000`. |\n| Credit card | The card payment succeeds and does not require authentication. | Fill out the credit card form using the credit card number `4242 4242 4242 4242` with any expiration, CVC, and postal code. |\n| Credit card | The card payment requires [authentication](https://docs.stripe.com/strong-customer-authentication \"Strong Customer Authentication\"). | Fill out the credit card form using the credit card number `4000 0025 0000 3155` with any expiration, CVC, and postal code. |\n| Credit card | The card is declined with a decline code like `insufficient_funds`. | Fill out the credit card form using the credit card number `4000 0000 0000 9995` with any expiration, CVC, and postal code. |\n| SEPA Direct Debit | Your customer successfully pays with SEPA Direct Debit. | Fill out the form using the account number `AT321904300235473204`. The confirmed PaymentIntent initially transitions to processing, then transitions to the succeeded status three minutes later. |\n| SEPA Direct Debit | Your customer’s payment intent status transition from `processing` to `requires_payment_method`. | Fill out the form using the account number `AT861904300235473202`. |\n\n### Monitoring events![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSet up webhooks to listen to subscription change events like upgrades and cancellations. Read the guide to learn more about [subscription webhooks](https://docs.stripe.com/billing/subscriptions/webhooks). You can view events in the [Dashboard](https://dashboard.stripe.com/test/events) or with the [Stripe CLI](https://docs.stripe.com/webhooks#test-webhook).\n\nFor more details about [testing your Billing integration](https://docs.stripe.com/billing/testing), read the guide.\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Offer customers a free trial period](https://docs.stripe.com/billing/subscriptions/trials)\n*   [Apply discounts](https://docs.stripe.com/billing/subscriptions/coupons#using-coupons-in-checkout)\n*   [Manage prorations](https://docs.stripe.com/billing/subscriptions/prorations)\n*   [Integrate entitlements to manage access to your product’s features](https://docs.stripe.com/billing/entitlements)",
    "title": "Build a subscriptions integration | Stripe Documentation",
    "description": "Create and manage subscriptions to accept recurring payments.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/revenue-recovery",
    "markdown": "# Revenue recovery | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about automated recovery features that reduce and recover failed subscription payments.\n\nPrevent lost revenue and reduce churn with Stripe’s revenue recovery features. These automated tools make sure you don’t lose revenue to failed payments or missed trial conversions. None of the features require you to write code, so you can start recovering revenue today.\n\n## Revenue recovery features![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe provides a full tool set to help you recover recurring revenue:\n\n## Recurring revenue recovery optimizations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe recommends including the following recurring revenue recovery optimizations in your integration. As you complete each item, check it off. Your browser’s cache stores the state of each checkbox so you can refer back to this page to see what you’ve completed so far.\n\n*   Set up failed payment retries\n    \n    Retrying failed payments is one of the most effective ways to recover revenue. It requires no manual intervention from you or the customer.\n    \n    You can set up Smart Retries and custom retry schedules in the Stripe Dashboard without writing any code. Smart Retries use data points to find the best time to retry the payment and are more effective than scheduled retries.\n    \n    *   [Automate payment retries](https://docs.stripe.com/billing/revenue-recovery/smart-retries)\n    \n*   Set up automatic customer emails\n    \n    Set up automated customer emails to notify customers of possible issues. You can enable these based on your business’s use cases. Many businesses use failed payment and 3D Secure emails to help customers immediately fix failing payments.\n    \n    *   [Automate customer emails](https://docs.stripe.com/billing/revenue-recovery/customer-emails).\n    \n*   You can set up more automations for custom logic and revenue recovery without writing code, including workflows like:\n    \n    *   [Custom dunning flow for annual subscribers](https://docs.stripe.com/billing/automation-recipes#custom-dunning-flow)\n    *   [Notify your team when high value invoices are overdue](https://docs.stripe.com/billing/automation-recipes#invoice-overdue-notifications)\n    *   [Email a confirmation when a subscription is canceled](https://docs.stripe.com/billing/automation-recipes#subscription-cancellation-confirmation)\n    \n    *   [Automation recipes](https://docs.stripe.com/billing/automation-recipes)\n    *   [Automations](https://docs.stripe.com/billing/automations)",
    "title": "Revenue recovery | Stripe Documentation",
    "description": "Learn about automated recovery features that reduce and recover failed subscription payments.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/invoicing/tax-ids",
    "markdown": "# Account and customer tax IDs with Invoicing\n\n## Learn about storing, validating, and rendering tax ID numbers for Invoicing.\n\nWith Stripe, you can manage tax IDs ​​for both yourself and your customers. Both the account and customer tax IDs display in the header of [invoice](https://docs.stripe.com/api/invoices \"invoices\") and credit note PDFs.\n\n## Account tax IDs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nDisplaying your tax IDs on invoice documents is a common regulatory requirement.\n\nWith Stripe, you can add up to 25 tax IDs to your account. You can see your tax IDs in the header of invoice and credit note PDFs. You can:\n\n*   Select default tax IDs to appear on every invoice and credit note PDF.\n*   Define a list of tax IDs to appear on a specific invoice.\n\n#### Caution\n\nYou can’t add, change, or remove account tax IDs after an invoice is finalized.\n\n## Managing account tax IDs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can add and delete tax IDs using the [invoice settings](https://dashboard.stripe.com/settings/billing/invoice) page in the Dashboard. After you add a tax ID in the Dashboard, you can set it as the default tax ID for every invoice and credit note PDF. Tax IDs are immutable—you can’t change the country and ID after you save the tax ID to your account.\n\nAdditionally, you can add and delete tax IDs with the [create](https://docs.stripe.com/api/tax_ids/create) and [delete](https://docs.stripe.com/api/tax_ids/delete) endpoints.\n\n### Adding and removing IDs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nVisit the [invoice settings](https://dashboard.stripe.com/settings/billing/invoice) page. Click the **Tax** tab and add a new tax ID or remove an existing tax ID:\n\n![Manage tax IDs in the Stripe Dashboard.](https://b.stripecdn.com/docs-statics-srv/assets/manage-add.f10a7efcaf2ce75e42bc986ff3954c0b.png)\n\nManage account tax IDs in the Dashboard\n\n### Setting default tax IDs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nOn the [invoice settings](https://dashboard.stripe.com/settings/billing/invoice) page, click the **Tax** tab and locate the tax ID you want to set as the default. Click the overflow menu (), select **Set as default**, and click **Save**.\n\n![Set default tax ID in the Stripe Dashboard.](https://b.stripecdn.com/docs-statics-srv/assets/manage-default.c36bf6e90db0825b107b5b6d375396cf.png)\n\nSet default account tax ID in the Dashboard\n\n​​After you set a tax ID as the default, you can see a label in the tax information box:\n\n![A default tax ID in the Stripe Dashboard.](https://b.stripecdn.com/docs-statics-srv/assets/manage-default-set.a1c4d9a7605eabbe0491fb64cf031397.png)\n\nA default account tax ID in the Dashboard\n\n## Displaying tax IDs on invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe automatically pulls your [default tax IDs](#default-tax-ids) during invoice finalization.\n\nTo override the default and display multiple tax IDs on invoices, you can set tax IDs in the Dashboard or by using the API. To learn more about taxes and invoices, see [Taxes](https://docs.stripe.com/invoicing/taxes).\n\nYou can set a list of tax IDs in the Dashboard using the Invoice Editor. ​​You can’t modify account tax IDs after an Invoice has been finalized.\n\nIn the Invoice Editor, scroll down to the **Advanced Options** section. Click the checkboxes to toggle which tax IDs ​​to display on that invoice. To remove tax IDs from the invoice, uncheck the boxes.\n\n![Tax ID invoice settings in the Stripe Dashboard](https://b.stripecdn.com/docs-statics-srv/assets/invoice-editor.1e64187379099e87ac0eb00a4a1c0e15.png)\n\nAdvanced Options section in the Invoice Editor\n\n## Customer tax IDs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nCollecting and displaying a customer’s tax ID on an invoice is a common requirement for B2B sales. With Stripe, you can add up to five tax IDs to a customer. You can see a customer’s tax IDs in the header of invoice and credit note PDFs. You can collect a tax ID with Stripe Checkout, or pass us a tax ID directly.\n\n#### Note\n\n## Supported tax ID types ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nCurrently, Stripe supports the following tax ID types in the following regions:\n\n| Country | Enum | Description | Example |\n| --- | --- | --- | --- |\n| Andorra | `ad_nrt` | Andorran NRT number | _A-123456-Z_ |\n| Argentina | `ar_cuit` | Argentinian tax ID number | _12-3456789-01_ |\n| Australia | `au_abn` | Australian Business Number (AU ABN) | _12345678912_ |\n| Australia | `au_arn` | Australian Taxation Office Reference Number | _123456789123_ |\n| Austria | `eu_vat` | European VAT number | _ATU12345678_ |\n| Bahrain | `bh_vat` | Bahraini VAT Number | _123456789012345_ |\n| Belgium | `eu_vat` | European VAT number | _BE0123456789_ |\n| Bolivia | `bo_tin` | Bolivian tax ID | _123456789_ |\n| Brazil | `br_cnpj` | Brazilian CNPJ number | _01.234.456/5432-10_ |\n| Brazil | `br_cpf` | Brazilian CPF number | _123.456.789-87_ |\n| Bulgaria | `bg_uic` | Bulgaria Unified Identification Code | _123456789_ |\n| Bulgaria | `eu_vat` | European VAT number | _BG0123456789_ |\n| Canada | `ca_bn` | Canadian BN | _123456789_ |\n| Canada | `ca_gst_hst` | Canadian GST/HST number | _123456789RT0002_ |\n| Canada | `ca_pst_bc` | Canadian PST number (British Columbia) | _PST-1234-5678_ |\n| Canada | `ca_pst_mb` | Canadian PST number (Manitoba) | _123456-7_ |\n| Canada | `ca_pst_sk` | Canadian PST number (Saskatchewan) | _1234567_ |\n| Canada | `ca_qst` | Canadian QST number (Québec) | _1234567890TQ1234_ |\n| Chile | `cl_tin` | Chilean TIN | _12.345.678-K_ |\n| China | `cn_tin` | Chinese tax ID | _123456789012345678_ |\n| Colombia | `co_nit` | Colombian NIT number | _123.456.789-0_ |\n| Costa Rica | `cr_tin` | Costa Rican tax ID | _1-234-567890_ |\n| Croatia | `eu_vat` | European VAT number | _HR12345678912_ |\n| Cyprus | `eu_vat` | European VAT number | _CY12345678Z_ |\n| Czech Republic | `eu_vat` | European VAT number | _CZ1234567890_ |\n| Denmark | `eu_vat` | European VAT number | _DK12345678_ |\n| Dominican Republic | `do_rcn` | Dominican RCN number | _123-4567890-1_ |\n| Ecuador | `ec_ruc` | Ecuadorian RUC number | _1234567890001_ |\n| Egypt | `eg_tin` | Egyptian Tax Identification Number | _123456789_ |\n| El Salvador | `sv_nit` | El Salvadorian NIT number | _1234-567890-123-4_ |\n| Estonia | `eu_vat` | European VAT number | _EE123456789_ |\n| EU  | `eu_oss_vat` | European One Stop Shop VAT number for non-Union scheme | _EU123456789_ |\n| Finland | `eu_vat` | European VAT number | _FI12345678_ |\n| France | `eu_vat` | European VAT number | _FRAB123456789_ |\n| Georgia | `ge_vat` | Georgian VAT | _123456789_ |\n| Germany | `de_stn` | German Tax Number (Steuernummer) | _1234567890_ |\n| Germany | `eu_vat` | European VAT number | _DE123456789_ |\n| Greece | `eu_vat` | European VAT number | _EL123456789_ |\n| Hong Kong | `hk_br` | Hong Kong BR number | _12345678_ |\n| Hungary | `eu_vat` | European VAT number | _HU12345678_ |\n| Hungary | `hu_tin` | Hungary tax number (adószám) | _12345678-1-23_ |\n| Iceland | `is_vat` | Icelandic VAT | _123456_ |\n| India | `in_gst` | Indian GST number | _12ABCDE3456FGZH_ |\n| Indonesia | `id_npwp` | Indonesian NPWP number | _12.345.678.9-012.345_ |\n| Ireland | `eu_vat` | European VAT number | _IE1234567AB_ |\n| Israel | `il_vat` | Israel VAT | _000012345_ |\n| Italy | `eu_vat` | European VAT number | _IT12345678912_ |\n| Japan | `jp_cn` | Japanese Corporate Number (\\*Hōjin Bangō\\*) | _1234567891234_ |\n| Japan | `jp_rn` | Japanese Registered Foreign Businesses' Registration Number (\\*Tōroku Kokugai Jigyōsha no Tōroku Bangō\\*) | _12345_ |\n| Japan | `jp_trn` | Japanese Tax Registration Number (\\*Tōroku Bangō\\*) | _T1234567891234_ |\n| Kazakhstan | `kz_bin` | Kazakhstani Business Identification Number | _123456789012_ |\n| Kenya | `ke_pin` | Kenya Revenue Authority Personal Identification Number | _P000111111A_ |\n| Latvia | `eu_vat` | European VAT number | _LV12345678912_ |\n| Liechtenstein | `li_uid` | Liechtensteinian UID number | _CHE123456789_ |\n| Lithuania | `eu_vat` | European VAT number | _LT123456789123_ |\n| Luxembourg | `eu_vat` | European VAT number | _LU12345678_ |\n| Malaysia | `my_frp` | Malaysian FRP number | _12345678_ |\n| Malaysia | `my_itn` | Malaysian ITN | _C 1234567890_ |\n| Malaysia | `my_sst` | Malaysian SST number | _A12-3456-78912345_ |\n| Malta | `eu_vat` | European VAT number | _MT12345678_ |\n| Mexico | `mx_rfc` | Mexican RFC number | _ABC010203AB9_ |\n| Netherlands | `eu_vat` | European VAT number | _NL123456789B12_ |\n| New Zealand | `nz_gst` | New Zealand GST number | _123456789_ |\n| Nigeria | `ng_tin` | Nigerian Tax Identification Number | _12345678-0001_ |\n| Norway | `no_vat` | Norwegian VAT number | _123456789MVA_ |\n| Norway | `no_voec` | Norwegian VAT on e-commerce number | _1234567_ |\n| Oman | `om_vat` | Omani VAT Number | _OM1234567890_ |\n| Peru | `pe_ruc` | Peruvian RUC number | _12345678901_ |\n| Philippines | `ph_tin` | Philippines Tax Identification Number | _123456789012_ |\n| Poland | `eu_vat` | European VAT number | _PL1234567890_ |\n| Portugal | `eu_vat` | European VAT number | _PT123456789_ |\n| Romania | `eu_vat` | European VAT number | _RO1234567891_ |\n| Romania | `ro_tin` | Romanian tax ID number | _1234567890123_ |\n| Russia | `ru_inn` | Russian INN | _1234567891_ |\n| Russia | `ru_kpp` | Russian KPP | _123456789_ |\n| Saudi Arabia | `sa_vat` | Saudi Arabia VAT | _123456789012345_ |\n| Serbia | `rs_pib` | Serbian PIB number | _123456789_ |\n| Singapore | `sg_gst` | Singaporean GST | _M12345678X_ |\n| Singapore | `sg_uen` | Singaporean UEN | _123456789F_ |\n| Slovakia | `eu_vat` | European VAT number | _SK1234567891_ |\n| Slovenia | `eu_vat` | European VAT number | _SI12345678_ |\n| Slovenia | `si_tin` | Slovenia tax number (davčna številka) | _12345678_ |\n| South Africa | `za_vat` | South African VAT number | _4123456789_ |\n| South Korea | `kr_brn` | Korean BRN | _123-45-67890_ |\n| Spain | `es_cif` | Spanish NIF number (previously Spanish CIF number) | _A12345678_ |\n| Spain | `eu_vat` | European VAT number | _ESA1234567Z_ |\n| Sweden | `eu_vat` | European VAT number | _SE123456789123_ |\n| Switzerland | `ch_uid` | Switzerland UID number | _CHE-123.456.789 HR_ |\n| Switzerland | `ch_vat` | Switzerland VAT number | _CHE-123.456.789 MWST_ |\n| Taiwan | `tw_vat` | Taiwanese VAT | _12345678_ |\n| Thailand | `th_vat` | Thai VAT | _1234567891234_ |\n| Turkey | `tr_tin` | Turkish Tax Identification Number | _0123456789_ |\n| Ukraine | `ua_vat` | Ukrainian VAT | _123456789_ |\n| United Arab Emirates | `ae_trn` | United Arab Emirates TRN | _123456789012345_ |\n| United Kingdom | `eu_vat` | Northern Ireland VAT number | _XI123456789_ |\n| United Kingdom | `gb_vat` | United Kingdom VAT number | _GB123456789_ |\n| United States | `us_ein` | United States EIN | _12-3456789_ |\n| Uruguay | `uy_ruc` | Uruguayan RUC number | _123456789012_ |\n| Venezuela | `ve_rif` | Venezuelan RIF number | _A-12345678-9_ |\n| Vietnam | `vn_tin` | Vietnamese tax ID number | _1234567890_ |\n\n## Validation ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIt’s your responsibility to make sure customer information is accurate (including their tax ID). Stripe displays a customer tax ID on an invoice, whether or not it is valid.\n\nStripe checks the format of the tax ID against the expected format, and asynchronously validates the tax ID against the external tax authority system for the tax ID types below.\n\n### Australian Business Numbers (ABN)![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe automatically validates all Australian Business Numbers (ABNs) with the [Australian Business Register (ABR)](https://abr.gov.au/).\n\n### European Value-Added-Tax (EU VAT) Numbers![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe automatically validates all European Value-Added-Tax (EU VAT) numbers with the [European Commission’s VAT Information Exchange System (VIES)](http://ec.europa.eu/taxation_customs/vies/). This process only validates whether or not the tax ID is valid—you still need to verify the customer’s name and address to make sure it matches the registration information.\n\nVIES validation usually takes only a few seconds,but may take longer, depending on the availability of the external tax authority system. Stripe will automatically handle VIES downtime and attempt retries for you.\n\n### United Kingdom Value-Added-Tax (GB VAT) Numbers![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe automatically validates all UK Value-Added-Tax (GB VAT) numbers with the [United Kingdom’s Revenue & Customs (HMRC)](https://www.gov.uk/). This process only verifies that the tax ID is valid—you still need to verify the customer’s name and address to make sure it matches the registration information.\n\nHMRC validation usually takes only a few seconds, but may take longer, depending on the availability. Stripe automatically handles HMRC downtime and attempts retries for you.\n\n### Validation webhooks and Dashboard display![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBecause this validation process happens asynchronously, the customer.tax\\_id.updated webhook notifies you of validation updates.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/ids_valid_vat_registered.8c8f0b149549b3f3dd82b62f4e97ebfa.png)\n\nThe Dashboard displays the results of the validation while displaying the customer details, including those returned from the government databases and the registered name and address.\n\nWhen automatic validation isn’t available, you need to manually verify these IDs.\n\n## Managing customer tax IDs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can manage tax IDs in the Customers page in the Dashboard, in the customer portal, or with the API.\n\nTo add a customer tax ID in the Dashboard, navigate to the Customers page, and click **Update details** in the top of the **Details** panel. The Update customer invoice details modal opens, with the tax ID section visible.\n\nClicking the **Add tax ID** link adds a row to the tax ID list, where you can select the ID type and value. Removing the row removes a tax ID from a customer.\n\n![A customer's tax IDs in the Stripe Dashboard](https://b.stripecdn.com/docs-statics-srv/assets/ids_update_customer.4a68e5df884bdad0b0ce78264850b107.png)\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Activating Stripe Tax](https://docs.stripe.com/tax/set-up)\n*   [Checkout and tax IDs](https://docs.stripe.com/tax/checkout/tax-ids)\n*   [Understanding zero tax amounts](https://docs.stripe.com/tax/zero-tax)\n*   [Connected account tax IDs on invoices](https://docs.stripe.com/connect/invoices#account-tax-ids)",
    "title": "Account and customer tax IDs with Invoicing | Stripe Documentation",
    "description": "Learn about storing, validating, and rendering tax ID numbers for Invoicing.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/get-started",
    "markdown": "# Recognize revenue with Stripe | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to use Stripe for your revenue recognition.\n\nYou can import your transaction data, set up rules to automate your revenue recognition, generate and customize revenue reports, and test your transaction model before going live.\n\nAll Stripe Revenue Recognition features are available from the [Dashboard](https://dashboard.stripe.com/revenue-recognition).\n\n#### Try for free\n\nStripe offers a 30-day free trial for Revenue Recognition if you want to preview it. When you [sign up](https://dashboard.stripe.com/), turn on [test mode](https://docs.stripe.com/test-mode \"test mode\") to explore all the features for free.\n\n#### Beta\n\nIf you’re a Connect platform with destination charges, and want to use Stripe Revenue Recognition, [create a ticket](https://support.stripe.com/contact/email?topic=financial_reports) on our support page to join our destination charges beta.\n\n[](#generate-reports)\n\nBy default, the Dashboard displays all [Revenue Recognition reports and charts](https://docs.stripe.com/revenue-recognition/reports#dashboard) by accounting periods (which is defined as the start and end dates of a given month). It takes between 24 - 48 hours for reports to generate and become available for download.\n\n#### Note\n\nIf you’d like to recognize revenue based on custom accounting periods such as the 4-5-4 retail calendar, please [create a ticket](https://support.stripe.com/contact/email?topic=financial_reports) on our support page to join our beta.\n\nBelow is a short summary of the reports and charts you can view, download, or both.\n\n| Reports and charts | Description |\n| --- | --- |\n| **Revenue overview** | High-level bar graphs that show your revenue activity (that is, your net recognized revenue and your ending balance per month) over time. |\n| **Monthly summary** | Details of the accounting activities for the last month or a specified previous month. See [Monthly summary](https://docs.stripe.com/revenue-recognition/reports/monthly-summary) for more information. |\n| **Revenue waterfall** | Displays expected recognizable revenue over time. This is also referred to as a revenue schedule chart. See [Revenue waterfall](https://docs.stripe.com/revenue-recognition/reports/waterfall) for more information. |\n| **Income statement** | Details of the revenue and contra revenue by month. |\n| **Balance sheet** | Details of the balance sheet account by month. |\n| **Debits and credits** | Details of the monthly debit-credit journal entries for accounts with activity. |\n| **Accounts receivable aging** | Details of the monthly and MTD outstanding invoice amounts that affect the accounts receivable ledger account. |\n| **Corrections** | Details of the monthly debit-credit correction journal entries for accounts. |\n\nSometimes you’ll see mismatches between your accounting reports after you import the data and set up Stripe.\n\n[](#test)\n\nUse test mode in the Dashboard to generate test revenue reports based on your transactions.\n\nBefore going live, you can test the transaction model without your test transactions. Create rules to exclude transactions from specific customers, products, invoices, or payments.\n\nFor example, you can exclude all revenues produced by a test customer, named `test@example.com`. [Create a rule](https://dashboard.stripe.com/revenue-recognition/rules/create) that applies to this customer and choose **Exclude revenue 100%** as the revenue treatment.\n\n## Other considerations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou might need to handle other considerations like [tax revenue](#third-party-tax), [passthrough fees](#passthrough-fees), [amortization granularity](https://docs.stripe.com/revenue-recognition/revenue-controls#amortization-granularity), and [catch-up revenue](https://docs.stripe.com/revenue-recognition/revenue-controls#catch-up-revenue). You can further set up Revenue Recognition so Stripe can handle it for you.\n\n### Recognize tax revenue from third-party solutions ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can set up rules for Revenue Recognition to automatically calculate your tax revenue if you’re not using Stripe Tax.\n\nFirst, set the tax amount to the [tax](https://docs.stripe.com/billing/taxes/tax-rates) parameter of an invoice or an invoice line item. Then, set up a rule to recognize the amount as tax. You can track the revenue from tax in the reports under **Tax liability**.\n\nAs an example, say you’re using Avalara AvaTax to calculate sales tax for your products. You want to treat the invoice line item for `AvaTax` as tax so you create this rule:\n\n| Name | Apply to | Treatment |\n| --- | --- | --- |\n| `Recognize tax revenue from AvaTax` | **Invoices**<br><br>*   **Line item description contains all of the following:** `AvaTax` | **Treat as tax**<br><br>*   **Allocation** `100%` |\n\n### Calculate passthrough fees ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can set up [rules](https://docs.stripe.com/revenue-recognition/rules) so Stripe can automatically calculate the passthrough fees and, separately, your revenue on [invoice line items](https://docs.stripe.com/api/invoices/line_item) or a portion of an invoice line item.\n\nFor example, say you have an invoice line item `Service A` that costs 100 USD. You want to recognize 10 USD as passthrough fees and recognize 90 USD as revenue, so you [create this rule](https://dashboard.stripe.com/revenue-recognition/rules/create):\n\n| **Name** | **Apply to** | **Treatment** |\n| --- | --- | --- |\n| `Service A includes passthrough fees` | **Invoices**<br><br>*   **Line item description contains all of the following:** `Service A` | **Defer upon event & amortize over line item service period**<br><br>*   **Allocation** `90%`<br>*   **Defer from finalized time and amortize over line item service period**<br><br>**Treatment as passthrough fees**<br><br>*   **Allocation** `10%` |\n\n### Adjust Revenue Recognition controls ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhile Stripe Revenue Recognition is designed to work out-of-the-box for many business types, we understand that each business might have unique needs. We offer advanced configurations on your revenue recognition reporting through our [Controls](https://docs.stripe.com/revenue-recognition/revenue-controls) page, where you can easily adjust for settings like revenue amortization granularity and catch-up revenue treatment.",
    "title": "Recognize revenue with Stripe | Stripe Documentation",
    "description": "Learn how to use Stripe for your revenue recognition.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/reports",
    "markdown": "# Basic financial reports | Stripe DocumentationThe Stripe Docs logo\n\n## Get the data you need to complete your critical accounting and reconciliation workflows.\n\n## Free reports![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe’s financial reports help you understand and reconcile the activity in your account. You can view summary reports in the Dashboard or download itemized transaction data as a CSV file.\n\nTo get advanced business insights and handle complex reconciliation tasks, use Stripe’s reporting products.\n\n## Looking for something else?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLearn how to configure, customize, or programmatically automate reports. You can also sync your Stripe data with other accounting tools you already use.\n\n### Configuring reports![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   Learn about [filters and other settings](https://docs.stripe.com/reports/options) for finding the right data.\n*   Understand the different [categories and types](https://docs.stripe.com/reports/reporting-categories) of transactions you might encounter.\n*   Retrieve reports programmatically [with the API](https://docs.stripe.com/reports/api).\n*   Create custom reports using SQL with [Stripe Sigma](https://docs.stripe.com/stripe-data).\n\n### Connect an accounting tool![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAutomatically import your transactions into accounting software. Stripe supports integrations with [NetSuite](https://docs.stripe.com/connectors/netsuite/overview), [Xero](https://stripe.com/partners/xero), [Quickbooks Desktop](https://docs.stripe.com/reports/quickbooks), and [more partners](https://stripe.com/partners/apps-and-extensions/accounting).\n\nYou can also use [Accounting Stripe Apps](https://marketplace.stripe.com/categories/accounting) to automate your bookkeeping, keep your financial data updated, and eliminate the need for manual data entry.",
    "title": "Basic financial reports | Stripe Documentation",
    "description": "Get the data you need to complete your critical accounting and reconciliation workflows.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/subscriptions/view-metrics",
    "markdown": "# Subscription metrics | Stripe DocumentationThe Stripe Docs logo\n\n## Use the Stripe Dashboard to view metrics about your recurring revenue.\n\nUse Stripe’s analytics and reports to keep track of subscription metrics, and to understand and manage your revenue. We provide the following subscription metrics:\n\n| Metric | Description |\n| --- | --- |\n| Monthly Recurring Revenue (MRR) | Tracks normalized monthly revenue from all active and past-due subscriptions. Read more about MRR on [Stripe Support](https://support.stripe.com/questions/calculating-monthly-recurring-revenue-(mrr)-in-billing). |\n| Active subscribers | The total count of your active and past-due subscribers (not including trials or subscribers on free plans). We count a subscriber with multiple subscriptions as one subscriber. We also provide a breakdown of active subscriber growth by the sub-components of new, reactivated, and churned subscribers. Read more about active subscribers on [Stripe Support](https://support.stripe.com/questions/understanding-active-subscribers). |\n| New subscribers | The total number of new, non-trial, paid subscribers. We don’t include free plans or existing subscribers who add additional subscriptions. Read more about new subscribers on [Stripe Support](https://support.stripe.com/questions/understanding-the-new-subscribers-metric). |\n| New trials | The total number of new subscriptions that start with a free trial period. Read more about new trials on [Stripe Support](https://support.stripe.com/questions/impact-of-subscription-trial-periods-on-monthly-recurring-revenue-%28mrr%29-in-billing). |\n| Trial conversion rate | Measures your success at converting trials to active subscriptions during a rolling 30-day period. Your trial conversion rate is the percentage that’s converted to an active subscription with a paid invoice during the last 30 days of your trials. Read more about trial conversion rates on [Stripe Support](https://support.stripe.com/questions/calculating-trial-conversion-rate-in-billing). |\n| Subscriber churn rate | Measures the portion of your subscribers who left during a rolling 30-day period. Your churn rate is the percentage of subscribers that churn during the 30-day period, including all active subscribers at the start of the period and any new subscribers in the period. Read more about subscriber churn rates on [Stripe Support](https://support.stripe.com/questions/calculating-subscriber-churn-rate-in-billing#:~:text=Billing-,Subscriber%20Churn%20Rate,-The%20churn%20rate). |\n| Churned revenue | The total MRR lost during a period due to downgrades or churn. We count voluntary and involuntary churn due to lack of payment. Read more about churned revenue on [Stripe Support](https://support.stripe.com/questions/calculating-subscriber-churn-rate-in-billing#:~:text=numerator%20and%20denominator.-,Churned%20Revenue,-The%20churned%20revenue). |\n| Retention by cohort | Shows the subscriber retention rate for each month following the month that the customer first subscribed, called “the cohort.” If a customer unsubscribes, then resubscribes, they remain part of their original cohort. Read more about retention by cohort on [Stripe Support](https://support.stripe.com/questions/subscriber-cohorts-and-cohort-retention-in-billing). |\n| Average revenue per user | Your average MRR per user. We calculate this by dividing your MRR by the total number of active subscribers. Read more about the average revenue per user on [Stripe Support](https://support.stripe.com/questions/calculating-average-revenue-per-user-in-billing). |\n| Subscriber lifetime value | An estimate of the total revenue you can expect to collect from your average subscriber before they churn. Read more about subscriber lifetime value on [Stripe Support](https://support.stripe.com/questions/calculating-subscriber-lifetime-value-in-billing). |\n\nHover over the metric charts on the [Billing page](https://dashboard.stripe.com/billing) for more details. Use this information to understand the performance of your past and expected revenue streams.\n\n## Metrics functionalities![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe features below allow you to customize how you measure recurring revenue and churn.\n\n### MRR chart details Beta![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo examine what’s driving increases or decreases in MRR on a specific date, click the MRR chart and see the data broken down into a list of daily changes by customer. See how to calculate MRR in Billing [on Stripe Support](https://support.stripe.com/questions/calculating-monthly-recurring-revenue-(mrr)-in-billing).\n\n### Metrics export ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo build financial models and begin downstream reporting, download your billing metrics data in CSV format. The export includes the following reports:\n\n| Report | Description |\n| --- | --- |\n| MRR per subscriber per month | Adds the monthly-normalized amounts of all active subscriptions |\n| Subscription metrics summary | Includes MRR roll-forward, active subscriber roll-forward, churn, and lifetime value |\n| Customer MRR changes | Includes a log of every MRR change for each customer, including new subscribers, upgrades, downgrades, reactivations, and churn. |\n\n### Metrics calculation ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nConfigure how we calculate your MRR and churn metrics.\n\nClick **Configure** to specify whether to exclude recurring discounts, one-time discounts, or both from the numbers. You can also specify whether to consider canceled subscriptions as churn immediately or at the end of the billing period.\n\nChanges take effect 24-48 hours after you save the configuration.",
    "title": "Subscription metrics | Stripe Documentation",
    "description": "Use the Stripe Dashboard to view metrics about your recurring revenue.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/reconciliation",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Reconciliation\n\n## Understand your money movement and automate your payment reconciliation process with Stripe.\n\nUse Stripe reconciliation to accurately capture your revenue from the activity on your Stripe account and reconcile it with your system of record and bank statement.\n\n![Overview diagram of reconciliation process on Stripe](https://b.stripecdn.com/docs-statics-srv/assets/reconciliation-overview.1200b3825ccb04aeac7508df80d9c180.png)\n\nHow reconciliation works in Stripe.\n\nStripe reconciliation offers you the capability to perform two types of reconciliations:\n\nUsing Stripe reconciliation, you can:\n\n*   Track your cash on a daily basis.\n*   Identify gaps in fund flows or data discrepancies to fix leakages faster.\n*   Gain visibility into the complete lifecycle of each transaction.\n*   Implement strong financial controls to protect your business.\n*   Set up scalable processes for your financial operations that can grow with your business.\n\nYou can also use [Accounting Stripe Apps](https://marketplace.stripe.com/categories/accounting) to automate your bookkeeping, keep your financial data updated, and eliminate the need for manual data entry.\n\n#### Note\n\nStripe’s reconciliation features aren’t a substitute for professional services or professional advice.",
    "title": "Reconciliation | Stripe Documentation",
    "description": "Understand your money movement and automate your payment reconciliation process with Stripe.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-data/import-external-data",
    "markdown": "# Import data into Stripe | Stripe DocumentationThe Stripe Docs logo\n\n## Automatically import and map external data from other sources with no-code connectors.\n\nImport external data into Stripe with Data Management. Use the Dashboard to automatically upload data from other sources into Stripe.\n\nWith Data Management, you can:\n\n*   Connect your Apple App Store data to import subscriber data. This data can enrich your Revenue Recognition reports.\n*   View the processing status of your Import Sets.\n*   Get detailed information on file processing after completion.\n*   Download and resolve Import Set errors.\n*   Beta Create data templates to automatically map your CSV files to common objects.\n\n## Currently supported scenarios![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWe support the following data import scenarios.\n\n*   Apple App Store subscriber report to power Revenue Recognition [reports](https://dashboard.stripe.com/revenue-recognition)\n*   Google Play report to power Revenue Recognition [reports](https://dashboard.stripe.com/revenue-recognition)\n*   Beta CSV transactions to [Stripe Tax](https://docs.stripe.com/billing/taxes) to monitor your obligations\n*   BetaJSON import of bulk metered events to power [usage based billing](https://docs.stripe.com/billing/subscriptions/usage-based)\n*   Beta Data Management API or set up of recurring imports with a data connector, like Amazon S3\n*   Beta Manual upload of a file as a one-time import",
    "title": "Import data into Stripe | Stripe Documentation",
    "description": "Import and map external data into Stripe with the no-code data management tool. Upload CSV files through the API or the Dashboard.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/how-tax-works",
    "markdown": "# How Tax works | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how Stripe Tax helps you automate tax compliance.\n\nTo be tax compliant, you need to:\n\n1.  Understand which locations require you to collect tax\n2.  Register for tax in those locations\n3.  Calculate and collect tax\n4.  Report, file, and remit the tax you collected\n\n## Introduction to indirect taxes with Stripe Tax![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEach country handles tax on sold products and services differently, often calling it by a different name. In the US, businesses deal with sales tax. Throughout Europe, it’s called value-added tax ([VAT](https://en.wikipedia.org/wiki/Value-added_tax \"VAT\")). Canada and most countries in the Asia Pacific region refer to it as goods and services tax ([GST](https://en.wikipedia.org/wiki/Value-added_tax \"GST\")).\n\nTaxability and tax rates vary by location and category of products you’re selling. For example, children’s footwear is zero rated in Ireland, but adult footwear isn’t. Digital services are usually taxed at the standard rate in most EU countries. However, e-books are subject to the reduced rate.\n\n[Stripe Tax](https://stripe.com/tax) uses your business address, tax registrations, product tax codes, customers’ locations, and customer status to determine the correct tax rates for products you sell, in all supported locations. Read more about [tax codes](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior) and [how we calculate](https://docs.stripe.com/tax/calculating) for different jurisdictions.\n\n## Monitor your obligations and register![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou need to identify the locations where you have sales tax, VAT, or GST obligations and need to register to collect tax. If you sell into multiple locations, you need to be familiar with the [tax laws in those locations](https://docs.stripe.com/tax/supported-countries) because the place where your transaction takes place determines where you’re required to collect tax. This can be the seller’s country, the buyer’s country, or another location.\n\nAs your business grows and you sell to more locations, you need to register to collect tax in more locations. Stripe Tax tracks your Stripe transactions and helps you monitor your tax obligations. [Read more about tax obligation monitoring](https://docs.stripe.com/tax/monitoring).\n\nYou must register with the tax authority in a location to collect taxes there. In some countries and states you have to register before your first transaction, while others have a registration threshold (such as the number of sales or sales volume). Take a look at the [locations Stripe Tax supports](https://docs.stripe.com/tax/supported-countries) along with the different tax thresholds that apply and links to the tax authority websites.\n\nStripe Tax tracks your registrations and uses them to calculate and collect taxes. [Read more about adding your registrations to Stripe](https://docs.stripe.com/tax/registering).\n\nAfter you have registered to collect tax with a tax authority add your registrations to Stripe in the [Registrations tab](https://dashboard.stripe.com/tax/registrations) in the **Dashboard**. This turns on tax calculation and collection in Stripe for your transactions.\n\n## Calculate and collect![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAfter you [set up Stripe Tax in the Dashboard](https://docs.stripe.com/tax/set-up), Stripe automatically calculates and collects taxes on your transactions. Alternatively you can use [Stripe Tax API](https://docs.stripe.com/tax/custom) to calculate taxes on your own custom payment flows. In either case, to determine which taxes to collect, you or your customers have to provide customer location information. [Read more about how Stripe calculates tax](https://docs.stripe.com/tax/calculating).\n\nIf you sell to other businesses, your transactions might be subject to reverse charges. This means that the tax liability shifts to the customer and we don’t charge tax on the transaction. Stripe Tax uses customer tax identification numbers to determine whether a transaction is B2B. Adding a tax identification number to the customer might affect the tax calculation result. Stripe Tax doesn’t validate whether the provided tax identification number exists or is valid. [Read about supported tax ID formats](https://docs.stripe.com/tax/invoicing/tax-ids#supported-tax-ids).\n\nSome individuals or entities might be tax exempt. For example, some US states have a reseller exemption. You can set an exempt status on customers to reflect this. [Read more about reverse charges and exempt customers](https://docs.stripe.com/tax/zero-tax).\n\n## Report, file, and remit![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’re collecting taxes, you must report, file, and remit (transfer) the taxes collected in every location that you’re registered in. Make sure you understand and comply with obligations of each state or country and consult your tax advisor if you need help. Stripe Tax supports exporting your transactions in an itemized format to aid with tax reporting. [Read more about Stripe Tax reports](https://docs.stripe.com/tax/reports).\n\nStripe Tax doesn’t currently file or remit taxes on your behalf. Submitting tax returns is key to your tax compliance. For more information, browse the [Tax Stripe Apps](https://marketplace.stripe.com/categories/tax) on the App Marketplace.",
    "title": "How Tax works | Stripe Documentation",
    "description": "Learn how Stripe Tax helps you automate tax compliance.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-data/query-transactions",
    "markdown": "# Query transactional data | Stripe DocumentationThe Stripe Docs logo\n\n## Create custom reports for charges, refunds, and more.\n\nUse the data in the tables within the [schema](https://docs.stripe.com/stripe-data/write-queries) for reporting on your account’s balance activity. The tables in the **Payment Tables** sections represent funds that flow between your customers and your Stripe account, such as charges or refunds. The **Transfer Tables** section has information about transfers of your Stripe account balance to your bank account ([payouts](https://docs.stripe.com/payouts \"payout\")).\n\nUse the `balance_transactions` table as a starting point for accounting purposes. Unlike using separate tables (such as `charges` or `refunds`), it provides a ledger-style record of every [type](https://docs.stripe.com/api#balance_transaction_object-type) of transaction that comes into or flows out of your Stripe account balance. Use balance transactions to generate frequently used reports and to simplify how you report on financial activity. Some common types of balance transactions include:\n\n*   `charges`\n*   `refunds`\n*   `transfers`\n*   `payouts`\n*   `adjustments`\n*   `application_fees`\n\nEach balance transaction row represents an individual [balance\\_transaction](https://docs.stripe.com/api#balance_transaction_object) object that doesn’t change after it’s created. For example, creating a charge also creates a corresponding balance transaction of type `charge`. Refunding this charge creates a separate balance transaction of type `refund`—but it doesn’t modify the original balance transaction. Similarly, receiving a payout in your bank account (represented as a transfer) creates a balance transaction.\n\nThe following example query uses this table to retrieve some information about the five most recent balance transactions.\n\n`select   date_format(created, '%m-%d-%Y') as day,   id,   amount,   currency,   source_id,   type from balance_transactions order by day desc limit 5`\n\n| day | id  | amount | currency | source\\_id | type |\n| --- | --- | --- | --- | --- | --- |\n| 7/12/2024 | txn\\_XnvAVDWrR2QnStI | \\-1,000 | usd | re\\_Qp35p62AXVIOwmD | refund |\n| 7/12/2024 | txn\\_zi9QnHjpfUKmz3w | 1,000 | usd | ch\\_l3G5dklXZkmDHWp | charge |\n| 7/12/2024 | txn\\_RgEj0s5JcfXxEh2 | 1,000 | usd | ch\\_4kr7ywLj1OZX8ue | charge |\n| 7/12/2024 | txn\\_q55SvvsrIjrUfOQ | 1,000 | eur | ch\\_kpqzJrWkXfduJi1 | charge |\n| 7/12/2024 | txn\\_azrVlE2utLEYRNT | \\-1,000 | usd | re\\_43ERewX4eHydOB6 | refund |\n\nYou can calculate the most common financial summaries by joining the `balance_transactions` table with other tables containing the appropriate information. Some of our query templates (such as the [daily balance](https://dashboard.stripe.com/sigma/queries/templates/Daily%20balance) and [monthly summary and balance](https://dashboard.stripe.com/sigma/queries/templates/Monthly%20summary%20and%20balance)) work by joining this table to others.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/balance-transactions.f272cb17ff065ae1c02b320a235f0b3e.png)\n\n## Balance transaction fee details![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe `balance_transaction_fee_details` table provides fee information about each individual balance transaction. Joining this table to `balance_transactions` in the manner below allows you to return fee information for each balance transaction.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/balance_transaction_fee_details.e8c6bba21d6e26ee77157a3fd6b797be.png)\n\nThe following query joins the `balance_transactions` and `balance_transaction_fee_details` tables together. Each balance transaction item returned includes the amount, fee, type of fee applied, and a description of the fee.\n\n`select   date_format(date_trunc('day', balance_transactions.created), '%m-%d-%Y') as day,   balance_transactions.id,   balance_transactions.amount,   balance_transactions.fee,   balance_transaction_fee_details.type from balance_transactions inner join balance_transaction_fee_details   on balance_transaction_fee_details.balance_transaction_id=balance_transactions.id order by day desc limit 5`\n\n| day | id  | amount | fee | type |\n| --- | --- | --- | --- | --- |\n| 7/12/2024 | txn\\_RsLHklWruNENpuf | 1,000 | 59  | stripe\\_fee |\n| 7/12/2024 | txn\\_2ZQ36EJgH2wjpAC | 1,000 | 59  | stripe\\_fee |\n| 7/12/2024 | txn\\_RgYVZ6LhEdGLtye | 1,000 | 59  | stripe\\_fee |\n| 7/12/2024 | txn\\_Iek8kFG1GASjstV | 1,000 | 59  | stripe\\_fee |\n| 7/12/2024 | txn\\_YhDTzASh2BeqXYJ | 1,000 | 59  | stripe\\_fee |\n\n## Charges![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe `charges` table contains data about [Charge](https://docs.stripe.com/api#charge_object) objects. Use this table for queries that focus on charge-specific information rather than for accounting or reconciliatory purposes. It also supplements accounting reports with additional customer data. For example, the [payment card breakdown](https://dashboard.stripe.com/sigma/queries/templates/Payment%20card%20breakdown) template query uses the `charges` table to report on the different types of cards your customers have used.\n\nYou can join the `charges` table to a number of others to retrieve more information with your queries.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/charges.6bba866fbd70648f58b7af6bcf425c3e.png)\n\nThe following example uses the `charges` table to report on failed charges, returning the card brand and a failure code and message.\n\n`select   date_format(date_trunc('day', created), '%m-%d-%Y') as day,   id,   card_brand,   failure_code,   failure_message from charges   where status = 'failed' order by day desc limit 5`\n\n| day | id  | card\\_brand | failure\\_code | failure\\_message |\n| --- | --- | --- | --- | --- |\n| 7/12/2024 | ch\\_6PjSKvH2QwesIBy | Visa | card\\_declined | Your card was declined. |\n| 7/12/2024 | ch\\_zu2dA2JHrUKxONA | MasterCard | card\\_declined | Your card doesn’t support this type of purchase. |\n| 7/12/2024 | ch\\_kjwCZjq6RQdPnyC | Visa | card\\_declined | Your card has insufficient funds. |\n| 7/12/2024 | ch\\_t2dBHvlaK3n4B6f | Visa | card\\_declined | Your card was declined. |\n| 7/12/2024 | ch\\_f7ANz3bkUA7uZl3 | MasterCard | card\\_declined | Your card was declined. |\n\n## Customers![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe `customers` table contains data about [Customer](https://docs.stripe.com/api#customers) objects (this table isn’t part of the **Payment Tables** group). Use it if you’re creating charges using customers (for example, with saved payment information). It’s also useful if you’re using [subscriptions](https://docs.stripe.com/stripe-data/query-billing-data).\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/customers.44a1f795dc4ca7d4df666617f45855e9.png)\n\nThe following example retrieves a list of failed charges, with the ID and email address for each customer.\n\n`select   date_format(date_trunc('day', charges.created), '%m-%d-%Y') as day,   customers.id,   customers.email,   charges.id from charges inner join customers on customers.id=charges.customer_id where charges.status = 'failed' order by day desc limit 5`\n\n## Refunds![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCharges and refunds are separate objects within the API. Refunding a charge creates a [Refund](https://docs.stripe.com/api#refund_object). This data is available in the `refunds` table and provides in-depth information about completed refunds. Similar to reporting on charges, a best practice is to start with information about balance transactions. If necessary, you can then gather additional details using the `refunds` table.\n\nYou can join the `refunds` table to the `balance_transactions` and `charges` tables to further explore refund data.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/refunds.aebf78debf4de6e9ee96a477b23fc198.png)\n\nThe following example joins the `balance_transactions` and `refunds` tables together using the `refunds.balance_transaction_id` and `balance_transactions.id` columns. Each balance transaction item returned is a refund, displaying the charge ID and amount. Only balance transactions created after a certain date are returned.\n\n`select   date_format(date_trunc('day', balance_transactions.created), '%m-%d-%Y') as day,   balance_transactions.source_id,   refunds.charge_id,   balance_transactions.amount from balance_transactions inner join refunds on refunds.balance_transaction_id=balance_transactions.id   where balance_transactions.type = 'refund' order by day desc limit 5`\n\n| day | source\\_id | charge\\_id | amount |\n| --- | --- | --- | --- |\n| 7/12/2024 | re\\_ZItnbkbAbPnFoR5 | ch\\_QQoF9jEW8sZnKvB | \\-1,000 |\n| 7/12/2024 | re\\_4zxBnGhoA3h61JP | ch\\_5yM4gQwYkx0VitC | \\-1,000 |\n| 7/12/2024 | re\\_63Yh5Mfykncib40 | ch\\_CW8CXxQSozjwrgU | \\-1,000 |\n| 7/12/2024 | re\\_6tju7zFExsg7zWP | ch\\_1RXJnWy6F260yyP | \\-1,000 |\n| 7/12/2024 | re\\_mpAjn88mveVg3wk | ch\\_BLogTJNRPHb17kO | \\-1,000 |\n\n## Partial capture refunds![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUsing [auth and capture](https://docs.stripe.com/charges/placing-a-hold) and capturing only some of the authorized amount creates both a charge and a refund. An authorized charge creates a `charge` and an associated balance transaction for the full amount. After a partial capture is complete, the uncaptured amount is released and a `refund` is created with a `reason` field of `partial_capture` along with an associated balance transaction.\n\nFor example, authorizing a 10 USD charge but only capturing 7 USD creates a `charge` for 10 USD. This also creates a `refund` with the reason `partial_capture` for the remaining 3 USD.\n\nTake this into account if your business is performing auth and capture charges as you’re creating reports to review customer refund rates. Without consideration, auth and capture can misrepresent the number of refunds on your account. Use the refund’s `reason` field to filter out partial capture refunds when retrieving payment information.\n\n`select   balance_transactions.id,   balance_transactions.amount from balance_transactions inner join refunds on refunds.id=balance_transactions.source_id where reason != 'partial_capture' limit 5`\n\n## Transfers and payouts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe `transfers` table contains data about [payouts](https://docs.stripe.com/payouts) made from your Stripe balance to your bank account. You can use this table to reconcile each payout with the specific charges, refunds, and adjustments that comprise it, as long as you’re using [automatic payouts](https://docs.stripe.com/payouts).\n\nFor [Connect](https://docs.stripe.com/connect \"Connect\") platforms, this table also includes data about transfers of funds to connected Stripe accounts.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/transfers.f4311836b58c92e30de891a4d124d402.png)\n\nIf you’re performing payouts manually, the amount in each payout to your bank account is arbitrary. As such, you can’t reconcile it to specific balance transactions and it only reflects the amount you requested to pay out to your bank account.\n\nThe following example joins the `balance_transactions` and `transfers` tables together. It returns a list of charges and refunds, the payout they relate to, and the date that the payout is scheduled to arrive into your bank account.\n\n`select   date_format(date_trunc('day', balance_transactions.created), '%m-%d-%Y') as bt_created,   balance_transactions.source_id,   balance_transactions.type,   balance_transactions.net as net_amount,   balance_transactions.automatic_transfer_id as transfer_id,   date_format(date_trunc('day', transfers.date), '%m-%d-%Y') as transfer_date from balance_transactions inner join transfers on balance_transactions.automatic_transfer_id=transfers.id where balance_transactions.type = 'charge' and balance_transactions.type != 'refund' order by bt_created desc limit 5`\n\n| day | source\\_id | type | net\\_amount | transfer\\_id | transfer\\_date |\n| --- | --- | --- | --- | --- | --- |\n| 05-22-2017 | ch\\_fN6oUMKfDgNHX7P | charge | 941 | po\\_dSeTyPQnRgcBZHQ | 05-24-2017 |\n| 05-22-2017 | ch\\_RcQm8eeG0SROW9x | charge | 941 | po\\_fzuaNNI3DvzQK8Y | 05-24-2017 |\n| 05-21-2017 | ch\\_UMY8jGIuU2j9TPH | charge | 941 | po\\_ljZpwsDlaPsRcAB | 05-23-2017 |\n| 05-21-2017 | ch\\_ylbIkpINiBu7YkW | charge | 941 | po\\_IWEzsIfWulej46B | 05-23-2017 |\n| 05-21-2017 | ch\\_YTOD4LxXoPj1KXA | charge | 941 | po\\_6KXV31k0fti2bdW | 05-23-2017 |\n\n#### Caution\n\nPayouts before 04-06-2017 have a TRANSFER\\_ID with a `tr_` prefix.\n\n## Transfer reversals![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can reverse a manually created payout (or transfer to a connected Stripe account) if it hasn’t been paid out yet by using funds returned to the available balance in your account. These are represented as [Transfer\\_reversal](https://docs.stripe.com/api#transfer_reversal_object) objects and reside in the `transfer_reversals` table.\n\nTransfer reversals only apply to payouts and transfers that have been created manually—you can’t reverse automatic payouts.",
    "title": "Query transactional data | Stripe Documentation",
    "description": "Create custom reports for charges, refunds, and more.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/set-up",
    "markdown": "# Set up Stripe Tax | Stripe DocumentationThe Stripe Docs logo\n\n## Enable Stripe Tax to automatically calculate and collect tax.\n\n#### Note\n\nIf you’re a platform that wants to set up Stripe Tax for your connected accounts that are responsible for collecting, filing, and reporting taxes, see [Tax for software platforms](https://docs.stripe.com/tax/tax-for-platforms).\n\nTo set up Stripe Tax you need to configure your tax settings within the Dashboard on the [tax settings page](https://dashboard.stripe.com/settings/tax) and, depending on your integration, [add one line of code](#integrate).\n\n1.  [Confirm your origin address](#origin-address). Review and confirm that your details are correct.\n2.  [Select a preset tax code](#preset-tax-code). We use it to apply the correct tax rate.\n3.  [Select whether prices include tax](#default-tax-behavior) to have a tax behavior on every price for products.\n4.  [Add tax registrations](#add-registrations). Add an active tax registration when you’ve exceeded a tax threshold.\n5.  [Enable Tax in your Stripe integration or use the Stripe Tax API](#integrate) to start collecting tax.\n\n#### Note\n\n[](#origin-address)\n\nThe origin address is where your business is located or, if you sell physical goods, the address where you’re shipping goods from. We use your Stripe business address here so you only need to review and confirm that your details are correct on the [tax settings page](https://dashboard.stripe.com/settings/tax).\n\n[](#preset-tax-code)\n\n*   **Preset product tax code:** A product tax code is a classification of your product or service for Stripe Tax. We use this to make sure that the correct tax rate is applied to your transactions.\n    \n    You must select the correct product tax code for your product or service. We use this if you don’t explicitly specify a [`tax_code`](https://docs.stripe.com/api/products/create#create_product-tax_code), which maps to tax codes, on your products or in [`product_data`](https://docs.stripe.com/api/prices/create#create_price-product_data) on your transactions. Learn about [products, prices, and tax codes](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior).\n    \n\n*   **Default shipping tax code:** A shipping tax code determines what type of tax treatment to apply when shipping (delivery) fees are added to the price that you charge. In some countries, the tax rate used to calculate the correct amount of tax on your product is the same rate that’s applied to the shipping fees. Some countries have a unique tax rate for shipping fees.\n    \n    If you’re selling digital goods or services, or if you’re located in the EU, you don’t need to select anything. Otherwise, select the most appropriate tax treatment for your business. We use this if you don’t explicitly specify a tax code on a shipping rate.\n    \n\n[](#default-tax-behavior)\n\nTo calculate tax, you need to know the tax behavior of a price. The default tax behavior dictates that all prices for products have a tax behavior, in case it isn’t defined on the price itself.\n\nYou have three options:\n\n*   Exclusive: Tax is excluded from the price and is added on top of the price defined on the product.\n*   Inclusive: Tax is included in the price and already included in the price defined on the product.\n*   Automatic: Use currency to determine if tax is included or excluded. Stripe uses the currency of the price to define whether the tax is added on top of the price (excluded) or included in the price. Tax is excluded in USD and CAD, but included in all other currencies.\n\nLearn about [tax behavior for products and prices](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#tax-behavior).\n\n[](#add-registrations)\n\nWhen your business exceeds a tax threshold (the sales volume or number of transactions where you’re required to start collecting tax), you have to register with the local tax authority before you can add tax to your transactions. If you have existing transactions on Stripe, you’ll see our monitoring tool which helps you understand where you might be registered or need to register.\n\nAdd all your active tax registrations through the [registrations tab in the Dashboard](https://dashboard.stripe.com/tax/thresholds). You can either add a registration manually, or through the [Monitor tax thresholds section](https://dashboard.stripe.com/tax/registrations). You can schedule a registration to begin at a date in the future if you’re planning to register. Stripe Tax only calculates and collects tax on transactions in locations with active registrations.\n\nWe have more information on how to register in different markets. [Check our guide](https://docs.stripe.com/tax/supported-countries).\n\n[](#integrate)\n\nThe final step in setting up Stripe Tax is to enable automatic tax on your Stripe integration. Here’s how:\n\n*   **No-code:** Stripe Tax is enabled automatically on payments made in the Dashboard, but you can disable it in the [tax settings page](https://dashboard.stripe.com/settings/tax). Create an [invoice](https://dashboard.stripe.com/invoices/create), [subscription](https://dashboard.stripe.com/subscriptions/create), [quote](https://dashboard.stripe.com/quotes/create), or [payment link](https://dashboard.stripe.com/payment-links/create) to test the behavior.\n\n![Stripe dashboard with the automatic tax toggle set to true](https://b.stripecdn.com/docs-statics-srv/assets/dashboard_automatic_tax.2338adf39e3a07ad9acd79c036e7c637.png)\n\n*   **Low-code:** If you’re using any low-code products that are currently integrated with Stripe Tax, you need to add `automatic_tax[enabled]=true` to each integration. Read our guides for more information:\n    \n    *   [Invoicing](https://docs.stripe.com/tax/invoicing)\n    *   [Billing](https://docs.stripe.com/tax/subscriptions)\n    *   [Checkout](https://docs.stripe.com/tax/checkout)\n*   **Custom flows:** To use Tax with PaymentIntents, or to collect tax on payments received outside of Stripe, see our integration guide for [Custom Payment Flows](https://docs.stripe.com/tax/custom).\n    \n\nWe also have integration builders for [Checkout](https://docs.stripe.com/checkout/quickstart).",
    "title": "Set up Stripe Tax | Stripe Documentation",
    "description": "Enable Stripe Tax to automatically calculate and collect tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/dashboard",
    "markdown": "# Navigate the Stripe Tax Dashboard\n\n## Learn how to use the Tax Dashboard.\n\nThe Stripe Tax Dashboard consists of the following tabs:\n\n*   **Thresholds**\n*   **Registrations**\n\n#### Note\n\n## Thresholds![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax provides insights about your potential tax registration obligations (called economic nexus in the US). We help you understand which state or country you might have such obligations in, even if your business doesn’t have a physical presence there.\n\nYou can monitor tax obligations in the following categories:\n\n*   `Threshold exceeded`: Where your estimated sales or transactions are over the location’s threshold and your business likely needs to register for tax.\n*   `To monitor`: Where you haven’t exceeded a threshold yet, but you do have buyers located in that market. We’ll provide a percent-to-threshold to help you determine when you might need to register.\n*   `Unattributed revenue`: When Stripe Tax isn’t able to determine the location for a transaction, we group its information under this category. Where possible, we break out globally unattributed revenue and US unattributed revenue.\n\n## Registrations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUse the **Registrations** tab to manage locations and access reports where you have a tax registration. Registrations enable you to calculate and collect tax with Stripe. Locations are either **Active**, **Scheduled**, or **Expired**.\n\n| Category | Definition |\n| --- | --- |\n| Active | A registration that is currently calculating and collecting tax. |\n| Scheduled | A registration that will start calculating tax based on your inputted start date (provided by the local tax authority). |\n| Expired | A registration that’s no longer calculating tax as it has passed the inputted end date (provided by the local tax authority) |\n\n### Add a registration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo start calculating and collecting tax for a location, you must add a registration in Stripe Tax. You need to identify each state, province, and country where you have tax obligations. You need to register with the local tax authority to collect tax for each tax obligation. Registration requirements vary by each location (often referred to as nexus in the US).\n\nTo add a registration in the Dashboard:\n\n1.  Click **+Add registration** and select the country and the applicable state or province.\n2.  Add the date to start tax collection as provided by your local tax authority.\n3.  Save your changes.\n\n### Edit a registration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo maintain your compliance, you might need to edit your registration. Your local tax authority will inform you of any updates to your information or dates.\n\nTo edit a registration:\n\n1.  Click the overflow menu () next to the applicable registration.\n2.  Click **Edit registration**.\n3.  Save your changes.\n\n### End a registration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo stop calculating and collecting tax for a location, you must end the tax obligation’s registration.\n\nTo end a registration:\n\n1.  Click the overflow menu () next to the applicable registration.\n2.  Add the date (provided by your local tax authority) to stop tax collection.\n3.  Save your changes.\n\n### Export transactions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can export your transaction data into either an itemized or summarized report at the line item, imposition, and jurisdiction level for all locations where you have Stripe Tax is enabled.\n\nTo export transaction data:\n\n1.  Click **Export transactions**.\n2.  Select either **Itemized export** or **Summarized export** as needed.\n3.  Click **Download**.\n\nAfter you download the report, click **View Report**.\n\n### US location reports![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUS location reports aggregate your transaction data in the chosen location for a specific filing period based on the state filing requirements. You can create them for any US location where you have Stripe Tax enabled.\n\n### See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Set up Stripe Tax](https://docs.stripe.com/tax/set-up)\n*   [Monitor your tax obligations](https://docs.stripe.com/tax/monitoring)\n*   [Understand when you need to collect tax in each location](https://docs.stripe.com/tax/supported-countries)",
    "title": "Navigate the Stripe Tax Dashboard | Stripe Documentation",
    "description": "Learn how to use the Tax Dashboard.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/paymentlinks",
    "markdown": "# Automatically collect tax on Payment Links\n\n## Learn how to calculate and collect tax on a payment page without writing any code.\n\n#### Note\n\nYou can use Stripe Tax with [Payment Links](https://stripe.com/payments/payment-links) to automatically calculate and collect tax on a payment page and share a link to it with your customers, without writing any code.\n\n[](#get-started)\n\nThis short video demonstrates how you can quickly automate tax collection with no code by using Payment Links.\n\n[\n\n## Update your products and prices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#product-and-price-setup)\n\nStripe Tax uses information stored on the [Products](https://docs.stripe.com/api/products \"Products\") and [Prices](https://docs.stripe.com/api/prices \"Prices\") APIs to determine the right rates and rules to apply when calculating tax. Update the products and prices you use to include:\n\n1.  [Tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#tax-behavior): The tax behavior on a price can be either inclusive or exclusive. This determines how the buyer sees the tax. When you set tax behavior to exclusive, it adds tax onto the subtotal amount you specify on your price. This is common in US markets and for B2B sales. When set to inclusive, the amount your buyer pays never changes, even if the tax rate varies. This is common practice for B2C buyers in many markets outside the US.\n    \n    Setting the tax behavior explicitly on a price is optional, if you [set up the default tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#setting-tax-behavior-on-a-price-(optional)) in the [Stripe Tax settings](https://dashboard.stripe.com/login?redirect=%2Fsettings%2Ftax). You can override the default tax behavior setting by setting a tax behavior on a price.\n    \n2.  (Optional) [Tax code](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior): A tax code is a classification of your product or service for Stripe Tax that makes sure we apply the correct tax rate to your transactions. Some examples include “Audio book,” “Gift card,” or “Software as a service.” If you don’t set the tax code, Stripe Tax uses the preset [tax settings](https://dashboard.stripe.com/login?redirect=%2Fsettings%2Ftax).\n    \n\n#### Caution\n\nYou can’t change `tax_behavior` after you set it to one of “exclusive” or “inclusive.” You can create a new price and archive the current one instead.\n\nLearn more about [Products, prices, tax codes, and tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior).\n\n[](#create-link)\n\nIn the Dashboard, open the [Payment Links](https://dashboard.stripe.com/payment-links) page and click **\\+ New**. Then:\n\n1.  Select **+Add a new product**.\n2.  Fill out the product details.\n3.  Click **Add product**.\n4.  Click **Next**.\n5.  Click **Create link**.\n\n[](#enable-stripe-tax)\n\nWe enable Stripe Tax automatically on all Payment Links unless you switch off the toggle at the bottom of the tax settings page. In the [Payment Link configuration page](https://dashboard.stripe.com/payment-links/create), under the **Advanced options** section, you’ll see that `Collect tax automatically` is already on.",
    "title": "Automatically collect tax on Payment Links | Stripe Documentation",
    "description": "Learn how to calculate and collect tax on a payment page without writing any code.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/settings-api",
    "markdown": "# Use the Settings API to configure Stripe Tax\n\n## Check if the connected account is ready to use Stripe Tax ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nComplete this check when the Standard account configures Stripe Tax through the Stripe Dashboard but your platform needs to assess if Stripe Tax can be enabled.\n\nUse our official libraries for access to the Stripe API from your application. To check the Stripe Tax settings on the connected account, [retrieve the `tax.settings` object](https://docs.stripe.com/api/tax/settings/retrieve) using the `Stripe-Account` header with a value of the connected account ID:\n\n`curl https://api.stripe.com/v1/tax/settings \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \"`\n\nYou can also listen to the [tax.settings.updated](https://docs.stripe.com/api/events/types#event_types-tax.settings.updated) webhook event which triggers when accounts update their tax settings or when new required tax settings are introduced. See [take webhooks live](https://docs.stripe.com/webhooks#register-webhook) to learn how to add a webhook endpoint, and make sure you select **Listen to events on Connected accounts** in the Dashboard.\n\nAn account is ready to use Stripe Tax if the response `tax.settings` object retrieved by the API or webhook event returns `\"active\"` for `status`. The `defaults.tax_code` and `defaults.tax_behavior` settings are only required if not provided in the product or price on each API call.\n\n`{   \"object\": \"tax.settings\",   \"defaults\": {     \"tax_code\": null,     \"tax_behavior\": null   },   \"head_office\": {     \"address\": {       \"country\": \"DE\"     }   },   \"livemode\": false,   \"status\": \"active\",   \"status_details\": {     \"active\": {}   } }`\n\nAn account isn’t ready to use Stripe Tax if the response `tax.settings` object returns `\"pending\"` for `status`. The [`status_details[pending][missing_fields]`](https://docs.stripe.com/api/tax/settings/object#tax_settings_object-status_details-pending-missing_fields) has a list of all required missing fields.\n\n`{   \"object\": \"tax.settings\",   \"defaults\": {     \"tax_code\": null,     \"tax_behavior\": null   },   \"head_office\": null,   \"livemode\": false,   \"status\": \"pending\",   \"status_details\": {     \"pending\": {       \"missing_fields\": [\"head_office\"]     }   } }`\n\n## Configure connected account settings ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nComplete this step when you manage all Stripe Tax configuration through an interface on your platform.\n\nYou can modify the connected account settings through an [update settings](https://docs.stripe.com/api/tax/settings/update) call. Perform a call providing the head office location, the preset tax code, and the tax behavior by using the `Stripe-Account` header with a value of the connected account ID.\n\n`curl https://api.stripe.com/v1/tax/settings \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \" \\  -d \"defaults[tax_code]\"=txcd_10000000 \\  -d \"defaults[tax_behavior]\"=inclusive \\  -d \"head_office[address][country]\"=DE`\n\nThe updated `tax.settings` object now has a head office, a preset tax code, and a default tax behavior, which allows you to enable Stripe Tax for this connected account.\n\n`{   \"object\": \"tax.settings\",   \"defaults\": {     \"tax_code\": \"txcd_10000000\",     \"tax_behavior\": \"inclusive\"   },   \"head_office\": {     \"address\": {       \"country\": \"DE\"     }   },   \"livemode\": false,   \"status\": \"active\",   \"status_details\": {     \"active\": {}   } }`\n\n### Validations and errors![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe tax codes must refer to [available tax codes](https://docs.stripe.com/tax/tax-codes) and the [tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#tax-behavior) must be set as `inclusive`, `exclusive`, or `inferred_by_currency` (after being set, it can’t be set to null). The `head_office` must include a supported address.\n\nThe `head_office[address]` has the fields `line1`, `line2`, `city`, `state`, `postal_code`, and `country`. The tables below describe the supported address formats.\n\n| Example addresses | Explanation | Supported |\n| --- | --- | --- |\n| *   `line1`: 27 Fredrick Ave<br>*   `city`: Brothers<br>*   `state`: OR<br>*   `postal_code`: 97712<br>*   `country`: US | **Full address**<br><br>A full address includes at least a line1 (street address), city, state, postal code, and country.<br><br>The address is matched to the closest address or street in the US Postal Service address database. If a match isn’t found, we use the geographical center (average location of addresses) of the 5-digit postal code as a fallback. |     |\n| 9-digit postal code:<br><br>*   `postal_code`: 97712-4918<br>*   `country`: US<br><br>5-digit postal code:<br><br>*   `postal_code`: 97712<br>*   `country`: US | **Country and postal code**<br><br>If you provide a 5-digit or 9-digit postal code, our system only uses the initial 5 digits for tax calculations. The tax is calculated at the geographical center, which reflects the average location of addresses within the 5-digit postal code area. Check that this is [suitable for your business](https://docs.stripe.com/tax/customer-locations#us-postal-codes). |     |\n| *   `state`: OR<br>*   `country`: US | **Country and state**<br><br>We can’t calculate tax for US customers with only an ISO [country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes) and [state code](https://en.wikipedia.org/wiki/ISO_3166-2). |     |\n| *   `country`: US | **Country**<br><br>We can’t calculate tax for US customers with only an [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). |     |\n\nUse one of the above address formats to make sure that we can consistently recognize your connected account’s head office location. The country field must always be a valid [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1).\n\n#### Note\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Use the Registrations API to manage tax registrations](https://docs.stripe.com/tax/registrations-api)\n*   [Use Stripe Tax with Connect](https://docs.stripe.com/tax/connect)",
    "title": "Use the Settings API to configure Stripe Tax | Stripe Documentation",
    "description": "Learn how to configure tax settings, and check whether an account is ready to perform tax calculations.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/checkout",
    "markdown": "# Automatically collect tax on Checkout sessions\n\n## Learn how to automatically calculate taxes in Checkout.\n\nStripe Tax automatically calculates the taxes on all purchases and [subscriptions](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\") accumulated during a Checkout session. If you haven’t integrated with Checkout, you must complete the integration using the [Accept a Payment guide](https://docs.stripe.com/checkout/quickstart).\n\n#### Note\n\n[](#get-started)\n\nThis short video shows to how to enable automatic tax collection when using hosted integrations like Stripe Checkout.\n\n[\n\n## Update your products and prices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#product-and-price-setup)\n\nStripe Tax uses information stored on the [Products](https://docs.stripe.com/api/products \"Products\") and [Prices](https://docs.stripe.com/api/prices \"Prices\") APIs to determine the right rates and rules to apply when calculating tax. Update the products and prices you use to include:\n\n1.  [Tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#tax-behavior): The tax behavior on a price can be either inclusive or exclusive. This determines how the buyer sees the tax. When you set tax behavior to exclusive, it adds tax onto the subtotal amount you specify on your price. This is common in US markets and for B2B sales. When set to inclusive, the amount your buyer pays never changes, even if the tax rate varies. This is common practice for B2C buyers in many markets outside the US.\n    \n    Setting the tax behavior explicitly on a price is optional, if you [set up the default tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#setting-tax-behavior-on-a-price-(optional)) in the [Stripe Tax settings](https://dashboard.stripe.com/login?redirect=%2Fsettings%2Ftax). You can override the default tax behavior setting by setting a tax behavior on a price.\n    \n2.  (Optional) [Tax code](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior): A tax code is a classification of your product or service for Stripe Tax that makes sure we apply the correct tax rate to your transactions. Some examples include “Audio book,” “Gift card,” or “Software as a service.” If you don’t set the tax code, Stripe Tax uses the preset [tax settings](https://dashboard.stripe.com/login?redirect=%2Fsettings%2Ftax).\n    \n\n#### Caution\n\nYou can’t change `tax_behavior` after you set it to one of “exclusive” or “inclusive.” You can create a new price and archive the current one instead.\n\nIf you don’t want to create your products and prices upfront, you can pass `price_data.tax_behavior` and `product_data.tax_code` when creating Checkout sessions.\n\nLearn more about [Products, prices, tax codes, and tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior).\n\n[](#create-session)\n\nAfter updating your products and prices, you’re ready to start calculating tax on your Checkout sessions. You can create sessions for one time and recurring purchases.\n\nA customer’s tax rates come from their location, which Checkout assesses from the customer’s address. The address that Checkout uses to calculate taxes depends on whether the customer is new or existing, and whether you collect shipping addresses during the Checkout Session:\n\n|     | New Customer | Existing Customer |\n| --- | --- | --- |\n| **Collect a billing address only** | Checkout calculates taxes based on the customer’s billing address entered into the Checkout Session | If the customer has a previously saved shipping address, Checkout calculates taxes based on that address. Otherwise, you can calculate taxes based on billing address entered during Checkout (by specifying [`customer_update[address]=auto`](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-customer_update-address)) or the billing address saved to the customer (the default behavior). |\n| **Collect a shipping address** | Checkout calculates taxes based on the customer’s shipping address entered into the Checkout Session | Checkout calculates taxes based on the customer’s shipping address entered into the Checkout Session. _Existing addresses on the customer won’t apply in this case._ |\n\n#### Note\n\nIf you wish to ensure that Google Pay is offered as a payment method while using Stripe Tax in Checkout, you must require collecting a shipping address. Apple Pay with Stripe Tax displays only when the customer’s browser supports Apple Pay version 12.\n\n[](#new-customers)\n\nIf you don’t pass in an existing customer when creating a Checkout session, Checkout creates a new customer and automatically saves billing address and shipping information. For tax collection purposes, Checkout uses billing and shipping addresses to determine the customer’s location.\n\nCheckout uses the shipping address entered during the session to determine the customer’s location for calculating tax. If you don’t collect shipping information, Checkout uses the billing address.\n\n`curl https://api.stripe.com/v1/checkout/sessions \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"line_items[0][price]\"=  {{PRICE_ID}}   \\  -d \"line_items[0][quantity]\"=2 \\  -d \"automatic_tax[enabled]\"=true \\  -d mode=payment \\   --data-urlencode success_url=\"[https://example.com/success](https://example.com/success)\" \\   --data-urlencode cancel_url=\"[https://example.com/cancel](https://example.com/cancel)\"`\n\n[](#existing-customers)\n\nTo calculate tax on Checkout sessions created for existing customers, you can set the `automatic_tax[enabled]` parameter to `true` when creating the session. You can either base tax calculations on the customer’s existing addresses or new addresses collected during the session:\n\n### Use the existing addresses on the customer for taxes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’ve already collected the addresses of existing customers, you can base tax calculations on those addresses rather than the addresses collected during checkout:\n\n*   **The customer address that Checkout uses for taxes**: If available, Checkout uses the customer’s saved [shipping address](https://docs.stripe.com/api/customers/object#customer_object-shipping-address) to calculate taxes. Otherwise, Checkout uses the customer’s saved [billing address](https://docs.stripe.com/api/customers/object#customer_object-address) to calculate taxes.\n    \n*   **Customer address requirements**: When using existing addresses for taxes, the customer must either have a valid [shipping address](https://docs.stripe.com/api/customers/object#customer_object-shipping-address) or [billing address](https://docs.stripe.com/api/customers/object#customer_object-address) saved. You can see whether or not a customer’s saved addresses are valid by checking the customer’s [customer.tax.automatic\\_tax](https://docs.stripe.com/api/customers/object#customer_object-tax-automatic_tax) property. If the property is `supported` or `not_collecting`, it means the customer’s saved addresses are valid, and you can enable Stripe Tax on Checkout sessions for that customer.\n    \n\n`curl https://api.stripe.com/v1/checkout/sessions \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"line_items[0][price]\"=  {{PRICE_ID}}   \\  -d \"line_items[0][quantity]\"=2 \\  -d \"automatic_tax[enabled]\"=true \\  -d customer=  {{CUSTOMER_ID}}   \\  -d mode=payment \\   --data-urlencode success_url=\"[https://example.com/success](https://example.com/success)\" \\   --data-urlencode cancel_url=\"[https://example.com/cancel](https://example.com/cancel)\"`\n\n### Use the addresses collected during Checkout for taxes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can configure Checkout to save new billing or shipping addresses to a customer. In this case, Checkout calculates tax using the address entered during checkout.\n\n*   **The address that Checkout uses for taxes**: If you [collect shipping addresses](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-shipping_address_collection), Checkout uses the shipping address entered during the session to calculate taxes. Otherwise, Checkout uses the billing address entered during the session to calculate taxes.\n    \n*   **Where Checkout saves the addresses collected during checkout**: If you [collect shipping addresses](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-shipping_address_collection), Checkout saves the shipping address entered during the session to the customer’s [customer.shipping.address](https://docs.stripe.com/api/customers/object#customer_object-shipping-address) property. Otherwise, Checkout saves the billing address entered during the session to the customer’s [customer.address](https://docs.stripe.com/api/customers/object#customer_object-address) property. In both cases, the address used for taxes overrides any existing addresses.\n    \n\nIf you collect shipping addresses with Checkout, set the `customer_update[shipping]` property to `auto` so that you copy the shipping information from Checkout to the customer.\n\n`curl https://api.stripe.com/v1/checkout/sessions \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"line_items[0][price]\"=  {{PRICE_ID}}   \\  -d \"line_items[0][quantity]\"=2 \\  -d \"automatic_tax[enabled]\"=true \\  -d customer=  {{CUSTOMER_ID}}   \\  -d \"customer_update[shipping]\"=auto \\  -d \"shipping_address_collection[allowed_countries][0]\"=US \\  -d mode=payment \\   --data-urlencode success_url=\"[https://example.com/success](https://example.com/success)\" \\   --data-urlencode cancel_url=\"[https://example.com/cancel](https://example.com/cancel)\"`\n\nIf you don’t collect shipping addresses with Checkout, and you want to use billing addresses entered during checkout for taxes, you must save the billing address to the customer. Set the `customer_update[address]` property to `auto` so that you copy the newly-entered address onto the provided customer.\n\n`curl https://api.stripe.com/v1/checkout/sessions \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"line_items[0][price]\"=  {{PRICE_ID}}   \\  -d \"line_items[0][quantity]\"=2 \\  -d \"automatic_tax[enabled]\"=true \\  -d customer=  {{CUSTOMER_ID}}   \\  -d \"customer_update[address]\"=auto \\  -d mode=payment \\   --data-urlencode success_url=\"[https://example.com/success](https://example.com/success)\" \\   --data-urlencode cancel_url=\"[https://example.com/cancel](https://example.com/cancel)\"`\n\n[](#check-the-response)\n\nTo inspect the results of the latest tax calculation, you can read the tax amount calculated by Checkout from the [`total_details.amount_tax`](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-total_details) on the Checkout Session resource. Additionally, the tax outcome for each payment is available when [viewing a payment](https://dashboard.stripe.com/test/payments) in the Dashboard.\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Determining customer locations](https://docs.stripe.com/tax/customer-locations)\n*   [Checkout and tax IDs](https://docs.stripe.com/tax/checkout/tax-ids)\n*   [Reporting and filing](https://docs.stripe.com/tax/reports)\n*   [Use Stripe Tax with Connect](https://docs.stripe.com/tax/connect)\n*   [Calculate tax in your custom checkout flow](https://docs.stripe.com/tax/custom)",
    "title": "Automatically collect tax on Checkout sessions | Stripe Documentation",
    "description": "Learn how to automatically calculate taxes in Checkout.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/invoicing",
    "markdown": "# Automatically collect tax on invoices\n\n## Learn how to automatically calculate tax on your invoices.\n\nOn an [invoice](https://docs.stripe.com/api/invoices \"invoices\"), Stripe Tax calculates sales tax, VAT, and GST. To calculate these for each line item, Stripe uses:\n\n*   Your [tax settings](https://dashboard.stripe.com/settings/tax)\n*   The customer’s tax settings and location\n*   The product tax code and price tax behavior\n\n#### Note\n\n## Set up the customer ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWe use the customer’s location to determine the relevant taxes to collect. Customers outside of the US need at least a country-level address, while customers in the US require a 5-digit postal code. For Canada, we need at least the province or postal code.\n\nYou can add customer location information in the **Customer details** page by clicking **Edit** next to **Details**. To add a customer’s location from the [Invoice Editor](https://dashboard.stripe.com/invoices/create), click the overflow menu () next to the customer. Select **Edit customer information**, click **Add additional details**, and scroll down to **Billing details**.\n\nAfter you update the location, click **Update customer**. Stripe applies the new location to all of your customer’s future invoices unless you update it. For more information, see [Determine customer locations](https://docs.stripe.com/tax/customer-locations).\n\n## Set up line items![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo calculate tax on each line item on an invoice, you need to set a tax behavior and optionally a tax code.\n\n### Customize tax settings for one-off line items![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCustomize line items in the Invoice Editor by selecting the tax behavior from the **Include tax in price** drop-down menu.\n\n![Customize tax settings for one-off line items](https://b.stripecdn.com/docs-statics-srv/assets/invoicing_price.faa90fb6b3cb833b900e06cb2187d339.png)\n\nCustomize tax settings for one-off line items\n\n### Customize tax settings for product-based line items ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can use both the Dashboard and the API to customize tax settings for product-based line items.\n\nOn the [Products page](https://dashboard.stripe.com/products), you can select both the tax behavior for a particular price and the optional tax code for the product. The tax behavior is per price. You can’t change the tax behavior after you select it, but you can create new prices or archive old ones. To set up a tax behavior, click **Add a price** (or **Add another price** if you already have one) and select it from the **Tax behavior** drop-down menu.\n\nTo set up a tax code, select it from the **Tax code** drop-down menu when you create a new product or edit the details of an existing one.\n\n![Customize tax settings for one-off line items](https://b.stripecdn.com/docs-statics-srv/assets/invoicing_new_price.517f186f27925e52e501019b9aecc94b.png)\n\nCustomize tax settings for one-off line items\n\n## Enable automatic tax ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAfter specifying a tax behavior and tax code, you can add the price to the customer as an invoice item:\n\n`curl https://api.stripe.com/v1/invoiceitems \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d customer=cus_13729he8947269 \\  -d price=price_1K6mzG2eZvKYlo2CK7kcBICl`\n\nSet the toggle in the **Invoice Editor**. In the API, you need to pass the `automatic_tax` field to enable or disable automatic tax calculation. Both steps are required to start calculating tax automatically.\n\n`curl https://api.stripe.com/v1/invoices \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`: \\   -d \"customer\"=\"cus_13729he8947269\" \\   -d \"automatic_tax[enabled]\"=\"true\"`\n\nTo enable automatic tax calculation when you update an invoice, add the `invoice` parameter alongside `automatic_tax`:\n\n`curl https://api.stripe.com/v1/invoices \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`: \\   -d \"invoice\"=\"inv_12345\" \\   -d \"automatic_tax[enabled]\"=\"true\"`\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Determine customer locations](https://docs.stripe.com/tax/customer-locations)\n*   [Understand zero tax amounts](https://docs.stripe.com/tax/zero-tax)\n*   [Reporting and filing](https://docs.stripe.com/tax/reports)\n*   [Use Stripe Tax with Connect](https://docs.stripe.com/tax/connect)\n*   [Calculate tax in your custom checkout flow](https://docs.stripe.com/tax/custom)",
    "title": "Automatically collect tax on invoices | Stripe Documentation",
    "description": "Learn how to automatically calculate tax on your invoices.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/subscriptions",
    "markdown": "# Collect taxes for recurring payments\n\n## Learn how to collect and report taxes for recurring payments.\n\nStripe Tax allows you to calculate the tax to collect on your recurring payments when using Stripe Billing. You can create new subscriptions or add Stripe Tax to existing subscriptions, and examine any potential impact to the amount on your customer’s upcoming invoice. Stripe Tax is natively integrated with Stripe Billing and automatically handles tax calculation with your pricing model (for example, sub-cent, package), prorations, discounts, trials, and more. This guide assumes you’re setting up Stripe Tax and Billing for the first time.\n\nTo update existing subscriptions, reference the [Update existing subscriptions](https://docs.stripe.com/tax/subscriptions/update) guide.\n\n#### Note\n\n[](#get-started)\n\nThis short video shows to how to enable tax collection for recurring payments using hosted integrations like Stripe Checkout.\n\n[\n\n## Update your products and prices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#product-and-price-setup)\n\nStripe Tax uses information stored on the [Products](https://docs.stripe.com/api/products \"Products\") and [Prices](https://docs.stripe.com/api/prices \"Prices\") APIs to determine the right rates and rules to apply when calculating tax. Update the products and prices you use to include:\n\n1.  [Tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#tax-behavior): The tax behavior on a price can be either inclusive or exclusive. This determines how the buyer sees the tax. When you set tax behavior to exclusive, it adds tax onto the subtotal amount you specify on your price. This is common in US markets and for B2B sales. When set to inclusive, the amount your buyer pays never changes, even if the tax rate varies. This is common practice for B2C buyers in many markets outside the US.\n    \n    Setting the tax behavior explicitly on a price is optional, if you [set up the default tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#setting-tax-behavior-on-a-price-(optional)) in the [Stripe Tax settings](https://dashboard.stripe.com/login?redirect=%2Fsettings%2Ftax). You can override the default tax behavior setting by setting a tax behavior on a price.\n    \n2.  (Optional) [Tax code](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior): A tax code is a classification of your product or service for Stripe Tax that makes sure we apply the correct tax rate to your transactions. Some examples include “Audio book,” “Gift card,” or “Software as a service.” If you don’t set the tax code, Stripe Tax uses the preset [tax settings](https://dashboard.stripe.com/login?redirect=%2Fsettings%2Ftax).\n    \n\n#### Caution\n\nYou can’t change `tax_behavior` after you set it to one of “exclusive” or “inclusive.” You can create a new price and archive the current one instead.\n\nIf you don’t want to create your products and prices upfront, you can pass `price_data.tax_behavior` and `product_data.tax_code` when creating subscriptions.\n\nLearn more about [Products, prices, tax codes, and tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior).\n\nThis guide uses an e-magazine as an example of a product with a recurring payment.\n\nFirst, create a [Price](https://docs.stripe.com/api/prices) on your server with a monthly charge for a new [Product](https://docs.stripe.com/api/products) named “My Product”. For tax purposes you add two extra fields:\n\n*   `tax_behavior` on the Price object. Set to `inclusive` or `exclusive`. This is a required field if you’re using Stripe Tax with Subscriptions.\n*   `tax_code` on the Product object. A Stripe [tax code](https://docs.stripe.com/api/tax_codes), which maps to a product tax code. Consult our [list of tax codes](https://docs.stripe.com/tax/tax-codes) for more information.\n\n`curl https://api.stripe.com/v1/products \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d name=\"My Product\" \\  -d tax_code=  txcd_10000000    `\n\nRecord the product ID for the product. It looks like this:\n\n`{   \"id\": \"prod_H94k5odtwJXMtQ\",`\n\nUse the product ID to create a price.\n\n`curl https://api.stripe.com/v1/prices \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d unit_amount=1000 \\  -d currency=usd \\  -d \"recurring[interval]\"=month \\  -d product=prod_H94k5odtwJXMtQ \\  -d tax_behavior=exclusive`\n\n#### Note\n\nWhen `price_data.tax_behavior` is set to `exclusive`, tax is added onto the subtotal amount you specify. This is common in US markets and for B2B sales. When set to `inclusive`, the amount your buyer pays will never change, even if the tax rate varies. This is common practice for B2C buyers in many markets outside the US.\n\nRecord the price ID so you can use it in subsequent steps. It looks like this:\n\n`{   \"id\": \"price_HGd7M3DV3IMXkC\",`\n\n[](#create-a-customer)\n\nWhen a user subscribes to your website, create a [Customer](https://docs.stripe.com/api/customers) on your server.\n\nWhen creating a customer, you can send us a description and the payment method only. However, the more information you send us, the better the tax calculation can identify the location of your customer and tax them accordingly. We recommend populating the `customer.address` field. To make sure the customer address is valid upon creation, pass `tax[validate_location]='immediately'`. You can also [expand](https://docs.stripe.com/api/expanding_objects) the `tax` field to confirm the location Stripe Tax has identified for your customer.\n\nYou can either add a country and a postal code:\n\n`curl https://api.stripe.com/v1/customers \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d description=\"a new user\" \\   --data-urlencode email=\"franklin@example.com\" \\  -d payment_method=pm_1FU2bgBF6ERF9jhEQvwnA7sX \\  -d \"address[country]\"=US \\  -d \"address[postal_code]\"=94103 \\  -d \"tax[validate_location]\"=immediately \\  -d \"expand[]\"=tax`\n\nOr, ideally, add a complete billing address:\n\n`curl https://api.stripe.com/v1/customers \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d description=\"a new user\" \\   --data-urlencode email=\"franklin@example.com\" \\  -d payment_method=pm_1FU2bgBF6ERF9jhEQvwnA7sX \\  -d \"address[line1]\"=\"510 Townsend St\" \\  -d \"address[city]\"=\"San Francisco\" \\  -d \"address[state]\"=CA \\  -d \"address[country]\"=US \\  -d \"address[postal_code]\"=94103 \\  -d \"tax[validate_location]\"=immediately \\  -d \"expand[]\"=tax`\n\nOr, only an IP address:\n\n`curl https://api.stripe.com/v1/customers \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d description=\"a new user\" \\   --data-urlencode email=\"franklin@example.com\" \\  -d payment_method=pm_1FU2bgBF6ERF9jhEQvwnA7sX \\  -d \"tax[validate_location]\"=immediately \\  -d \"expand[]\"=tax`\n\nThe expanded `tax` field indicates the computed tax location (using the address first, falling back on the given IP address) and if the customer is compatible with automatic tax calculation:\n\n`{   \"id\": \"cus_13729he8947269\",   \"object\": \"customer\",   // ... other fields omitted   \"tax\": {     \"location\": {\"country\": \"US\", \"state\": \"CA\", \"source\": \"billing_address\"},     \"ip_address\": null,     \"automatic_tax\": \"supported\",   } }`\n\nThe value of `automatic_tax` has four possible states:\n\n| Status | Description | Possible Action |\n| --- | --- | --- |\n| `supported` | Automatic tax fully supported. | No further action needed. |\n| `unrecognized_location` | The address isn’t valid for determining a tax location. | Ask customer for an updated address and set `customer.address` to the new value. |\n| `not_collecting` | The address is resolvable to a location for which you haven’t set up a registration. | Depending on your tax obligations, you can either proceed and Stripe Tax won’t assess any taxes, or you might want to [add a new registration](https://docs.stripe.com/tax/registering) for the jurisdiction in which the customer is based. |\n| `failed` | An error occurred with Stripe’s servers. This is rare. | Try the request again, or contact Stripe support for additional assistance. |\n\n[](#create-a-subscription)\n\nNow that the Customer is set up for tax calculation, you can create a Subscription on your server with the customer and their selected plan. To enable automatic tax calculation on subscriptions, set the `automatic_tax[enabled]` parameter to `true`:\n\n`curl https://api.stripe.com/v1/subscriptions \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d customer=cus_13729he8947269 \\  -d \"items[0][price]\"=price_HGd7M3DV3IMXkC \\  -d \"items[0][quantity]\"=1 \\  -d \"automatic_tax[enabled]\"=true \\  -d payment_behavior=default_incomplete \\  -d \"expand[0]\"=latest_invoice`\n\nSetting this parameter causes all subsequent [Invoices](https://docs.stripe.com/api/invoices \"invoices\") to be created with automatic tax calculations activated.\n\nTo inspect the results of the latest tax calculation, retrieve the latest Invoice of a Subscription. You can do this by expanding the `latest_invoice` field on any Subscription request, as in the examples above. You can retrieve the tax amounts from the `tax` and `total_tax_amounts` fields on the latest invoice, and also from the per-line item `tax_amounts` fields.\n\nIf Stripe Tax does not have enough information to determine the customer’s location, a [customer\\_tax\\_location\\_invalid](https://docs.stripe.com/error-codes#customer-tax-location-invalid) error is returned.\n\n[](#collect-payment)\n\nTo complete payment of the first [invoice](https://docs.stripe.com/api/invoices \"invoices\") and activate the subscription, use `stripe.confirmCardPayment` when your customer submits the form.\n\n`const btn = document.querySelector('#submit-payment-btn'); btn.addEventListener('click', async (e) => {   e.preventDefault();   const nameInput = document.getElementById('name');    // Create payment method and confirm payment intent.   stripe.confirmCardPayment(clientSecret, {     payment_method: {       card: cardElement,       billing_details: {         name: nameInput.value,       },     }   }).then((result) => {     if(result.error) {       alert(result.error.message);     } else {       // Successful subscription payment     }   }); });`\n\nThe subscription automatically becomes `active` upon payment. See our [Subscriptions with Elements guide](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements#collect-payment) for more details on setting up your checkout page.\n\n[\n\n## Handling location validation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#handling-location-validation)\n\nStripe Tax requires a [recognized customer location](https://docs.stripe.com/tax/customer-locations) to calculate tax.\n\nWe recommend validating a customer’s `automatic_tax` status before attempting to create or update a subscription or one-off draft [invoice](https://docs.stripe.com/api/invoices \"invoices\") with `automatic_tax[enabled]=true`.\n\nCreating or updating a subscription or invoice behaves the following way when the [customer location is unrecognized](https://docs.stripe.com/tax/customer-locations#handling-errors):\n\n*   Creating or updating a subscription that **causes an immediate** invoice and payment attempt errors with an HTTP status 400 response.\n*   Updating a subscription that **does not cause an immediate** invoice or payment attempt returns an HTTP status 200 response. However, the customer location validation happens later asynchronously when the invoice is finalized. If the customer location is invalid during invoice finalization, Stripe sends a `invoice.finalization_failed` webhook. If you don’t take any action, the invoice remains in a `draft` state, regardless of the value of `auto_advance`.\n*   Creating or updating a draft invoice (either within the short window after a subscription cycle, or for a one-off invoice) updates the invoice’s `automatic_tax.status` to `requires_location_inputs`. You can then either update the customer object to correct the address, and then update or finalize the invoice, or turn off automatic tax calculation. If you don’t take any action, the invoice remains in a `draft` state, regardless of the value of `auto_advance`.\n\nIf tax calculation fails due to an unrecognized customer location on a recurring Subscription Invoice, Stripe sends a `invoice.finalization_failed` webhook when attempting to finalize the invoice. Keep this in mind when updating the location details of your customer.\n\nWe recommend listening for Subscription-related events (for example, invoice finalization failures) with [webhooks](https://docs.stripe.com/billing/subscriptions/webhooks) because most activity happens asynchronously.\n\n[](#preview-price)\n\nStripe also provides an endpoint for previewing an upcoming [invoice](https://docs.stripe.com/api/invoices \"invoices\") for a subscription. You can use this endpoint to preview the initial invoice for a new subscription:\n\n`curl -G https://api.stripe.com/v1/invoices/upcoming \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d customer=cus_13729he8947269 \\  -d \"subscription_items[0][price]\"=price_HGd7M3DV3IMXkC \\  -d \"subscription_items[0][quantity]\"=1 \\  -d \"automatic_tax[enabled]\"=true`\n\nIf you haven’t created a Customer yet, but you’ve collected your customer’s billing information, you can use the `customer_details` parameter in the place of a Customer ID:\n\n`curl -G https://api.stripe.com/v1/invoices/upcoming \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"customer_details[address][line1]\"=\"510 Townsend St\" \\  -d \"customer_details[address][city]\"=\"San Francisco\" \\  -d \"customer_details[address][state]\"=CA \\  -d \"customer_details[address][country]\"=US \\  -d \"customer_details[address][postal_code]\"=94103 \\  -d \"subscription_items[0][price]\"=price_HGd7M3DV3IMXkC \\  -d \"subscription_items[0][quantity]\"=1 \\  -d \"automatic_tax[enabled]\"=true`\n\nWhen previewing the first invoice for a subscription, the subscription ID in the response won’t point to a valid subscription.\n\nYou can also use this endpoint if you have an ongoing subscription without taxes enabled and would like to preview what the upcoming invoice would look like if you were to enable automatic tax.\n\n`curl -G https://api.stripe.com/v1/invoices/upcoming \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d customer=cus_13729he8947269 \\  -d subscription=sub_1JebWO2eZvKYlo2C1WYmWFd3 \\  -d \"automatic_tax[enabled]\"=true`\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Update existing subscriptions](https://docs.stripe.com/tax/subscriptions/update)\n*   [Use Stripe Tax with Connect](https://docs.stripe.com/tax/connect)\n*   [Calculate tax in your custom checkout flow](https://docs.stripe.com/tax/custom)",
    "title": "Collect taxes for recurring payments | Stripe Documentation",
    "description": "Learn how to collect and report taxes for recurring payments.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/connect",
    "markdown": "# Use Stripe Tax with Connect\n\n## Understand how Stripe Tax can help your platform and your connected accounts comply with tax obligations.\n\nStripe Tax supports [Connect](https://docs.stripe.com/connect) by helping you calculate and collect taxes. It provides transactional reports to help with tax reporting and filing for your platform or your connected accounts.\n\nThe first step for using Stripe Tax with Connect requires you to **determine which entity has the obligation to collect and report taxes**. The entity that’s liable for tax might be you or your connected account, depending on your business model, regulations (for example, [marketplace laws in the US and EU](https://stripe.com/en-nl/guides/guide-to-sales-tax-and-vat-for-marketplace-sellers)), or the transaction details, such as the order amount or the type of goods being sold.\n\n## Use cases![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax is designed to support different multi-party use cases:\n\n| Use case | Use when | Examples |\n| --- | --- | --- |\n| [Tax for software platforms](https://docs.stripe.com/tax/tax-for-platforms) | *   You’re a SaaS platform that enables other businesses with software services to reach their customers.<br>*   Your _connected accounts_ assume responsibility for collecting and remitting taxes. | *   An e-commerce platform like Shopify or Squarespace that enables businesses to build their own online stores to sell directly to customers. |\n| [Tax for marketplaces](https://docs.stripe.com/tax/tax-for-marketplaces) | *   You’re a marketplace that connects buyers and sellers on a single platform, typically through websites or apps where products are listed by various third-party vendors.<br>*   Your _platform_ assumes responsibility for collecting and remitting taxes. | *   An e-commerce marketplace like Etsy or Amazon that allows a single shopping cart for goods sold by multiple businesses. |\n\n[Stripe Connect’s distinction between SaaS platforms and marketplaces](https://docs.stripe.com/connect/overview#use-cases) doesn’t strictly correspond to the tax definition of marketplaces that are responsible for tax collection. Consult with a tax advisor who understands your business model to determine the tax obligations for both your platform and your connected accounts.",
    "title": "Use Stripe Tax with Connect | Stripe Documentation",
    "description": "Understand how Stripe Tax can help your platform and your connected accounts comply with tax obligations.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/custom",
    "markdown": "# Tax API for Sales Tax, GST, and VAT\n\nAfter creating a tax transaction to record a sale to your customer, you might need to record refunds. These are also represented as tax transactions, with `type=reversal`. Reversal transactions offset an earlier transaction by having amounts with opposite signs. For example, a transaction that recorded a sale for 50 USD might later have a full reversal of -50 USD.\n\nWhen you issue a refund (using Stripe or outside of Stripe) you need to create a reversal tax transaction with a unique `reference`. Common strategies include:\n\n*   Append a suffix to the original reference. For example, if the original transaction has reference `pi_123456789`, then create the reversal transaction with reference `pi_123456789-refund`.\n*   Use the ID of the [Stripe refund](https://docs.stripe.com/api/refunds/object) or a refund ID from your system. For example, `re_3MoslRBUZ691iUZ41bsYVkOg` or `myRefund_456`.\n\nChoose the approach that works best for how you reconcile your customer orders with your [tax exports](https://docs.stripe.com/tax/reports).\n\n### Fully refund a sale ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you fully refund a sale in your system, create a reversal transaction with `mode=full`.\n\nIn the example below, `tax_1MEFAAI6rIcR421eB1YOzACZ` is the tax transaction recording the sale to your customer:\n\n`curl https://api.stripe.com/v1/tax/transactions/create_reversal \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d mode=full \\  -d original_transaction=tax_1MEFAAI6rIcR421eB1YOzACZ \\  -d reference=pi_123456789-cancel \\  -d \"expand[]\"=line_items`\n\nThis returns the full reversal transaction that’s created:\n\n`{   \"id\": \"tax_1MEFtXI6rIcR421e0KTGXvCK\",   \"object\": \"tax.transaction\",   \"created\": 1670866467,   \"currency\": \"eur\",   \"customer\": null,   \"customer_details\": {     \"address\": {       \"city\": null,       \"country\": \"IE\",`\n\nFully reversing a transaction doesn’t affect previous partial reversals. When you record a full reversal, make sure you [fully reverse](#reversals-void-refund) any previous partial reversals for the same transaction to avoid duplicate refunds.\n\n### Partially refund a sale ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAfter [issuing a refund](https://docs.stripe.com/api/refunds/create) to your customer, create a reversal tax transaction with `mode=partial`. This allows you to record a partial refund by providing the line item amounts refunded. You can create up to 30 partial reversals for each sale. Reversing more than the amount of tax you collected returns an error.\n\nThe example below records a refund of only the first line item in the original transaction:\n\n`curl https://api.stripe.com/v1/tax/transactions/create_reversal \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d mode=partial \\  -d original_transaction=tax_1MEFAAI6rIcR421eB1YOzACZ \\  -d reference=pi_123456789-refund_1 \\  -d \"line_items[0][original_line_item]\"=tax_li_MyBXPByrSUwm6r \\  -d \"line_items[0][reference]\"=L1 \\  -d \"line_items[0][amount]\"=-4999 \\  -d \"line_items[0][amount_tax]\"=-1150 \\  -d \"metadata[refund]\"=  {{REFUND_ID}}   \\   --data-urlencode \"metadata[refund_reason]\"=\"Refunded line 1 of pi_123456789 (customer was unhappy)\" \\  -d \"expand[0]\"=line_items`\n\nThis returns the partial reversal transaction that’s created:\n\n`{   \"id\": \"tax_1MEFACI6rIcR421eHrjXCSmD\",   \"object\": \"tax.transaction\",   \"created\": 1670863656,   \"currency\": \"eur\",   ...   \"line_items\": {     \"object\": \"list\",     \"data\": [       {`\n\nFor each line item reversed you need to provide the `amount` and `amount_tax` reversed. The `amount` is tax-inclusive if the original calculation line item was tax-inclusive.\n\nHow `amount` and `amount_tax` are determined depends on your situation:\n\n*   If your transactions always have a single line item, use [full reversals](#reversals-full) instead.\n*   If you always refund entire line items, use the original transaction line item `amount` and `amount_tax`, but with negative signs.\n*   If you refund parts of line items, you need to calculate the amounts refunded. For example, for a sale transaction with `amount=5000` and `amount_tax=500`, after refunding half the line item you’d create a partial reversal with line item `amount=-2500` and `amount_tax=-250`.\n\n### Partially refund a sale by a flat amount ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAlternatively, you can create a reversal with `mode=partial` by specifying a flat after-tax amount to refund. The amount distributes across each line item and shipping cost proportionally, depending on the remaining amount left to refund on each.\n\nIn the example below, the transaction has two line items: one 10 USD item and one 20 USD item, both taxed at 10%. The total amount of the transaction is 33.00 USD. A refund for a flat 16.50 USD is recorded:\n\n`curl https://api.stripe.com/v1/tax/transactions/create_reversal \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d mode=partial \\  -d original_transaction=tax_1NVcKqBUZ691iUZ4xMZtcGYt \\  -d reference=pi_234567890-refund_1 \\  -d flat_amount=-1650 \\  -d \"metadata[refund]\"=  {{REFUND_ID}}   \\   --data-urlencode \"metadata[refund_reason]\"=\"Refunded $16.50 of pi_234567890 (customer was unhappy)\" \\  -d \"expand[]\"=line_items`\n\nThis returns the partial reversal transaction that’s created:\n\n`{   \"id\": \"tax_1NVcQYBUZ691iUZ4SBPukGa6\",   \"object\": \"tax.transaction\",   \"created\": 1689780994,   \"currency\": \"usd\",   ...   \"line_items\": {     \"object\": \"list\",     \"data\": [       {`\n\nFor each line item and shipping cost in the original transaction, the refunded amounts and tax are calculated as follows:\n\n1.  First, we calculate the total remaining funds in the transaction available to refund. Because this transaction hasn’t had any other reversals recorded, the total amount is 33.00 USD.\n2.  Next, we calculate the total amount to refund for each line item. We base this calculation on the proportion of the item’s total available amount to refund versus the total remaining amount of the transaction. For example, the 10 USD item, which has 11.00 USD total remaining to refund, represents 33.33% of the transaction’s remaining total, so the total amount to refund is `-16.50 USD * 33.33% = -5.50 USD`.\n3.  Finally, the total amount to refund is divided between `amount` and `amount_tax`. We also do this proportionally, depending on how much tax is available to refund in the line item compared to the total funds left to refund. Using the 10 USD item example, tax (1.00 USD) represents 9.09% of the total remaining to refund (11.00 USD), so the `amount_tax` is `-5.50 USD * 9.09% = -0.50 USD`.\n\nThe flat amount distributes according to what’s _left_ to refund in the transaction, not what was originally recorded. Consider this example: instead of recording a refund for a flat 16.50 USD, you first record a partial reversal for the total amount of the 10 USD item:\n\n`curl https://api.stripe.com/v1/tax/transactions/create_reversal \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d mode=partial \\  -d original_transaction=tax_1NVcKqBUZ691iUZ4xMZtcGYt \\  -d reference=pi_234567890-refund_1 \\  -d \"line_items[0][original_line_item]\"=tax_li_OICmRXkFuWr8Df \\  -d \"line_items[0][reference]\"=partial_refund_l1 \\  -d \"line_items[0][amount]\"=-1000 \\  -d \"line_items[0][amount_tax]\"=-100 \\  -d \"metadata[refund]\"=  {{REFUND_ID}}   \\   --data-urlencode \"metadata[refund_reason]\"=\"Refunded line 1 of pi_234567890 (customer was unhappy)\" \\  -d \"expand[0]\"=line_items`\n\nAfter this, you record a 16.50 USD flat amount reversal:\n\n`curl https://api.stripe.com/v1/tax/transactions/create_reversal \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d mode=partial \\  -d original_transaction=tax_1NVcKqBUZ691iUZ4xMZtcGYt \\  -d reference=pi_234567890-refund_2 \\  -d flat_amount=-1650 \\  -d \"metadata[refund]\"=  {{REFUND_ID}}   \\   --data-urlencode \"metadata[refund_reason]\"=\"Refunded $16.50 of pi_234567890 (customer was still unhappy)\" \\  -d \"expand[]\"=line_items`\n\nThis returns the partial reversal transaction:\n\n`{   \"id\": \"tax_1NVxFIBUZ691iUZ4saOIloxB\",   \"object\": \"tax.transaction\",   \"created\": 1689861020,   \"currency\": \"usd\",   ...   \"line_items\": {     \"object\": \"list\",     \"data\": [       {`\n\nBecause the total amount remaining in the transaction is now 22.00 USD and the 10 USD item is completely refunded, the 16.50 USD distributes entirely to the 20 USD item. The 16.50 USD then distributes, using the logic from step 3, into `amount = -15.00 USD` and `amount_tax = -1.50 USD`. Meanwhile, the 10 USD item in the transaction records a refund of 0 USD.\n\n### Undo a partial refund ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTax transactions are immutable but you can cancel out a partial refund by creating a [full reversal](https://docs.stripe.com/api/tax/transactions/create_reversal#tax_transaction_create_reversal-mode) of it.\n\nYou might need to do this when:\n\n*   The payment [refund fails](https://docs.stripe.com/refunds#failed-refunds) and you haven’t provided the good or service to your customer\n*   The wrong order is refunded or the wrong amounts are refunded\n*   The original sale is fully refunded and the partial refunds are no longer valid\n\nIn the example below, `tax_1MEFACI6rIcR421eHrjXCSmD` is the transaction representing the partial refund:\n\n`curl https://api.stripe.com/v1/tax/transactions/create_reversal \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d mode=full \\  -d original_transaction=tax_1MEFACI6rIcR421eHrjXCSmD \\  -d reference=pi_123456789-refund_1-cancel \\  -d \"metadata[refund_reason]\"=\"User called to cancel because they picked the wrong item\" \\  -d \"expand[]\"=line_items`\n\nThis returns the full reversal transaction that’s created:\n\n`{   \"id\": \"tax_1MEFADI6rIcR421e94fNTOCK\",   \"object\": \"tax.transaction\",   \"created\": 1670863657,   \"currency\": \"eur\",   ...   \"line_items\": {     \"object\": \"list\",     \"data\": [       {`",
    "title": "Tax API for Sales Tax, GST, and VAT | Stripe Documentation",
    "description": "Use Stripe Tax APIs to calculate sales tax, GST, and VAT with Stripe's payments APIs and non-Stripe payment processors",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/tax-for-platforms",
    "markdown": "# Tax for software platforms | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to enable Stripe Tax for your connected accounts, and collect tax when the connected account is liable for paying the tax.\n\nStripe Tax enables businesses to calculate, collect, and report indirect taxes in over 40 countries, across hundreds of product categories. As a platform, you can use Stripe tax to offer pre-integrated tax compliance to your connected accounts.\n\nUse this guide if your connected accounts are responsible for collecting, filing, and reporting taxes.\n\n1.  [Set up your connected accounts for tax](#check-set-up)\n2.  (Optional) [Assign tax codes to the product catalog](#assign-product-tax-codes)\n3.  [Integrate tax calculation and collection](#enable-tax-collection)\n4.  [Access Stripe Tax Reports](#access-reports)\n\n[](#set-up)\n\nAs a platform, you must make sure that a connected account has their [tax settings and registrations set up](https://docs.stripe.com/tax/set-up) before enabling tax calculations. This can be achieved by:\n\n### Connected account using the Stripe Dashboard\n\n### Creating a tax interface within your platform\n\n### Use Connect embedded components for tax compliance\n\nYour platform must then check whether connected accounts have configured Stripe Tax to enable tax calculations.\n\nOn the Dashboard, you can [filter the accounts that are ready to use Stripe Tax](https://dashboard.stripe.com/connect/accounts/overview?connected_merchant%5Btax_settings_status%5D=active). You can also export the accounts from the [connected account overview page](https://dashboard.stripe.com/connect/accounts/overview) with the following Stripe Tax-related columns:\n\n*   **Tax Settings Status**: the value `active` indicates that the account is ready to use Stripe Tax. The value `pending` indicates that some required fields are [missing](https://docs.stripe.com/api/tax/settings/object#tax_settings_object-status_details-pending-missing_fields).\n*   **Tax Threshold Status**: the value `exceeded` indicates that the account’s estimated sales or transactions are over the location’s threshold, and the business likely needs to register for tax. For more information, see [Monitor your obligations](https://docs.stripe.com/tax/monitoring).\n*   **Tax Registration Status**: the value `active` indicates that the account has at least one active [tax registration](https://docs.stripe.com/tax/registering).\n\nYou can also check whether an account has configured Stripe Tax by [using the Tax Settings API](https://docs.stripe.com/tax/settings-api#checking-settings).\n\n[](#assign-product-tax-codes)\n\nTo calculate taxes, Stripe Tax requires classifying products into their tax codes. One way to do this is to [supply a preset tax code for each connected account](https://docs.stripe.com/tax/settings-api#updating-settings), which is probably sufficient if your connected accounts typically sell a single category of items.\n\nHowever, you might offer your users more control by allowing them to map Tax Codes to each product. You can retrieve a list of supported Product Tax codes from the Stripe [Tax Code API](https://docs.stripe.com/api/tax_codes). You can also allow a subset of this list if your connected accounts only sell specific types of products.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/dashboard_product.58429cc20faec07b5fce812d3838d85a.png)\n\n[](#access-reports)\n\nYour connected accounts can use [Stripe Tax reports](https://docs.stripe.com/tax/reports) to help them correctly file and remit tax.\n\n### Connected account use the Stripe Dashboard\n\n### Use the Stripe API",
    "title": "Tax for software platforms | Stripe Documentation",
    "description": "Learn how to enable Stripe Tax for your connected accounts, and collect tax when the connected account is liable for paying the tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/calculating",
    "markdown": "# Calculate tax | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to calculate tax with Stripe Tax.\n\nThe most common forms of indirect taxes for your business are sales tax, [VAT](https://en.wikipedia.org/wiki/Value-added_tax \"VAT\"), and [GST](https://en.wikipedia.org/wiki/Value-added_tax \"GST\"). These taxes apply on the sale of physical goods, digital goods, and services.\n\nStripe calculates tax on a transaction taking into account some or all of the following factors:\n\n*   The location of the seller\n*   The location of the customer\n*   The type of the product sold\n*   Whether the transaction involves a [reverse charge](https://docs.stripe.com/tax/zero-tax#reverse-charges)\n*   The status of the customer (for example, whether they’re a VAT-registered business, private person or an exempt organization)\n\n## How Stripe uses addresses![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe uses a single address as the customer’s location, or transaction destination, when calculating taxes. For more information, see [which customer address we use](https://docs.stripe.com/tax/customer-locations#address-hierarchy).\n\nIn certain scenarios, it’s important to identify the origin of a transaction. Stripe generally uses the address where your business is located as the origin of a transaction. This address is defined as your origin address in the Dashboard or as `head_office` if using the tax settings object.\n\n### How to use ship-from addresses![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can add ship-from addresses that differ from your business address for tax calculation. To add them, use the `ship_from_address` transaction object. You can add ship-from locations only using the [Stripe Tax API](https://docs.stripe.com/tax/custom). They aren’t available in integrations of Stripe Tax with Payment Links, Checkout, or Billing and Invoicing. If you enter an unrecognized ship-from address, Stripe returns a `shipping_address_invalid` error.\n\nStripe Tax can designate only one address as the origin of a transaction even though in some countries the determination of origin can vary by product type. If you provide the ship-from address, Stripe Tax uses it to calculate tax for both services and physical goods. If you don’t provide a ship-from address, Stripe Tax assumes that the origin of the transaction is the address where your business is located. When selling a combination of products that require different origin locations, consider splitting the transaction accordingly.",
    "title": "Calculate tax | Stripe Documentation",
    "description": "Learn how to calculate tax with Stripe Tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/registering",
    "markdown": "# Register for sales tax, VAT, and GST\n\n## Learn more about your tax obligations and how to register with jurisdictions.\n\n#### Note\n\nAs a business, you have an obligation to identify the states, provinces, and countries where you have tax obligations. You must then register with the tax authorities in those respective jurisdictions and add your registrations to Stripe using the **Registrations** tab of the Tax Dashboard.\n\nRegistration requirements vary by jurisdiction, and you can trigger it in a few ways, including, but not limited to:\n\n*   Building offices\n*   Employee locations\n*   Inventory locations\n*   Products sold\n*   Buyer locations\n\nWhen you’ve met the requirements to start collecting tax in a local jurisdiction or foreign country, register with that jurisdiction before you begin collecting. Typically the registration process requires submitting general business and industry information (like your product catalog), and financial information (like total sales). The time it takes to complete a registration varies by jurisdiction. Additionally, some jurisdictions might require you to file returns even if you don’t have any collected tax to remit. Stripe recommends you consult with your tax advisor to determine your businesses tax obligations in regard to registering for indirect or consumption tax.\n\nLearn more about the [locations Stripe Tax supports](https://docs.stripe.com/tax/supported-countries) along with the different tax thresholds that apply and links to the tax authority websites.\n\n## Track your registrations in the Dashboard ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you register to collect tax in a jurisdiction, use the [Registrations](https://dashboard.stripe.com/tax/registrations) tab of the Dashboard to add the registration to Stripe. That’s necessary for Stripe to calculate and collect the taxes you owe and for you to manage calculations and view reports for each location in which you’re collecting tax.\n\n### Add a registration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo start calculating and collecting tax for a location, you must add a registration in Stripe. You need to identify each state, province, and country where you have tax obligations. You need to register with the local tax authority to collect tax for each tax obligation. Registration requirements vary by each location (often referred to as nexus in the US).\n\nTo add a registration in the [Dashboard](https://dashboard.stripe.com/tax/registrations):\n\n1.  Click **+Add registration** and select the country and the applicable state or province.\n2.  Add the date to start tax collection as provided by your local tax authority.\n3.  Save your changes.\n\n### Edit a registration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo maintain your compliance, you might need to edit your registration. Your local tax authority will inform you of any updates to your information or dates.\n\nTo edit a registration:\n\n1.  Click the overflow menu () next to the applicable registration.\n2.  Click **Edit end date**.\n3.  Save your changes.\n\n### End a registration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo stop calculating and collecting tax for a location, you must end the tax obligation’s registration.\n\nTo end a registration by setting an end date:\n\n1.  Click the overflow menu () next to the applicable registration.\n2.  Click **Edit end date**\n3.  Add the date (provided by your local tax authority) to stop tax collection.\n4.  Save your changes.\n\nTo end a registration immediately:\n\n1.  Click the overflow menu () next to the applicable registration.\n2.  Click **Edit immediately**.\n3.  Confirm your changes.\n\n### Registration status![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can’t delete a registration. Every registration you add for a location in which you have a tax obligation appears on your Dashboard under one of the following categories:\n\n| Category | Definition |\n| --- | --- |\n| Active | A registration that’s currently calculating and collecting tax |\n| Scheduled | A registration that will start calculating tax based on your inputted start date (provided by the local tax authority) |\n| Expired | A registration that’s no longer calculating tax as it has passed the inputted end date (provided by the local tax authority) |\n\n## Registration types ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe Tax supports the registration types listed on this page. If you can’t locate the region where you desire to register or to add a registration to Stripe Tax, use a registration type under the [Other tab](https://docs.stripe.com/tax/registering?registrationTypeRegion=other#registration-types).\n\n#### Note\n\nTo navigate the registration process, follow [our US guide](https://stripe.com/guides/sales-tax-registration-process-us).\n\n### State sales tax registration type![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n**API value**: `state_sales_tax`\n\nThe state sales tax registration is for businesses that sell goods and services to customers in a state of the United States. State sales tax is usually a certain percentage of the sale price. The customer is responsible for paying it, but the seller usually collects it and remits it to the [state government](https://stripe.com/guides/how-to-file-sales-tax-us).\n\n### Lease Transaction tax registration type![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n**API value**: `local_lease_tax`\n\nPersonal Property Lease Transaction Tax registration is for businesses that lease personal property. These businesses must calculate and remit taxes based on their property’s value. Many of our users apply this registration for their Software as a Service (SaaS) businesses as part of the Chicago Lease Tax. We only support the Chicago Lease Tax, which only applies to transactions in Illinois.\n\n### Communications Services tax registration type![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n**API value**: `state_communications_tax`\n\nCommunications Service Tax registration is for businesses providing a variety of telecommunications and digital services. Typically, the tax is calculated based on gross receipts and paid to the state. This registration is applicable to the Communications Service Taxes in Kentucky and Florida.\n\n### Amusement tax registration type![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n**API value**: `local_amusement_tax`\n\nAmusement Tax registration is required for businesses that earn revenue from entertainment sources, including both physical venues and digital platforms. Typically, the operator is tasked with collecting and remitting this tax to the local tax authority. In practice, this registration refers to the Chicago Amusement Tax and it also applies to digital services such as Software as a Service (SaaS).\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Understand when you need to collect tax in each location](https://docs.stripe.com/tax/supported-countries)\n*   [Set up Stripe Tax](https://docs.stripe.com/tax/set-up)\n*   [Tax reporting](https://docs.stripe.com/tax/reports)\n*   [File and remit](https://docs.stripe.com/tax/filing)\n*   [Products, prices, tax codes, and tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior)",
    "title": "Register for sales tax, VAT, and GST | Stripe Documentation",
    "description": "Learn more about your tax obligations and how to register with jurisdictions.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-data/write-queries",
    "markdown": "# Write queries | Stripe DocumentationThe Stripe Docs logo\n\n## Compose custom queries in standard ANSI SQL for use in a broad range of reporting functions.\n\nAnyone on your account with [permission to view reports](https://support.stripe.com/questions/can-i-invite-other-team-members-or-my-developer-to-use-my-stripe-account) can use the [Sigma query editor](https://dashboard.stripe.com/sigma/queries) to compose new or modify existing queries.\n\nOur large language model (LLM)-based query assistant can even help you generate the SQL you need from a natural language prompt.\n\n## Query resources![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe navigator window to the left of the editor provides a set of tools to help you build your query. You can see:\n\n*   Your previously saved queries\n*   Queries saved by your team\n*   The table schema to search for data sources\n*   Stripe query templates\n\n### Saved queries and templates ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe **Queries** tab shows the lists of queries previously saved by you and your team. The **Templates** tab provides a set of example queries representing the most common metrics and reports.\n\nSelecting any saved query or template loads it into the query editor, where you can click **Run** to regenerate and view the results.\n\nTo use any saved query or template as a starting point for your own custom report, either click its overflow menu () and choose **Make a copy** or load it into the editor and click **Make a copy**. This allows you to modify the content in the editor and [save](#saving-queries) your changes as a new query.\n\n## Compose a query![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen you open the query editor, you can:\n\n*   Write standard ANSI SQL directly into the editor.\n*   Choose an existing query from your previously saved queries or Stripe’s templates and modify it in the editor to fine-tune the returned data.\n\nThe following query uses the `balance_transactions` table to get information about the five most recent balance transactions related to refunds.\n\n`select   date_format(created, '%Y-%m-%d') as day,   id,   amount,   currency,   source_id from balance_transactions where type = 'refund' order by day desc limit 5`\n\nClick **Run** to execute the query and view the results in a table below the editor. More complex queries might take a few moments longer to complete and display results. Attempting to run an invalid query generates an error message that contains the line number and position of the error.\n\nThe results of our sample query return 5 rows, where each row corresponds to a particular balance transaction item, along with the requested information about them.\n\n| day | id  | amount | currency | source\\_id |\n| --- | --- | --- | --- | --- |\n| 7/12/2024 | txn\\_f6tKUHhLdlQvRDW | \\-1,000 | usd | re\\_WBKrFCeiHBBz4LE |\n| 7/12/2024 | txn\\_Ql3UQeH5Qx4TWMg | \\-1,000 | usd | re\\_rNUsR8smal6WSKg |\n| 7/12/2024 | txn\\_hZylixrNgpy4LVq | \\-1,000 | usd | re\\_ZL0bqIxfkBdNILv |\n| 7/12/2024 | txn\\_Njz6DrDJdceqKas | \\-1,000 | eur | re\\_hyh5JkTUFm3TB2e |\n| 7/12/2024 | txn\\_fFlt4sjd1Sjcs7G | \\-1,000 | usd | re\\_OkLdsyU2Q6sz9qT |\n\n### Join tables![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can join columns of type _Primary key_ or _Foreign key_ to similar columns in other tables:\n\n*   **Primary key** represents the unique identifier (ID) for each record in a table\n*   **Foreign key** represents data that refers to the primary key of another table\n\nFor instance, you can join the `charge_id` column of the `disputes` table (a foreign key) to the `id` column of the `charges` table (a primary key).\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/disputes.f293434123d316ff4fafe2524e9b2b0d.png)\n\nJoining tables allows you to return richer results in your datasets. For example, you can modify our balance transaction example to join with the `refunds` table to provide further information.\n\n`select   date_format(date_trunc('day', balance_transactions.created), '%Y-%m-%d') as day,   balance_transactions.amount,   balance_transactions.currency,   balance_transactions.source_id,   refunds.charge_id from   balance_transactions inner join refunds -- Joining these tables to retrieve additional information on balance_transactions.source_id=refunds.id where balance_transactions.type = 'refund' order by day desc limit 5`\n\nThis extended query now returns the original charge ID that the refund relates to.\n\n| day | amount | currency | source\\_id | charge.id |\n| --- | --- | --- | --- | --- |\n| 7/12/2024 | \\-1,000 | usd | re\\_njFXrZtcZrKi2IO | ch\\_x5oiIxh2rXwjBA4 |\n| 7/12/2024 | \\-1,000 | usd | re\\_LFHCsSVi3EbkuQw | ch\\_jw48j5ApJcmW3eI |\n| 7/12/2024 | \\-1,000 | usd | re\\_PbHhJBXUm8k3gBv | ch\\_3mwXXJLqy3f1ulQ |\n| 7/12/2024 | \\-1,000 | eur | re\\_2fM97xSPJx2WTKi | ch\\_QmzmFKSiZ9wmBLy |\n| 7/12/2024 | \\-1,000 | usd | re\\_inJsA9cDOizuviq | ch\\_9SGdVt1LGqe8uNH |\n\n## Use the assistant ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe’s query editor has a built-in LLM assistant that outputs standard ANSI SQL from a natural language prompt. The editor can perform the following modes:\n\n*   **Generate** uses the prompt question to write a new query, overwriting any SQL that’s already loaded in the editor window.\n*   **Edit** uses the prompt question to modify the SQL in the query editor.\n\n#### Check your mode\n\nFor the most accurate suggestion, make sure you select the right mode for your prompt. When the editor contains content, the mode automatically switches to **Edit**. If you then decide to prompt for a new query without changing the mode, the resulting suggestion might be unexpectedly constrained based on what’s already in the editor.\n\n### Prompt the assistant![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n1.  Open the [Sigma query editor](https://dashboard.stripe.com/sigma/queries) in the Dashboard.\n2.  Select the **Generate** mode and enter a question in the prompt field. The assistant:\n    *   Loads the query suggestion into the editor.\n    *   Displays a summary describing the suggestion.\n    *   Runs the suggested query and returns the results in a table below the editor.\n    *   Switches the mode to **Edit** so you can ask another question to fine-tune the query as needed.\n3.  Continue to prompt the assistant and view the resulting data until you get the information you want.\n\nThe screenshot below demonstrates how a prompt generated the same SQL as the example query shown at the beginning of this document.\n\n![Demonstrates prompting the assistant and the results.](https://b.stripecdn.com/docs-statics-srv/assets/sigma-assistant.93165f570965aee98631f9a48d399e15.png)\n\nAdditional questions to modify the suggestions might include:\n\n*   Sort these results by amount.\n*   Don’t include the automatic\\_transfer or reporting\\_category columns.\n*   Can I see the customer for each transaction?\n\n#### Explicitly request Connect data\n\nWhen asking for data about connected accounts, explicitly mention “connected accounts” in your query. For example: _How many new subscriptions did I have from connected accounts last month?_\n\n### View chat history![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSigma saves every interaction you have with the assistant in the chat history for that query. Click the button in the top-right of the editor to open the chat history slider.\n\nWithin the chat history, you can see each prompt given to the assistant for the life of the query (not just the current session) and the assistant’s response. Click **View SQL** to see the SQL suggestion associated with any prompt. When open, click **View in editor** to reload that suggestion into the main editor window.\n\n### Limitations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   The query editor assistant responds only to questions in English.\n*   The query editor assistant only answers questions relative to the Stripe schema. It can’t answer general questions, such as _What color is Stripe’s logo?_ or _What is the weather in San Francisco today?_\n\n### Feedback![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nHelp us continue to improve the assistant by responding to the **Was this response helpful?** prompt between the editor and the results table:\n\n1.  Click **Yes** or **No**.\n2.  Enter specific details about how the assistant performed for you and what we can do to improve. We welcome all opinions, whether it’s about the accuracy of the suggestion, the UI, or any other aspect of your experience with the assistant.\n\n### Training data consent![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBy using Sigma Assistant you agree that Stripe may log and use your chat entries to train and improve the Sigma Assistant capabilities. If you don’t want to have your chat entries used for this purpose, you can opt-out in your [settings](https://dashboard.stripe.com/settings/sigma).\n\n## View and download query results![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nQuery results display in a table below the editor. You can:\n\n*   View a maximum of 1,000 results.\n*   Sort the results by clicking the column headers.\n*   Resize each column to make it easier to read the results.\n*   Adjust the height of the results output.\n\nAmounts express in the lowest available currency unit, such as cents for USD or yen for JPY. For example, an amount of `1,000` with a currency of `usd` equates to 10 USD.\n\nClick **Download CSV** to export your results for use in spreadsheet applications or other reporting tools. The downloaded CSV includes all query results, so you’re not limited to the 1,000 viewable results.\n\n## Save queries ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo save a query, click its title (labeled **New report** if it’s a new query) and enter your replacement. Then click **Save**.\n\nThe queries you save are added to the **All** section and made available to every team member on your account. Each saved query is given a unique URL you can share by clicking **Copy link**. You can use this link as a shortcut to a particular report you regularly use, or share it directly with other team members on the Stripe account.\n\nYou can only share queries with team members. Shared queries are read-only, so other team members can’t modify the queries you create. If a team member wants to make changes to your query, they can make a copy and edit it accordingly.",
    "title": "Write queries | Stripe Documentation",
    "description": "Compose custom queries in standard ANSI SQL for use in a broad range of reporting functions.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/reports",
    "markdown": "# Tax reporting | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about different reporting available in Stripe Tax.\n\n#### Note\n\nStripe Tax provides reports of completed transactions. These reports include an itemized export showing completed transactions for all locations, an itemized export available by country or state, a summarized export showing an aggregated view of completed transactions by location, and a report showing an aggregated view of completed transactions for US locations. To access these reports, navigate to the Registrations tab of the [Dashboard](https://dashboard.stripe.com/tax/registrations).\n\n## Exports![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo export tax transaction data, select a specific date range for completed transactions. These exports are available in CSV format and can be downloaded directly, scheduled, or have a link to the Dashboard sent through email. Typically, the data becomes available within one day of a completed transaction. Each day’s data includes transaction activity that occurs between 12:00am UTC and 11:59pm UTC.\n\nEach export includes breakdowns of individual tax amounts, attributes, reasons for each tax, and tax rates per jurisdiction level (country, state, county, city, district) for each line item in a transaction. This allows you to analyze tax information at different geographic levels and gain a comprehensive understanding of the tax breakdown within each transaction to aid in your tax filings and returns.\n\n### Itemized export ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe Itemized transaction export contains the full list of line item level, imposition level, and jurisdiction level information for all of your completed transactions and refunds in CSV format. This export includes all transactions where you enable Stripe Tax. Itemized exports can help with filings that require more detail in the tax information reported. This export can be automated using the scheduling feature.\n\nThe Itemized export provides a comprehensive list that details tax breakdowns for each line item in a completed transaction where Stripe Tax is enabled. This export includes refunds and covers multiple jurisdictions. Depending on the specific location, there might be multiple rows per line item. Each row includes important details such as the transaction date and identifiers, jurisdiction location, amounts, tax rates, reasons for taxation, origin and destination addresses, amounts in the filing currency, and selected transaction metadata.\n\nThe export also includes transactions for tax situations that are non-taxable. This applies to transactions occurring where you’re not registered, transactions in jurisdictions not supported by Stripe Tax, or transactions where the jurisdiction doesn’t impose tax. You can filter these transactions from your report by selecting the **Exclude non-taxable transactions** option when exporting. The export still includes transactions for other non-taxable scenarios.\n\nUse this export for US states that require sub-state level reporting.\n\n[Download example CSV file](https://stripe.com/files/docs/tax/itemized-export.csv)\n\nIf you’ve registered for the One Stop Shop (OSS) within the European Union, an overview of all your EU transactions can be downloaded. This downloadable content can assist in preparing your VAT OSS return. But please be aware, the Itemized export does include non-taxable transactions (unless purposely excluded) and domestic transactions, both of which aren’t to be reported in an OSS return.\n\n### Summarized export ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe Summarized export provides an overview of completed transaction line items, categorized by country, state, jurisdiction, and tax rate, when Stripe Tax is enabled. Each row provides information such as jurisdiction location, applied tax rate, amounts in the filing currency and the [presentment currency](https://docs.stripe.com/currencies#presentment-currencies \"presentment currency\"). In certain cases, there might be multiple rows for the same jurisdiction due to potential variations in tax rates. This export doesn’t include transactions that lack a registration or are classified under unsupported jurisdictions and product tax codes.\n\nUse this export for country-level filings and VAT OSS, as well as for simpler US states.\n\n[Download example CSV file](https://stripe.com/files/docs/tax/summarized-export-v2.csv)\n\n## Imports ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWe’re holding a beta for a feature that allows you to import a CSV of transaction data from platforms like Amazon, Shopify, eBay, and so on directly into Stripe Tax. It will allow you to have a single, consolidated view of all your sales and tax obligations across platforms. See the signup form below if you’re interested in joining the beta.\n\nAfter you import a CSV that meets the format requirements, you can:\n\n*   See all your sales tax collection in one place.\n*   Determine how much sales tax you owe for the reporting period—which means you won’t need to perform manual calculations across platforms.\n*   Make sure you stay compliant by having the most accurate tax liability information.\n\nThis feature reinforces our goal to provide the most comprehensive sales tax management solution for Stripe Tax customers. We want to eliminate the need to manage your tax compliance across selling platforms so you can focus on other parts of your business.\n\nUse the following signup form if you want to participate in the beta. If you’re selected for the beta, we’ll contact you with more information about the next steps.\n\n## Location reports (US only) ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe Location reports provide a summary of transaction and refund data aggregated for specific US locations. Each report aligns with state filing and formatting requirements and corresponds to the specific filing periods of the online filing portal. You can select the frequency and period within the report, which the state determines.\n\nThese reports can only be viewed within the Dashboard and can’t be downloaded.\n\nStripe Tax currently doesn’t support use cases beyond your transaction data, such as credits, prepayments, discounts, and more. As a result, the final numbers for your business’s filing might vary.\n\n#### Note\n\nThe reports include transactions starting from January 1, 2023, and support fiscal annual periods beginning from 2024 onwards. You can access and view your transaction data from 2022 in the Itemized and Summarized exports.\n\nIn May 2024, we changed how some jurisdictions display in our Location reports, Itemized exports, and Summarized exports to more consistently and accurately represent how taxing jurisdictions appear across Stripe Tax. These changes include:\n\n*   Changing the names of certain jurisdictions\n*   Splitting some jurisdictions into multiple sub-jurisdictions As a result, the jurisdiction names used in the Location reports, Itemized exports, and Summarized exports might not be identical for reports and exports that include data from May 2024 onwards.\n\n### Refunds![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nRefunds associated with an original transaction period are reported in that same period, even if they occur later. This can affect the aggregated amounts in a report. Stripe currently doesn’t allow the reassigning of refunds to alternate periods.\n\n### Tax types![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax only supports reporting on transactions that are classified as Sales or Use tax types.\n\nYou have the option to view within the [Itemized export](#itemized-exports) a detailed tax breakdown of each transaction for this report period including other tax types.\n\n### Location specific considerations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe locations listed below have additional report considerations:\n\n*   [Alaska](https://docs.stripe.com/tax/supported-countries/united-states/alaska#location-reports)\n*   [Arizona](https://docs.stripe.com/tax/supported-countries/united-states/arizona#location-reports)\n*   [Florida](https://docs.stripe.com/tax/supported-countries/united-states/florida#location-reports)\n*   [Hawaii](https://docs.stripe.com/tax/supported-countries/united-states/hawaii#location-reports)\n*   [Illinois](https://docs.stripe.com/tax/supported-countries/united-states/illinois#location-reports)\n*   [Kentucky](https://docs.stripe.com/tax/supported-countries/united-states/kentucky#location-reports)\n*   [Tennessee](https://docs.stripe.com/tax/supported-countries/united-states/tennessee#location-reports)\n*   [Washington](https://docs.stripe.com/tax/supported-countries/united-states/washington#location-reports)\n\n## Access data using exports and reports ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo download or view your Stripe Tax data, navigate to the **Registrations** tab of the [Dashboard](https://dashboard.stripe.com/tax/registrations).\n\n### Exports ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can export your transaction data into either an itemized or summarized report. These exports contain detailed information at the line item, imposition, and jurisdiction levels. Reports are accessible for all locations where you enable Stripe Tax.\n\nTo export transaction data in CSV format:\n\n1.  Click **Export transactions**.\n2.  Specify the date range.\n3.  Select either **Itemized export** or **Summarized export**.\n4.  Click **Export** to generate and download the file.\n\n#### Itemized export by location ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo export itemized transactions for a jurisdiction in CSV format:\n\n1.  Navigate to the **Registration details** page for a location.\n2.  Click **Export transactions**.\n3.  Specify the date range.\n4.  Click **Export** to generate and download the file.\n\n### Location reports ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo view a US location specific report:\n\n1.  Navigate to the **Registration details** page for a location.\n2.  Select **View Report**.\n3.  To build the report for a state, select the **Frequency**, then the **Period**.\n\n## Tax calculations recorded in reports![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax exports include transactions committed with the [Stripe Tax API](https://docs.stripe.com/tax/custom) and operations on Stripe objects with `automatic_tax[enabled]=true`.\n\n#### Note\n\nThe recorded transactions are considered effective on the date that they finalize and tax amounts aren’t recalculated.\n\nStripe Tax exports record the following operations, which _increase_ the balance of total tax collected:\n\n*   Customer completes a payment in a Checkout Session. This also applies to Checkout Sessions created through [Payment Links](https://docs.stripe.com/api/payment_links/payment_links).\n*   Finalizing an Invoice. This applies to one-off Invoices and Subscription renewal Invoices. [Invoice finalization](https://docs.stripe.com/invoicing/integration/workflow-transitions) happens when the Invoice’s state transitions from `draft` to `open` state. This transition happens _before_ the Invoice is paid.\n*   Transitioning an Invoice’s state from `uncollectible` to `paid` through the [Pay Invoices API](https://docs.stripe.com/api/invoices/pay).\n*   [Voiding](https://docs.stripe.com/api/credit_notes/void) a Credit Note.\n*   [Creating](https://docs.stripe.com/api/tax/transactions/create_from_calculation) a tax transaction with the Stripe Tax API.\n\nStripe Tax exports record the following operations, which _decrease_ the balance of total tax collected:\n\n*   [Voiding](https://docs.stripe.com/api/invoices/void) an Invoice.\n*   Marking an Invoice as [uncollectible](https://docs.stripe.com/api/invoices/mark_uncollectible).\n*   [Creating](https://docs.stripe.com/api/credit_notes/create) a Credit Note.\n*   A [Refund](https://docs.stripe.com/api/refunds) of a Charge associated with an Invoice or a Checkout Session.\n*   Creating a [reversal](https://docs.stripe.com/api/tax/transactions/create_reversal) (refund) tax transaction with the Stripe Tax API.\n\nStripe Tax doesn’t record the following operation in Tax exports:\n\n*   [Disputes](https://docs.stripe.com/disputes) that are upheld by the cardholder’s bank. Stripe Tax doesn’t decrease the balance of the collected total tax.\n*   Refunds of [uncaptured amounts](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-amount_to_capture) of a payment. This can happen when performing a [partial capture](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-amount_to_capture) for payments of Checkout sessions using [`capture_method=manual`](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-capture_method). When the capture amount is lower than the original amount, Stripe Tax doesn’t reduce the total balance of the collected tax.\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Set up Stripe Tax](https://docs.stripe.com/tax/set-up)\n*   [Products, prices, tax codes, and tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior)\n*   [Registering for tax](https://docs.stripe.com/tax/registering)\n*   [Tax filing and remittance](https://docs.stripe.com/tax/filing)",
    "title": "Tax reporting | Stripe Documentation",
    "description": "Learn about different reporting available in Stripe Tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/monitoring",
    "markdown": "# Monitor your obligations | Stripe DocumentationThe Stripe Docs logo\n\n## Use our tool to see where you need to pay tax based on past transactions.\n\nStripe Tax provides insights about your potential tax registration obligations (called economic nexus in the US). We help you understand where you might have to register, collect, and remit tax based on your sales into a state or country, even if you don’t have physical presence there.\n\n#### Note\n\nTax provides threshold monitoring primarily for payments processed by Stripe. The only out of band payments we currently include are invoices processed off of Stripe and transactions created using the Stripe Tax APIs.\n\n## How it works![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTax uses your preset tax code and [location attribution](https://docs.stripe.com/tax/monitoring#location-attribution) for each Stripe-processed sale minus refunds to see how your total sales within a given [time window](https://docs.stripe.com/tax/monitoring#time-window) compare to tax thresholds in different jurisdictions. Tax uses time windows defined by local tax rules and assumes all sales are B2C unless you have included a VAT ID for your customer. Your obligations might differ if you only sell nontaxable items or make B2B sales. Learn more about [when you need to register to collect tax in each location](https://docs.stripe.com/tax/supported-countries).\n\n### Exceptions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   We provide insight into the places where you don’t have a physical presence so obligations aren’t monitored for your home US state or country.\n*   Obligations are only monitored in live mode.\n*   Connect platforms can only access transactions associated with their platform. Transactions linked to your platform’s connected accounts don’t count toward your platform’s tax registration thresholds. They only count toward the connected accounts’ tax thresholds.\n*   Application fees that Connect platforms charge don’t count toward the platform’s tax registration thresholds.\n*   We monitor locations that Stripe Tax supports. [Learn more](https://docs.stripe.com/tax/supported-countries) about those locations.\n*   We treat obligations for tangible product sales and services the same.\n*   We can’t differentiate between retail and wholesale sales.\n\n### Location attribution ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nLocation attribution is an important part of monitoring tax thresholds. To correctly determine your tax obligations, Stripe Tax attributes a location to each processed transaction once per day, adding new resulting transactions to your monitoring threshold in a 24-hour cycle. Location attribution happens even if tax isn’t calculated for the transactions, and it’s a different process from the [address validation](https://docs.stripe.com/tax/customer-locations) that we perform to calculate tax. You might not need specific tax rates and precise address information for threshold monitoring purposes, unlike when Stripe calculates and collects tax for transactions.\n\nTo attribute a location, Stripe Tax uses available information for that transaction and prefers some information sources to others—some examples are the current customer address, country of the card issuer, and the customer’s IP address.\n\nStripe Tax uses information in the following order:\n\n1.  **Stripe Tax validated address:** if we calculated tax for the transaction, Stripe Tax already validated the address. We use the same address when calculating the tax threshold.\n2.  **Customer address:** property in the [Customer](https://docs.stripe.com/api/customers/object) object responsible for the transaction. Stripe Tax uses the country, state, and postal code fields to determine a jurisdiction.\n3.  **Address Verification (AVS) postal code:** [AVS](https://docs.stripe.com/disputes/prevention/verification#avs-check) is a service that verifies the authenticity of a transaction by checking if the provided address matches the cardholder’s billing address. If the transaction is successful, Stripe Tax converts a US or Canadian postal code into a state and determines the jurisdiction.\n4.  **Country of the card issuer:** Stripe Tax uses the credit card issuer’s bank country to determine a jurisdiction for the transaction. For transactions in the US and Canada, we might also need state information.\n5.  **Payment method:** Stripe Tax uses country-specific payment methods to determine the location of a payment. We assume that a transaction through [iDeal](https://docs.stripe.com/payments/ideal \"iDeal\") is from the Netherlands and that a transaction through Giropay is from Germany, for example.\n6.  **Customer’s IP address:** as a last resort, we use the customers IP address to determine a jurisdiction.\n\nWhen Stripe Tax can’t determine the location for a transaction, we group its information under `Unattributed revenue`. Where possible, we break out globally unattributed revenue and US unattributed revenue. For example, if we’re able to determine the customer is in the US (perhaps by using an IP address) but don’t have enough information to make a granular determination, we categorize that as US unattributed revenue.\n\n![Unattributed revenue in the Stripe Dashboard](https://b.stripecdn.com/docs-statics-srv/assets/unattributed-revenue.ff34b48ec1ba3683ad460f1306aa3551.png)\n\n#### Handling unattributed revenue![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe table below explains what information is needed for different countries.\n\n| Example addresses | Explanation | Attributed |\n| --- | --- | --- |\n| *   `country`: US<br>*   `state`: NY | **Country and state**<br><br>You need to provide country and state information to calculate tax thresholds in the US. |     |\n| *   `country`: US<br>*   `postal_code`: 10038 | **Country and postal code**<br><br>We match the 5 or 9-digit postal code with its corresponding state. |     |\n| *   `country`: US | **Country**<br><br>In the US, each state defines it’s rules for when to establish economic nexus. Therefore, country-only information isn’t enough to attribute locations to transactions. Transactions without state information appear under US unattributed revenue. |     |\n\n## Using the Dashboard![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nOn the [Thresholds tab](https://dashboard.stripe.com/tax/thresholds), you can see insights about your potential tax registration obligations.\n\nYou can monitor tax obligations in the following categories:\n\n*   **Exceeded:** Where your estimated sales or transactions are over the location’s threshold and your business likely needs to register for tax.\n*   **Monitoring:** Where you haven’t exceeded a threshold yet, but you do have buyers located in that market. We’ll provide a percent-to-threshold to help you determine when you might need to register.\n*   **Unattributed:** When Stripe Tax isn’t able to determine the location for a transaction, we group its information under this category. Where possible, we break out globally unattributed revenue and US unattributed revenue.\n\nTo learn more about an individual state or country comparison, click the overflow menu (), then **View details**. This page contains information about the threshold itself and your latest sales.\n\nIf you have questions about your latest sales in a location, send an email to: [stripe-tax@stripe.com](mailto:stripe-tax@stripe.com).\n\n### Time windows ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAs noted above, each jurisdiction might have a different time window for calculating nexus obligations. For example, some only look at the past calendar month or quarter whereas others use a rolling basis. You can see how each individual jurisdiction calculates economic nexus as part of the Review flow, but in general, Stripe Tax supports the following calculation windows and methodology:\n\n*   **Previous or current year:** Stripe Tax uses the previous or current calendar year to calculate the count and amount of transactions.\n*   **Previous year:** Stripe Tax uses the previous calendar year to calculate the count and amount of transactions.\n*   **Rolling year by quarter:** Stripe Tax uses the last four full quarters to calculate the count and amount of transactions.\n*   **Rolling 12 months:** Stripe Tax uses the last 12 months to calculate the count and amount of transactions.\n\n### Stripe Tax API transactions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBy default, Stripe Tax monitors all [Stripe Tax API](https://docs.stripe.com/tax/custom) transactions. You can choose to exclude your Stripe Tax API transactions by adjusting the **API transactions** setting in your [Tax Settings](https://dashboard.stripe.com/settings/tax).\n\n## Tax threshold notifications![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax notifies you about potential tax obligations (known as economic nexus in the US). We send notifications after you hit a threshold in any location. Stripe sends tax threshold notifications by email, and displays them in the Dashboard to the account owner.\n\n### Email notification![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWe send email notifications from `support+updates@stripe.com` to the account owner’s email. The email notification includes your account name and links to the monitoring tool and other resources that provide additional information.\n\n![Preview of tax threshold notification](https://b.stripecdn.com/docs-statics-srv/assets/tax-threshold-email-preview.ae31e2cbfc04dfdf56b3bffa5b3c1295.png)\n\n### Dashboard notification![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you log into the Dashboard as the account owner, you can see notifications. Click the bell icon in the navigation bar to show all of your Dashboard notifications.\n\n#### Note\n\nClick **Review tax thresholds** inside of the notification to go to the tax monitoring tool.\n\nYou can exceed a tax threshold in a single location.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/tax-threshold-single-location.c59b7a897eb7c29de32a97c959277b67.png)\n\n### Tax threshold notification preconditions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe only notifies you when you have exceeded a tax threshold based on Stripe’s calculations. To receive tax threshold notifications, you must meet the following requirements:\n\n*   You must have opted into [Stripe Tax](https://dashboard.stripe.com/tax).\n*   You must not have disabled [Stripe Tax notifications](https://dashboard.stripe.com/settings/user).\n*   You must not have an active live mode tax registration for the location.\n*   You must not have received any tax threshold notification within the past 7 days.\n\n### Tax threshold notification frequency![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAfter you cross a threshold, Stripe sends you a notification within 1 or 2 days. If Stripe sent you a notification in the past 7 days, you receive batched notifications for new threshold status changes a week after the last notification.\n\n1.  **March 15**: You exceed a threshold in Germany.\n2.  **March 16**: Stripe notifies you about exceeding a tax threshold in Germany.\n3.  **March 25**: You exceed a threshold in the Netherlands.\n4.  **March 26**: Stripe notifies you about exceeding a tax threshold in the Netherlands.\n\n### Disable tax threshold notifications![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’re the account owner, you can disable tax threshold notifications by going to your [profile settings](https://dashboard.stripe.com/settings/user).\n\n![Tax threshold notifications setting in the Stripe Dashboard](https://b.stripecdn.com/docs-statics-srv/assets/tax-threshold-email-preferences.2ef87036a22c844c6550a348e155c1bf.png)\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Checkout and Tax](https://docs.stripe.com/tax/checkout)\n*   [Billing and Tax](https://docs.stripe.com/billing/taxes/collect-taxes)\n*   [Products, prices, tax codes, and tax behavior](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior)",
    "title": "Monitor your obligations | Stripe Documentation",
    "description": "Use our tool to see where you need to pay tax based on past transactions.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/tax-for-marketplaces",
    "markdown": "# Tax for marketplaces | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about tax requirements for platforms and marketplaces, and how to enable Stripe Tax to collect tax on transactions when the Connect platform is liable.\n\n## Tax requirements for platforms and marketplaces![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nMany countries and US states require marketplace operators to collect sales tax and VAT on their facilitated sales. The US refers to these businesses as marketplace facilitators, while other regions, such as Europe, might refer to them deemed sellers.\n\nAs a marketplace operator, your tax collection requirements differ depending on the country or state. However, if your electronic interface enables transactions between buyers and sellers and you directly or indirectly collect customer payments, you might need to fulfill tax collection responsibilities.\n\nIf your businesses operates a marketplace or platform, you must first determine whether they qualify as a marketplace facilitator or a deemed seller, then make sure that they maintain tax compliance. If you’re unsure about your business’s tax requirements, consult a tax advisor.\n\nIf your business operates a marketplace and wants to collect tax on sales facilitated through this marketplace, refer to details below to enable Stripe Tax for marketplaces.\n\n## Enable Stripe Tax for marketplaces![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax enables businesses to calculate, collect, and file indirect taxes in over 40 countries, across hundreds of product categories.\n\nUse this guide if your platform is responsible for collecting, filing, and reporting taxes.\n\n#### Note\n\nWe use the platform’s head office location, preset tax code, and tax registrations to calculate taxes. However, we don’t use the connected account information for tax purposes.\n\n1.  [Configure your platform account for tax collection](#set-up)\n2.  (Optional) [Assign tax codes to product catalog](#assign-product-tax-codes)\n3.  [Integrate tax calculation and collection](#enable-tax-collection)\n4.  [Withhold the collected tax amount](#tax-withholding)\n5.  [Access Stripe Tax reports](#access-reports)\n\n[](#set-up)\n\nTo collect taxes, you need the platform account’s tax settings and registrations.\n\n### Use the Stripe Dashboard\n\n### Use the Stripe API\n\n[](#assign-product-tax-codes)\n\nTo calculate taxes, Stripe Tax requires that you classify products into tax codes. You can do so by supplying [a preset tax code](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#preset-tax-codes) for the platform account, which might be sufficient if you typically sell a single category of items or services.\n\nAdditionally, you can [map tax codes to each product](https://docs.stripe.com/tax/products-prices-tax-codes-tax-behavior#tax-code-on-product) to give you more control over tax categorization. You might have to map each product that a seller sets up on your marketplace. You can find a list of supported tax codes from [available tax codes](https://docs.stripe.com/tax/tax-codes) or retrieve it from the Stripe [Tax Code API](https://docs.stripe.com/api/tax_codes).\n\n[](#access-reports)\n\n### Use the Stripe Dashboard\n\n### Use the Stripe API",
    "title": "Tax for marketplaces | Stripe Documentation",
    "description": "Learn about tax requirements for platforms and marketplaces, and how to enable Stripe Tax to collect tax on transactions when the Connect platform is liable.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/filing",
    "markdown": "# File and remit | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about filing and remitting tax you have collected.\n\nIf you’re a business collecting tax, you must file and remit the tax collected in every location that you’re [registered in](https://docs.stripe.com/tax/registering).\n\nThe tax authority in each location determines the rules for reporting and filing taxes. For example, some states in the US want businesses to report at the city, county, or other level when filing, whereas others only need information at a more consolidated or state level. Additionally, each location mandates their own method and timing of remittance, and can vary depending on your volume of sales into that location.\n\nStripe Tax users can leverage transaction exports and location reports to prepare, file, and remit the tax that was automatically calculated and collected. Stripe Tax doesn’t currently file or remit taxes on your behalf. However, we do have trusted partners who can help manage your filing and remittance needs:\n\n*   For automating filing in the US, we recommend using [TaxJar’s AutoFile solution](https://go.taxjar.com/2021StripeTaxInquiry_LP-01-Request.html).\n*   For Europe and APAC, find more information browse the [Tax Stripe Apps](https://marketplace.stripe.com/categories/tax) on the App Marketplace.\n\nIf you don’t use Stripe Tax but use manual [Tax Rates](https://docs.stripe.com/billing/taxes/tax-rates) to define and maintain rates on your own, there are specific exports available depending on your integration and use case. You can leverage up to four different reports depending on your integration.\n\n## Downloading data![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFrom the [Tax Rates](https://docs.stripe.com/billing/taxes/tax-rates) list in the Dashboard, you can export the data files required for tax reporting calculations.\n\nTax Rates might provide up to four different levels of tax report export files depending on your integration:\n\n*   Invoice line item tax export—A lower-level export, this includes details down to the line item level, including per-line-item tax rates, inclusive or exclusive, amounts, and so on.\n*   Invoice totals export—Shows the aggregate tax collected on the invoice as a whole, including adjustments for any refunds.\n*   Checkout payment mode line item tax export—A lower-level export, this includes details down to the line item level, including per-line-item tax rates, whether it’s inclusive or exclusive, amounts, and so on.\n*   Checkout payment mode totals export—Shows the aggregate tax collected on the invoice as a whole, including adjustments for any refunds.\n\nTo get your gross sales, use the Invoice or Checkout line item level export. To factor in refunds, use the Invoice total export.\n\n## Filing frequency![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe local tax authority specifies the tax filing frequency during the tax collection registration process. Depending on your specific requirements, you might need to remit tax on a monthly, annual, or other designated frequency. Filing frequencies can vary based on factors such as annual revenue and other considerations. Contact your local tax authority to confirm your filing frequency if you’re uncertain.\n\n## Refunds![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nExports and reports include refunds. If a refund of tax is issued because of a return of goods, local tax authorities might require an amendment to the original tax return to process the refund. To claim the refund on your tax return, reach out to your local tax authority.",
    "title": "File and remit | Stripe Documentation",
    "description": "Learn about filing and remitting tax you have collected.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/taxes/tax-rates",
    "markdown": "# Tax rates | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to collect and report taxes with tax rate objects.\n\nStripe allows you to define any number of tax rates and apply them to [invoices](https://docs.stripe.com/api/invoices \"invoices\"), [subscriptions](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\"), and one time payments when using Checkout. However, we won’t automatically set them on your behalf.\n\nIf you’re looking for automated tax calculation where you don’t need to define the rates, use [Stripe Tax](https://docs.stripe.com/tax).\n\nWhen applying tax rates, Stripe calculates the [total tax amount](https://docs.stripe.com/billing/taxes/tax-rates#tax-amounts) per tax rate, and summarizes it in a table that you can export into tax summary reports.\n\n## Creating tax rates![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’re working with a small number of tax rates, you can manage and create them in the [Dashboard](https://dashboard.stripe.com/test/tax-rates). After creating tax rates, you can apply them to [invoices](https://docs.stripe.com/invoicing/taxes/tax-rates), [subscriptions](https://docs.stripe.com/billing/taxes), and [one-time payments](https://docs.stripe.com/payments/checkout/taxes) or [subscriptions](https://docs.stripe.com/billing/taxes/collect-taxes?tax-calculation=tax-rates#adding-tax-rates-to-checkout) created through Stripe Checkout.\n\nCreate a catalog of tax rates that meet the requirements for the jurisdictions that you do business in. For example, if you operate in Europe, you might want to create a catalog of tax rates for OSS VAT.\n\n#### Creating tax rates through the API![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following example demonstrates how you can create a tax rate through the API.\n\n`curl https://api.stripe.com/v1/tax_rates \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d display_name=\"Sales Tax\" \\  -d inclusive=false \\  -d percentage=\"7.25\" \\  -d country=US \\  -d state=CA \\  -d jurisdiction=\"US - CA\" \\  -d description=\"CA Sales Tax\"`\n\nRequired properties:\n\n*   The `display_name` appears on your customer’s invoice, and is usually a short name that describes the specific type of tax, such as `Sales`, `VAT`, or `GST`.\n*   The `inclusive` property determines whether the tax `percentage` is added to, or included in, the overall amount.\n*   The `percentage` is a number (up to 4 decimal places) that represents the tax percentage to be collected.\n\nOptional properties:\n\n*   The optional `country` property is a valid [two-letter ISO country code](https://www.nationsonline.org/oneworld/country_code_list.htm). Some countries (for example, United States) require an additional two-letter `state` property. Use these properties to apply dynamic tax rates based on your customer’s billing or shipping address in Checkout Sessions.\n*   The optional `jurisdiction` property represents the tax jurisdiction of the tax rate and can be used to differentiate between tax rates of the same percentage. `jurisdiction` appears on your customer’s invoice. In the Dashboard, jurisdiction appears as the _Region_ label for the tax rate.\n*   You can also store additional details in the `description`. Your customers won’t see this property.\n\nYou can’t change the percentage, country, or state properties after you set them, and you can only set them when you create the tax rate. This ensures that existing subscriptions and invoices using tax rates aren’t affected. If you need to update these properties, create a new tax rate and archive the old object.\n\n## Inclusive versus exclusive tax ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTax rates can either be exclusive or inclusive. An _exclusive_ tax is not included in the invoice subtotal, whereas an _inclusive_ tax is.\n\nThe following table illustrates a 25% tax rate modifying the total amount due, depending on whether it’s exclusive or inclusive.\n\n| Tax | Subtotal | Tax due | Total |\n| --- | --- | --- | --- |\n| 25% Exclusive | $5.00 | $1.25 | **$6.25** ($5.00 + $1.25) |\n| 25% Inclusive | $5.00 | $1.00 (already included in the total) | **$5.00** ($4.00 + $1.00) |\n\n## Tax exempt and reverse charge![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can set the exemption status for a [Customer](https://docs.stripe.com/api/customers \"Customers\") to either exempt or reverse.\n\nIn both cases, no tax is calculated on the invoice.\n\nIn the case where the customer is liable for the tax (that is, under the reverse-charge procedure within EU VAT), set the exemption status to `reverse`. The invoice and receipt PDF includes the text **“Reverse charge”**.\n\n[Download example reverse-charge invoice PDF](https://stripe.com/files/docs/billing/taxes/example-reverse-charge.pdf)\n\nIf a one time payment is performed using Checkout, the exemption status is captured as [customer\\_details](https://docs.stripe.com/api/checkout/sessions/object#checkout_session_object-customer_details) in the Checkout Session object.\n\nIf the customer is either exempt or reverse, for invoices with _inclusive_ tax rates, the buyer pays the `unit_amount` price _minus_ the tax that would’ve been paid had the user not been exempt or reverse. In other words, manual tax rates effectively calculate taxes as if the user weren’t exempt and then “backs out” the taxes.\n\nThe following table illustrates a 10% tax rate modifying the total amount due for an exempt or reverse customer. The first row is an example of “backed out” taxes.\n\n| Tax | Amount | Tax due | Total |\n| --- | --- | --- | --- |\n| 10% inclusive | 100 | $0  | $90.91 (inclusive tax of $9.09 is subtracted from the price) |\n| 10% exclusive | 100 | $0  | $100 |\n\n## Using multiple tax rates ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can apply Tax rates to line items or set them as a default for all line items in an invoice. You can set up to five tax rates per line item. When you set tax rates on both a line item and the invoice, the rates for that invoice don’t apply to that line item.\n\nFor example, this invoice has two overall tax rates of 9.975% and 5%:\n\n| Invoice | Item tax rate | Overall invoice tax rate | Item tax rate (Effective) |\n| --- | --- | --- | --- |\n| Line item 1 | (none) | 9.975% and 5% | 9.975% and 5% |\n| Line item 2 | 10% | 9.975% and 5% | 10% |\n| Line item 3 | 1% and 2% | 9.975% and 5% | 1% and 2% |\n\n## Tax amounts ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you apply tax rates to an invoice, they’re aggregated into the [total\\_tax\\_amounts](https://docs.stripe.com/api/invoices/object#invoice_object-total_tax_amounts) attribute. This attribute represents the sum of all tax amounts, per tax rate, over the entire invoice.\n\nFor example, here’s an invoice where two line items have two different rates:\n\n| Invoice | Amount | Tax Rate | Tax Amount | Totals |\n| --- | --- | --- | --- | --- |\n| Line item 1 | $5.00 | 5% (excl) | $0.25 | —   |\n| Line item 2 | $10.00 | 10% (excl) | $1.00 | —   |\n| **Total Tax Amount** | —   | —   | $1.25 | —   |\n| **Total** | $15.00 | —   | —   | $16.25 |\n\n[Download example invoice PDF](https://stripe.com/files/docs/billing/taxes/example-tax-amounts.pdf)\n\n## Rounding![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen determining tax amounts, you can do either of the following:\n\n*   Round at the invoice line item level to the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal) before summing individual tax amounts across the entire invoice. We refer to this as “line item level”.\n*   Sum up all individual taxable amounts unrounded per tax rate. Combine them to a subtotal, apply the tax rate on the subtotal, and then round. We refer to this as “invoice level”.\n\nSelect this configuration on the [invoice settings](https://dashboard.stripe.com/settings/billing/invoice) page in the Dashboard. The rounding configuration is only available for invoices with manual tax rates. Invoices with automatic Stripe tax always sum up the tax amounts first and then round.\n\n| Name | Amount | Inclusive Tax Rate | Taxable Amount (before rounding) | Tax Amount (before rounding) | Tax Amount (after rounding) |\n| --- | --- | --- | --- | --- | --- |\n| Line Item 1 | $1000.00 | 10% | $909.0909 | $90.9091 | $90.91 |\n| Line Item 2 | $50.00 | 10% | $45.4545 | $4.5455 | $4.55 |\n| Subtotal | $1,050.00 | —   | —   | —   | —   |\n| Total Tax Amounts | —   | —   | —   | —   | $95.46 |\n| Total rounded | $1,050.00 | —   | $954.54 | —   | $95.46 |\n\n[Download example line item level rounding invoice PDF](https://stripe.com/files/docs/billing/taxes/example-line-item-level-rounding.pdf)\n\n## Discounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nDiscounts are usually applied before tax, but this isn’t always the case.\n\nReading each line left-to-right, noting the formula applied (in the table header), you can trace the values as they’re applied to the final, total amount.\n\n### Exclusive tax discount example![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe always applies discounts before exclusive tax.\n\nThis example shows how we apply discounts to an exclusive tax rate.\n\n| Invoice Item | Amount | Discount % | Discount $ | Post Discount | Tax Rate | Tax $ | **Total** |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Formula** | —   | —   | `Amount * Discount` | `Amount - Discount$` | —   | `PostDiscount * TaxRate` | `PostDiscount + Tax$` |\n| Line item 1 | $5.00 | 10% | $0.50 | $4.50 | 5% exl. | $0.23 | **$4.73** |\n| Line item 2 | $10.00 | 10% | $1.00 | $9.00 | 5% exl. | $0.45 | **$9.45** |\n| **Total** | **$15.00** |     | **$1.50** | **$13.50** |     | **$0.68 (@ 5% exl.)** | **$14.18** |\n\n[Download example discounts invoice PDF](https://stripe.com/files/docs/billing/taxes/example-exclusive-tax-with-discount.pdf)\n\n### Inclusive tax discount example![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen tax rates are inclusive, Stripe Tax applies discounts to the original amount first. Then, we recalculate taxes based on the remaining amount. This reduction has the side effect of reducing the tax amount due.\n\n| Invoice Item | Amount | Discount % | Discount $ | Post Discount | Tax Rate | Tax $ (Included) | **Total** |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Formula** | —   | —   | `Amount * Discount%` | `Amount - Discount$` | —   | `PostDiscount - PostDiscount / (1 + TaxRate)` | `PostDiscount` |\n| Line item 1 | $5.00 | 10% | $0.50 | $4.50 | 5% incl. | $0.21 | **$4.50** |\n| Line item 2 | $10.00 | 10% | $1.00 | $9.00 | 5% incl. | $0.43 | **$9.00** |\n| **Total** | **$15.00** | **—** | **$1.50** | **$13.50** | **—** | **$0.64 (@ 5% incl.)** | **$13.50** |\n\n[Download example invoice PDF](https://stripe.com/files/docs/billing/taxes/example-inclusive-tax-with-discount.pdf)\n\n### Both inclusive and exclusive tax with discount example![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn the case where you have both inclusive and exclusive tax, the two rules apply together in the following steps for every line item:\n\n1.  We calculate the inclusive tax amount based on the post-discounted amount by multiplying by the inclusive tax rate.\n2.  We calculate the exclusive tax amount by multiplying the exclusive tax rate by the post-discounted amount, less the inclusive tax amount.\n3.  We calculate the total amount due by summing the post-discounted amount and the exclusive tax amount (calculated in step 2).\n\n| Invoice Item | Amount | Discount % | Discount $ | Post Discount | Inclusive Tax Rate | Inclusive Tax $ | Post Discount, Less Incl. Tax | Exclusive Tax Rate | Exclusive Tax $ | **Total** |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| **Formula** | —   | —   | `Amount * Discount%` | `Amount - Discount$` | —   | `PostDiscount - PostDiscount / (1 + TaxRate)` | `PostDiscount - InclusiveTax$` | —   | `PostDiscLessIncTax * TaxRate` | `PostDiscount + ExclTax$` |\n| Line item 1 | $5.00 | 10% | $0.50 | $4.50 | 5% incl. | $0.21 | $4.29 | 7% excl. | $0.30 | **$4.80** |\n| Line item 2 | $10.00 | 10% | $1.00 | $9.00 | 5% incl. | $0.43 | $8.57 | 7% excl. | $0.60 | **$9.60** |\n| **Total** | **$15.00** | **—** | **$1.50** | **$13.50** | **—** | **$0.64 (@ 5% incl.)** | **$12.86** | **—** | **$0.90 (@ 7% excl.)** | **$14.40** |\n\n[Download example invoice PDF](https://stripe.com/files/docs/billing/taxes/example-inclusive-and-exclusive-tax-with-discount.pdf)\n\n## Tax reporting and remittance ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAny business collecting taxes ultimately needs to remit tax to the appropriate government.\n\nSee [Tax reporting and filing](https://docs.stripe.com/tax/reports) to learn more.\n\n### Data exports![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFrom the Dashboard’s [Tax Rates list](https://dashboard.stripe.com/test/tax-rates/) page, you can export data files required for tax reporting calculations.\n\nStripe Billing provides two different levels of tax report export files:\n\n*   **Invoice line item tax export** — A lower-level export, this includes details down to the line item level, including per-line-item tax rates, inclusive/exclusive, amounts, and so on.\n*   **Invoice totals export** — Shows the aggregate tax collected on the invoice as a whole, including adjustments for any refunds.\n\nFor remittance reporting, use the line-item tax export to sum all amounts paid for all tax rates used. To factor in any refunds you will also need to pivot against the Invoice totals export.\n\n## Migrate to tax rates ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIf you’re using the deprecated `tax_percent`, `tax_info`, `tax_info_verification`, and `business_vat_id` fields, review the following options to migrate to tax rates and [Customer Tax IDs](https://docs.stripe.com/billing/customer/tax-ids) for better tax collection and reporting (remittance) tools.\n\n### Existing tax percent use cases have been migrated to tax rates![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nExisting `tax_percent` uses have been automatically converted into [tax rates](https://docs.stripe.com/api/tax_rates), and your invoices and subscriptions have been updated to reference the new objects through [default\\_tax\\_rates](https://docs.stripe.com/api/invoices/create#create_invoice-default_tax_rates).\n\nThis means that if you had previously been setting a `tax_percent` of `15%` on your invoices, Stripe has created a new `15%` tax rate object for you (although it lacks details such as a customer facing display name or a jurisdiction). If you continue to set the `tax_percent` to `15%`, Stripe dynamically creates a 15% tax rate for you to aid your migration. This works exactly as it had before.\n\nYou can manage your full list of tax rates in the Dashboard’s [tax rates](https://dashboard.stripe.com/tax-rates) page.\n\n### Migration options![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFor new invoices or subscriptions, we recommend performing the [full](#full) update to use tax rates.\n\n#### No action ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIf you take no action, your integration continues to work as it does today. As mentioned above, existing uses of `tax_percent` are made to look as if they used tax rates.\n\nAs your tax rates lack a [display\\_name](https://docs.stripe.com/api/tax_rates/object#tax_rate_object-display_name) and [jurisdiction](https://docs.stripe.com/api/tax_rates/object#tax_rate_object-jurisdiction), tax reporting might not be very useful. Invoices and receipts render a generic name for these rates—“Tax”.\n\n#### Minimal update with medium benefits ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nUse the Dashboard to edit pre-existing tax rates so taxes work for pre-existing invoices.\n\n1.  For tax rates that have been migrated for you, edit the [display\\_name](https://docs.stripe.com/api/tax_rates/object#tax_rate_object-display_name) to have a useful user-facing name. Display names are displayed to your customers on generated invoices and receipts (for example, “UST” for German VAT and “HST” for Ontario’s Harmonized Sales Tax).\n2.  Set the [jurisdiction](https://docs.stripe.com/api/tax_rates/object#tax_rate_object-jurisdiction) to store an associated tax jurisdiction (for example, “DE” for Germany or “NL Amsterdam” for the city of Amsterdam).\n\nInvoices and receipts show the `display_name` of tax rates. When determining how much tax to remit, you can group by jurisdiction.\n\n#### Full update and benefits ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWe no longer recommend using the `tax_percent` field for new invoices, and to use tax rates instead. Apply tax rates to [invoices](https://docs.stripe.com/invoicing/taxes/tax-rates) and [subscriptions](https://docs.stripe.com/billing/taxes). This allows you to add multiple tax rates per line item and invoice, display the correct name for tax rates and summaries on generated invoices and receipts, and improved tax reporting.\n\n### Customer Tax IDs![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe Customer’s `tax_info`, `tax_info_verification`, and `business_vat_id` fields are deprecated in favor of [Customer Tax IDs](https://docs.stripe.com/api/customers/object#customer_object-tax_ids). The [Tax ID](https://docs.stripe.com/api/customer_tax_ids) object provides:\n\n*   Multiple tax IDs on a Customer.\n*   Support for more tax ID types, such as EU VAT, NZ GST, and AU ABN.\n*   Automatic validation of EU VAT numbers against the [European Commission’s VAT Information Exchange System (VIES)](http://ec.europa.eu/taxation_customs/vies/) database.\n*   Automatic validation of Australian Business Numbers (ABNs) against the [Australian Business Register (ABR)](https://abr.gov.au/).\n*   Associate a country with a tax ID (for example, a German EU VAT number).\n\nSee [Customer Tax IDs](https://docs.stripe.com/billing/customer/tax-ids) for more information.",
    "title": "Tax rates | Stripe Documentation",
    "description": "Learn how to collect and report taxes with tax rate objects.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/connect/file-tax-forms",
    "markdown": "# File your 1099 tax forms\n\n## Learn how to file 1099 forms with the appropriate revenue authorities, such as the IRS and state tax authorities.\n\nBefore you can file your 1099 tax forms, you must ensure they’re complete and accurate.\n\n#### Getting your 1099 Forms\n\nIf you work for or use a platform that pays you through Stripe and want to learn about your 1099 forms and how to retrieve them, see [1099 tax forms](https://support.stripe.com/express/topics/1099-tax-forms).\n\n## Obtain “Ready” status![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe categorizes your tax forms as follows:\n\n*   [Will not file](https://docs.stripe.com/connect/get-started-tax-reporting#understand-tax-form-status)\n*   [Needs attention](https://docs.stripe.com/connect/get-started-tax-reporting#understand-tax-form-status)\n*   [Ready](https://docs.stripe.com/connect/get-started-tax-reporting#understand-tax-form-status)\n\nStripe automatically identifies forms if they exceed the IRS or state filing thresholds as `Ready` **or** `Needs attention`:\n\nYou must obtain a `Ready` status before you can file your tax forms.\n\nForms in `Needs attention` status might be missing the name, taxpayer identification number (TIN), or part of the address. You can provide missing information by [updating the connected account](https://dashboard.stripe.com/connect/accounts/overview) or [updating the tax form](https://docs.stripe.com/connect/modify-tax-forms).\n\nForms with federal filing status or state filing status of `Will not file` are below either the IRS or State thresholds. When a form doesn’t meet the threshold set at the federal or state level it’s not filed with that respective tax authority. You can file tax forms that are below the threshold or are incomplete by specifying [filing requirements](https://docs.stripe.com/connect/modify-tax-forms?method=csv#tax-form-status) in a CSV import. You can also use filing requirements to omit a tax form from filing.\n\n## “Ready” or “Needs Attention” forms that appear to be below threshold ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSome forms with totals that might seem below the [federal threshold](https://docs.stripe.com/connect/tax-reporting#1099-nec) can also show up as `Ready` or `Needs Attention` for two reasons:\n\n*   Grouped TIN\n*   The state threshold is lower than the IRS threshold\n\n### Grouped TIN![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPer IRS regulations, when multiple forms share the same Tax Identification Number (TIN), Stripe calculates each form’s filing eligibility based on the aggregate total of all those forms. As a result, an individual form that appears to be below the IRS threshold can still require filing because the total amount of all forms sharing its TIN exceeds the threshold.\n\nWhen Stripe calculates the aggregate total of forms that share the same TIN, it includes a maximum of 100 forms. If you have more than 100 forms that share the same TIN, manually verify their filing eligibility.\n\nStripe files each form separately, regardless of whether it shares a TIN with other forms.\n\nIf an account is grouped, you will see this in the Dashboard:\n\n![Tooltip showing a message about aggregating forms that use the same TIN](https://b.stripecdn.com/docs-statics-srv/assets/tax-forms-tin-aggregation.071bd2d810202ff9fc51490a8e9cd95e.png)\n\nTo determine which forms share the same TIN, enter the ID of the form in the **Forms grouped with** filter and apply the filter.\n\n### The state threshold is lower than the IRS threshold![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAnother reason why a form might appear as `Ready` or `Needs attention` for the IRS is that the form needs to be filed to a state that is part of the Combined Federal and State Filing (CFSF) program. For CFSF states, forms filed to the IRS are automatically forwarded to the appropriate state, eliminating the need to file separately to the state. Check the [1099 form requirements by state](https://docs.stripe.com/connect/tax-forms-state-requirements#check-1099-form-requirements-by-state) section to determine which states are part of the CFSF program and have lower state filing thresholds than the IRS.\n\n## Confirm tax form settings![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nConfirm the accuracy of your payer information and [tax form settings](https://docs.stripe.com/connect/tax-form-settings) before filing. You’ll reconfirm some tax form settings in the filing process, but you should also confirm the tax form settings before filing.\n\n## File your tax forms![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen you’re ready to file, perform one final check of the forms that are in a `Ready` state. Clicking the **File** button automatically pulls forms in a `Ready` state (or `Ready!` If you applied filing requirements) into the filing process.\n\nIf needed, you can complete the filing process more than once and file forms in batches as they become `Ready`. The forms for the IRS and the States will be filed at the same time. Currently, there’s no option to file forms with the IRS and States separately.\n\n#### Caution\n\nFrom the [Tax reporting](https://dashboard.stripe.com/connect/taxes/forms) view in the Dashboard, click the **File** button to begin the filing process.\n\nConfirm your payer information. To change any payer information, close the filing process and go to your tax form settings. If you file forms with incorrect payer information, the IRS requires you to mail a letter with the corrections.\n\n![Confirm payer information](https://b.stripecdn.com/docs-statics-srv/assets/file_confirm_payer_information_2022.19cfdfa5e374ca6b01578335169fd11a.png)\n\nNext, confirm the settings for specific tax form types. To change the settings, close the filing process and go to your tax form settings.\n\n![Confirm settings for tax form types](https://b.stripecdn.com/docs-statics-srv/assets/file_confirm_filing_details_2022.df239dbc219060ae9b125c98c8da27ce.png)\n\nFinally, accept a standard IRS penalty of perjury statement. Click the **File tax forms** button to queue your tax forms for automatic filing with the IRS.\n\nIf you aren’t filing any 1099 tax form corrections, you can disregard delivery preferences for form corrections. Choose either **Mail** or **None** and proceed with filing your forms. Tax forms will be delivered according to your [delivery settings](https://dashboard.stripe.com/settings/connect/tax_forms).\n\n![Accept an IRS penalty of perjury statement](https://b.stripecdn.com/docs-statics-srv/assets/review_and_file_corrections.ee91133e774d4310dcd1593071260f21.png)\n\nAccept an IRS penalty of perjury statement\n\nAfter you click **File tax forms**, a **Success** message displays.\n\n![Accept an IRS penalty of perjury statement](https://b.stripecdn.com/docs-statics-srv/assets/file_success_2022.ff8bfe09b578986397dcd9b3a6cbd690.png)\n\n## After filing your 1099 tax forms![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAfter you submit your filing request, Stripe collects and transmits your forms to the IRS and applicable state reporting agencies, and delivers forms to your connected accounts based on your delivery settings.\n\nIf you’ve enabled e-delivery, Stripe immediately emails your connected accounts so they can access forms in the Stripe Express Dashboard. For postal delivery, USPS first class mail can take up to 10 business days.\n\nIf you need to file a form with both the IRS and the state, the form is sent only one time to the connected account user. For more information, see [Deliver tax forms](https://docs.stripe.com/connect/deliver-tax-forms).\n\n## Understand tax form status![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo help you determine if you need to take action on any forms, the status of filed tax forms updates automatically.\n\n### Federal Filing Status:![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe IRS typically gets back to us within 5 business days. At that point, you should expect to see the **Federal Filing Status** change from `Filed` to either `Accepted` or `Rejected`.\n\n### State filing Status:![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStates have varied timelines for submission results. In most cases, state filings take about 7-14 days for **State filing status** to move from `Filed` to `Accepted` or `Rejected`.\n\n#### Note\n\nThe `Rejected` status implies that the form was either rejected by the State after submission, or that the State refused to accept the information during submission.\n\n### Delivery status![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFor electronic delivery, the delivery status changes to `Delivered` a few minutes after the email is delivered.\n\nFor postal mail, the delivery status changes to `Delivered` after Stripe’s postal delivery partner confirms that the mailing is delivered. That can take several days.\n\nA delivery status of `Failed` means that an issue prevented the mailing from being completed. This typically occurs when the mailing address on file contains errors.",
    "title": "File your 1099 tax forms | Stripe Documentation",
    "description": "Learn how to file 1099 forms with the appropriate revenue authorities, such as the IRS and state tax authorities.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/customer-locations",
    "markdown": "# Collect customer addresses | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about collecting customer address information to calculate tax.\n\nStripe Tax requires your customer’s location to automatically calculate tax. This requirement applies even if you don’t [register to collect taxes](https://docs.stripe.com/tax/registering). This guide helps you decide what address information to collect from your customer and how to handle regional differences.\n\n## Supported address formats ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nEach billing and shipping address has the fields `line1`, `line2`, `city`, `state`, `postal_code`, and `country`. The tables below describe the address formats supported when calculating tax.\n\n| Example addresses | Explanation | Supported |\n| --- | --- | --- |\n| *   `line1`: 27 Fredrick Ave<br>*   `city`: Brothers<br>*   `state`: OR<br>*   `postal_code`: 97712<br>*   `country`: US | **Full address**<br><br>A full address includes at least a line1 (street address), city, state, postal code, and country.<br><br>The address is matched to the closest address or street in the US Postal Service address database. If a match isn’t found, we use the geographical center (average location of addresses) of the 5-digit postal code as a fallback. |     |\n| 9-digit postal code:<br><br>*   `postal_code`: 97712-4918<br>*   `country`: US<br><br>5-digit postal code:<br><br>*   `postal_code`: 97712<br>*   `country`: US | **Country and postal code**<br><br>If you provide a 5-digit or 9-digit postal code, our system only uses the initial 5 digits for tax calculations. The tax is calculated at the geographical center, which reflects the average location of addresses within the 5-digit postal code area. Check that this is [suitable for your business](https://docs.stripe.com/tax/customer-locations#us-postal-codes). |     |\n| *   `state`: OR<br>*   `country`: US | **Country and state**<br><br>We can’t calculate tax for US customers with only an ISO [country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes) and [state code](https://en.wikipedia.org/wiki/ISO_3166-2). |     |\n| *   `country`: US | **Country**<br><br>We can’t calculate tax for US customers with only an [ISO country code](https://en.wikipedia.org/wiki/List_of_ISO_3166_country_codes). |     |\n\nUse one of the above address formats to ensure that we can consistently recognize your customer addresses. The country field must always be a valid [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1).\n\n## Which customer address we use ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe Tax uses a single address as your customer’s location when calculating tax. We choose the same address whether you’re selling a digital product, a service, or a shipped good.\n\nWe use the first viable item in the list below to determine your customer’s location:\n\n*   We use your customer’s [shipping address](https://docs.stripe.com/api/customers/object#customer_object-shipping) if it’s non-empty. Using an address that isn’t precise enough to calculate tax returns a status of `requires_location_inputs`.\n*   We use your customer’s [billing address](https://docs.stripe.com/api/customers/object#customer_object-address) if it’s non-empty. Using an address that isn’t precise enough to calculate tax returns a status of `requires_location_inputs`.\n*   If the transaction is tied to a payment method with full [billing details](https://docs.stripe.com/api/payment_methods/object#payment_method_object-billing_details) we use that billing address.\n*   If the billing details associated with the payment method are incomplete or missing, we assemble a billing address using the information provided, combined with details of the payment method itself (for example, using the country code of the credit card issuer to determine the country if the customer doesn’t provide it).\n*   Otherwise, we geolocate the Customer [IP address](https://docs.stripe.com/api/customers/object#customer_object-tax-ip_address) and use that location as your customer’s location. We store this geolocation result and reuse it for future transactions involving the same customer.\n\nThe payment method tied to the transaction is the first one that’s set in this list:\n\n*   The [Invoice](https://docs.stripe.com/api/invoices \"invoices\") [default payment method](https://docs.stripe.com/api/invoices/object#invoice_object-default_payment_method)\n*   The Subscription [default payment method](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_payment_method)\n*   The Customer [default payment method](https://docs.stripe.com/api/customers/object#customer_object-invoice_settings-default_payment_method)\n\n## Handling unrecognized locations ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAn unrecognized location refers to a customer’s address that Stripe Tax can’t use for tax calculation purposes. This can occur because of missing or incomplete address details. See [supported address formats](#supported-formats) to make sure the address is complete.\n\nInvoice finalization fails and payment isn’t attempted for invoices with `automatic_tax[enabled]=true` if the customer location is unrecognized. When finalization happens during an API request, such as [creating a subscription](https://docs.stripe.com/api/subscriptions/create#create_subscription-automatic_tax-enabled) or [sending an invoice](https://docs.stripe.com/api/invoices/send), Stripe returns a [`customer_tax_location_invalid`](https://docs.stripe.com/error-codes#customer-tax-location-invalid) error. When finalization happens asynchronously, for example when a subscription renews, Stripe sends an [`invoice.finalization_failed`](https://docs.stripe.com/api/events/types#event_types-invoice.finalization_failed) webhook and the invoice remains in the draft state.\n\n### Finalizing invoices with finalization failures![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nHow you correct `customer_tax_location_invalid` errors depends on whether you collect a recognized customer location. If you do, keep Stripe Tax enabled. If you don’t, disable Stripe Tax for the affected invoices and subscriptions.\n\nTo collect a recognized customer location:\n\n1.  [Update the address](https://docs.stripe.com/api/customers/update#update_customer-address) of the affected customer. Provide enough location details for your customer. For example, a country and state code alone aren’t enough to calculate tax in the US.\n2.  Confirm that the customer location is recognized by ensuring the value of [`customer.tax.automatic_tax`](https://docs.stripe.com/api/customers/object#customer_object-tax-automatic_tax) is `supported` or `not_collecting`.\n3.  [Finalize](https://docs.stripe.com/api/invoices/finalize) the affected invoice.\n\nAlternatively, to progress without a recognized customer location:\n\n1.  [Update the affected invoice](https://docs.stripe.com/api/invoices/update#update_invoice-automatic_tax) so `automatic_tax[enabled]=false`.\n2.  [Update the affected subscription](https://docs.stripe.com/api/subscriptions/update#update_subscription-automatic_tax-enabled) so `automatic_tax[enabled]=false`.\n3.  [Finalize](https://docs.stripe.com/api/invoices/finalize) the affected invoice.\n\n### Detecting asynchronous invoice finalization failures![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen an invoice can’t be finalized due to an unrecognized customer location, Stripe sends an `invoice.finalization_failed` webhook with `automatic_tax[status] = 'requires_location_inputs'`. When using subscriptions, we recommend listening for subscription and invoice related [events](https://docs.stripe.com/billing/subscriptions/webhooks) because most activity happens asynchronously.\n\n### Preventing invoice finalization failures![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo prevent invoices failing finalization due to an unrecognized customer location:\n\n*   Before [updating an existing subscription](https://docs.stripe.com/api/subscriptions/update#update_subscription-automatic_tax-enabled) from `automatic_tax[enabled]=false` to `automatic_tax[enabled]=true`, verify that the [customer has a recognized location](https://docs.stripe.com/tax/subscriptions/update#customer-locations). If the customer’s location is unrecognized, update and verify it before enabling Stripe Tax on the subscription.\n*   After [updating a customer](https://docs.stripe.com/api/customers/update) that has a subscription with `automatic_tax[enabled]=true`, verify that the value of `customer.tax.automatic_tax` is `supported` or `not_collecting`.\n\n#### Note\n\nWe recommend collecting a full address from your customers for the most accurate tax calculation result, and to minimize how often you can’t collect tax.\n\n## Region-specific considerations ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe complexity of taxes vary widely by region. Most countries have a single set of tax rules for the entire country. In the United States, sales tax rules and rates vary by state, with some states having hundreds of districts setting their own rates. In Canada, the type of tax and tax rate vary by province.\n\n### United States (US)![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### Resolving an address to tax jurisdictions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nA tax jurisdiction is a specific area, governed by authorities (such as a city, county, or state) that can impose taxes. A single location, such as a residence or business, can be part of multiple tax jurisdictions.\n\nStripe Tax maintains boundaries for combinations of tax jurisdictions. Addresses provided in [supported formats](#supported-formats) are converted into geographical coordinates, consisting of latitude and longitude. We use these coordinates to determine the appropriate jurisdiction combination for an address to ensure accurate tax calculation.\n\n#### Postal codes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe Tax supports calculating sales tax with only a basic 5-digit US postal code. The country field must be the [ISO country code](https://en.wikipedia.org/wiki/ISO_3166-1) “US”. We use the point at the geographical center of the postal code area, which represents the average location of addresses within the postal code area, as your customer’s location. The tax rate at this point might differ from the tax rate at your customer’s full address. Whether a postal code alone is sufficient to identify the correct tax rates to impose varies by state.\n\nWe recommend against relying on a postal code alone in the following states: Arizona, Colorado, Oklahoma, Alabama, Missouri, Texas, Illinois, Washington, Kansas, New Mexico, Louisiana, Arkansas, California, Alaska, South Dakota, North Dakota, Utah, Nebraska, and West Virginia.\n\n#### Note\n\nWe recommend collecting a full address in states where you’re registered to collect local sales taxes.\n\n#### IP addresses![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBecause the location of an IP address could be some distance from the actual location of your customer, don’t use an IP address alone for determining how much tax to collect. Instead, use the [upcoming invoice](https://docs.stripe.com/api/invoices/upcoming#upcoming_invoice-customer_details-tax-ip_address) endpoint to show them an estimate of the tax they’ll pay before collecting a billing or shipping address.\n\n### Europe and the European Union (EU)![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### Excluded territories ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIn Europe, tax authorities in each country impose tax, not state or local authorities. The tax rate for the country doesn’t apply in a small number of areas, even though they’re physically located in a country that imposes tax. For example, the Italian postal code “00120” identifies Vatican City, where Italian VAT doesn’t apply.\n\nCollect your customer’s postal code or state to enable Stripe Tax to determine when your customer is located in an excluded territory.\n\nSee the [list of excluded territories](https://docs.stripe.com/tax/zero-tax#excluded-territories) supported by Stripe Tax.\n\n### Canada![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn order for Stripe Tax to determine the applicable tax rate and collect tax in Canada, you need to collect the customer’s province or postal code.",
    "title": "Collect customer addresses | Stripe Documentation",
    "description": "Learn about collecting customer address information to calculate tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/quotes",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Quotes\n\n## Provide pricing estimates to customers before starting a subscription or invoice.\n\nYou can use quotes to combine recurring and one-off line items so you can provide your customers with a price estimate, including any discounts or taxes. ​​You can convert the quote into a recurring [subscription](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\") or a one-time [invoice](https://docs.stripe.com/api/invoices \"invoices\") after the customer accepts the quote.\n\n![Quote PDF](https://b.stripecdn.com/docs-statics-srv/assets/quote-pdf.fbd3abb09a59b6be9f1c692ab402691c.png)\n\nThe generated quote PDF\n\n## How it works ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWith quotes, you can provide estimates and initiate invoices or subscriptions without adding additional custom logic in your integration. See the [integration guide](https://docs.stripe.com/quotes/overview) or view the [API reference](https://docs.stripe.com/api/quotes) for more details.",
    "title": "Quotes | Stripe Documentation",
    "description": "Provide pricing estimates to customers before starting a subscription or invoice.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/faq",
    "markdown": "# Stripe Tax FAQ | Stripe DocumentationThe Stripe Docs logo\n\n### Where does Stripe Tax support full “rooftop-accurate” address lookup?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax supports full rooftop-accurate address lookup for US customer addresses.\n\nRooftop-accurate address lookup means that you can attribute your customer’s location to a specific house or building. This provides greater accuracy in the US, where two houses located side-by-side on the same street might be subject to different tax rates, due to complex jurisdiction boundaries.\n\nOutside the US, we use the country, state, and postal code fields as necessary but we don’t compare the addresses against an address database. See [“Special jurisdictions and excluded territories”](https://docs.stripe.com/tax/customer-locations#europe-excluded-territories) for more about when the state and postal code are used.\n\n### Do you support PO Box addresses?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYes, Stripe Tax supports PO Box addresses in the US. If we can’t find the address for a PO Box or other address in the address database, we approximate the location using the rest of the address details, such as the postal code (for example, ZIP5).\n\n### How do I know which address was used as my Customer’s tax location?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen you enable automatic tax calculation on an [invoice](https://docs.stripe.com/api/invoices \"invoices\") or Checkout session, the Dashboard shows an **Automatic tax** section. This section shows where your customer was located for tax purposes and which address we used as the source of this location. This is also returned in the [Customer API](https://docs.stripe.com/api/customers/object#customer_object-tax-location-source) if you expand the [tax](https://docs.stripe.com/api/customers/object#customer_object-tax) field.\n\n### How do I check how precisely my customer’s location was determined?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen you enable automatic tax calculation on an invoice or Checkout session, the Dashboard shows an **Automatic tax** section. This section shows how precisely we determined your customer’s location. [Customer API](https://docs.stripe.com/api/customers/object#customer_object-tax) also provides relevant location resolution information if you expand the [tax](https://docs.stripe.com/api/customers/object#customer_object-tax) field.\n\nThe table below lists the supported precisions and whether tax can be calculated:\n\n| Precision | Tax calculated | Description |\n| --- | --- | --- |\n| Address | Everywhere | The address placed the customer at a known physical address. |\n| Street | Everywhere | The address placed the customer on a known street but didn’t identify a specific physical address. |\n| Postal code | Everywhere | The address placed the customer within a postal code area (for example, a ZIP5 or ZIP+4), but didn’t identify a particular street or address. |\n| City | Outside the US | The address placed the customer within a particular city, but didn’t identify a postal code area (for example, a ZIP5) or street. |\n| State | Outside the US | The address had a valid ISO 3166-1 country code and ISO 3166-2 state code. |\n| Country | Outside the US | The address had a valid ISO 3166-1 country code. |\n\n### How reliable and accurate is using an IP address to determine my customer’s location?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn most cases, we can resolve an IP address to a physical area, but its precision varies and might not reflect the customer’s actual location. For a given transaction, if we can’t resolve the address to within a postal code, the transaction fails.\n\nIn regions that impose local taxes, such as the US, we don’t recommend relying on a customer’s IP address to determine their address. In regions that don’t impose local taxes, such as the EU, an IP address is more likely to resolve to an accurate address.\n\n### How does Stripe Tax calculate tax for US Military and Diplomatic Overseas addresses?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax calculates no tax for US military and diplomatic mail going overseas. Overseas military and diplomatic addresses are assigned an APO, FPO, or DPO zip code, and the USPS treats it as domestic mail before transferring it to the military. Because sales to these special zip codes are sent out of the country, their sales taxes don’t apply.\n\n### When are tax calculations recorded in the Stripe Tax exports?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax calculates taxes and maintains a record of the total tax collected. You can access the record of total tax collected through [Stripe Tax exports](https://docs.stripe.com/tax/reports).\n\nStripe Tax exports include transactions committed with the [Stripe Tax API](https://docs.stripe.com/tax/custom) and operations on Stripe objects with `automatic_tax[enabled]=true`.\n\n#### Note\n\nThe recorded transactions are considered effective on the date that they finalize and tax amounts aren’t recalculated.\n\nStripe Tax exports record the following operations, which _increase_ the balance of total tax collected:\n\n*   Customer completes a payment in a Checkout Session. This also applies to Checkout Sessions created through [Payment Links](https://docs.stripe.com/api/payment_links/payment_links).\n*   Finalizing an Invoice. This applies to one-off Invoices and Subscription renewal Invoices. [Invoice finalization](https://docs.stripe.com/invoicing/integration/workflow-transitions) happens when the Invoice’s state transitions from `draft` to `open` state. This transition happens _before_ the Invoice is paid.\n*   Transitioning an Invoice’s state from `uncollectible` to `paid` through the [Pay Invoices API](https://docs.stripe.com/api/invoices/pay).\n*   [Voiding](https://docs.stripe.com/api/credit_notes/void) a Credit Note.\n*   [Creating](https://docs.stripe.com/api/tax/transactions/create_from_calculation) a tax transaction with the Stripe Tax API.\n\nStripe Tax exports record the following operations, which _decrease_ the balance of total tax collected:\n\n*   [Voiding](https://docs.stripe.com/api/invoices/void) an Invoice.\n*   Marking an Invoice as [uncollectible](https://docs.stripe.com/api/invoices/mark_uncollectible).\n*   [Creating](https://docs.stripe.com/api/credit_notes/create) a Credit Note.\n*   A [Refund](https://docs.stripe.com/api/refunds) of a Charge associated with an Invoice or a Checkout Session.\n*   Creating a [reversal](https://docs.stripe.com/api/tax/transactions/create_reversal) (refund) tax transaction with the Stripe Tax API.\n\nStripe Tax doesn’t record the following operation in Tax exports:\n\n*   [Disputes](https://docs.stripe.com/disputes) that are upheld by the cardholder’s bank. Stripe Tax doesn’t decrease the balance of the collected total tax.\n*   Refunds of [uncaptured amounts](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-amount_to_capture) of a payment. This can happen when performing a [partial capture](https://docs.stripe.com/api/payment_intents/capture#capture_payment_intent-amount_to_capture) for payments of Checkout sessions using [`capture_method=manual`](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-payment_intent_data-capture_method). When the capture amount is lower than the original amount, Stripe Tax doesn’t reduce the total balance of the collected tax.\n\n### If I create a draft invoice today, but it’s set to finalize in the future, and the tax rates change in between, which tax rate is used?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe calculates the tax at the published rate on the date that an invoice is finalized. For example, if an invoice draft is initialized on December 20th and set to finalize on January 15th but a new tax rate is introduced on January 1st, the tax on the invoice will be calculated at the new rate.\n\n*   December 1st: Tax Rate: 6%\n*   December 20th: Invoice draft initialized set to finalize January 15th\n*   January 1st: Tax Rate 5%\n*   January 15th: Invoice finalized with a tax rate of 5%\n\n### How do chargebacks work?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nA chargeback **doesn’t** reduce the balance of total tax collected.\n\nStripe Tax calculates taxes and maintains a record of the total tax collected. You can access the record of total tax collected through [Stripe Tax exports](https://docs.stripe.com/tax/reports).\n\nFor example, for a transaction with an amount of 100 USD and exclusive tax of 10 USD, the total tax collected is 10 USD. In the event of a chargeback, we won’t reduce Stripe Tax reporting total tax collected from 10 USD to 0 USD.\n\n### How do you handle credit notes? ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nA credit note **reduces** the balance of total tax collected.\n\nStripe Tax calculates taxes and maintains a record of the total tax collected. You can access the record of total tax collected through [Stripe Tax exports](https://docs.stripe.com/tax/reports).\n\nFor example, for an invoice with an amount of 100 USD and exclusive tax of 10 USD, the total tax collected is 10 USD. Issuing a credit note that fully refunds the invoice shows as a negative amount in your Stripe Tax reporting, reducing your liability from 10 USD to 0 USD.\n\n### How is tax liability calculated when using credit notes?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nApplying credit notes reduces the tax liability of a transaction proportionately across all the items in a basket.\n\nFor example, applying a credit note of 33 USD to an order of 2 items costing 66 USD and 33 USD with a 10% tax rate (total 108.90 USD) reduces tax liability by 2.20 USD and 1.10 USD respectively.\n\n### How is tax liability determined in the case of partial refunds?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf an order’s total amount is > 0 after a refund, then the remaining amount will keep at least 0.01 USD in tax liability. This is because it uses a cumulative remainder approach to deal with rounding.\n\n### How do you handle discounts?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWe apply discounts before tax.\n\nFor example, for an exclusive price of 100 USD, a tax rate of 10%, and a discount of 10 USD, the resulting values are:\n\n*   Amount: 100 USD\n*   Discount: 10 USD\n*   Post discount amount: 90 USD\n*   Tax: 9 USD\n*   Total: 99 USD (90 USD + 9 USD)\n\nFor example, for a inclusive price of 100 USD, a tax rate of 10%, and a discount of 10 USD the resulting values are:\n\n*   Amount: 100 USD\n*   Discount: 10 USD\n*   Post discount amount: 90 USD\n*   Tax: 8.18 USD\n*   Total: 90 USD\n\n### Do you mandate two pieces of non conflicting evidence for B2C transactions in Europe?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nNo, we don’t mandate two pieces of non conflicting evidence for business to consumer transactions in the EU. However, we do store and retain the evidence used on the [Customer](https://docs.stripe.com/api/customers \"Customers\") object that you can review before requesting additional information from a customer after the transaction.\n\n### Are Apple Pay and Google Pay available to use with Stripe Tax?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Tax supports Apple Pay and Google Pay if your customer enters their shipping or billing address during the payment process.\n\nIf you enable Apple Pay or Google Pay on your account and enable Stripe Tax on your integration, Stripe:\n\n*   Automatically calculates the tax of the customer’s subtotal before they submit payment.\n*   Enables Apple Pay as a payment option if the user’s browser supports Apple Pay version 12 and above.\n*   Enables Google Pay as a payment option to customers only when the user collects the customer’s shipping address information.\n\n### Where does Stripe get its tax rates from?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWe have a team of tax researchers focused on monitoring tax laws and tax authority publications for changes. We make the updates directly to Stripe Tax when the change is effective.\n\n### In which currency are tax calculations recorded?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTax calculation amounts are recorded in the [presentment currency](https://docs.stripe.com/currencies#presentment-currencies \"presentment currency\"), which can differ from both the settlement currency and the tax authority’s local filing currency.\n\nYou have the option to view amounts in both the presentment and filing currencies through [Stripe Tax exports](https://docs.stripe.com/tax/reports).\n\n### When do conversions to other currencies occur?![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe converts tax amounts from the presentment currency to the tax authority’s local filing currency when we record the tax calculations.",
    "title": "Stripe Tax FAQ | Stripe Documentation",
    "description": "Read the frequently asked questions about Stripe Tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/supported-countries",
    "markdown": "# Countries supported by Stripe Tax\n\n## See a list of countries and jurisdictions where you can use Stripe Tax.\n\nStripe can calculate tax on sales in the locations listed in the table below. Select a location to learn more about:\n\n*   When to register for tax collection on your sales\n*   How to register to collect tax and links to the relevant tax authority\n*   How Stripe calculates tax\n*   How to report and file your taxes\n\nYou can also learn about tax calculation and collection in each region:\n\n*   [Asia Pacific](https://docs.stripe.com/tax/supported-countries/asia-pacific)\n*   [Canada](https://docs.stripe.com/tax/supported-countries/canada)\n*   [European Union](https://docs.stripe.com/tax/supported-countries/european-union)\n*   [Europe, Middle East and Africa](https://docs.stripe.com/tax/supported-countries/europe-middle-east-and-africa)\n*   [Latin America](https://docs.stripe.com/tax/supported-countries/latin-america)\n*   [United States](https://docs.stripe.com/tax/supported-countries/united-states)\n\n## Supported countries![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe supports tax calculation on different types of goods and service, and different types of sales depending on the location. Your business must be based in one of the locations labeled `all sales` in order to use Stripe Tax.\n\nThe table below lists each location’s support. Select the country name to learn more about collecting tax in that country.\n\nThe table references the following terms:\n\n*   **All PTCs**: You can use any supported [product tax codes (PTCs)](https://docs.stripe.com/tax/tax-codes) in this location.\n*   **Digital products**: We only support [digital products](https://docs.stripe.com/tax/tax-codes?type=digital) (non-physical items or services that are delivered, given, or rendered electronically) in this location and don’t calculate tax for any product not using a digital product tax code.\n*   **Remote sales**: We support sales into locations where you don’t have a physical presence (like a store or warehouse).\n*   **All sales**: We support tax codes for domestic and cross-border sales in this location.\n\n#### Note",
    "title": "Countries supported by Stripe Tax | Stripe Documentation",
    "description": "See a list of countries and jurisdictions where you can use Stripe Tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/invoicing/customize",
    "markdown": "# Customize invoices | Stripe DocumentationThe Stripe Docs logo\n\n## Customize the content and branding of your invoices.\n\nYou can use [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice) or the [API](https://docs.stripe.com/api/customers/create#create_customer-invoice_settings-custom_fields) to customize ​​the content of an [invoice](https://docs.stripe.com/api/invoices \"invoices\"). You can also set a customer preferred language and include public information in your [account details](https://dashboard.stripe.com/settings/account/?support_details=true). Because you know more about your customers and your business than Stripe does, make sure your invoices include all of the required information. Your invoices must be accurate, charge the appropriate tax, and comply with all applicable laws and regulations in your region.\n\n![Invoice settings](https://b.stripecdn.com/docs-statics-srv/assets/invoice-settings-screenshot.6174ac7fd03e2bbe688cddf0a22d6ee2.png)\n\nInvoice settings\n\n[\n\n## Branding![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#brand-customization)\n\nStripe allows you to customize (as well as preview) email receipts, hosted invoices, invoice PDFs, and so on, in your [Branding settings](https://dashboard.stripe.com/account/branding).\n\nIcons and logos must be in JPG or PNG format, less than 512kb in size, and equal to or greater than 128px by 128px.\n\n*   **Icon**—A square, digital-friendly icon or logo.\n*   **Logo**—A non-square logo to override some uses of the icon.\n*   **Brand color**—Used on receipts, invoices, and the customer portal.\n*   **Accent color**—Used as a background on emails and pages.\n\n### Apply brand settings ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nBrand settings apply to your whole account and take effect in many places.\n\n| Setting | Emails | Checkout & Payment Links | Customer portal | Hosted Invoice Page | Invoice PDFs |\n| --- | --- | --- | --- | --- | --- |\n| **Icon** | Yes | Yes | Yes | Yes | Yes |\n| **Logo** | No  | Yes | No  | No  | Yes |\n| **Brand color** | Yes | No  | Yes | Yes | Yes |\n| **Accent color** | Yes (background color) | Yes | Yes | Yes | No  |\n\n[](#invoice-numbering-schemes)\n\nStripe automatically generates invoice numbers to help track and reconcile invoices. Invoice numbers have a prefix and suffix, such as `586A2E-0139` or `MYSHOP-1203`. (​​The full invoice number is always unique across your account in both schemes.) ​​Stripe supports two invoice numbering schemes:\n\n*   ​​**Sequentially for each customer (customer-level)**—Uses a unique prefix for each customer and assigns invoice numbers sequentially for a given customer.\n*   ​​**Sequentially across your account (account-level)**—Uses the same prefix for every customer and assigns invoice numbers sequentially across your entire account.\n\nStripe chooses a default behavior based on the country your Stripe account is based in. [European Union](https://ec.europa.eu/taxation_customs/business/vat/eu-vat-rules-topic/vat-invoicing-rules_en) member countries and the [United Kingdom](https://www.gov.uk/invoicing-and-taking-payment-from-customers/invoices-what-they-must-include) typically require account level sequencing. All other countries default to customer level sequencing because it doesn’t expose the total number of invoices. When switching between schemes or updating prefixes, only future invoices use the new settings. This doesn’t impact existing invoices.\n\n#### Caution\n\nInvoice requirements vary by jurisdiction. Consult with a professional for guidance on your specific use case. You’re responsible for verifying that the invoices you issue meet local tax requirements.\n\n### Customer level prefixes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you configure an invoice to use customer-level numbering, each invoice number begins with the customer’s unique invoice prefix.\n\nFor example, if one of your customers is a business named Typographic, you might set the prefix to `TYPGRA`. The first invoice number for Typographic would be `TYPGRA-0001`, the second would be `TYPGRA-0002` and so on.\n\n​​You can override prefixes so that you can trace invoices back to your customers. You can set prefixes on the [Customers page](https://dashboard.stripe.com/customers) in the Dashboard or with the API by using the [invoice\\_prefix](https://docs.stripe.com/api/customers/create#create_customer-invoice_prefix) parameter. Prefixes have to be between 3 and 12 characters and they can’t match any other customer prefix, including prefixes that are no longer in use.\n\n### Account level prefixes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you configure an invoice to use account-level numbering, each invoice number starts with a common prefix and has a sequential number.\n\nFor example, if your business is named Rocket Rides, you might set the prefix to `RKTRIDE`. Your first invoice would be `RKTRIDE-0001`, a second invoice to a different customer would be `RKTRIDE-0002`, another invoice to the first customer would be `RKTRIDE-0003`, and so on.\n\nStripe automatically assigns the account-wide prefix, but you can override it to make it clearer that these invoices come from you. If you want to modify the prefix for your account, you can change it in [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice). This requires that your account’s default API version is at least [2020-03-02](https://docs.stripe.com/upgrades#2020-03-02). Prefixes have to be between 3 and 12 characters and they can’t match any customer prefix, including prefixes that are no longer in use.\n\n#### Caution\n\n​​You can’t use a customer prefix as an account prefix. This includes prefixes that are no longer in use.\n\n### Connect account prefixes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nFor connected accounts that aren’t currently managed with the `on_behalf_of` parameter, sequential invoice numbering—at the customer and merchant level—will begin at `0001` if the parameter is used in the future.\n\n### Set the next invoice number ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nBy default, invoice numbers start at `0001`. If you’d like to use a different starting invoice number, however, you can change it. For example, some users—when migrating existing customers to Stripe Invoicing—want their invoice numbers to continue where their old system left off. If the user left off at invoice number `123` in their old system, Stripe allows them to resume the invoice number at `124`.\n\n​​Set the number on the **Customer details** page or with the API by using the [next\\_invoice\\_sequence](https://docs.stripe.com/api/customers/create#create_customer-next_invoice_sequence) parameter. If you’re using account-level prefixes, set the next invoice number in the **Next invoice sequence** field in [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice).\n\nYou can only set the next invoice number to numbers greater than any numbers used on an invoice. The maximum allowed invoice number is 1,000,000,000 regardless of how you set it. Use the lowest value possible so that you don’t reach this limit.\n\n[](#invoice-fields)\n\nLearn more about the different Invoice fields, including memo, footer, and custom fields.\n\n### Default memo ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nA memo is included in invoice PDFs, invoice emails, and the [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page). Memos are commonly used as a notes section, thanking the invoiced customer for their business, or giving more context around the invoice (such as a note from the salesperson who talked to the customer).\n\nYou can set a default memo field for your account in [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice). ​​Any new invoices use this value. You can adjust the default memo on a per-invoice basis in the Dashboard or by using the [API](https://docs.stripe.com/api/invoices/update#update_invoice-description).\n\n​​Invoice PDFs can include an optional footer text block. The footer field is often used for contractual or legally required text. A common use case is displaying legally required company registration information, such as a UK Companies House registration number.\n\nLike the memo field, you can set the default value for the footer in [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice). ​​Any new invoices use this value. You can adjust the footer on a per-invoice basis through the Dashboard or [API](https://docs.stripe.com/api/invoices/update#update_invoice-footer). If the invoice has been [finalized](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized), you can’t update the footer field.\n\n### Default item prices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can issue invoices with line item prices that exclude inclusive tax. Tax-exclusive prices are only shown in the invoice PDF. That means, when using inclusive tax, the Hosted Invoice Page and invoice emails show tax-inclusive prices. You can define the settings for net prices in the Dashboard or API.\n\n*   **Include inclusive tax**—The invoice PDF displays line item prices including the inclusive tax. (This is the default.)\n*   **Exclude tax**—The invoice PDF displays line item prices excluding tax.\n\n#### Order precedence\n\nIf you set a default for line item prices at the customer level, it takes precedence over account-level settings.\n\n### Custom fields ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAdd custom fields to enhance your invoice PDF documents and help you comply with your business practice and tax reporting obligations. Custom fields allow you to provide up to four key-value pairs ​​that display in the invoice header. You can set up to four custom field key-value pairs in the [Invoice Editor](https://dashboard.stripe.com/invoices/create) or with the [Invoices API](https://docs.stripe.com/api/invoices/create#create_invoice-custom_fields).\n\nSome common uses for custom fields are:\n\n*   Purchase Order (PO) numbers\n*   Contractor numbers\n*   Tax compliance\n\n#### Custom field inheritance ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can set custom invoice fields on the [Customer](https://docs.stripe.com/api/customers/object#customer_object-invoice_settings-custom_fields) object. Any custom fields you set at the customer level apply to all of the draft invoices you generate for that customer. You can always modify these inherited custom fields while the invoice is still a draft. After the invoice finalizes, you can’t update the custom fields.\n\n[](#pdf-page-size)\n\nYou can set the page size for your invoice PDF, including finalized invoices, to A4 (8.27 x 11.69 inches) or Letter (8.5 x 11 inches).\n\nTo set the page size using the Dashboard, go to the [Invoice Editor](https://dashboard.stripe.com/invoices/create), and find the **Advanced options** section. Then, in the **PDF page size** sub-section, select **A4** or **Letter**.\n\n![Advanced options on the Invoice Editor](https://b.stripecdn.com/docs-statics-srv/assets/invoice-page-size.3a72380d4dc6061ea9b86ef8e59a97d6.png)\n\n**Advanced options** on the Invoice Editor\n\n[](#group-line-items)\n\nTo help your customers better understand your invoices (including PDFs, Hosted Invoice Page, and invoice emails), categorize, and display invoice line items under different groups. You can also hide groups of line items. If some line items are excessively detailed, you can configure it so that only their group-level subtotal is visible to your customers.\n\n[](#default-payment-terms)\n\nUnder **Default payment terms** in [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice), you can select when the payment is due after you send the invoice. You can also choose whether to include a Stripe-hosted link to an invoice payment page in the invoice email. Customers can visit this link to pay, download, and see the status of their invoice. Lastly, you can manage your accepted payment methods in this section.\n\n[](#customer-language)\n\nWhen you create a customer, use the **Language** dropdown to add their preferred language. (You can also add or edit a customer’s preferred language in the **Customer details** page or when creating an invoice.) Stripe uses the chosen language to localize invoice emails and PDFs, receipt emails and PDFs, as well as credit note PDFs. To update the language through the API, use the [preferred\\_locales](https://docs.stripe.com/api/customers/object#customer_object-preferred_locales) field.\n\nStripe Invoicing supports the following languages:\n\n*   Bulgarian\n*   Chinese (Hong Kong)\n*   Chinese (Simplified)\n*   Chinese (Taiwan)\n*   Croatian\n*   Czech\n*   Danish\n*   Dutch\n*   English (United Kingdom)\n*   English (United States)\n*   Estonian\n*   Filipino\n*   Finnish\n*   French (Canada)\n*   French (France)\n*   German\n*   Greek\n*   Hungarian\n*   Indonesian\n*   Italian\n*   Japanese\n*   Korean\n*   Latvian\n*   Lithuanian\n*   Malay (Malaysia)\n*   Maltese\n*   Norwegian\n*   Polish\n*   Portuguese (Brazil)\n*   Portuguese (Portugal)\n*   Romanian\n*   Russian\n*   Slovak\n*   Slovenian\n*   Spanish (Latin America)\n*   Spanish (Spain)\n*   Swedish\n*   Thai\n*   Turkish\n*   Vietnamese\n\n[](#billing-shipping-addresses)\n\nStripe uses a customer’s [address](https://docs.stripe.com/api/customers/object#customer_object-address) as the billing address on the invoice PDF. You can add or edit a customer’s address on the **Customer details** page. If you don’t set the `address` field, Stripe renders the shipping address as the billing address on the PDF.\n\nTo render shipping details on the Invoice PDF, set the [shipping\\_details](https://docs.stripe.com/api/invoices/create#create_invoice-shipping_details) field. If you don’t set the `shipping_details` field, Stripe renders the shipping address from the customer’s [shipping](https://docs.stripe.com/api/customers/object#customer_object-shipping) field on the PDF.\n\n[](#public-support-info)\n\nInvoices include any public information that you specified under [Public business information](https://dashboard.stripe.com/settings/public), such as your support email address or business website. Using these settings, you can also choose to include a support phone number in customer-facing documents—like invoice PDFs and emails—or default to your business address.",
    "title": "Customize invoices | Stripe Documentation",
    "description": "Customize the content and branding of your invoices.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/tax/tax-codes",
    "markdown": "# Product tax codes | Stripe DocumentationThe Stripe Docs logo\n\n`txcd_99999999`General - Tangible GoodsA physical good that can be moved or touched. Also known as tangible personal property.Physical goods`txcd_20030000`General - ServicesGeneral category for services. It should be used only when there is no more specific services category. In the European Union, the default rule for business-to-consumer sales (B2C) is the location of the seller, whereas for business-to-business sales (B2B) - the location of the buyer.Services`txcd_10000000`General - Electronically Supplied ServicesA digital service provided mainly through the internet with minimal human involvement, relying on information technology. Consider more specific categories like software, digital goods, cloud services, or website services for your product (especially if you sell in the US). If you stay with this category, taxes will be similar to those for a generic digital item like downloaded music.Digital products`txcd_00000000`NontaxableAny nontaxable good or service which can be used to ensure no tax is applied, even for jurisdictions that impose a tax.Physical goods`txcd_10010001`Infrastructure as a service (IaaS) - personal useCloud service offering infrastructure resources (specifically server storage, RAM, and CPU usage) over the internet. This offering is intended for personal use, rather than for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10101000`Infrastructure as a service (IaaS) - business useCloud service offering infrastructure resources (specifically server storage, RAM, and CPU usage) over the internet. This offering is intended for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10102000`Platform as a service (PaaS) - business useCloud service providing a platform for users to develop, run, and manage applications. This offering is intended for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10102001`Platform as a Service (PaaS) - personal useCloud service providing a platform for users to develop, run, and manage applications. This offering is intended for personal use, rather than for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10103000`Software as a service (SaaS) - personal useCloud services software delivered over the internet. The software isn't customized for a specific buyer and they don't download anything. The software is intended for personal use, rather than for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10103001`Software as a service (SaaS) - business useCloud services software delivered over the internet. The software isn't customized for a specific buyer and they don't download anything. The software is intended for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10103100`Software as a service (SaaS) - electronic download - personal useCloud services software delivered over the internet. The software isn't customized for a specific buyer and this model assumes an electronic transfer to the buyer, such as an app download. The software is intended for personal use, rather than for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10103101`Software as a service (SaaS) - electronic download - business useCloud services software delivered over the internet. The software isn't customized for a specific buyer and this model assumes an electronic transfer to the buyer, such as an app download. The software is intended for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10104001`Cloud-based business process as a serviceCloud service providing business process outsourcing services over the internet.Digital products`txcd_10201000`Video Games - downloaded - non subscription - with permanent rightsVideo or electronic games in the common sense that are transferred electronically. These goods are downloaded to a device with permanent access granted. This does not include games that are considered betting, gambling, lottery, etc.Digital products`txcd_10201001`Video Games - downloaded - non subscription - with limited rightsVideo or electronic games in the common sense that are transferred electronically. These goods are downloaded to a device with access that expires after a stated period of time. This does not include games that are considered betting, gambling, lottery, etc.Digital products`txcd_10201002`Video Games - downloaded - subscription - with conditional rightsVideo or electronic games in the common sense that are transferred electronically. These goods are downloaded to a device with access that is conditioned upon continued subscription payment. This does not include games that are considered betting, gambling, lottery, etc.Digital products`txcd_10201003`Video Games - streamed - non subscription - with limited rightsVideo or electronic games in the common sense that are transferred electronically. These goods are streamed to a device with access that expires after a stated period of time. This does not include games that are considered betting, gambling, lottery, etc.Digital products`txcd_10201004`Video Games - streamed - subscription - with conditional rightsVideo or electronic games in the common sense that are transferred electronically. These goods are streamed to a device with access that is conditioned upon continued subscription payment. This does not include games that are considered betting, gambling, lottery, etc.Digital products`txcd_10202000`Downloadable Software - personal usePrewritten (\"canned\") software that the buyer downloads. The software is intended for personal use, rather than for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10202001`Downloadable Software - non-recreational - personal usePrewritten (\"canned\") software that the buyer downloads used for non-recreational purposes, such as antivirus, database, educational, financial, word processing, etc. The software is intended for personal use, rather than for consumption in a commercial enterprise. Note: The distinction between business use and personal use for this tax code is relevant only if you are transacting business in the US.Digital products`txcd_10202003`Downloadable Software - business usePrewritten (\"canned\") software that the buyer downloads. The software is intended for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10203000`Downloadable Software - custom - personal useCustom software that the buyer downloads. The software is intended for personal use, rather than for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10203001`Downloadable Software - custom - business useCustom software that the buyer downloads. The software is intended for use by a commercial enterprise. Note: The distinction between business use and personal use for this product tax category is relevant only if you have sales in the US.Digital products`txcd_10301000`AudiobookThe recording of a book read aloud and sold with unlimited usage (e.g., a downloaded audio copy of The High Growth Handbook).Digital products`txcd_10302000`Digital Books - downloaded - non subscription - with permanent rightsWorks that are generally recognized in the ordinary and usual sense as books and are transferred electronically. These goods are downloaded to a device with permanent access granted. These goods include novels, autobiographies, encyclopedias, dictionaries, repair manuals, phone directories, business directories, zip code directories, cookbooks, etc.Digital products`txcd_10302001`Digital Books - downloaded - non subscription - with limited rightsWorks that are generally recognized in the ordinary and usual sense as books and are transferred electronically. These goods are downloaded to a device with access that expires after a stated period of time. These goods include novels, autobiographies, encyclopedias, dictionaries, repair manuals, phone directories, business directories, zip code directories, cookbooks, etc.Digital products`txcd_10302002`Digital Books - downloaded - subscription - with conditional rightsWorks that are generally recognized in the ordinary and usual sense as books and are transferred electronically. These goods are downloaded to a device with access that is conditioned upon continued subscription payment. These goods include novels, autobiographies, encyclopedias, dictionaries, repair manuals, phone directories, business directories, zip code directories, cookbooks, etc.Digital products`txcd_10302003`Digital Books - viewable only - subscription - with conditional rightsWorks that are generally recognized in the ordinary and usual sense as books and are transferred electronically. These goods are viewable (but not downloadable) on a device with access that is conditioned upon continued subscription payment. These goods include novels, autobiographies, encyclopedias, dictionaries, repair manuals, phone directories, business directories, zip code directories, cookbooks, etc.Digital products`txcd_10303000`Digital Magazines/Periodicals - downloadable - subscription - with conditional rightsA digital version of a traditional periodical published at regular intervals with the entire publication or individual articles downloaded to a device with access that is conditioned upon continued subscription payment.Digital products`txcd_10303001`Digital Magazines/Periodicals - subscription tangible and digitalA digital version of a traditional magazine published at regular intervals. The publication is accessed via a subscription which also entitles the purchaser to physical copies of the media.Digital products`txcd_10303002`Digital Magazines/Periodicals - viewable only - subscription - with conditional rightsA digital version of a traditional periodical published at regular intervals with the entire publication or individual articles viewable (but not downloadable) on a device with access that is conditioned upon continued subscription payment.Digital products`txcd_10303100`Digital Magazines/Periodicals - downloadable - non subscription - with permanent rightsA digital version of a traditional periodical published at regular intervals with the entire publication or individual articles downloaded to a device with permanent access granted. The publication is accessed without a subscription.Digital products`txcd_10303101`Digital Magazines/Periodicals - viewable only - non subscription - with limited rightsA digital version of a traditional periodical published at regular intervals with the entire publication or individual articles viewable (but not downloadable) on a device with access that expires after a stated period of time. The publication is accessed without a subscription.Digital products`txcd_10303102`Digital Magazines/Periodicals - viewable only - non subscription - with permanent rightsA digital version of a traditional periodical published at regular intervals with the entire publication or individual articles viewable (but not downloadable) on a device with permanent access granted. The publication is accessed without a subscription.Digital products`txcd_10303104`Digital Magazines/Periodicals - downloadable - non subscription - with limited rightsA digital version of a traditional periodical published at regular intervals with the entire publication or individual articles downloaded to a device with access that expires after a stated period of time. The publication is accessed without a subscription.Digital products`txcd_10304000`Digital Newspapers - downloadable - non subscription - with permanent rightsA digital version of a traditional newspaper published at regular intervals with the entire publication or individual articles downloaded to a device with permanent access granted. The publication is accessed without a subscription.Digital products`txcd_10304001`Digital Newspapers - viewable only - non subscription - with limited rightsA digital version of a traditional newspaper published at regular intervals with the entire publication or individual articles viewable (but not downloadable) on a device with access that expires after a stated period of time. The publication is accessed without a subscription.Digital products`txcd_10304002`Digital Newspapers - viewable only - non subscription - with permanent rightsA digital version of a traditional newspaper published at regular intervals with the entire publication or individual articles viewable (but not downloadable) on a device with permanent access granted. The publication is accessed without a subscription.Digital products`txcd_10304003`Digital Newspapers - downloadable - non subscription - with limited rightsA digital version of a traditional newspaper published at regular intervals with the entire publication or individual articles downloaded to a device with access that expires after a stated period of time. The publication is accessed without a subscription.Digital products`txcd_10304100`Digital Newspapers - downloadable - subscription - with conditional rightsA digital version of a traditional newspaper published at regular intervals with the entire publication or individual articles downloaded to a device with access that is conditioned upon continued subscription payment.Digital products`txcd_10304101`Digital Newspapers - subscription tangible and digitalA digital version of a traditional newspaper published at regular intervals. The publication is accessed via a subscription which also entitles the purchaser to physical copies of the media.Digital products`txcd_10304102`Digital Newspapers - viewable only - subscription - with conditional rightsA digital version of a traditional newspaper published at regular intervals with the entire publication or individual articles viewable (but not downloadable) on a device with access that is conditioned upon continued subscription payment.Digital products`txcd_10305000`Digital School Textbooks - downloaded - non subscription - with limited rightsWorks that are required as part of a formal academic education program and are transferred electronically. These goods are downloaded to a device with access that expires after a stated period of time.Digital products`txcd_10305001`Digital School Textbooks - downloaded - non subscription - with permanent rightsWorks that are required as part of a formal academic education program and are transferred electronically. These goods are downloaded to a device with permanent access granted.Digital products`txcd_10401000`Digital Audio Works - streamed - non subscription - with limited rightsWorks that result from the fixation of a series of musical, spoken, or other sounds that are transferred electronically. These goods are streamed to a device with access that expires after a stated period of time. These goods include prerecorded or live music, prerecorded or live readings of books or other written materials, prerecorded or live speeches, ringtones, or other sound recordings, but not including audio greeting cards.Digital products`txcd_10401001`Digital Audio Works - downloaded - non subscription - with limited rightsWorks that result from the fixation of a series of musical, spoken, or other sounds that are transferred electronically. These goods are downloaded to a device with access that expires after a stated period of time. These goods include prerecorded or live music, prerecorded or live readings of books or other written materials, prerecorded or live speeches, ringtones, or other sound recordings, but not including audio greeting cards. Note the presence of PTC 10301000 (Audiobook), a more granular option for downloaded audiobooks.Digital products`txcd_10401100`Digital Audio Works - downloaded - non subscription - with permanent rightsWorks that result from the fixation of a series of musical, spoken, or other sounds that are transferred electronically. These goods are downloaded to a device with permanent access granted. These goods include prerecorded or live music, prerecorded or live readings of books or other written materials, prerecorded or live speeches, ringtones, or other sound recordings, but not including audio greeting cards. Note the presence of PTC 10301000 (Audiobook), a more granular option for downloaded audiobooks.Digital products`txcd_10401200`Digital Audio Works - streamed - subscription - with conditional rightsWorks that result from the fixation of a series of musical, spoken, or other sounds that are transferred electronically. These goods are streamed to a device with access that is conditioned upon continued subscription payment. These goods include prerecorded or live music, prerecorded or live readings of books or other written materials, prerecorded or live speeches, ringtones, or other sound recordings, but not including audio greeting cards.Digital products`txcd_10402000`Digital Audio Visual Works - streamed - non subscription - with limited rightsA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods are streamed to a device with access that expires after a stated period of time. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games.Digital products`txcd_10402100`Digital Audio Visual Works - downloaded - non subscription - with permanent rightsA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods are downloaded to a device with permanent access granted. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games.Digital products`txcd_10402110`Digital Audio Visual Works - downloaded - non subscription - with limited rightsA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods are downloaded to a device with access that expires after a stated period of time. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games.Digital products`txcd_10402200`Digital Audio Visual Works - streamed - subscription - with conditional rightsA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods are streamed to a device with access that is conditioned upon continued subscription payment. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games.Digital products`txcd_10402300`Digital Video Streaming - live events - limited useAn audio visual work of a live performance streamed over the internet that you can only access for a limited time during the performance (e.g., a live concert stream).Digital products`txcd_10501000`Digital Photographs/Images - downloaded - non subscription - with permanent rightsDigital images that are downloaded to a device with permanent access granted.Digital products`txcd_10502000`Gift CardGift card or gift certificate that you purchase and receive electronically and assumed to be multi-purpose.Digital products`txcd_10503000`Digital other news or documents - downloadable - non subscription - with permanent rightsIndividual digital news articles, newsletters, and other stand-alone documents. These goods are downloaded to a device with permanent access granted. These publications are accessed without a subscription.Digital products`txcd_10503001`Digital other news or documents - downloadable - non subscription - with limited rightsIndividual digital news articles, newsletters, and other stand-alone documents. These goods are downloaded to a device with access that expires after a stated period of time.Digital products`txcd_10503002`Digital other news or documents - downloadable - subscription - with conditional rightsIndividual digital news articles, newsletters, and other stand-alone documents. These goods are downloaded to a device with access that is conditioned upon continued subscription payment.Digital products`txcd_10503003`Digital other news or documents - viewable only - non subscription - with limited rightsIndividual digital news articles, newsletters, and other stand-alone documents. These goods are viewable (but not downloadable) on a device with access that expires after a stated period of time.Digital products`txcd_10503004`Digital other news or documents - viewable only - non subscription - with permanent rightsIndividual digital news articles, newsletters, and other stand-alone documents. These goods are viewable (but not downloadable) on a device with permanent access granted.Digital products`txcd_10503005`Digital other news or documents - viewable only - subscription - with conditional rightsIndividual digital news articles, newsletters, and other stand-alone documents. These goods are viewable (but not downloadable) on a device with access that is conditioned upon continued subscription payment.Digital products`txcd_10504000`Electronic software documentation or user manuals - Custom, electronic deliveryElectronic software documentation or user manuals - For custom software & delivered electronically.Digital products`txcd_10504003`Electronic software documentation or user manuals - Prewritten, electronic deliveryElectronic software documentation or user manuals - For prewritten software & delivered electronically.Digital products`txcd_10505000`Digital Finished Artwork - downloaded - non subscription - with limited rightsThe final art used for actual reproduction by photomechanical or other processes or for display purposes, but does not include website or home page design, and that is transferred electronically. These goods are downloaded to a device with access that expires after a stated period of time. These goods include drawings, paintings, designs, photographs, lettering, paste-ups, mechanicals, assemblies, charts, graphs, illustrative materials, etc.Digital products`txcd_10505001`Digital Finished Artwork - downloaded - non subscription - with permanent rightsThe final art used for actual reproduction by photomechanical or other processes or for display purposes, but does not include website or home page design, and that is transferred electronically. These goods are downloaded to a device with permanent access granted. These goods include drawings, paintings, designs, photographs, lettering, paste-ups, mechanicals, assemblies, charts, graphs, illustrative materials, etc.Digital products`txcd_10505002`Digital Finished Artwork - downloaded - subscription - with conditional rightsThe final art used for actual reproduction by photomechanical or other processes or for display purposes, but does not include website or home page design, and that is transferred electronically. These goods are downloaded to a device with access that is conditioned upon continued subscription payment. These goods include drawings, paintings, designs, photographs, lettering, paste-ups, mechanicals, assemblies, charts, graphs, illustrative materials, etc.Digital products`txcd_10506000`Digital Greeting Cards - Audio OnlyAn electronic greeting \"card\" typically sent via email that contains an audio only message.Digital products`txcd_10506001`Digital Greeting Cards - Audio VisualAn electronic greeting \"card\" typically sent via email that contains a series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any.Digital products`txcd_10506002`Digital Greeting Cards - Static text and/or images onlyAn electronic greeting \"card\" typically sent via email that contains only static images or text, rather than an audio visual or audio only experience.Digital products`txcd_10701000`Website AdvertisingOnline advertising services such as creating and uploading advertisements on the internet. This is a standalone service that doesn't involve the sale of tangible personal property.Digital products`txcd_10701100`Website HostingA service to enable a customer's website to be accessible on the internet.Digital products`txcd_10701200`Website DesignA service to design a website or webpage.Services`txcd_10701300`Website Data ProcessingAn online service that allows a customer to create, transform, process or access data electronically.Digital products`txcd_10701400`Website Information ServicesAn online service furnishing information to customers, including online search and data comparison.Digital products`txcd_10702000`Online Dating ServicesA subscription service for membership to an online dating platform.Digital products`txcd_10804001`Digital Audio Visual Works - bundle - downloaded with permanent rights and streamed - subscription - with conditional rightsA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods are streamed and/or downloaded to a device with access that is conditioned upon continued subscription payment. Any downloads received while under subscription remain the permanent property of the subscriber. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games. These goods further include self-study web based training services that impart content via audio visual goods described here.Digital products`txcd_10804002`Digital Audio Visual Works - bundle - downloaded with limited rights and streamed - non subscriptionA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods can be streamed and/or downloaded to a device with access that expires after a stated period of time. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games.Digital products`txcd_10804003`Digital Audio Visual Works - bundle - downloaded with permanent rights and streamed - non subscriptionA series of related images which, when shown in succession, impart an impression of motion, together with accompanying sounds, if any. These goods can be streamed and/or downloaded to a device with permanent access granted. These goods include motion pictures, music videos, animations, news and entertainment programs, and live events, but do not include video greeting cards or video or electronic games.Digital products`txcd_10804010`Digital Audio Works - bundle - downloaded with permanent rights and streamed - subscription - with conditional rightsWorks that result from the fixation of a series of musical, spoken, or other sounds that are transferred electronically. These goods are streamed and/or downloaded to a device with access that is conditioned upon continued subscription payment. Any downloads received while under subscription remain the permanent property of the subscriber. These goods include prerecorded or live music, prerecorded or live readings of books or other written materials, prerecorded or live speeches, ringtones, or other sound recordings, but not including audio greeting cards. These goods further include self-study web based training services that impart content via audio goods described here. Note the presence of PTC 10301000 (Audiobook), a more granular option for downloaded audiobooks.Digital products`txcd_20010001`Car WashingA charge to clean, wash or wax a motor vehicle, other than a self-service coin (or credit card) operated washing station. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20010003`Cleaning of Tangible Personal PropertyA charge for the cleaning of tangible personal property, other than motor vehicles or clothing.Services`txcd_20010004`Commercial Cleaning ServicesA charge for janitorial services to commercial buildings, including the cleaning of floors, carpets, walls, windows, fixtures, exterior cleaning, etc.Services`txcd_20010006`Residential Cleaning ServicesA charge for custodial services to residential structures, including the cleaning of floors, carpets, walls, windows, appliances, furniture, fixtures, exterior cleaning, etc. No Tangible Personal Property is transferred.Services`txcd_20010007`Gutter Cleaning ServicesA charge for the service to maintain the proper operation of home or building gutters through cleaning out debris that could otherwise affect the proper water flow through the gutter system.Services`txcd_20020009`Installation of Hardware - NonpermanentA labor charge to install hardware where the installed property isn't considered permanently attached to the real property.Services`txcd_20020010`Installation of Hardware - PermanentA labor charge to install hardware where the installed property is permanently attached to the real property.Services`txcd_20020018`Installation of Tangible Personal PropertyA charge separately stated from any sale of the product itself for the installation of tangible personal property. This is a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20030002`Pet BoardingServices provided by a facility for overnight care of an animal not related to veterinary care.Services`txcd_20030003`Pet GroomingGrooming services for an animal such as haircuts, bathing, nail trimming, and flea dips.Services`txcd_20030004`Parking ServicesA charge for providing usage of a parking space.Services`txcd_20030005`Pet Services - Obedience TrainingService to train an animal to obey certain commands.Services`txcd_20040001`Hairdressing ServicesServices provided by beauty shops and barber shops, including but not limited to haircutting, hair coloring, shampooing, blow drying, permanents, hair extensions, hair straightening, and hair restorations.Services`txcd_20040002`Personal Care ServicesA charge for personal care services. Please select a more granular product tax category where appropriate.Services`txcd_20040003`Body PiercingA charge for the puncturing or penetration of the skin of a person and the insertion of jewelry or other adornment into the opening.Services`txcd_20040004`Childcare Services / AdultcareServices that provide non-medical care and supervision for infant to school-age children or senior citizens.Services`txcd_20040005`Dating ServicesA service that arranges introductions, for a fee, for strangers seeking romantic partners or friends. This excludes online dating services.Services`txcd_20040006`Employment ServicesServices provided by employment agencies to match employees to employers and employers to employees.Services`txcd_20040007`Manicure ServicesA charge for the cosmetic beauty treatment for the fingernails and toenails, including filing, cutting, shaping and the application of polish.Services`txcd_20040008`Massage ServicesServices where the use of structured touch, include holding, applying pressure, positioning, and mobilizing soft tissue of the body by manual technique. Note: This does not include medical massage prescribed by a physician.Services`txcd_20040009`Spa ServicesPersonal services typically with the purpose of improving health, beauty and relaxation through treatments such as hair, massages and facials.Services`txcd_20040010`Tanning ServicesServices for artificial tanning and skin beautification.Services`txcd_20040011`Tattooing ServicesA charge for the process that uses needles and colored ink to permanently put a mark or design on a person’s skin. Also applying permanent make-up, such as eyelining and other permanent colors to enhance the skin of the face, lips, eyelids, and eyebrows.Services`txcd_20060000`Professional ServicesA charge for a service performed by providers considered professionals due to the extensive initial and continuing education and/or training requirements, and the likelihood of state or federal licensing requirements. Choose this product tax code for any professional service offering in which a more detailed code is not available.Services`txcd_20060001`Accounting ServicesThe measurement, processing and communication of financial information about economic entities including, but is not limited to, financial accounting, management accounting, auditing, cost containment and auditing services, taxation and accounting information systems; excluding general bookkeeping service.Services`txcd_20060002`Advertising ServicesServices rendered for advertising which do not include the exchange of tangible personal property.Services`txcd_20060008`Credit Reporting ServicesServices rendered for the compiling and relating of information regarding the history of financial transactions of a person or entity.Services`txcd_20060009`Data ProcessingA service that allows data to be created, transformed, where the service is not performed online. Select \"Website data processing\" if the service is performed online and data is accessed by the customer electronically.Services`txcd_20060010`Debt Collection ServicesServices performed to collect or adjust past-due debt from borrowers.Services`txcd_20060013`Engineering ServicesServices provided by a professional trained to apply physical laws and principles of engineering in the design, development, and utilization of machines, materials, instruments, structures, processes, and systems. The services involve any of the following activities: provision of advice, preparation of feasibility studies, preparation of preliminary and final plans and designs, provision of technical services during the construction or installation phase, inspection and evaluation of engineering projects, and related services.Services`txcd_20060017`Technical Support ServicesCharges for installing, configuring, debugging, modifying, testing, or troubleshooting computer hardware, networks, programs or software. Labor only charge.Services`txcd_20060021`Insurance ServicesCharges associated loss or damage appraisals, inspections, actuarial services, claims adjustment or processing. Investigations as excluded from this definition.Services`txcd_20060022`Interior DecoratingPlanning and design of interior spaces, including preparation of layout drawings, furniture arranging, design planning and purchasing of furniture, fixtures, and cabinetry, staging, lighting and sound design.Services`txcd_20060026`Lobbying ServicesServices relating to advocating for the passage or defeat of legislation to members or staff of the government.Services`txcd_20060027`Medical Professional ServicesServices provided by a licensed or registered professional in the medical field. Examples: Doctor, dentist, nurse, optometrist, etc.Services`txcd_20060029`Payroll ServicesServices to process employee payroll, including wages, withholding taxes, benefits. etc.Services`txcd_20060030`Private Investigator ServicesServices providing a systematic inquiry, examination, or analysis of people, events or documents through surveillance, background checks, computer searches, fingerprinting, lie detector services, interviews, etc.Services`txcd_20060035`Secretarial/Editing ServicesServices which include, but are not limited to, editing, letter writing, proofreading, resume writing, typing or word processing. Doesn't include court reporting and stenographic services.Services`txcd_20060040`Electronic Filing ServiceCharges to electronically file a tax return on behalf of the taxpayer. This does not include manual preparation of tax returns.Digital products`txcd_20060042`Temporary Help ServicesServices relating to providing personnel, on a temporary basis, to perform work or labor under the supervision or control of another.Services`txcd_20060044`TrainingA charge for training sessions which provide instruction to the buyer. This includes education sessions or workshops but excludes physical exercise or workouts.Services`txcd_20060045`Training Services - Live VirtualLive web based training. This does not include video replays of the instruction or course. This service allows for a level of participation that is substantially similar to an in-person training on the same subject matter.Services`txcd_20060047`Architectural ServicesServices related to the art and science of designing and building structures for human habitation or use and includes planning, providing preliminary studies, designs, specifications, working drawings and providing for general administration of construction contracts.Services`txcd_20060048`Consulting ServicesThe provision of expertise or strategic advice that is presented for consideration and decision-making.Services`txcd_20060049`Cosmetic Medical ProcedureMedical procedure performed on an individual that is directed at improving the individual's appearance and that does not meaningfully promote the proper function of the body or prevent or treat illness or disease.Services`txcd_20060050`Credit Monitoring ServicesServices to track one's credit reports and provide notifications of activity with the intent of avoiding fraud.Digital products`txcd_20060051`Credit Card Processing ServicesA service that allows merchants to accept credit cards as well as send credit card payment details to the credit card network. It then forwards the payment authorization back to the acquiring bank.Digital products`txcd_20060052`Educational ServicesAcademic classes provided by traditional private education establishments and organizations.Services`txcd_20060053`Home Inspection ServicesA charge for an objective visual examination of a house’s systems and physical structure. The charge includes a report of the inspector's findings including pictures, analysis, and recommendations.Services`txcd_20060054`Legal ServicesServices relating to or concerned with the law. Such services include, but are not limited to, representation by an attorney (or other person, when permitted) in an administrative or legal proceeding, legal drafting, paralegal services, legal research services, arbitration, mediation, and court reporting services.Services`txcd_20060055`Marketing ServicesServices for consumer research and testing in connection with the development of particular products or services that the client sells to consumers in the regular course of business.Services`txcd_20060056`Public RelationsServices to provide outreach designed to influence the general public or other groups by promoting the interests of a service recipient.Services`txcd_20060057`Stenographic ServicesServices that include typing, taking shorthand, and taking and transcribing dictation for others for a consideration.Services`txcd_20060058`Training Services - Self-study Web-basedSelf Study web based training, not instructor led. This does not include downloads or streaming of video replays.Digital products`txcd_20060059`TutoringPersonal or small group teaching, designed to help people who need extra help with their studies.Services`txcd_20070001`Security - Alarm ServicesA charge for monitoring an electronically controlled alarm system for residential or commercial properties to minimize or prevent loss or damage to life, limb, or property.Services`txcd_20070006`Extermination ServicesA charge for services related to the eradication of insects, rodents, and other pests.Services`txcd_20070007`LandscapingA charge for services related to the maintenance of grounds.Services`txcd_20070008`Lawn Maintenance ServicesA charge for services of general lawn and grounds maintenance, including lawn cutting, weeding, yard clean-up, shrub and tree trimming, periodic seeding or aeration, etc. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20070010`Painting & Wallpapering ServicesA charge for services related to the painting of surfaces or the application of wallpaper.Services`txcd_20070013`Security - Guard ServicesServices related to protecting persons or their property, preventing the theft of goods, merchandise, or money. Responding to alarm signal device, burglar alarm, television camera, still camera, or a mechanical or electronic device installed or used to prevent or detect burglary, theft, shoplifting, pilferage, losses, or other security measures. Providing management and control of crowds for safety and protection.Services`txcd_20070016`Property Surveying ServicesServices mapping, detecting or establishing the relative position of points at, above, or below the surface of the earth. These services may include surveying and mapping of areas above or below the surface of the earth, such as the creation of view easements or segregating rights in parcels of land by creating underground utility easements.Services`txcd_20080003`Motor Vehicle RepairA charge to repair or restore to operating condition a motor vehicle that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20080004`Shoe RepairA charge to repair or restore footwear was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20080005`Repair of Tangible Personal PropertyA charge to repair or restore tangible personal property that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20080007`Repairs to Real PropertyA charge to repair or maintain real property including repairs to HVAC, electrical, flooring, etc.Services`txcd_20080008`Aircraft RepairA charge to repair or restore to operating condition an aircraft that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential. Commercial aircraft is excluded.Services`txcd_20080009`Appliance RepairA charge to repair or restore to operating condition an appliance (dishwasher, washing machine, refrigerator, etc.) that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20080010`Computer RepairA charge to repair or restore to operating condition computer hardware that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20080011`Furniture ReupholsteringA separately stated labor charge to cover a piece of furniture previously owned by the customer with new fabric coverings. Any materials transferred as part of the service are separately stated.Services`txcd_20080012`Jewelry RepairA charge to repair or restore jewelry that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20080013`Machine RepairA charge to repair or restore to operating condition a machine that was broken, worn, damaged, defective, or malfunctioning. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20090001`Garment Alterations - in conjunction with purchase of garmentA charge to perform an alteration on a item of clothing by the vendor of the article. The alteration is separately stated from the clothing, but contracted for at the time of the clothing purchase. Alterations could include hemming of a dress, shortening of pants, adjusting the waistline of a garment, etc.Services`txcd_20090002`Garment Alterations - separate from purchase of garmentA charge to perform an alteration on a item of clothing by a service provider other than vendor of the article. The alteration is not linked to the clothing purchase. Alterations could include hemming of a dress, shortening of pants, adjusting the waistline of a garment, etc.Services`txcd_20090003`Shredding ServiceA charge to have files or documents shredded either onsite or offsite.Services`txcd_20090004`Dry CleaningA charge to a non-commercial customer for the cleaning or renovating clothing by immersion and agitation, spraying, vaporization, or immersion only, in a volatile, commercially moisture-free solvent or by the use of a volatile or inflammable product. This does not include the use of a self-service coin (or credit card) operated cleaning machine.Services`txcd_20090006`FabricationA charge to create a finished good from materials supplied by the customer. This is a labor only charge to transform a customer's existing property.Services`txcd_20090010`Gift Wrapping - in conjunction with purchase of articleA charge for the wrapping of articles in a box or bag with paper and other decorative additions. The charge is separately stated from the article. This is not relevant for non-US countries where packaging is added to the price of the product.Services`txcd_20090012`Linen Services - Laundry onlyA charge to provide laundry services to clothing. The business customer is the owner of the items being cleaned.Services`txcd_20090015`Warranty - MandatoryA charge separately stated from the sale of the product itself that entitles the purchaser to future repair and labor services to return the defective item of tangible personal property to its original state. The warranty contract is mandatory and is required to be purchased on conjunction with the purchased tangible personal property. Motor vehicle warranties are excluded.Services`txcd_20090018`Warranty - OptionalA charge separately stated from the sale of the product itself that entitles the purchaser to future repair and labor services to return the defective item of tangible personal property to its original state. The warranty contract is optional to the purchaser. Motor vehicle warranties are excluded.Services`txcd_20090022`Assembly - in conjunction with final purchase of articleA charge separately stated from the sale of the product itself to bring the article to its finished state and in the condition specified by the buyer.Services`txcd_20090023`Assembly - prior to final purchase of articleA charge to assemble goods for a purchaser who will later sell the assembled goods to end consumers.Services`txcd_20090024`Dry Cleaning - other than clothingA charge to a non-commercial customer for the cleaning or renovating items other than clothing by immersion and agitation, spraying, vaporization, or immersion only, in a volatile, commercially moisture-free solvent or by the use of a volatile or inflammable product. This does not include the use of a self-service coin (or credit card) operated cleaning machine.Services`txcd_20090025`Gift Wrapping - separate from purchase of articleA charge for the wrapping of articles in a box or bag with paper and other decorative additions. The wrapping not linked the purchased of the article(s) and is performed by a party other vendor of the article(s).Services`txcd_20090026`Linen Services - Laundry only - other than clothingA charge to provide laundry services to linens and the like. This charge is not for clothing items. The business customer is the owner of the items being cleaned.Services`txcd_20090027`Meat ProcessingA charge to make customer provided meat suitable for human consumption, typically referred to a butcher or slaughter services.Services`txcd_20090028`PrintingA charge for the printing, imprinting, lithographing, mimeographing, photocopying, and similar reproductions of various articles including mailers, catalogs, letterhead, envelopes, business cards, presentation folders, forms, signage, etc. The end result is the transfer of tangible personal property to the customer.Physical goods`txcd_20090029`Printing - customer supplied articlesA charge for the printing, imprinting, or lithographing on any article supplied by the customer. The customer owns the article throughout the process. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20090030`Taxidermy ServicesA charge to preserve an animal's body via mounting or stuffing, for the purpose of display or study. The customer provide the animal. This a labor charge, with any non-separately stated property transferred in performing the service considered inconsequential.Services`txcd_20090031`Engraving Services - separate from purchase of articleA charge for engraving services performed on goods owned by the purchaser. This is a standalone service not done in conjunction with the sale of the goods.Services`txcd_20090032`Engraving Services - in conjunction with purchase of articleA charge for engraving a good, such as jewelry, in conjunction with the retail purchase of that item. The charge for the engraving services is separately stated from the charge for the good being engraved.Services`txcd_20091000`Optional Extended Warranty Contract on Motor VehicleAn agreement between a service contract provider and a customer where the service provider agrees to repair or replace certain parts on a motor vehicle that has had a failure after the original manufacturer’s warranty has expired. Commonly referred to as extended warranty or protection plan. Contract covers both parts and labor, and is made at the same time as Motor Vehicle purchase but is separately stated.Services`txcd_20091001`Optional Maintenance Contract on Motor VehicleAn agreement between a service contract provider and a customer for prepaid routine maintenance (e.g. oil changes, tire rotations, air filter, spark plugs, transmission and transfer case fluid changes) for a motor vehicle. Contract covers both parts and labor and is made at the same time as Motor Vehicle purchase but is separately stated.Services`txcd_20091002`Optional Extended Warranty Contract on Leased Motor VehicleAn agreement between a service contract provider and a customer for prepaid routine maintenance (e.g. oil changes, tire rotations, air filter, spark plugs, transmission and transfer case fluid changes) of a leased motor vehicle. Contract covers both parts and labor.Services`txcd_20091003`Optional Maintenance Contract on Leased Motor VehicleAn agreement between a service contract provider and a customer where the service provider agrees to repair or replace certain parts on a leased motor vehicle that has had a failure after the original manufacturer’s warranty has expired. Commonly referred to as extended warranty or protection plan. Contract covers both parts and labor.Services`txcd_20091004`Optional Extended Warranty Contract on Motor Vehicle - After MarketAn agreement between a service contract provider and a customer where the service provider agrees to repair or replace certain parts on a motor vehicle that has had a failure after the original manufacturer’s warranty has expired. Commonly referred to as extended warranty or protection plan. Contract covers both parts and labor and is made after the motor vehicle purchase.Services`txcd_20091005`Optional Maintenance Contract on Motor Vehicle - After MarketAn agreement between a service contract provider and a customer for prepaid routine maintenance (e.g. oil changes, tire rotations, air filter, spark plugs, transmission and transfer case fluid changes) of a motor vehicle. Contract covers both parts and labor and is made after the motor vehicle purchase.Services`txcd_20100001`Armored Car ServicesServices under armed private security guard to transport from one place to another any currency, jewels, stocks, bonds, paintings, or other valuables of any kind in a specially equipped motor vehicle that offers a high degree of security. It is assumed that the transport takes place within one country.Services`txcd_30011000`Clothing & FootwearApparel and footwear for people made for general use.Physical goods`txcd_30011002`Belt BuckleThe clasp used to fasten a belt, sold separately from the belt.Physical goods`txcd_30011003`Belts or SuspendersA belt is band of flexible material worn around a person's waist for supporting clothing. Suspenders are a pair of straps that pass over the shoulders and fasten to the waistband of a pair of trousers or a skirt at the front and back to hold it up.Physical goods`txcd_30011015`Neck GaiterA closed tube of fabric worn about the neck for warmth. It can be pulled over mouth and nose to protect against wind, dust, or other particles.Physical goods`txcd_30011020`School UniformsA set of standardized clothes worn primarily during attendnce at an educational institution.Physical goods`txcd_30011028`Fur Clothing - SyntheticClothing or footwear, such as coats, hats, ear muffs, gloves, etc. worn on the human body made of imitation fur materials.Physical goods`txcd_30011034`ScarvesA broad strip of cloth that covers the shoulders, neck, or head for warmth or appearance.Physical goods`txcd_30011045`NecktiesA necktie, or simply a tie, is a piece of cloth worn by men and women for decorative purposes around the neck, resting under the shirt collar and knotted at the throat, and often draped down the chest.Physical goods`txcd_30011100`Formal or Special Occasion WearClothing designed for, and not normally worn except while attending, a formal function, including tuxedos, bridal gowns, and evening gowns.Physical goods`txcd_30011200`Children's clothing and footwearChildren's clothing and footwear including general purpose articles intended to be worn by a person based on certain size or age requirements.Physical goods`txcd_30011201`Fur ClothingClothing or footwear, such as coats, hats, ear muffs, gloves, etc. worn on the human body made of the real pelt of an animal.Physical goods`txcd_30021000`Athletic Activity ClothingClothing, footwear, and accessories worn on a person's body while participating in recreational or sporting activities, and which are not typical for everyday usage. Please select a more granular product tax category where appropriate.Physical goods`txcd_30021001`Sweat BandsA band of absorbent material worn around the head or wrist to soak up sweat, especially by participants in physical activity.Physical goods`txcd_30021200`SwimsuitsBathing suits, swim trunks, or bathing costumes meant to be worn in or near water.Physical goods`txcd_30030001`Occupational UniformsClothing worn while performing an employment role, such as paramedic uniforms, firefighter uniforms, military uniforms, medical attire, law enforcement attire, etc.Physical goods`txcd_30031004`Cleanroom ApparelClothing and related covering material that is worn within cleanrooms, which require controlled low levels of environmental contaminants such as dusts, microbes, vapors, and aerosol particles.Physical goods`txcd_30031041`Reflective ApparelHigh-visibility warning clothing to signal the presence of the user in places and situations which may cause potential threats to their health and safety.Physical goods`txcd_30031404`Protective/Safety ClothingClothing for human wear and designed as protection of the wearer against injury or disease or as protections against damage or injury of other persons or property but not suitable for general use.Physical goods`txcd_30031405`Protective/Safety Clothing - Occupational UseClothing worn by an employee during the course of employment for protection against injury or disease or as protection against damage or injury of other persons or property. Such clothing items are not suitable for general use.Physical goods`txcd_30031406`Protective/Safety FootwearFootwear for human wear and designed as protection of the wearer against injury or disease or as protections against damage or injury of other persons or property but not suitable for general use.Physical goods`txcd_30031407`Protective/Safety Footwear - Occupational UseFootwear worn by an employee during the course of employment for protection against injury or disease or as protection against damage or injury of other persons or property. Such clothing items are not suitable for general use.Physical goods`txcd_30031408`Protective/Safety EquipmentEquipment type accessories (such as helmets, eyeshields, facemasks, pads, etc) for human wear and designed as protection of the wearer against injury or disease or as protections against damage or injury of other persons or property but not suitable for general use.Physical goods`txcd_30031409`Protective/Safety Equipment - Occupational UseEquipment type accessories (such as helmets, eyeshields, facemasks, pads, etc) worn by an employee during the course of employment for protection against injury or disease or as protection against damage or injury of other persons or property. Such clothing items are not suitable for general use.Physical goods`txcd_30040003`Cloth Face MasksA reusable mask made of common fabrics worn over the mouth and nose to act as personal protection from airborne particles or pathogens.Physical goods`txcd_30040005`Costume Masks and AccessoriesMasks and accessories sold separately to be worn for costume purposes for seasonal or cultural holidays or celebrations.Physical goods`txcd_30040006`CostumesApparel worn by a person for seasonal or cultural holidays or celebrations, rather than for everday wear.Physical goods`txcd_30051302`Gloves (general use)Gloves for general use (e.g. leather), but not gloves used for sporting (e.g., baseball, football gloves).Physical goods`txcd_30060001`Purses and HandbagsBags including handbags, purses, coin purses, fanny packs / bum bags, and diaper / nappy bags.Physical goods`txcd_30060004`HandkerchiefsA small usually square piece of cloth used for usually personal purposes (such as blowing the nose) or as a clothing accessory.Physical goods`txcd_30060005`Hair AccessoriesHair notions such as headbands, barrettes, bows, clips, and pins.Physical goods`txcd_30060006`HatsA shaped covering for the head worn for warmth, as a fashion item, or as part of a uniform.Physical goods`txcd_30060007`JewelryJewelry such as necklaces, earrings, rings, and more.Physical goods`txcd_30060010`Non-Clothing AccessoriesArticles, although worn on the body, which are not considered clothing or footwear. Examples include armbands, pocket protectors, shoulder boards, sleep masks, etc. Please select a more granular product tax category where appropriate.Physical goods`txcd_30060011`Shower CapsA plastic cap worn in the shower to keep the hair dry.Physical goods`txcd_30060013`UmbrellasUmbrellas.Physical goods`txcd_30060014`Wigs, Hairpieces, Hair extensionsWigs, Hairpieces, Hair extensions.Physical goods`txcd_30060015`LuggageSuitcases and baggage typically used for transporting travellers' belongings.Physical goods`txcd_30060016`WatchesA small timepiece worn typically on a strap on one's wrist.Physical goods`txcd_30060017`Sunglasses - Non-prescriptionSunglasses with a lens containing no lens powers to correct vision problems.Physical goods`txcd_30060018`Watches - SmartA digital wristwatch that provides many other features besides timekeeping. Like a smartphone, a smartwatch has a touchscreen display, which allows you to perform actions by tapping or swiping on the screen. Smartwatches include allow access to apps, similar to apps for smartphones and tablets.Physical goods`txcd_30060019`BriefcasesA flat, rectangular case with a handle, often of leather, for carrying books, papers, etc.Physical goods`txcd_30060020`ApronsA piece of clothing, such as a kitchen apron, that you wear over the front of other clothes to keep the clothes clean.Physical goods`txcd_30060021`BandannasA triangular or square piece of cloth tied around the head, face or neck for protective or decorative purposes.Physical goods`txcd_30060101`WalletsA small folding case for carrying paper money, credit cards and other flat objects.Physical goods`txcd_30070001`Bicycle Helmets - AdultA bicycle helmet that is NOT marketed and labeled as being intended for youth.Physical goods`txcd_30070002`Bicycle Helmets - YouthA bicycle helmet marketed and labeled as being intended for youth.Physical goods`txcd_30070003`Ballet or Tap ShoesFootwear worn exclusively while participating in ballet or tap dancing.Physical goods`txcd_30070004`Baseball Batting GlovesGloves worn by baseball/softball participants while hitting.Physical goods`txcd_30070005`Bowling GlovesGloves worn while rolling a bowling ball to the support the muscles in the hand and wrist, and to provide extra padding or grip.Physical goods`txcd_30070006`Bowling ShoesFootwear uniquely designed to be worn while bowling, having a slick smooth sole meant for gliding.Physical goods`txcd_30070007`Boxing GlovesA heavily padded mitten worn in boxing.Physical goods`txcd_30070008`Cleated or Spiked ShoesAthletic footwear having cleats or spikes to improve traction on various playing field surfaces.Physical goods`txcd_30070009`Football Receiver GlovesThin, lightweight gloves designed mainly for wide receivers in football to help with grip while catching.Physical goods`txcd_30070010`Golf GlovesA glove worn by golfers to give a firm grip on the handle of the golf club.Physical goods`txcd_30070011`Golf ShoesFootwear designed for golf course play, usually spiked (featuring actual cleats on the outsole) or spikeless (featuring a flat outsole with rubber studs or dimples in place of spikes).Physical goods`txcd_30070012`Ice SkatesIce Skates.Physical goods`txcd_30070013`Life VestsA inflatable sleeveless jacket worn to keep a person afloat when in danger of drowning.Physical goods`txcd_30070014`Martial Arts AttireClothing apparel/uniforms that are specific to the training and competition of various martial arts.Physical goods`txcd_30070015`Motorcycle HelmetsA helmet designed for used when opertating a motorcycle, atv, snowmobile, etc.Physical goods`txcd_30070017`Mouth GuardsA protective device for the mouth that covers the teeth and gums to prevent and reduce injury to the teeth, arches, lips and gums.Physical goods`txcd_30070018`Roller Skates or Roller BladesRoller Skates or Roller Blades.Physical goods`txcd_30070019`Shin GuardsA stiff pad worn typically worn under socks to protect the shins when playing soccer, hockey, and other sports.Physical goods`txcd_30070020`Shoulder Pads for SportsA hard protective pad for the shoulders used in certain sports, such as ice hockey and football.Physical goods`txcd_30070021`Ski BootsA rigid padded shoe that extends above the ankle, is secured to the foot, and is locked into position in a ski binding.Physical goods`txcd_30070022`Sport UniformsAthletic uniforms not containing protective padding or gear.Physical goods`txcd_30070023`Swim FinsFlippers on the foot or leg and made from rubber or plastic, to aid movement through the water in water sports.Physical goods`txcd_30070024`Swim GogglesGoggles to protect the eyes from material in the water, while swimming.Physical goods`txcd_30070025`WetsuitA close-fitting garment covering most of the body worn for warmth in water sports or diving.Physical goods`txcd_30070026`Athletic SupporterAn elastic support for the male genitals, worn especially in athletic or other strenuous activity.Physical goods`txcd_30070028`Hunting VestsVests designed primarily for wear while hunting, but which are also adaptable to everyday use.Physical goods`txcd_30070029`Hunting Activity ClothingClothing, footwear, and accessories for wear while hunting, but that are not adaptable to everyday use.Physical goods`txcd_30071000`Sports Activities EquipmentProtective gear worn about the human body while participating in athletic, recreational, or sporting activities, and which are not typical for everyday usage. Please select a more granular product tax category where appropriate.Physical goods`txcd_30080001`Button CoversButton covers are clothing accessories that slip over simple buttons for stylistic adornment.Physical goods`txcd_30080002`Component Clothing ItemsItems items used to make or repair clothing, including buttons, clasps, fabric, thread, yarn, snaps, hooks, zippers, sequins, fabric dye, and the like.Physical goods`txcd_30090005`OvershoesRubber boots worn over regular footwear to prevent them from wet or soiled.Physical goods`txcd_30090009`Shoe InsertsOver the counter inserts or insoles for in-shoe foot comfort.Physical goods`txcd_30090010`ShoelacesShoelaces.Physical goods`txcd_31020001`BibsA piece of cloth or plastic fastened around a baby's neck to keep their clothes clean while eating.Physical goods`txcd_31020002`Infant SwaddlesBlankets made to stretch to tightly around babies, and may have features like velcro or specially designed shapes or flaps to facilitate swaddle wrapping.Physical goods`txcd_31020003`Infant Receiving BlanketsA small lightweight blanket used to wrap an infant, eg. after bathing.Physical goods`txcd_31030001`Diaper CreamA skin cream forming a protective barrier to help heal and soothe diaper rash discomfort. These products contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_31030003`Baby WipesNon medicated disposable moistened cleansing wipes. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_31031202`Infant DiapersDisposable diapers for infants.Physical goods`txcd_31031203`Disposable Toddler Training PantsAbsorbent single use underpants worn by children during potty training as a transition between diapers and cloth underwear.Physical goods`txcd_31031204`Diaper Liners - Single UseOne time use diaper liners for capturing solid waste for ease of disposal.Physical goods`txcd_31031205`Cloth DiapersInfant washable/reusable cloth diapers.Physical goods`txcd_31040001`Baby Feeding Bottles/NipplesA bottle with a teat or nipple made for babies to drink from.Physical goods`txcd_31040002`Breast PumpsA mechanical device that lactating women use to extract milk from their breasts.Physical goods`txcd_31070001`Infant/Child Car SeatA portable seat that can be installed and removed from motor vehicles designed to protect infants and children through a certain age or weight (includes booster seats).Physical goods`txcd_32010001`Blood Glucose Monitoring DevicesDevices used by diabetic individuals to monitor sugar levels in the blood, sold without prescription order of a licensed professional (e.g., blood sugar meters, glucose meters or glucometers). This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32010002`Diabetic Testing SuppliesSingle use supplies utilized by diabetics to monitor blood sugar or urine, including skin puncture lancets, test strips for blood glucose monitors, visual read test strips, and urine test strips, sold without prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32010003`Blood Glucose Monitoring Devices with PrescriptionDevices used by diabetic individuals to monitor sugar levels in the blood, sold under prescription order of a licensed professional (e.g., blood sugar meters, glucose meters or glucometers). This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32010004`Diabetic Testing Supplies with PrescriptionSingle use supplies utilized by diabetics to monitor blood sugar or urine, including skin puncture lancets, test strips for blood glucose monitors, visual read test strips, and urine test strips, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32020001`Prescription DrugsA substance that can only be obtained via a prescription of a licensed professional. A drug is a compound, substance, or preparation, and any component thereof, not including food or food ingredients, dietary supplements, or alcoholic beverages, that is: recognized in the official United States pharmacopoeia, official homeopathic pharmacopoeia of the United States, or official national formulary, and supplement to any of them; intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease; or intended to affect the structure or any function of the body. A drug can be intended for internal (ingestible, implant, injectable) or external (topical) application to the human body. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32020002`Drugs - Over the CounterThe term drug refers to a compound, substance or preparation intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease. An over-the-counter drug is a substance that contains a label identifying it as a drug and including a \"drug facts\" panel or a statement of active ingredients, that can be obtained without a prescription. A drug can be intended for internal (ingestible, implant, injectable) or external (topical) application to the human body.Physical goods`txcd_32020003`Over-the-Counter Drugs with PrescriptionThe term drug refers to a compound, substance or preparation intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease. An over-the-counter drug with prescrption is a substance that contains a label identifying it as a drug and including a \"drug facts\" panel or a statement of active ingredients, that can be obtained without a prescription, but is sold under prescription order of a licensed professional. A drug can be intended for internal (ingestible, implant, injectable) or external (topical) application to the human body. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32020004`Insulin with PrescriptionSynthetic or animal-based insulin used as an injectible drug for diabetes patients, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32020005`InsulinSynthetic or animal-based insulin used as an injectible drug for diabetes patients, sold without prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32020006`Medical Oxygen with PrescriptionMedical grade oxygen sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32020011`Medical OxygenMedical grade oxygen sold without prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32030001`CondomsMale or female condoms used to prevent pregnancy or exposure to sexually transmitted diseases.Physical goods`txcd_32030002`Condoms with PrescriptionMale or female condoms and vaginal sponges used to prevent pregnancy and/or exposure to STDs, sold under prescription order of a licensed professional.Physical goods`txcd_32030003`Condoms with SpermicideMale or female condoms used to prevent pregnancy or exposure to STDs, containing a spermicidal lubricant as indicated by a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32030004`Condoms with Spermicide with PrescriptionMale or female condoms and vaginal sponges used to prevent pregnancy and/or exposure to STDs, containing a spermicidal lubricant as indicated by a \"drug facts\" panel or a statement of active ingredients, sold under prescription order of a licensed professional.Physical goods`txcd_32030005`Contraceptive OintmentsA topical preparation containing a spermicidal lubricant to prevent pregnancy as indicated by a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32030006`Birth Control - Over-the-Counter Oral ContraceptivesOver-the-Counter emergency contraceptive pills act to prevent pregnancy after intercourse. The contraceptive contains a hormone that prevents ovulation, fertilization, or implantation of an embryo.Physical goods`txcd_32030007`Birth Control - Over-the-Counter Oral Contraceptives with PrescriptionOver-the-Counter emergency contraceptive pills act to prevent pregnancy after intercourse, sold under prescription order of a licensed professional. The contraceptive contains a hormone that prevents ovulation, fertilization, or implantation of an embryo.Physical goods`txcd_32030008`Birth Control - Prescription non-Oral Contraceptives - BarriersBarrier based prescription only birth control methods, including the diaphragm and cervical cap that prevent the joining of the sperm and egg, available only under prescription order of a licensed professional.Physical goods`txcd_32030009`Birth Control - Prescription non-Oral Contraceptives - HormonalHormonal based birth control methods other than the oral pill, including intrauterine devices, injections, skin implants, transdermal patches, and vaginal rings that release a continuous dose of hormones to eliminate ovulation and prevent pregnancy, available only under prescription order of a licensed professional.Physical goods`txcd_32030010`Birth Control - Prescription Oral ContraceptivesAn oral medication containing hormones effective in altering the menstrual cycle to eliminate ovulation and prevent pregnancy, available only under prescription order of a licensed professional. Other than preventing pregnancy, hormonal birth control can also be used to treat various conditions, such as Polycystic Ovary Syndrome, Endometriosis, Primary Ovarian Insufficiency, etc.Physical goods`txcd_32040002`Feminine Cleansing SolutionsVaginal cleaning products include douches and wipes.Physical goods`txcd_32040003`Feminine Cleansing Solutions - MedicatedVaginal cleaning products include douches and wipes with medication such as an antiseptic, containing a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32040004`Feminine Yeast TreatmentsOver-the-counter antifungal creams, ointments or suppositories to treat yeast infections, containing a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32040005`Tampons/Pads/Sanitary Napkins/LinersFeminine hygiene product designed to absorb the menstrual flow.Physical goods`txcd_32050001`Adult Disposable DiapersAdult Disposable Diapers.Physical goods`txcd_32050005`Disposable Face MasksMasks designed for one-time use to protect the wearer from contamination of breathable particles. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32050006`Grooming and Hygiene ProductsSoaps, cleaning solutions, shampoo, toothpaste, mouthwash, antiperspirants, suntan lotions, etc. Please select a more granular category as appropriate.Physical goods`txcd_32050007`Grooming and Hygiene Products - MedicatedSoaps, cleaning solutions, shampoo, toothpaste, mouthwash, antiperspirants, suntan lotions, and sunscreens that contain medicinal ingredients as described on the product's label. Please select a more granular category as appropriate.Physical goods`txcd_32050009`Hand SanitizersA liquid, gel, foam, or wipe generally used to decrease infectious agents on the hands. Alcohol-based versions typically contain some combination of isopropyl alcohol, ethanol (ethyl alcohol), or n-propanol. Alcohol-free products are generally based on disinfectants, or on antimicrobial agents. These products contain a \"drug facts\" panel or a statement of active ingredients. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32050012`Medicated Acne TreatmentsTopical medicated solutions for treating skin acne. These products contain a \"drug facts\" panel or a statement of active ingredients. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32050013`Skin Care ProductsLotions, moisturizers, creams, powders, sprays, etc that promote optimal skin health that do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050014`Skin Care Products - MedicatedLotions, moisturizers, creams, powders, sprays, etc that promote optimal skin health and contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050015`Smoking Cessation ProductsOver-the-counter nicotine replacement products, including patches, gum, lozenges, sprays and inhalers that contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050017`Toilet TissueToilet tissue or paper primarily used for the removal of feces.Physical goods`txcd_32050018`ToothbrushA small brush with a long handle, used for cleaning the teeth.Physical goods`txcd_32050019`ToothpasteA thick, soft, moist substance used on a brush for cleaning one's teeth.Physical goods`txcd_32050020`Baby OilBaby oil is an inert (typically mineral) oil for the purpose of keeping skin soft and supple. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050021`Baby PowderBaby powder is an astringent powder used for preventing diaper rash, as a spray, and for other cosmetic uses. It may be composed of talcum (in which case it is also called talcum powder) or corn starch. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050022`Breath Spray/Dissolvable StripsBreath spray is a product sprayed into the mouth and breath strips dissolve in the mouth for the purpose of eliminating halitosis. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050023`Bubble Bath/Bath Salts,Oils,CrystalsVarious surfactant preparations to improve cleaning, enhance the enjoyment of bathing, and serve as a vehicle for cosmetic agents. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050024`Conditioner - HairA hair care product typically applied and rinsed after shampooing that is used to improve the feel, appearance and manageability of hair. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050025`Cosmetics - BeautifyingArticles intended to be rubbed, poured, sprinkled, or sprayed on, introduced into, or otherwise applied to the human body or any part thereof for beautifying, promoting attractiveness, or altering the appearance. This category supports only the following items: Acrylic fingernail glue, Acrylic fingernails, Artificial eyelashes, Blush, Bronzer, Body glitter, Concealer, Eyelash glue, Finger/toenail decorations, Finger/toenail polish, Nail polish remover, Hair coloring, Hair mousse/gel, Hair oil, Hair spray, Hair relaxer, Hair wave treatment, Hair wax, Lip gloss, Lip liner, Lipstick, Liquid foundation, Makeup, Mascara, Nail polish remover, Powder foundation, Cologne, Perfume.Physical goods`txcd_32050026`Dental Floss/PicksA soft, strong, waxed or unwaxed thread for drawing between the teeth to remove food particles and prevent the buildup of plaque.Physical goods`txcd_32050027`Denture Creams/AdhesivesDenture adhesives are pastes, powders or adhesive pads that may be placed in/on dentures to help them stay in place. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050028`Deodorant - Natural or No Active IngredientsPersonal under-arm deodorants/antiperspirants containing natural ingredients and/or ingredients that are not considered drugs. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050029`Deodorant/AntiperspirantPersonal under-arm deodorants/antiperspirants. These products do contain a \"drug facts\" panel or a statement of active ingredients, typically aluminum.Physical goods`txcd_32050030`Hair Loss ProductsTopical foams, creams, gels, etc. that prevent hair loss and promote hair regrowth. These products contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050031`Hair Removal ProductsDepilatories are cosmetic preparations used to remove hair from the skin. Chemical depilatories are available in gel, cream, lotion, aerosol, roll-on, and powder forms. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050032`Lip BalmA skin protectorant for the lips. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050033`Lip Balm - MedicatedA medicated skin protectorant for the lips. These products contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050034`Mouthwash - CosmeticCosmetic mouthwash may temporarily control bad breath and leave behind a pleasant taste, but has no chemical or biological application beyond their temporary benefit. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050035`Mouthwash - TherapeuticTherapeutic mouthwash, having active ingredients (such as antiseptic, or flouride) intended to help control or reduce conditions like bad breath, gingivitis, plaque, and tooth decay. These products contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050036`ShampooA hair care product for cleansing the hair/scalp. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050037`Shampoo - MedicatedA hair care product for cleansing the hair/scalp, with anti-dandruff active ingredients. These products contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050038`Shaving CreamsA cosmetic foam or gel used for shaving preparation. The purpose of shaving cream is to soften the hair by providing lubrication. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050039`Soaps - AntibacterialSoaps, body washes, shower gels for personal hygiene containing antibacterial. These products contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32050040`SunscreenA lotion, spray, gel, foam, stick or other topical product that absorbs or reflects some of the sun's ultraviolet (UV) radiation and thus helps protect against sunburn. Sunscreen contains a \"drug facts\" label or statement of active ingredients.Physical goods`txcd_32050041`Teeth Whitening KitsTeeth whitening gels, rinse, strips, trays, etc containing bleaching agents. These products do not contain a \"drug facts\" panel or a statement of active ingredients.Physical goods`txcd_32060001`Durable Medical Equipment for Home UseWhen sold without prescription order of a licensed professional, equipment that: can withstand repeated use; is primarily and customarily used to serve a medical purpose; generally is not useful to a person in the absence of illness or injury; and is not worn in or on the body. Home use means the equipment is sold to an individual for use at home, regardless of where the individual resides. Examples include hospital beds, commode chairs, bed pans, IV poles, etc.Physical goods`txcd_32060002`Durable Medical Equipment for Home Use with PrescriptionWhen sold under prescription order of a licensed professional, equipment that: can withstand repeated use; is primarily and customarily used to serve a medical purpose; generally is not useful to a person in the absence of illness or injury; and is not worn in or on the body. Home use means the equipment is sold to an individual for use at home, regardless of where the individual resides. Examples include hospital beds, commode chairs, bed pans, IV poles, etc.Physical goods`txcd_32060007`Enteral Feeding Equipment for Home Use with PrescriptionWhen sold under prescription order of a licensed professional, nutritional tube feeding equipment including button-style feeding tubes, standard G-tubes, NG-tubes, extension sets, adapters, feeding pumps, feeding pump delivery sets.Physical goods`txcd_32060012`Kidney Dialysis Equipment for Home Use with PrescriptionWhen sold under prescription order of a licensed professional, a machine used that filters a patient's blood to remove excess water and waste products when the kidneys are damaged, dysfunctional, or missing. The kidney dialysis machine is an artificial part which augments the natural functioning of the kidneys.Physical goods`txcd_32060017`Kidney Dialysis Equipment for Home UseWhen sold without prescription order of a licensed professional, a machine used that filters a patient's blood to remove excess water and waste products when the kidneys are damaged, dysfunctional, or missing. The kidney dialysis machine is an artificial part which augments the natural functioning of the kidneys.Physical goods`txcd_32060018`Oxygen Delivery Equipment for Home Use with PrescriptionWhen sold under prescription order of a licensed professional, equipment used to administer oxygen directly into the lungs of the patient for the relief of conditions in which the human body experiences an abnormal deficiency or inadequate supply of oxygen. Oxygen equipment means oxygen cylinders, cylinder transport devices, including sheaths and carts, cylinder studs and support devices, regulators, flowmeters, tank wrenches, oxygen concentrators, liquid oxygen base dispensers, liquid oxygen portable dispensers, oxygen tubing, nasal cannulas, face masks, oxygen humidifiers, and oxygen fittings and accessories.Physical goods`txcd_32060023`Oxygen Delivery Equipment for Home UseWhen sold without prescription order of a licensed professional, equipment used to administer oxygen directly into the lungs of the patient for the relief of conditions in which the human body experiences an abnormal deficiency or inadequate supply of oxygen. Oxygen equipment means oxygen cylinders, cylinder transport devices, including sheaths and carts, cylinder studs and support devices, regulators, flowmeters, tank wrenches, oxygen concentrators, liquid oxygen base dispensers, liquid oxygen portable dispensers, oxygen tubing, nasal cannulas, face masks, oxygen humidifiers, and oxygen fittings and accessories.Physical goods`txcd_32060024`Heating PadsA heating pad is a pad used for warming of parts of the body in order to manage pain. Types of heating pads include electrical, chemical and hot water bottles. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32060025`Cold or Hot Therapy Packs - ReusableA reusable pain management supply that includes artificial ice packs, gel packs, heat wraps, etc used for pain relief. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32060026`Enteral Feeding Equipment for Home UseWhen sold without prescription order of a licensed professional, nutritional tube feeding equipment including button-style feeding tubes, standard G-tubes, NG-tubes, extension sets, adapters, feeding pumps, feeding pump delivery sets.Physical goods`txcd_32070003`Wound Care Supplies - Bandages, Dressings, GauzeAn item that is applied directly to or inside a wound to absorb wound drainage, protect healing tissue, maintain a moist or dry wound environment (as appropriate), or prevent bacterial contamination. Examples include bandages, dressings, gauze, medical tape. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070004`Wound Care Supplies - Bandages, Dressings, Gauze - MedicatedA wound care supply is defined as an item that is applied directly to or inside a wound to absorb wound drainage, protect healing tissue, maintain a moist or dry wound environment (as appropriate), or prevent bacterial contamination. These supplies contain medication such as an antibiotic ointment. They are a labeled with a \"drug facts\" panel or a statement of active ingredients.Examples include bandages, dressings, gauze, medical tape. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070018`First Aid KitsA collection of mixed supplies and equipment that is used to give medical treatment, often housed in durable plastic boxes, fabric pouches or in wall mounted cabinets. Qualifying medicinal items (eg. OTC drugs) make up 51% or more of the value of the kit. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070019`Gloves - Disposable (non medical use)Single use disposable gloves (latex, nitrile, vinyl, etc) not used for medical purposes.Physical goods`txcd_32070020`Gloves - Disposable (medical use)Single use disposable gloves (latex, nitrile, vinyl, etc) that have an application in a first aid or medical setting. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070028`Medical Supplies - ConsumableItems for use in cure, treatment or diagnosis of injury, illness, disease or incapacity, and which is consumed during the use. Please select a more granular category as appropriate.Physical goods`txcd_32070029`First Aid Kits - 50% or Less Medicinal ItemsA collection of mixed supplies and equipment that is used to give medical treatment, often housed in durable plastic boxes, fabric pouches or in wall mounted cabinets. Qualifying medicinal items (eg. OTC drugs) make up 50% or less of the value of the kit. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070030`Contact Lens Disinfecting SolutionsLiquid solution for cleaning and disinfecting contact lenses.Physical goods`txcd_32070031`Contact Lens Lubricating SolutionsLiquid solution for lubricating/rewetting, but not disinfecting, contact lenses. This solution is applied directly to the eye.Physical goods`txcd_32070032`Cotton Balls/Swabs - SterileSingle use cotton balls or swabs for application of antiseptics and medications and to cleanse scratches, cuts or minor wounds. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070033`Cotton Balls/Swabs - UnsterileSingle use cotton balls or swabs for multi-purpose use other than applying medicines and cleaning wounds, due to not being sterile. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070034`Cold or Hot Therapy Packs - DisposableA single use pain management supply that includes artificial ice packs, gel packs, heat wraps, etc used for pain relief. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070035`Cold or Hot Therapy Packs - Disposable - MedicatedA single use pain management supply that includes artificial ice packs, gel packs, heat wraps, etc used for pain relief. These products contain a \"drug facts\" panel or a statement of active ingredients. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070036`Nasal Breathing StripsFlexible adhesive strips that attach over the bridge of the nose to lift the sides of the nose, opening the nasal passages to provide relief for congestion and snoring. The products are drug free and contain no active drug ingredients.Physical goods`txcd_32070037`Hypodermic Needles/Syringes with Prescription - InsulinSingle use hollow needle commonly used with a syringe to inject insulin into the body by diabetic individuals, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070038`Hypodermic Needles/Syringes - InsulinSingle use hollow needle commonly used with a syringe to inject insulin into the body by diabetic individuals, sold without prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070039`Hydrogen PeroxideHydrogen peroxide is a mild antiseptic used on the skin to prevent infection of minor cuts, scrapes, and burns. It may also be used as a mouth rinse to help remove mucus or to relieve minor mouth irritation (e.g., due to canker/cold sores, gingivitis). These products contain a \"drug facts\" panel or a statement of active ingredients. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070040`Petroleum JellyA multi-purpose skin protectorant and topical ointment. These products contain a \"drug facts\" panel or a statement of active ingredients. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070041`Ear Drops - MedicatedLiquid drops to be placed inside the ear canal to reduce the symptoms of an ear ache, or to act as an ear drying aid, or to loosen, cleanse, and aid in the removal of ear wax. These products contain a \"drug facts\" panel or a statement of active ingredients. Examples include Ear Ache, Swimmers' Ears, and Ear Wax removal drops. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32070042`Isopropyl (Rubbing) AlcoholA liquid solution typically used as a topical antiseptic. The products contain a \"drug facts\" panel or a statement of active ingredients. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32080001`Bath AidsAids that can increase, improve, or assist mobility in the bathroom such as raised toilet seat, tub & shower stool, handrails, grab bars, etc.Physical goods`txcd_32080003`Mobility Enhancing EquipmentEquipment which is primarily and customarily used to provide or increase the ability to move from one place to another, sold without a prescription, and which is appropriate for use either in a home or a motor vehicle; Is not generally used by persons with normal mobility; and does not include any motor vehicle or equipment on a motor vehicle normally provided by a motor vehicle manufacturer. Examples include wheelchairs, crutches, canes, walkers, chair lifts, etc.Physical goods`txcd_32080004`Repair & Replacement Parts for Mobility Enhancing EquipmentParts for items such as crutch pads, walker tips, cane tips, crutch tips, etc.Physical goods`txcd_32080005`Mobility Enhancing Equipment with PrescriptionEquipment which is primarily and customarily used to provide or increase the ability to move from one place to another, sold under a prescription, and which is appropriate for use either in a home or a motor vehicle; Is not generally used by persons with normal mobility; and does not include any motor vehicle or equipment on a motor vehicle normally provided by a motor vehicle manufacturer. Examples include wheelchairs, crutches, canes, walkers, chair lifts, etc.Physical goods`txcd_32090003`Corrective LensesCorrective lenses, including eyeglasses and contact lenses, sold without a prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32090005`Hearing Aid BatteriesBatteries specifically labeled and designed to operate hearing aid devices, sold without prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32090006`Hearing AidsArtificial devices to correct or alleviate hearing deficiencies, sold without prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32090007`Prosthetic DeviceWhen sold without prescription order of a licensed professional, a replacement, corrective, or supportive device, worn on or in the body to: Artificially replace a missing portion of the body; Prevent or correct physical deformity or malfunction; or Support a weak or deformed portion of the body. Worn in or on the body means that the item is implanted or attached so that it becomes part of the body, or is carried by the body and does not hinder the mobility of the individual. Examples include artificial limbs, pacemakers, orthotics, orthopedics, ostomy/colostomy devices, catheters, etc.Physical goods`txcd_32090008`Prosthetic Devices with PrescriptionWhen sold under prescription order of a licensed professional, a replacement, corrective, or supportive device, worn on or in the body to: Artificially replace a missing portion of the body; Prevent or correct physical deformity or malfunction; or Support a weak or deformed portion of the body. Worn in or on the body means that the item is implanted or attached so that it becomes part of the body, or is carried by the body and does not hinder the mobility of the individual. Examples include artificial limbs, pacemakers, orthotics, orthopedics, ostomy/colostomy devices, catheters, etc.Physical goods`txcd_32090013`Corrective Lenses with PrescriptionCorrective lenses, eyeglasses, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32090014`Contact Lenses with PrescriptionContact lenses, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32090015`Dental Prosthetics with PrescriptionWhen sold under prescription order of a licensed professional, a replacement, corrective, or supportive device, worn in the mouth, including dentures, orthodontics, crowns, bridges, etc.Physical goods`txcd_32090016`Dental ProstheticsWhen sold without prescription order of a licensed professional, a replacement, corrective, or supportive device, worn in the mouth, including dentures, orthodontics, crowns, bridges, etc.Physical goods`txcd_32090017`Hearing Aids with PrescriptionArtificial devices to correct or alleviate hearing deficiencies, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32090018`Hearing Aid Batteries with PrescriptionBatteries specifically labeled and designed to operate hearing aid devices, sold under prescription order of a licensed professional. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32100001`Pregenacy Testing KitsAt home urine-based tests used to detect pregancy hormone levels.Physical goods`txcd_32100002`Ovulation Testing KitsAt home urine-based tests used to detect impending ovulation to assist in pregnancy planning.Physical goods`txcd_32100003`Infectious Disease TestAn at-home infectious disease test kit that can be sold without a prescription.Physical goods`txcd_32100004`Infectious Disease Test - Prescription onlyAn at-home infectious disease test kit that can only be sold with a prescription.Physical goods`txcd_32100005`DNA Testing KitsAt home saliva, cheeek swab or blood drop based tests used to detect various genetic markers in an individual.Physical goods`txcd_32100006`Medical Thermometers - DisposableOne-time use medical thermometers for oral, temporal/forehead, or rectal body temperature diagnostics. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32100007`Medical Thermometers - ReusableMultiple use medical thermometers for oral, temporal/forehead, or rectal body temperature diagnostics. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32100008`Energy Star ProductsProducts carrying an Energy Star rating (e.g., light bulbs, appliances, etc.). Please select a more granular product tax category where appropriate.Physical goods`txcd_32100010`Blood Pressure Testing DevicesAt home digital or manual (aneroid) sphygmomanometers, also known as a blood pressure meter, blood pressure monitor, or blood pressure gauge, are devices used to measure blood pressure, composed of an inflatable cuff to collapse and then release the artery under the cuff in a controlled manner. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32100011`Pulse OximeterAn electronic device that clips onto a patient's finger to measure heart rate and oxygen saturation in his or her red blood cells. This code is intended for sales directly to end consumers that are NOT healthcare providers.Physical goods`txcd_32100012`Drug Testing KitsAt home urine-based tests used to detect the presense of various drug substances in an individual.Physical goods`txcd_32100013`Cholesterol Testing KitsAt home blood-prick based tests used to monitor cholesterol levels in an individual.Physical goods`txcd_33020001`Ceiling Fans - Energy StarCeiling Fans carrying an Energy Star rating.Physical goods`txcd_33020002`Air conditioners - Energy StarDomestic air conditioning (central or room) systems carrying Energy Star rating.Physical goods`txcd_33020003`Furnaces - Energy StarDomestic gas or oil furnaces carrying an Energy Star rating.Physical goods`txcd_33020004`Heat Pumps - Energy StarDomestic air source heat pumps carrying Energy Star rating.Physical goods`txcd_33020005`Water Heater - Energy StarDomestic water heater carrying Energy Star rating.Physical goods`txcd_33020006`Dehumidifier - Energy StarDomestic appliance carrying an Energy Star Rating which reduces and maintains the level of humidity in the air.Physical goods`txcd_33020007`Boilers - Energy StarDomestic gas or oil boilers for space or water heating carrying an Energy Star rating.Physical goods`txcd_33020008`Programmable Wall Thermostat - Energy StarAn in home programmable thermostat, such as a WiFi enabled smart thermostat, carrying an Energy Star rating.Physical goods`txcd_33020009`Refrigerators - Energy StarDomestic standard size refrigerators carrying Energy Star rating.Physical goods`txcd_33020010`Dishwashers - Energy StarDomestic dish washing appliances carrying Energy Star rating.Physical goods`txcd_33020011`Freezers- Energy StarDomestic freezers carrying Energy Star rating.Physical goods`txcd_33020012`Clothes Washing Machine - Energy StarDomestic clothes washing appliances carrying Energy Star rating.Physical goods`txcd_33020013`Clothes Drying Machine - Energy StarDomestic clothes drying appliances carrying Energy Star rating.Physical goods`txcd_33020014`Can Opener - ManualNon-electric can opener.Physical goods`txcd_33020200`Water conserving productsWater conserving products are for conserving or retaining groundwater; recharging water tables; or decreasing ambient air temperature, and so limiting water evaporation. Examples include soil sufactants, a soaker or drip-irrigation hose, a moisture control for a sprinkler or irrigation system, a rain barrel or an alternative rain and moisture collection system, a permeable ground cover surface that allows water to reach underground basins, aquifers or water collection points.Physical goods`txcd_33030001`Alkaline BatteriesSingle or multi-pack AA, AAA, c, D, 6-volt or 9-volt batteries, excluding automobile or boat batteries.Physical goods`txcd_33031001`Mobile Phone BatteriesMobile phone batteries.Physical goods`txcd_33080201`Disinfectant WipesWipes used in the process of eliminating or reducing harmful microorganisms from inanimate objects and surfaces.Physical goods`txcd_33080202`Disposable Household Paper ProductsPaper based items for household use designed to be disposed of after single use, including the the following...Facial tissue; Paper bags; Paper freezer wrap; Paper place mats; Paper plates and cups; Paper napkins; Paper straws; Paper tablecloths; Paper towels.Physical goods`txcd_33080300`Household Linens/Bedding Towels Shower CurtainsIncludes blankets, pillows, bed linens/sheets, comforters, towels, wash cloths, shower curtains and bath mats. Please select a more granular category where appropriate.Physical goods`txcd_33080301`BeddingBedclothes items including sheets, pillow cases, bedspreads, comforters, blankets, throws, duvet covers, pillow shams, bed skirts, mattress pad, mattress toppers, and pillows.Physical goods`txcd_33080302`Bath Mats/RugsA small mat/rug used to cover portion of bathroom floor.Physical goods`txcd_33080303`Bath TowelsTowels used for individual drying of persons, including bath towels, beach towels, wash cloths, hand towels, facetowels, sport towels, etc.Physical goods`txcd_33080304`Shower Curtain or LinerShower curtain/liner used to keep water from escaping a showering area.Physical goods`txcd_33080305`Crib Bumpers/LinersA bumper/liner that borders the interior walls/slats of the crib to help protect the baby.Physical goods`txcd_33080306`Dish TowelsDish towels used for kitchenware drying.Physical goods`txcd_33080400`Yarn - Non-clothingYarn for use other than fabricating/repairing clothing.Physical goods`txcd_33100001`Landscape Soil, Mulch, Compost - ResidentialLandscape soil, mulch, compost - residential.Physical goods`txcd_33100101`Agricultural Chemicals - Non-commercial gardeningProducts for use in non-commercial food producing gardens to control insects, weeds, and fungus.Physical goods`txcd_33100200`Agricultural Fertilizer - Non-commercial gardeningProducts for use in non-commercial food producing gardens to enhance plant growth.Physical goods`txcd_33110001`Incandescent Light Bulbs - Energy StarStandard incandescent light bulbs carrying an Energy Star rating.Physical goods`txcd_33110002`Compact Fluorescent Light Bulbs - Energy StarCompact Fluorescent light (CFL) bulbs carrying an Energy Star rating.Physical goods`txcd_33110003`LED Bulbs - Energy StarLight emitting diode (LED) bulbs carrying an Energy Star rating.Physical goods`txcd_33110004`Portable Light SourcesPortable self-powered or battery powered light sources, including flashlights, lanterns, emergency glow sticks or light sticks.Physical goods`txcd_33110005`CandlesCandles to be used as a light source.Physical goods`txcd_33120000`Storm Preparedness ItemsQualifying items for purposes of certain sales tax holidays such as cell phone batteries, cell phone chargers, and two-way radios.Physical goods`txcd_33120001`Portable RadiosPortable self-powered or battery powered radio, two-way radio, weatherband radio.Physical goods`txcd_33120002`Food Storage CoolerNon-electric food or beverage cooler.Physical goods`txcd_33120003`Smoke DetectorsSmoke Detectors.Physical goods`txcd_33120004`Carbon Monoxide DetectorsCarbon Monoxide Detectors.Physical goods`txcd_33120005`Fire ExtinguishersFire Extinguishers.Physical goods`txcd_33120006`Portable Fuel ContainerPortable fuel container.Physical goods`txcd_33120007`Water Storage ContainerNon-electric water container to store water for emergency usage.Physical goods`txcd_33120008`Artificial IceArtificial ice, blue ice, ice packs, reusable ice.Physical goods`txcd_33120009`Tarpaulins and Weatherproof SheetingTarps, plastic sheeting, plastic drop cloths, waterproof sheeting.Physical goods`txcd_33120010`Portable GeneratorPortable generator used to provide light or communications or power appliances during a power outage.Physical goods`txcd_33120011`Power CordsPower cords used to connect electrical equipment and devices to power sockets.Physical goods`txcd_33120012`Axes/HatchetsAn hand held tool with a bladed head on a handle used for hewing, cleaving, chopping, etc.Physical goods`txcd_33120013`Garden ChainsawGas-powered chainsaw.Physical goods`txcd_33120014`Chainsaw AccessoriesChainsaw accessories include chains, lubricants, motor oil, chain sharpeners, bars, wrenches, carrying cases, repair parts, safety apparel.Physical goods`txcd_33120015`Storm Shutters/Window Protection DevicesPlywood, window film, storm shutters, hurricane shutters or other materials specifically designed to protect windows.Physical goods`txcd_33120016`Emergency/Rescue LadderLadder used for home emergency evacuation.Physical goods`txcd_33120017`Ropes and CordsRopes and Cords and similar fastening products.Physical goods`txcd_33120018`Ground Anchor Systems and Tie-down KitsGround anchor systems and tie down kits for securing property against severe weather.Physical goods`txcd_33120019`Duct TapeDuct Tape.Physical goods`txcd_33150001`Toilets - WaterSenseWaterSense labeled toilets.Physical goods`txcd_33150002`Urinals - WaterSenseWaterSense labeled urinals.Physical goods`txcd_33150003`Bathroom Faucets - WaterSenseWaterSense labeled bathroom sink faucets and accessories.Physical goods`txcd_33150004`Spray Water Sprinkler Bodies - WaterSenseWaterSense labeled sprinkler body is the exterior shell that connects to the irrigation system piping and houses the spray nozzle that applies water on the landscape.Physical goods`txcd_33150005`Irrigation Controls - WaterSenseWaterSense labeled irrigation controllers, which act like a thermostat for your sprinkler system telling it when to turn on and off, use local weather and landscape conditions to tailor watering schedules to actual conditions on the site.Physical goods`txcd_33150006`Showerheads - WaterSenseWaterSense labeled showerheads.Physical goods`txcd_34010001`Audio TurntablesA type of consumer electronic device used to play vinyl recordings.Physical goods`txcd_34010002`Digital Music PlayersPortable audio equipment that plays audio files encoded in MP3 and other audio formats.Physical goods`txcd_34010003`Video CamerasA camera that captures moving images and sound and converts them into electronic signals so that they can be saved on a storage device, such as videotape or a hard drive, or viewed on a monitor.Physical goods`txcd_34020001`Digital CamerasA camera that captures photographs in digital memory.Physical goods`txcd_34020002`Digital Picture FramesA framed display designed to display preloaded digital images (jpeg or any digital image format). Has slots for flash memory cards and/or an interface for digital photo camera connection.Physical goods`txcd_34020003`E-Book ReadersA portable electronic device for reading digital books and periodicals.Physical goods`txcd_34020004`Headphones/EarbudsWired and bluetooth headphones and earbuds for audio listening.Physical goods`txcd_34020005`Consumer Electronics Peripherals/AccessoriesConsumer electronics peripherals and accessories. Please select a more granular product tax category where appropriate.Physical goods`txcd_34020006`TelevisionsTelevisions.Physical goods`txcd_34020027`Consumer ElectronicsElectronic devices bought for personal rather than commercial use. Please select a more granular product tax category where appropriate.Physical goods`txcd_34021000`Mobile PhonesA portable device for connecting to a telecommunications network in order to transmit and receive voice, video, or other data.Physical goods`txcd_34021001`Mobile Phone Charging Device/cordA device for recharging the battery of a mobile phone, especially one consisting of a cable connected to an adaptor which plugs into an electrical socket or usb port.Physical goods`txcd_34022000`Video Gaming Console - FixedA specialized computer system designed for interactive video gameplay that typically connects to a television or other monitor.Physical goods`txcd_34022001`Video Gaming Console - PortableA handheld portable electronic device used for playing video games that has its own screen, speakers and controls in one unit.Physical goods`txcd_34040001`Computer BatteriesTypically a lithium-ion remote power source for laptop computers.Physical goods`txcd_34040002`Computer CablesCables with industry standard connection and termination configurations used to connect various peripherals and equipment to computers.Physical goods`txcd_34040003`Computer DrivesStorage drives, hard drives, Zip drives, etc.Physical goods`txcd_34040004`Computer KeyboardsComputer Keyboards.Physical goods`txcd_34040005`Computer MicrophonesComputer Microphones.Physical goods`txcd_34040006`Computer Monitor/DisplaysComputer Monitor/Displays.Physical goods`txcd_34040007`Computer Mouse/Pointing DevicesComputer Mouse/Pointing Devices.Physical goods`txcd_34040008`Computer PrinterComputer Printer.Physical goods`txcd_34040009`Computer SpeakersComputer Speakers.Physical goods`txcd_34040010`Docking StationsA docking station is a hardware frame and set of electrical connection interfaces that enable a notebook computer to effectively serve as a desktop computer.Physical goods`txcd_34040011`ModemsA device that makes possible the transmission of data to or from a computer via telephone or other communication lines.Physical goods`txcd_34040012`MotherboardsA motherboard is the physical component in a computer that contains the computer's basic circuitry and other components.Physical goods`txcd_34040013`Port ReplicatorsA port replicator is an attachment for a notebook computer that allows a number of devices such as a printer, large monitor, and keyboard to be simultaneously connected.Physical goods`txcd_34040014`RoutersA device that connects computer networks to each other, and sends information between networks. The router, as commonly used in the home, is the hardware that allows communication between your personal computers and other connected device and the internet.Physical goods`txcd_34040015`ScannersA device that scans documents and images and converts them into digital data for use on a computer.Physical goods`txcd_34040016`Sound CardsA sound card is an expansion component used in computers to receive and send audio.Physical goods`txcd_34040017`Video/Graphics CardAn expansion card that allows the computer to send graphical information to a video display device such as a monitor, TV, or projector. Video cards are often used by gamers in place of integrated graphics due to their extra processing power and video ram.Physical goods`txcd_34040018`Web CameraA webcam is a video camera that feeds or streams an image or video in real time to or through a computer to a computer network, such as the Internet. Webcams are typically small cameras that sit on a desk, attach to a user's monitor, or are built into the hardware.Physical goods`txcd_35010000`BooksBooks or booklets consisting of text or illustrations bound in a stiffer cover than the pages.Physical goods`txcd_35010001`Books for ChildrenChildren's books including picture books, painting, drawing, and activity books.Physical goods`txcd_35010400`Religious BooksPrinted religious books and manuals.Physical goods`txcd_35010410`BiblesThe sacred writings of a religion.Physical goods`txcd_35010500`Audiobook (Physical Copy)Recognized in the ordinary and usual sense as a \"book\", except that the product is audio and delivered electronically or on a CD/DVD instead of in a printed format.Physical goods`txcd_35020100`NewspapersPublications distributed to the public at regular intervals that contains news of general interest.Physical goods`txcd_35020200`PeriodicalsPublications, including magazines, distributed on a periodic basis.Physical goods`txcd_35020220`Magazine by SubscriptionPeriodicals, printed, sold by subscription.Physical goods`txcd_36010001`Flea & Tick ProductsFlea and tick products for animal use including soaps, cleaning solutions, and shampoos (e.g., flea collars, flea powder, tick and flea soap, and tick sprays).Physical goods`txcd_36010002`Over-the-Counter Drugs for Animal Use Without a PrescriptionDrugs or substance for treating animals and intended for use in the diagnosis, cure, mitigation, treatment, or prevention of disease.Physical goods`txcd_36010003`Over-the-Counter Medical Supplies for PetsMedical supplies available without a prescription and used in the treatment of companion animals (e.g., first aid items such as bandages and gauze).Physical goods`txcd_36010004`Pet FoodFood for household pets that is consumed for nutritional value. This code is not intended for food related to working farm animals or animals raised for meat or milk production.Physical goods`txcd_36010005`Pet VitaminsPet food products offering additional nutrients or functional ingredients.Physical goods`txcd_37010000`Personal ComputersPersonal computers, including laptops, tablets, desktops.Physical goods`txcd_37010003`Computer Storage MediaRemovable storage media such as compact disks, flash drives, thumb drives, flash memory cards.Physical goods`txcd_37010036`Printer InkInk cartridges for printers.Physical goods`txcd_37030002`Globes - StudentA globe that could be used by a student in a course of study as a reference and to learn the subject being taught.Physical goods`txcd_37030003`Maps - StudentA map that could be used by a student in a course of study as a reference and to learn the subject being taught.Physical goods`txcd_37040001`Printer PaperPaper suitable for printers.Physical goods`txcd_37050001`School TextbooksBooks that are required or approved for use in conjunction with a curriculum provided by an educational institution.Physical goods`txcd_37060001`Bookbags/Backpacks - StudentBags designed to carry students' books during the school day. This category does not include backpacks for traveling, hiking, camping, etc.Physical goods`txcd_37060002`CalculatorsTypically a small electronic device with a keyboard and visual display used for making used for making mathematical calculations.Physical goods`txcd_37060003`Daily PlannersA calendar based notebook to aid in outlining one's daily appointments, classes, activities, etc.Physical goods`txcd_37060008`Padlocks - StudentPortable locks used by students in a school setting to prevent use, theft, vandalism or harm.Physical goods`txcd_37060009`School Art SuppliesAn item commonly used by a student in a course of study for artwork. This category is limited to the following items...clay and glazes, paints, paintbrushes for artwork, sketch and drawing pads, watercolors.Physical goods`txcd_37060010`Dictionaries/ThesaurusesReference printed material commonly used by a student in a course of study as a reference and to learn the subject being taught.Physical goods`txcd_37060011`Sheet music - StudentSheet music used by a student in conjunciton with school activities.Physical goods`txcd_37060012`School SuppliesAn item commonly used by a student in a course of study. This category is limited to the following items...binders, blackboard chalk, cellophane tape, compasses, composition books, crayons, erasers, folders, glue/paste/glue sticks, highlighters, index cards, index card boxes, legal pads, lunch boxes, markers, notebooks, paper (copy, graph, tracing, manila, colored, construction, notebook), pencils, pencil boxes, pencil sharpeners, pens, posterboard, protractors, rulers, scissors, writing tablets.Physical goods`txcd_37060013`Staplers/StaplesA device that joins pages of paper or similar material by fastening a thin metal staple through the sheets and folding the ends underneath.Physical goods`txcd_37060035`Push pins/tacksPins/tacks to secure papers, pictures, calendars, etc. to bulletin boards, walls, etc.Physical goods`txcd_37060045`Graphing CalculatorsA handheld computer that is capable of plotting graphs, solving simultaneous equations, and performing other tasks with variables.Physical goods`txcd_37060046`Musical instruments - StudentA musical instrument used by a student in conjunciton with school activities.Physical goods`txcd_37070001`Canned Software - Tangible MediumPrewritten (\"canned\") software delivered on tangible media.Physical goods`txcd_37070002`Canned Software - Tangible Medium - Non-recreationalPrewritten (\"canned\") software on tangible media used for non-recreational purposes, such as antivirus, database, educational, financial, word processing, etc. The software is intended for personal use, rather than for consumption in a commercial enterprise. Note: The distinction between business use and personal use for this tax code is relevant only if you are transacting business in the US.Physical goods`txcd_37071001`Software Maintenance Agreement - Optional, Prewritten, Electronic Delivery, Updates OnlyA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic canned software updates, upgrades, and error corrections in electronic form.Digital products`txcd_37071002`Software Maintenance Agreement - Optional, Prewritten, Electronic Delivery, Updates and ServicesA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic canned software updates, upgrades, and error corrections in electronic form, as well as non-separately stated support sevices, such as consulation or phone support.Digital products`txcd_37071003`Software Maintenance Agreement - Optional, Prewritten, Services OnlyA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to only support sevices, such as consulation or phone support. The agreements does not include periodic canned software updates, upgrades, or error corrections in any form.Services`txcd_37071006`Software Maintenance Agreement - Optional, Prewritten, Tangible Delivery, Updates OnlyA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic canned software updates, upgrades, and error corrections in tangible form.Physical goods`txcd_37071007`Software Maintenance Agreement - Optional, Prewritten, Tangible Delivery, Updates and ServicesA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic canned software updates, upgrades, and error corrections in tangible form, as well as non-separately stated support sevices, such as consulation or phone support.Physical goods`txcd_37071009`Software Maintenance Agreement - Optional, Custom, Electronic Delivery, Updates OnlyA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain, from the original seller of the software, periodic custom software updates, upgrades, and error corrections in electronic form.Digital products`txcd_37071010`Software Maintenance Agreement - Optional, Custom, Electronic Delivery, Updates and ServicesA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain, from the original seller of the software, periodic custom software updates, upgrades, and error corrections in electronic form, as well as non-separately stated support sevices, such as consulation or phone support.Digital products`txcd_37071011`Software Maintenance Agreement - Optional, Custom, Services OnlyA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to only support sevices, such as consulation or phone support. The agreements does not include periodic custom software updates, upgrades, or error corrections in any form.Services`txcd_37071014`Software Maintenance Agreement - Optional, Custom, Tangible Delivery, Updates OnlyA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain, from the original seller of the software, periodic custom software updates, upgrades, and error corrections in tangible form.Services`txcd_37071015`Software Maintenance Agreement - Optional, Custom, Tangible Delivery, Updates and ServicesA charge, apart from the charge for the software, for an agreement that is not required to be purchased in order to obtain the software. The agreement entitles the software user to obtain, from the original seller of the software, periodic custom software updates, upgrades, and error corrections in tangible form, as well as non-separately stated support sevices, such as consulation or phone support.Services`txcd_37071101`Software Maintenance Agreement - Mandatory, Prewritten, Electronic DeliveryA charge, apart from the charge for the software, for an agreement that is required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic canned software updates, upgrades, and error corrections in electronic form. The agreement may or may not also include non-separately stated support sevices, such as consulation or phone support.Digital products`txcd_37071103`Software Maintenance Agreement - Mandatory, Prewritten, Tangible DeliveryA charge, apart from the charge for the software, for an agreement that is required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic canned software updates, upgrades, and error corrections in tangible form. The agreement may or may not also include non-separately stated support sevices, such as consulation or phone support.Physical goods`txcd_37071104`Software Maintenance Agreement - Mandatory, Custom, Electronic DeliveryA charge, apart from the charge for the software, for an agreement that is required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic custom software updates, upgrades, and error corrections in electronic form. The agreement may or may not also include non-separately stated support sevices, such as consulation or phone support.Digital products`txcd_37071106`Software Maintenance Agreement - Mandatory, Custom, Tangible DeliveryA charge, apart from the charge for the software, for an agreement that is required to be purchased in order to obtain the software. The agreement entitles the software user to obtain periodic custom software updates, upgrades, and error corrections in tangible form. The agreement may or may not also include non-separately stated support sevices, such as consulation or phone support.Services`txcd_40010000`Cereal GrainsGrain, as an important staple food, is the harvested seed of grasses such as wheat, oats, rice, corn, orghum, millet, rye, and barley.Physical goods`txcd_40010001`PastaA dough of flour, eggs, and water made in different shapes and dried or used fresh.Physical goods`txcd_40010002`RiceThe starchy grain of ceral grass used as a staple food.Physical goods`txcd_40020002`Edible OilsCooking oils such as olive oil, vegetable oil, corn oil, etc.Physical goods`txcd_40020004`Sugar and Sugar SubstitutesA sweet substance especially from the plants sugar cane and sugar beet, used to make food and drinks sweet. This category also supports artifical sugars such as saccharine, aspartame, sucralose, etc.Physical goods`txcd_40020005`FlourFlour is a white or brown powder that is made by grinding grain, used chielfy in baking.Physical goods`txcd_40020006`HerbsA type of plant whose leaves are used in cooking to give flavor to particular dishes, such as basil, oregano, and cilantro, etc.Physical goods`txcd_40020007`SeasoningsSeasonings such as salt, pepper, paprika, chili powder, etc.Physical goods`txcd_40020008`Food ColoringAny edible dye, pigment, or substance that imparts color when it is added to food or drink.Physical goods`txcd_40040000`Food for Non-Immediate ConsumptionFood and beverage products sold at retail grocery-type establishments that are intended for consumption off the premises of the vendor.Physical goods`txcd_40040003`Cocoa MixA dark brown powder made from cocoa beans, used to add a chocolate flavor to beverages, as in hot chocolate.Physical goods`txcd_40040004`Baby FoodFoods and formulas meant for feeding babies and infants.Physical goods`txcd_40040009`Baking CocoaA dark brown powder made from cocoa beans, used to make chocolate and add a chocolate flavor to the baking process.Physical goods`txcd_40040010`Ice CubesIce for human consumption.Physical goods`txcd_40040013`Meat and Meat ProductsThe flesh (muscle tissue) of an animal consumed as food.Physical goods`txcd_40040016`Nuts and SeedsNuts and seeds in unroasted, unsalted, unflavored form.Physical goods`txcd_40040017`Nuts and Seeds, ProcessedNuts and seeds that have been salted, spiced, smoked, or roasted.Physical goods`txcd_40040019`VegetablesVegetables are parts of plants that are consumed as food.Physical goods`txcd_40040020`Cracker BreadCracker bread is a thin and crispy flat bread that is often used as an accompaniment to meals in many different cultures, most notably Turkish, Indian, and Mediterranean cuisine.Physical goods`txcd_40040021`Plain BreadsPlain Breads include items ordinary loaves, such as sourdough, multigrain, and rye loaves.Physical goods`txcd_40040022`Speciality BreadsSpecialty Breads are artisan breads, including cheese bread, olive loaves, date and walnut bread, etc.Physical goods`txcd_40050003`Food/TPP Bundle - with Food between 50% and 75%Food bundle or basket containing food staples combined with tangible personal property, with the food comprising between 50% and 75% of the overall value of the bundle.Physical goods`txcd_40050004`Food/TPP Bundle with Food 50% to 90%Food bundle or basket containing food staples combined with tangible personal property, with the food comprising between 50% and 90% of the overall value of the bundle.Physical goods`txcd_40050005`Food/TPP Bundle with Food 90% or moreFood bundle or basket containing food staples combined with tangible personal property, with the food comprising 90% or more of the overall value of the bundle.Physical goods`txcd_40050006`Food/TPP Bundle with Food less than 50%Food bundle or basket containing food staples combined with tangible personal property, with the food comprising less than 50% of the overall value of the bundle.Physical goods`txcd_40050007`Food/TPP Bundle - with Food 90% or more - Food is all CandyFood bundle or basket containing food staples combined with tangible personal property, with the food comprising 90% or more of the overall value of the bundle, where all food consists of candy (not containing flour).Physical goods`txcd_40050008`Food/TPP Bundle - with Food between 50% and 75% - Food is all CandyFood bundle or basket containing food staples combined with tangible personal property, with the food comprising between 50% and 75% of the overall value of the bundle, where all food consists of candy (not containing flour).Physical goods`txcd_40050009`Food/TPP Bundle - with Food between 76% and 89%Food bundle or basket containing food staples combined with tangible personal property, with the food comprising between 76% and 89% of the overall value of the bundle.Physical goods`txcd_40050010`Food/TPP Bundle - with Food between 76% and 89% - Food is all CandyFood bundle or basket containing food staples combined with tangible personal property, with the food comprising between 76% and 89% of the overall value of the bundle, where all food consists of candy (not containing flour).Physical goods`txcd_40051001`Food/Candy Bundle - with Candy 10% or lessFood bundle or basket containing food staples combined with candy, with the candy comprising 10% or less of the overall value of the bundle (food comprises 90% or more). Note that any candy containing flour should be considered as food (and not candy) when determining bundle percentages.Physical goods`txcd_40051002`Food/Candy Bundle - with Candy 11% to 24%Food bundle or basket containing food staples combined with candy, with the candy comprising between 11% and 24% of the overall value of the bundle (food comprises 76% to 89%). Note that any candy containing flour should be considered as food (and not candy) when determining bundle percentages.Physical goods`txcd_40051003`Food/Candy Bundle - with Candy 25% to 49%Food bundle or basket containing food staples combined with candy, with the candy comprising between 25% and 49% of the overall value of the bundle (food comprises 51 to 75%). Note that any candy containing flour should be considered as food (and not candy) when determining bundle percentages.Physical goods`txcd_40051004`Food/Candy Bundle - with Candy 50% or moreFood bundle or basket containing food staples combined with candy, with the candy comprising 50% or more of the overall value of the bundle (food comprises 50% or less). Note that any candy containing flour should be considered as food (and not candy) when determining bundle percentages.Physical goods`txcd_40060003`Food for Immediate ConsumptionFood and beverage products in a form suited for consumption on the premises of the vendor, described as prepared foods, ready-to-eat foods, or meals. Always utilize this PTC for heated foods, heated beverages, dispensed beverages, and foods sold with eating utensils.Physical goods`txcd_40070001`Granola Bars, Cereal Bars, Energy Bars, Protein Bars Containing FlourGranola Bars, Cereal Bars, Energy Bars, Protein Bars containing flour.Physical goods`txcd_40070002`Granola Bars, Cereal Bars, Energy Bars, Protein Bars Containing No FlourGranola Bars, Cereal Bars, Energy Bars, Protein Bars containing no flour.Physical goods`txcd_40070005`Snack FoodsSnack foods including chips, crisps, puffs, curls or sticks, popped corn, brittle pretzels, salted nuts and salted seeds, granola products and snack mixes. This category does not include items such as crackers, cookies, snack cakes or breakfast cereal.Physical goods`txcd_40070006`Biscuits/Cookies - PlainA biscuit is a typically hard, small baked product that would be called a \"cookie\" In the US.Physical goods`txcd_40070007`Biscuits/Cookies - Chocolate CoatedA biscuit is a typically hard, small baked product that would be called a \"cookie\" In the US. This cookie is covered or coated in chocolate.Physical goods`txcd_40090001`Dietary SupplementsTablet, capsule, powder, softgel, gelcap, or liquid intended that contain a vitamin, mineral, herb, other botanical, or amino acid and is labeled as a dietary supplement identifiable by the \"supplement facts\" box found on the label.Physical goods`txcd_40090002`Protein PowderNutritional supplement in powder form, dairy based or plant based, focused on increasing ones intake of protein for various benefits.Physical goods`txcd_40090005`Infant FormulaA food which intended to be or is represented for special dietary use solely as a food for infants by reason of its simulation of human milk or its suitability as a complete or partial substitute for human milk.Physical goods`txcd_40090008`Nutritional SupplementsProducts in various forms that are intended for ingestion and represented as a conventional food and labeled as a nutritional supplement and identifiable by the \"Nutrition Facts\" box found on the label.Physical goods`txcd_40100001`CandyA preparation of natural or artificial sweeteners in combination with chocolate, fruits, nuts, or other ingredients or flavorings in the form of bars, drops, or pieces.Physical goods`txcd_40100002`Candy (Contains Flour)A preparation of natural or artificial sweeteners in combination with chocolate, fruits, nuts, or other ingredients or flavorings in the form of bars, drops, or pieces and that contains flour as an ingredient.Physical goods`txcd_40100003`Ice Cream, Packaged - One Pint or GreaterIce cream, frozen yogurt, or similar, packaged in a container that is one pint or larger. The default behavior of this category assumes off-premises consumption.Physical goods`txcd_40100004`Ice Cream, Packaged - Less Than One Pint ContainerIce cream, frozen yogurt, or similar, packaged in a container that is less than one pint. The default behavior of this category assumes off-premises consumption.Physical goods`txcd_40100010`Chewing GumA soft, cohesive substance designed to be chewed without being swallowed.Physical goods`txcd_40100011`Breath MintsA mint -flavored candy intended to freshen the breath.Physical goods`txcd_40400005`Dried Fruit - UnsweetenedDried fruit is fruit from which the majority of the original water content has been removed either naturally, through sun drying, or through the use of specialized dryers or dehydrators. Common dried fruits are dried fruits sold are raisins, dates, prunes, and figs.Physical goods`txcd_41020001`Alcoholic Beverages - Beer/Malt BeverageBeer is an alcoholic drink that is flavored with hops and consists of yeast-fermented malt. Malt beverage is a type of alcoholic drink in which the grain, or seed, of the barley plant is the main ingredient. This code represents packaged beverages for non-immediate consumption.Physical goods`txcd_41020002`Alcoholic Beverages - SpiritsAlcoholic beverages created in a distillation process, and are known by the common names of vodka, gin, whiskey, rum, tequila, brandy, etc. This code represents packaged beverages for non-immediate consumption.Physical goods`txcd_41020003`Alcoholic Beverages - WineAn alcoholic beverage created through fermentation of grapes of various varieties. This code represents packaged beverages for non-immediate consumption.Physical goods`txcd_41030001`Bottled WaterRegular, unsweetened, non carbonated water sold in containers. Includes waters containing only natural flavors or essences. Does not include distilled water.Physical goods`txcd_41030002`Bottled Water - Carbonated ArtificiallyBottled Water for human consumption, unsweetened, carbonated artifically. Includes carbonated waters containing only natural flavors or essences.Physical goods`txcd_41030003`Bottled Water - Carbonated NaturallyBottled Water for human consumption, unsweetened, carbonated naturally. Includes carbonated waters containing only natural flavors or essences.Physical goods`txcd_41040002`Carbonated Soft Drinks - 0% Fruit or Vegetable juiceCarbonated non-alcoholic beverages that contain natural or artificial sweeteners, and zero natural fruit or vegetable juice, not including carbonated water. Includes energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040003`Bottled Tea - Non-Carbonated - SweetenedReady to drink non-carbonated beverage containing tea with natural or artificial sweeteners.Physical goods`txcd_41040004`Bottled water - SweetenedBottled water for human consumption, containing natural or artificial sweeteners, non-carbonated. Waters containing zero calorie natural flavoring should be associated with the 'Bottled Water' PTC.Physical goods`txcd_41040005`Bottled water - Carbonated - SweetenedBottled water for human consumption, containing natural or artificial sweeteners, carbonated. Carbonated waters containing zero calorie natural flavoring should be associated with either the the 'Bottled Water - Carbonated Artificially' PTC or the 'Bottled Water - Carbonated Naturally' PTC.Physical goods`txcd_41040008`Non-Carbonated Soft Drinks - 0% Fruit or Vegetable juiceNon-carbonated, non-alcoholic beverages that contain sweeteners, and zero natural fruit or vegetable juice, such as sweetened cocktail mixes that can be combined with alcohol, but doesn't include flavored water.Physical goods`txcd_41040009`Soft Drinks - Carbonated - 1 -9% Vegetable juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 1 - 9% natural vegetable juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040010`Soft Drinks - Carbonated - 1-9% Fruit juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 1 - 9% natural fruit juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040011`Soft Drinks - Carbonated - 10-24% Fruit juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 10 - 24% natural fruit juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040012`Soft Drinks - Carbonated - 10-24% Vegetable juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 10 - 24% natural vegetable juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040013`Soft Drinks - Carbonated - 100% Fruit or Vegetable juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 100% natural fruit or vegetable juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040014`Soft Drinks - Carbonated - 25-50% Fruit juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 25 - 50% natural fruit juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040015`Soft Drinks - Carbonated - 25-50% Vegetable juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 25 - 50% natural vegetable juice. This does not flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040016`Soft Drinks - Carbonated - 51-69% Fruit juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 51 - 69% natural fruit juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040017`Soft Drinks - Carbonated - 51-69% Vegetable juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 51 - 69% natural vegetable juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040018`Soft Drinks - Carbonated - 70-99% Fruit juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 70 - 99% natural fruit juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040019`Soft Drinks - Carbonated - 70-99% Vegetable juiceCarbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 70 - 99% natural vegetable juice. This does not include flavored carbonated water. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040020`Soft Drinks - Non-Carbonated - 1 -9% Vegetable juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 1 - 9% natural vegetable juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040021`Soft Drinks - Non-Carbonated - 1-9% Fruit juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 1 - 9% natural fruit juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040022`Soft Drinks - Non-Carbonated - 10-24% Fruit juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 10 - 24% natural fruit juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040023`Soft Drinks - Non-Carbonated - 10-24% Vegetable juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 10 - 24% natural vegetable juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040024`Soft Drinks - Non-Carbonated - 100% Fruit or Vegetable juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 100% natural fruit or vegetable juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040025`Soft Drinks - Non-Carbonated - 25-50% Fruit juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 25 - 50% natural fruit juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040026`Soft Drinks - Non-Carbonated - 25-50% Vegetable juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 25 - 50% natural vegetable juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040027`Soft Drinks - Non-Carbonated - 51-69% Fruit juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 51 - 69% natural fruit juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040028`Soft Drinks - Non-Carbonated - 51-69% Vegetable juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 51 - 69% natural vegetable juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040029`Soft Drinks - Non-Carbonated - 70-99% Fruit juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 70 - 99% natural fruit juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41040030`Soft Drinks - Non-Carbonated - 70-99% Vegetable juiceNon-carbonated nonalcoholic beverages that contain natural or artificial sweeteners, and 70 - 99% natural vegetable juice. This does not include flavored water. This does include sweetened cocktail mixes that can be combined with alcohol. This does include beverages marketed as energy drinks that carry a Nutrition Facts label and contain a blend of energy enhancing ingredients.Physical goods`txcd_41050001`Bottled coffee - Containing Milk or Milk SubstituteReady to drink coffee based beverage containing milk or milk substitute.Physical goods`txcd_41050002`Bottled Coffee - No Milk - SweetenedReady to drink coffee based beverage not containing milk, containing natural or artificial sweetener.Physical goods`txcd_41050003`Bottled Coffee - No Milk - UnsweetenedReady to drink coffee based beverage containing neither milk nor natural or artificial sweeteners.Physical goods`txcd_41050004`Bottled Tea - Carbonated - UnsweetenedReady to drink carbonated beverage containing tea and without any natural or artificial sweeteners.Physical goods`txcd_41050005`Bottled Tea - Non-Carbonated - UnsweetenedReady to drink non-carbonated beverage containing tea without natural or artificial sweeteners.Physical goods`txcd_41050006`Coffee Beans or Ground CoffeeCoffee beans or ground coffee.Physical goods`txcd_41050007`Bottled Tea - Carbonated - SweetenedReady to drink carbonated beverage containing tea with natural or artificial sweeteners.Physical goods`txcd_41050008`Tea Leaves or Tea BagsTea leaves and tea bags.Physical goods`txcd_41051001`Energy Beverages - Carbonated - with Supplement Facts LabelCarbonated beverages marketed as energy drinks, carrying a Supplement Facts Label, that contain a blend of energy enhancing vitamins, minerals, herbals, stimulants, etc.Physical goods`txcd_41051002`Energy Beverages - Non-Carbonated - with Supplement Facts LabelNon-carbonated beverages marketed as energy drinks, carrying a Supplement Facts Label, that contain a blend of energy enhancing vitamins, minerals, herbals, stimulants, etc.Physical goods`txcd_41052001`Food and Beverage - Non-Alcoholic Beer/ WineNon-alcoholic beer is beer with little or no alcohol content. In the United States, beverages containing less than 0.5% alcohol by volume (ABV) fall under this term.Physical goods`txcd_41053001`Nutritional Supplement, Protein Drinks, Shakes - Contains MilkReady to drink beverages, containing milk, formulated and labeled for their nutritional value, such as increased caloric or protein intake.Physical goods`txcd_41053002`Nutritional Supplement, Protein Drink, Shakes - Contains No MilkReady to drink beverages, not containing milk, formulated and labeled for their nutritional value, such as increased caloric or protein intake and containing natural or artificial sweeteners.Physical goods`txcd_41054001`Powdered Drink Mixes - To Be Mixed with MilkPowdered mixes to be reconstituted into a drinkable beverage using milk or a milk substitute.Physical goods`txcd_41054002`Powdered Drink Mixes - To Be Mixed with WaterPowdered mixes to be reconstituted into a drinkable beverage using water.Physical goods`txcd_41060003`Milk SubstitutesMilk type beverages from non-animal sources, such as soy, rice, almond, coconut, peanut, and hemp.Physical goods`txcd_41060006`Milk Coffee Tea Cocoa BeveragesMilk or milk substitutes, or drinks with bases of milk, coffee, unsweetened tea or cocoa.Physical goods`txcd_50021001`Fitness Centers - Dues and Membership FeesCharges associated with recurring membership dues allowing access or use of health clubs and fitness clubs. Outside of the United States, these charges are not applicable for services provided by non-profit sports organizations.Services`txcd_50021002`Fitness Centers - Initiation FeesInitiation fees are an upfront one-time charge occurring at the time a new member joins a health club or fitness center. Outside of the United States, these charges are not applicable for services provided by non-profit sports organizations.Services`txcd_50021003`Fee for Personal Training/Fitness ClassesCharges associated with the service of providing in-person personal fitness training or group excercise classes. Outside of the United States, these charges are not applicable for services provided by non-profit sports organizations.Services`txcd_50021101`Fitness Centers - Single Use Access FeesCharges associated with one-time access for use of health clubs and fitness clubs. Outside of the United States, these charges are not applicable for services provided by non-profit sports organizations.Services`txcd_50021103`Fee For Sport Instruction ClassesCharges associated with the service of providing in-person instruction in an athletic pursuit, eg. golf, tennis, skiing, etc. Outside of the United States, these charges are not applicable for services provided by non-profit sports organizations.Services`txcd_90000001`Cash DonationA monetary donation for a cause, in which the donee receives nothing in return.Physical goods`txcd_90020001`Optional GratuityGratuity, otherwise known as a tip, is money that a customer leaves for an employee or employees that is in addition to and separate from the amount due for the goods or services rendered.Services`txcd_92010001`ShippingA shipping charge for the delivery of physical goods in conjunction with the sale of these goods. This tax category is not appropriate for stand alone transportation charges that are not associated with the sale of the goods being delivered.Physical goods",
    "title": "Product tax codes | Stripe Documentation",
    "description": "Stripe Tax uses product tax codes to determine a product's tax rate.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/products-prices/pricing-models",
    "markdown": "# Recurring pricing models | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about common pricing models and how to create them.\n\n[Pricing models](https://docs.stripe.com/products-prices/pricing-models \"pricing model\") are patterns that represent your business on Stripe. With [Product](https://docs.stripe.com/api/products) and [Price](https://docs.stripe.com/api/prices) objects, you can model what you sell and how you charge for it.\n\n[](#flat-rate)\n\nMany SaaS businesses offer their customers a choice of escalating service options. This flat-rate pricing model is called _good-better-best_. Customers choose a service tier (good, better, or best) and pay a flat rate for it.\n\nImagine a business called Togethere that sells a collaboration platform. They offer three different service levels: basic, starter, and enterprise. For each service level, they offer a monthly and yearly price. Togethere operates in several countries, so they have prices in multiple currencies.\n\nIn this example, Togethere has three products: `Basic`, `Starter`, `Enterprise`. Each product has several different prices. The basic level has prices for 10 USD per month and 100 USD per year. Both prices are for the same `Basic` product, so they share the same product description on the customer’s receipt and invoice.\n\nHere’s what that model looks like on Stripe:\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/pricing_model-flat-rate.4f63dae2c4f7078ae10f30324539b0cc.png)\n\nFlat rate: Good-better-best pricing model\n\n### Model good-better-best on Stripe ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo create a good-better-best model on Stripe through the Dashboard follow the steps below.\n\nFirst, create the `Basic` product. To learn about all the options for creating a product, see the [prices guide](https://docs.stripe.com/products-prices/manage-prices#create-product).\n\n1.  Go to [Product catalog](https://dashboard.stripe.com/products).\n2.  Click **\\+ Add product**.\n3.  Enter the `Name` of your product.\n4.  _(Optional)_ Add a **Description**. The description appears at checkout, on the [customer portal](https://docs.stripe.com/customer-management), and in [quotes](https://docs.stripe.com/quotes).\n\nNext, create the monthly price for the `Basic` product:\n\n1.  Click **Advanced pricing options**.\n2.  Select **Recurring** and choose **Flat rate** for the pricing model.\n3.  Enter the price amount-in this case, `10.00`.\n4.  Select **Monthly** for the **Billing period**.\n5.  Click **Next** to save the price.\n\nThen, create the yearly price for the `Basic` product:\n\n1.  Click **\\+ Add another price**.\n2.  Select **Recurring** and choose **Flat rate** for the pricing model.\n3.  Enter the price amount-in this case, `100.00`.\n4.  Select **Yearly** for the **Billing period**.\n5.  Click **Add product** to save the product and price. You can edit the product and price later.\n\nThe subscription integration guide explains how to fit pricing models into a full integration.\n\n*   If you’re using Stripe Checkout, the next step is to [create a Checkout session](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted#create-session) for your site. Make sure to set up Stripe.\n*   If you’re using Stripe Elements, the next step is to [create a Customer](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements#create-customer). Make sure you set up Stripe and the sample application.\n\n[](#per-seat)\n\nTogethere, our example collaboration platform company, also wants to offer a per-seat plan. Per-seat pricing is another common offering for SaaS businesses. Togethere’s customers pick how many seats they’ll use, and Togethere charges based on that amount.\n\nTo model this scenario, Togethere creates a product and price structure where each unit represents a user. When Togethere creates a subscription for a customer, the customer specifies the number of users for that subscription.\n\nHere’s what that model looks like on Stripe:\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/pricing_model-per-seat.2654fb6a0293449309538e05de16034f.png)\n\nPer-seat pricing model\n\nSee the [advanced](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models) pricing model section for examples of other models. [Flat rate and per-seat](#adding-flat-fees) pricing, where you charge a customer a flat monthly fee in addition to a per-seat rate, is another common model for SaaS businesses.\n\n### Model per-seat pricing on Stripe![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo create a per-seat model on Stripe through the Dashboard follow the steps below.\n\nFirst, create the `Per-seat` product. To learn about all the options for creating a product, see the [prices guide](https://docs.stripe.com/products-prices/manage-prices#create-product).\n\n1.  Go to [Product catalog](https://dashboard.stripe.com/products).\n2.  Click **+Add product**.\n3.  Enter the **Name** of the product: `Per-seat`, in this case.\n4.  _(Optional)_ Add a **Description**. The description appears at checkout, on the [customer portal](https://docs.stripe.com/customer-management), and in [quotes](https://docs.stripe.com/quotes).\n\nNext, create the monthly price for the `Per-seat` product:\n\n1.  Select **Recurring**.\n2.  Enter the price amount-in this case, `80.00`.\n3.  Select **Monthly** for the **Billing period**.\n4.  Click **Add product** to save the product and price. You can edit the product and price later.\n\nTo create a subscription using that price:\n\n1.  Go to the **Payments** > **Subscriptions** page.\n2.  Click **\\+ Create subscription**.\n3.  Find or add a customer.\n4.  Search for the `Per-seat` product you created and select the price you want to use.\n5.  _(Optional)_ Select **Collect tax automatically** to use Stripe Tax.\n6.  Click **Start subscription** to start it immmediately or **Schedule subscription** to start it on another schedule.\n\nThe subscription integration guide explains how to fit pricing models into a full integration.\n\n*   If you’re using Stripe Checkout, the next step is to [create a Checkout session](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=stripe-hosted#create-session) for your site. Make sure you set up Stripe.\n*   If you’re using Stripe Elements, the next step is to [create a Customer](https://docs.stripe.com/billing/subscriptions/build-subscriptions?ui=elements#create-customer). Make sure you set up Stripe and the sample application.\n\nFor other versions of per-seat pricing, see the [advanced](#advanced) models section.\n\n[](#usage-based-pricing)\n\nUsage-based pricing is a common pricing model for SaaS businesses that enables you to charge based on a customer’s usage of your product or service. As a business, you provide access to your service and bill your customer based on their usage. To see what an end-to-end integration based on the usage-based pricing model looks like, read the [usage-based pricing models](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models) guide.\n\n[](#tiered-pricing)\n\nPrices can represent tiers, allowing the unit cost to change with quantity or usage. Togethere might, for example, want to offer lower rates for customers who use more projects per month. The following examples show two different ways to adjust pricing as usage increases: volume-based pricing and graduated pricing. To demonstrate these approaches to tiered pricing, we’ll use the following tiers:\n\n| Number of projects | Price per tier |\n| --- | --- |\n| 1-5 | 7 USD |\n| 6-10 | 6.50 USD |\n| 11+ | 6 USD |\n\nUse `tiers` if you need non-linear pricing when `quantity` or [usage](https://docs.stripe.com/api/billing/meter-event) changes. You can also combine tiered pricing with base fees to create more [complex pricing models](https://docs.stripe.com/billing/subscriptions/usage-based/pricing-models).\n\nWhen you [create a price](https://docs.stripe.com/api#create_price) with `billing_scheme=per_unit`, the `unit_amount` is the same regardless of how many units a customer buys. Stripe multiplies this amount by the `quantity` to determine the total cost. For example, a `unit_amount` of 5 USD creates this billing structure:\n\n| Quantity/Usage at end of period | Total cost |\n| --- | --- |\n| 1   | 5 USD |\n| 5   | 25 USD |\n| 6   | 30 USD |\n| 20  | 100 USD |\n| 25  | 125 USD |\n\nWhen you create a price with `billing_scheme=tiered`, the unit cost varies depending on how many units your customer buys. Here’s an example tier structure:\n\n| Tier | Amount (unit cost) |\n| --- | --- |\n| 1-5 (`up_to=5`) | 5 USD (`unit_amount=500`) |\n| 6-10 (`up_to=10`) | 4 USD (`unit_amount=400`) |\n| 10-15 (`up_to=15`) | 3 USD (`unit_amount=300`) |\n| 15-20 (`up_to=20`) | 2 USD (`unit_amount=200`) |\n| 20+ (`up_to=inf`) | 1 USD (`unit_amount=100`) |\n\nMultiplication happens:\n\n*   At the start of the billing period if the `Price` objects have `recurring.usage_type = licensed`.\n*   At the end of the billing period if the `Price` objects have `recurring.usage_type = metered`.\n\nWith tiered billing, you:\n\n*   Set the `tiers_mode` to either `volume` or `graduated`.\n*   Create a `tiers` array to represent the tiers structure.\n\nSee also the [volume-based](https://docs.stripe.com/products-prices/pricing-models#volume-based-pricing) and [graduated](https://docs.stripe.com/products-prices/pricing-models#graduated-pricing) pricing examples.\n\n### Volume-based pricing ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWith volume-based pricing, the subscription item is billed at the tier corresponding to the amount of usage at the end of the period. To implement volume-based billing tiers, set `volume` as the value of `tiers_mode`:\n\n`curl https://api.stripe.com/v1/prices \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d nickname=\"Project Volume Pricing\" \\  -d \"tiers[0][unit_amount]\"=700 \\  -d \"tiers[0][up_to]\"=5 \\  -d \"tiers[1][unit_amount]\"=650 \\  -d \"tiers[1][up_to]\"=10 \\  -d \"tiers[2][unit_amount]\"=600 \\  -d \"tiers[2][up_to]\"=inf \\  -d currency=usd \\  -d \"recurring[interval]\"=month \\  -d \"recurring[usage_type]\"=metered \\  -d product=  {{PRODUCT_ID}}   \\  -d tiers_mode=volume \\  -d billing_scheme=tiered \\  -d \"expand[0]\"=tiers`\n\nUnder volume-based pricing, a customer with 5 projects is charged 35 USD at the end of the period: 7 USD for each of the 5 projects. However, if they accumulate 6 projects the following month, then all projects are billed at the `6-10` rate. That month, they’re charged 39 USD (6.50 × 6).\n\nWith `tiers_mode=volume`, the entire `quantity` is multiplied by the unit cost of the tier.\n\n| Quantity/Usage at end of period | Total for volume tiered pricing |\n| --- | --- |\n| 1   | 5 USD |\n| 5   | 25 USD |\n| 6   | 24 USD |\n| 20  | 40 USD |\n| 25  | 25 USD |\n\nBecause the tier price applies to the entire `quantity` or `usage`, the total can decrease when calculating the final cost.\n\n### Graduated pricing ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhile similar to volume pricing, graduated pricing charges for the usage in each tier instead of applying a single price to all usage. To use graduated tiers, set the value of `tiers_mode` to `graduated`:\n\n`curl https://api.stripe.com/v1/prices \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d nickname=\"Per-minute pricing\" \\  -d \"tiers[0][unit_amount]\"=500 \\  -d \"tiers[0][up_to]\"=5 \\  -d \"tiers[1][unit_amount]\"=400 \\  -d \"tiers[1][up_to]\"=10 \\  -d \"tiers[2][unit_amount]\"=100 \\  -d \"tiers[2][up_to]\"=inf \\  -d currency=usd \\  -d \"recurring[interval]\"=month \\  -d \"recurring[usage_type]\"=metered \\  -d product=  {{PRODUCT_ID}}   \\  -d tiers_mode=graduated \\  -d billing_scheme=tiered \\  -d \"expand[0]\"=tiers`\n\nWith graduated pricing, 5 projects result in the same charge as volume-based pricing—35 USD total at 7 USD per project. This changes as usage breaks out of the first tier. A customer with more than 5 projects is charged 7 USD per project for the first 5 projects, then 6.50 USD for projects 6 through 10, and finally 6 USD per project thereafter. A customer with 6 projects would be charged 41.50 USD, 35 USD for the first 5 projects and 6.50 USD for the 6th project.\n\nWith `tiers_mode=graduated`, the `quantity` is multiplied by the amount that falls into that tier. Then, the total is summed. For example, the total cost for an amount of 6 is 29 USD: 25 USD for the 5 `quantity` that falls into the 1–5 tier, plus 4 USD for the single `quantity` that falls into the 6–10 tier.\n\n| Quantity and usage at end of the period | Total for graduated tiered pricing |\n| --- | --- |\n| 1   | 5 USD |\n| 5   | 25 USD |\n| 6   | 29 USD |\n| 20  | 70 USD |\n| 25  | 75 USD |\n\n### Adding flat fees ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can specify a flat fee (`flat_amount`) to add to the [invoice](https://docs.stripe.com/api/invoices \"invoices\"). This works for both `tiers_mode=volume` and `tiers_mode=graduated`. For example, you can have a flat fee that increases when certain usage thresholds are met:\n\n| Tier | Amount (unit cost) | Flat fee |\n| --- | --- | --- |\n| 1-5 (`up_to=5`) | 5 USD (`unit_amount=500`) | 10 USD (`flat_amount=1000`) |\n| 6-10 (`up_to=10`) | 4 USD (`unit_amount=400`) | 20 USD (`flat_amount=2000`) |\n| 10-15 (`up_to=15`) | 3 USD (`unit_amount=300`) | 30 USD (`flat_amount=3000`) |\n| 15-20 (`up_to=20`) | 2 USD (`unit_amount=200`) | 40 USD (`flat_amount=4000`) |\n| 20+ (`up_to=inf`) | 1 USD (`unit_amount=100`) | 50 USD (`flat_amount=5000`) |\n\nIn this example, if `quantity` is `12` and `tiers_mode=volume`, the total amount to be billed is `12 * 3 USD + 30 USD = 66 USD`.\n\nIf `quantity` is `12` and `tiers_mode=graduated`, the total amount is `5 * 5 USD + 10 USD + 5 * 4 USD + 20 USD + 2 * 3 USD + 30 USD = 111 USD`. A tier can have either a `unit_amount` or a `flat_amount`, or both, but it must have at least one of the two.\n\nIf `quantity` is `0`, the total amount is `10 USD` regardless of `tiers_mode`. We always bill the first flat fee tier when `quantity=0`. To bill `0` when there’s no usage, set up an `up_to=1` tier with an `unit_amount` equal to the flat fee and omit the `flat_amount`.\n\n[](#variable-pricing)\n\nThere are two types of variable pricing models:\n\n*   **Inline pricing**: You define the price for your customer when you create a subscription, invoice, or Checkout Session.\n*   **Pay-what-you-want pricing**: The customer fills in the price they pay, like with a tip or donation. This type of variable pricing isn’t supported for recurring payments. See [Let customers decide what to pay](https://docs.stripe.com/payments/checkout/pay-what-you-want) for information about using this type of pricing for single payments.\n\n### Inline pricing ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIn some cases, you might want to use a custom price that hasn’t been preconfigured. For example, you might want to use inline prices when you manage your product catalog outside of Stripe.\n\n#### Note\n\nYou can only create inline prices through the API. Inline prices aren’t compatible with [Payment Links](https://docs.stripe.com/payment-links/api).\n\nTo create an inline price use case, pass in [price\\_data](https://docs.stripe.com/api/subscriptions/create#create_subscription-items-price_data) instead of a [price.id](https://docs.stripe.com/api/subscriptions/object#subscription_object-items-data-price-id) when you create a subscription. For example, to subscribe a customer to a monthly subscription with an inline price:\n\n`curl https://api.stripe.com/v1/subscriptions \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d customer=  {{CUSTOMER_ID}}   \\  -d \"items[0][price_data][unit_amount]\"=5000 \\  -d \"items[0][price_data][currency]\"=usd \\  -d \"items[0][price_data][product]\"=  {{PRODUCT_ID}}   \\  -d \"items[0][price_data][recurring][interval]\"=month`\n\nThis creates a monthly recurring price of 50 USD for the basic service offering. By default, prices created with `price_data` are effectively archived (they’re marked as `active=false`) so that they you can’t reuse them for other customers or subscriptions. You can’t update or reuse inline prices after you create them. You can also use `price_data` with these APIs:\n\n*   [Checkout](https://docs.stripe.com/api/checkout/sessions)\n*   [Invoice Items](https://docs.stripe.com/api/invoiceitems)\n*   [Subscription Schedules](https://docs.stripe.com/api/subscription_schedules)\n\n[](#multicurrency)\n\nA single [Price](https://docs.stripe.com/api/prices \"Prices\") can support multiple currencies. This helps you manage localized pricing when selling internationally.\n\n### Create multi-currency Prices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can create multi-currency Prices in the [API](https://docs.stripe.com/api/prices/create) or the Dashboard.\n\nFrom the **Product details** page for a product in your [Dashboard](https://dashboard.stripe.com/test/products), click on **\\+ Add another price** to create a new price. The first currency on your Price will be the default currency. Make sure all your Prices have the same default currency. After selecting the default currency, click on **\\+ Add more currencies** to add currency options to your Price.\n\nYou can search and select from supported currencies. Stripe suggests an exchange rate based on currency values at 12:00 PM EST, but you can pick your own. For currencies that are subject to larger fluctuations, we recommend adding more of a buffer.\n\nAfter you’re done filling in the details, click **Add price** to save it.\n\n[Coupons](https://docs.stripe.com/billing/subscriptions/coupons#coupons), [Promotion Codes](https://docs.stripe.com/billing/subscriptions/coupons#promotion-codes), and [Shipping Rates](https://docs.stripe.com/payments/during-payment/charge-shipping) also support multi-currency in a similar way to Prices.\n\n### Render multi-currency Prices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo show your customer the price in their currency, you can retrieve the multi-currency Price and view its [currency\\_options.<currency>.unit\\_amount](https://docs.stripe.com/api/prices/object#price_object-currency_options-unit_amount) field. The API response won’t include `currency_options` by default. To include it in the response, [expand](https://docs.stripe.com/api/expanding_objects) the `currency_options` field:\n\n`curl -G https://api.stripe.com/v1/prices/{{PRICE_ID}} \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"expand[]\"=currency_options`\n\n#### Note\n\nTo improve latency and avoid problems with rate-limiting, cache the Price instead of re-fetching it every time a customer visits your site.\n\n### Use multi-currency Prices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nEach purchase uses one of the multi-currency Price’s supported currencies, depending on how you use the Price in your integration.\n\nCheckout automatically determines the customer’s local currency from their IP address, as long as the Price supports that currency. If the customer’s local currency isn’t supported, Checkout uses the Price’s default currency.\n\nIf a Checkout Session uses multiple Prices, Coupons, Promotion Codes, or Shipping Rates, then they must all support the customer’s local currency, or else Checkout uses the default currency. They must all have the same default currency, or else Stripe returns an error when you create the Checkout Session.\n\nAlternatively, you can use the [currency](https://docs.stripe.com/api/checkout/sessions/create#create_checkout_session-currency) parameter to explicitly tell Checkout which currency to use.\n\nLearn more about defining [manual currency prices](https://docs.stripe.com/payments/checkout/manual-currency-prices) in Checkout.\n\n### Migrate from single-currency Prices to multi-currency ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIf you have an existing single-currency Price, you can retroactively add multiple currencies to it in the Dashboard.\n\n#### Note\n\nOnly the Stripe Dashboard can retroactively add multiple currencies to an existing Price. The Stripe API doesn’t support retroactively adding multiple currencies. If you’re using the API, create a new multi-currency Price from scratch.\n\nAfter you add a new currency to a Price, the only way to change it is to archive the existing Price and create a new one. Learn more about [managing existing prices](https://docs.stripe.com/products-prices/how-products-and-prices-work#manage-existing-products-and-prices).\n\nIf you use Checkout or Payment Links, then multi-currency Prices take effect automatically. If Stripe detects that the customer’s local currency is supported by the Price, then it automatically uses that currency. If you use multiple Prices, Coupons, Promotion Codes, or Shipping Rates in a single purchase, then they must all support the customer’s local currency, and they must all have the same default currency.\n\nIf you’re creating Subscriptions directly, the multi-currency Price(s) won’t take effect until you start passing the `currency` parameter. If you don’t pass the `currency` parameter, the Subscription always uses the Price(s)’ default currency.\n\n[](#multiple-prices)\n\nProducts can use multiple prices to define different pricing options. The product description is shared between prices and appears the same on the customer’s receipt and invoice—only the pricing differs.\n\nAs Togethere’s product matures, they begin offering the same product at different price points. Specifically, certain customers are willing to pay for discounted up-front quarterly and yearly subscriptions. Togethere creates a quarterly 57 USD option:\n\n`curl https://api.stripe.com/v1/prices \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d nickname=\"Standard Quarterly\" \\  -d product={{PRODUCT_ID}} \\   -d unit_amount=5700 \\  -d currency=usd \\  -d \"recurring[interval]\"=month \\  -d \"recurring[interval_count]\"=3 \\  -d \"recurring[usage_type]\"=licensed`\n\nAnd a yearly 220 USD option:\n\n`curl https://api.stripe.com/v1/prices \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d nickname=\"Standard Yearly\" \\  -d product={{PRODUCT_ID}} \\   -d unit_amount=22000 \\  -d currency=usd \\  -d \"recurring[interval]\"=year \\  -d \"recurring[usage_type]\"=licensed`\n\n[](#pricing-table)\n\nAfter creating your pricing structures, you can embed a [pricing table](https://docs.stripe.com/payments/checkout/pricing-table) on your website to display pricing information to your customers. When customers choose a subscription option, they’re taken directly to checkout. Configure, customize, and update directly in the [Dashboard](https://dashboard.stripe.com/test/pricing-tables) without writing any code.",
    "title": "Recurring pricing models | Stripe Documentation",
    "description": "Learn about common pricing models and how to create them.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/invoicing/send-email",
    "markdown": "# Send customer emails | Stripe DocumentationThe Stripe Docs logo\n\n## Configure and send invoicing emails to your customers.\n\nSet up Stripe to send important email notifications and reminders to your customers. Certain email notifications contain a link to a Stripe-hosted page that customers can use to confirm or update their payment details.\n\nIn your [Email settings](https://dashboard.stripe.com/settings/emails), you can opt out of sending your customers emails for successful payments. If you’re [automatically charging](https://docs.stripe.com/invoicing/automatic-charging) a customer and you’ve turned off emails for successful payments, they won’t receive an [email receipt](https://docs.stripe.com/invoicing/dashboard#invoice-receipts). To learn how to send automatic email receipts, see [Email receipts and paid invoices](https://docs.stripe.com/receipts#automatically-send-receipts).\n\nTo turn on automatic reminders, navigate to your [Invoicing settings](https://dashboard.stripe.com/test/settings/billing/invoice) and scroll down to **Manage advanced invoicing features** > **Send reminders if a one-off invoice hasn’t been paid**. Select if you want Stripe to send the reminder before, when, or after the invoice is due. You can choose from a set of predefined options.\n\nIf you’ve set up and verified a [custom email domain](https://docs.stripe.com/get-started/account/email-domain), we send invoicing emails from that domain.\n\n## Customer emails ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can configure Stripe to send email notifications or reminders to your customer:\n\n*   Upon failed payment attempts.\n*   After Stripe [finalizes](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized) an invoice.\n*   With [receipts](https://dashboard.stripe.com/settings/emails) after invoices are paid.\n*   When a payment requires [3D Secure](https://docs.stripe.com/payments/3d-secure).\n*   When a card on file is about to expire.\n*   If a one-off invoice hasn’t been paid. Invoicing Plus\n*   When a credit note is created.\n*   When refund is issued.\n*   When a subscription trial is ending.\n*   Upon cancellation of subscription.\n\nBefore you start sending email notifications and reminders, you can customize your [branding](https://dashboard.stripe.com/account/branding).\n\n![Update card information](https://b.stripecdn.com/docs-statics-srv/assets/update-card-information.da9d6be4f5bad9e7eb686cc2ba205af6.png)\n\nRemind your customers to update their card information\n\n### Email reminders ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can send one-off invoice email reminders to your customers using the Dashboard or API. If you’d like to send an email reminder about an expiring card, go to [Prevent failed payments](https://dashboard.stripe.com/settings/billing/automatic).\n\nTo send a one-off invoice email reminder, go to the [Invoices page](https://dashboard.stripe.com/test/invoices). Click on the customer’s invoice, followed by **Send invoice**. Before you resend an invoice, Stripe shows you a preview of the [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page). You can download the associated invoice PDF by clicking **Invoice PDF** on the **Invoice details** page.\n\n![Hosted Invoice Page](https://b.stripecdn.com/docs-statics-srv/assets/hosted-invoice-page-guide.df3cc5a1e4180c338269aacdfa792180.png)\n\nHosted Invoice Page\n\n![Invoice PDF](https://b.stripecdn.com/docs-statics-srv/assets/invoice-pdf-guide.d79c407ca08ee4b14dc0519fb3772309.png)\n\nInvoice PDF\n\n### Email notifications ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can send email notifications to your customers by configuring your Dashboard settings:\n\n*   To send an email notification when a card payment fails, go to [Manage failed payments](https://dashboard.stripe.com/settings/billing/automatic).\n*   To email finalized invoices, navigate to [Manage invoices sent to customers](https://dashboard.stripe.com/settings/billing/automatic).\n*   If you’d like to send an email notification with a receipt after a successful payment, go to your **Email settings**.\n\n#### 3D Secure payments ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIf charging a customer’s card on file requires them to complete 3D Secure authentication and you’ve enabled **Send a Stripe-hosted link for cardholders to authenticate when required** in your [3D Secure settings](https://dashboard.stripe.com/settings/billing/automatic), Stripe sends an email. The email links to a Stripe-hosted page where they can confirm the payment.\n\n## Additional email recipients![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can provide additional recipients to your customer’s Billing emails (including receipts sent after successful payments) using the Dashboard.\n\n#### Note\n\nThe Stripe API doesn’t currently support adding recipients to Billing emails.\n\n1.  Go to the [Customers page](https://dashboard.stripe.com/test/customers) in your Dashboard.\n2.  Click the customer you want to add email recipients for to open the customer’s detail page.\n3.  Click the **Edit** link in the **Details** section of the left pane to open the **Update customer** dialog.\n    \n    ![Details section with Edit link highlighted.](https://b.stripecdn.com/docs-statics-srv/assets/edit-emails.18a5f678dc05901c6d1e5ade713afdc1.png)\n    \n4.  In the **Billing information** section of the **Update customer** dialog, unselect the **Same as account email** checkbox.\n    \n    ![Billing section with same as account checkbox unselected.](https://b.stripecdn.com/docs-statics-srv/assets/additional-emails.df018f8ddec164bb58653a0ede84d1a8.png)\n    \n5.  _(Optional)_ Set the value of the displayed field to a comma-separated list of emails that should be in the “To” line of Billing emails. If you leave this field blank, Stripe continues to use the account email.\n6.  Click the **Add more recipients** link to access the **Emails to CC** field. Set the value of the field to a comma-separated list of email addresses that you want in the CC line of Billing (Invoice and Subscription) emails.\n\nIf you add recipients to the Customer using the previous steps, Stripe automatically pre-populates these emails to invoices you send through the Dashboard.\n\n## Change the Stripe invoice template ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can create your own custom email template to replace the Stripe prebuilt email by [configuring the invoice template](https://dashboard.stripe.com/settings/billing/invoice). Stripe applies your custom template to all new invoices.\n\n## Disable Stripe invoice emails and send your own ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe can use [webhooks](https://docs.stripe.com/webhooks \"webhook\") to notify you of changes to your invoices—when they’re finalized, paid, marked uncollectible, and so on. For each event that you receive, you can construct and deliver your own emails. If you disable finalized invoice emails, Stripe continues to send webhooks as a reminder for your own email solution. To learn more, see [Webhooks and invoices](https://docs.stripe.com/billing/subscriptions/webhooks#understand).\n\n## Email PDF attachments ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen Stripe emails an invoice, we automatically include a PDF attachment of the same invoice to assist your customer with record keeping. If you turn on emails for successful payments—and an invoice is set to charge automatically—the receipt email includes a PDF attachment of both the original invoice and the invoice receipt. Visit the [Invoice settings](https://dashboard.stripe.com/settings/billing/invoice) to disable this behavior.\n\n## Email logs![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFor the customer emails sent within the last 30 days, their logs are available to view within the [customer](https://dashboard.stripe.com/customers) page.\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Use the Dashboard](https://docs.stripe.com/invoicing/dashboard)\n*   [Customize invoices](https://docs.stripe.com/invoicing/customize)\n*   [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page)\n*   [Automate customer emails](https://docs.stripe.com/billing/revenue-recovery/customer-emails)",
    "title": "Send customer emails | Stripe Documentation",
    "description": "Configure and send invoicing emails to your customers.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/quotes/create",
    "markdown": "# Create and send a quote\n\nA quote is a way to show prospective or existing customers the costs for a set of products and services. Quotes show the cost of either a one-off [invoice](https://docs.stripe.com/api/invoices \"invoices\") or [subscription](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\"). When a customer accepts the quote, ​​Stripe automatically creates all relevant invoices and subscriptions. ​​Many sales workflows use this common tool.\n\n[](#create-quote-dashboard)\n\nTo create a quote in the Stripe Dashboard:\n\n1.  Go to the [Billing tab](https://dashboard.stripe.com/billing).\n2.  Click **Quick actions** > **Create quote** (or go directly to the [quote editor](https://dashboard.stripe.com/test/quotes/create)).\n3.  Select **\\+ Add new customer**. At a minimum, enter your customer’s **Name** and **Account email**. Click **Add customer**.\n4.  Under **Items**, add or select a product. (You can also add a coupon.)\n5.  Choose an expiration date.\n6.  Optional Write a memo, and add a custom header and footer. You can set the future default text for the header and footer in the [quote template](https://dashboard.stripe.com/settings/billing/quote).\n7.  To preview the quote PDF (which shows the generated quote number) click **Download preview**.\n8.  Click **Finalize quote**.\n\n![Quote editor](https://b.stripecdn.com/docs-statics-srv/assets/create-quote-editor.b0567a67946f35c4844e0979f2bc7019.png)\n\nQuote editor\n\nAfter you finalize the quote, send it to your customer:\n\n1.  To download the quote, go to **Quotes details page** > **Quote PDF**.\n2.  Use an external email address to send the PDF to your customer for review.\n\n[](#accept-quote-dashboard)\n\nAfter your customer accepts the quote, bill them by converting the quote into an invoice or subscription.\n\nYou can only create one-off invoices if a quote _only_ has one-time prices.\n\nIf a quote has at least one recurring price, you can only convert it to a subscription.\n\n### Convert a quote to an invoice ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n1.  To mark a quote as accepted and create a draft invoice, go to **Convert to invoice** > **Quotes details**.\n    \n2.  Use the [invoice editor](https://dashboard.stripe.com/test/invoices/create) to modify the draft invoice as needed.\n    \n3.  Email the invoice or automatically charge the customer.\n    \n\n### Convert a quote to a subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n1.  In the quote editor, choose a customer and create or select a product with a recurring price.\n    \n2.  Enter the quote details and choose to either **Start the subscription immediately** or **Schedule a subscription start date**.\n    \n3.  Finalize the quote. This marks the quote as **Accepted**.\n    \n4.  Go to **Convert to subscription** > **Quotes details**.\n    \n5.  Enter or modify the subscription details, then click **Create subscription**.\n    \n\nIf you schedule the subscription to start immediately, Stripe creates an active subscription along with a draft invoice for the initial payment. Stripe finalizes the draft invoice automatically in one hour. Otherwise, the subscription begins on the scheduled start date. Depending on the subscription’s payment terms, Stripe collects payment by either charging the customer’s payment method on file or sending them an invoice.",
    "title": "Create and send a quote | Stripe Documentation",
    "description": "Learn how to create, send, and accept a quote.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/invoicing",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Invoicing\n\n## Create and manage invoices for one-time payments with Stripe Invoicing.\n\nCreate and manage invoices\n\nCreate, customize, and send a Stripe-hosted [invoice](https://docs.stripe.com/api/invoices \"invoices\") in minutes—all from the Dashboard with no code required. Or, use the Invoicing API and advanced features to automate how you collect and reconcile payments.\n\n[](https://docs.stripe.com/invoicing/quickstart-guide)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/invoicing-hero.096c89608f5466609f9ce07529a4d502.png)\n\n## No-code invoicing ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Accounts receivable automation ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Integrate with the Invoicing API ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n## Compare Invoicing and Payment Links ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nInvoicing and Payment Links are two of the easiest ways to start accepting payments with Stripe without writing any code. Use the following table to compare the two products, and to understand which works best for your use case:\n\n| **Product** | **Invoicing** | **Payment Links** |\n| --- | --- | --- |\n| **Description** | Use [invoices](https://dashboard.stripe.com/invoices) to collect one-time or recurring payments from a specific customer. | Use [Payment Links](https://dashboard.stripe.com/payment-links) to sell a product, a subscription, or accept a donation. |\n| **Customer** | *   Specific individuals or businesses<br>*   You can’t reuse invoices, but you can duplicate them and edit the details for another customer. | *   Anyone with the link<br>*   Reuse multiple times with multiple customers, or limit the number of purchases. |\n| **Integration effort** | No coding | No coding |\n| **Stripe-hosted payment page** |     |     |\n| **Sharing options** | *   You can [email from the Dashboard](https://docs.stripe.com/invoicing/dashboard#create-invoice).<br>*   Copy the [invoice link](https://docs.stripe.com/invoicing/hosted-invoice-page#email-links) to share over email or SMS.<br>*   [Send a PDF](https://docs.stripe.com/invoicing/hosted-invoice-page).<br>*   [Auto-charge](https://docs.stripe.com/invoicing/automatic-charging?dashboard-or-api=dashboard) the payment method on file. | *   [Show a QR code](https://docs.stripe.com/payment-links/share#create-qr-code).<br>*   [Copy the link](https://docs.stripe.com/payment-links/share#share-online) to share it over email, SMS, or social media.<br>*   Add a [buy button](https://docs.stripe.com/payment-links/buy-button) to your website. |\n| **UI customization** | Editable template1 | Limited customization2 |\n| **Payment methods** | *   Choose from over 40 [payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#choose-how-to-add-payment-methods).<br>*   Manage your payment methods in the [Dashboard](https://dashboard.stripe.com/settings/payment_methods) without coding. | *   [Dynamically display](https://docs.stripe.com/payments/payment-methods/dynamic-payment-methods) over 40 [payment methods](https://docs.stripe.com/payments/payment-methods/integration-options#choose-how-to-add-payment-methods)3.<br>*   Manage your payment methods in the [Dashboard](https://dashboard.stripe.com/settings/payment_methods) without coding. |\n| **[Stripe Tax](https://docs.stripe.com/tax) support** |     |     |\n| **Preferred language support** | *   Over 30 languages<br>*   Set the Dashboard [language preference](https://docs.stripe.com/invoicing/customize#customer-language) for each customer. | *   Over 30 languages<br>*   Match the [browser language setting](https://support.stripe.com/questions/supported-languages-for-stripe-checkout-and-payment-links) for each customer, or set the language with a URL parameter. |\n| **Recurring payments** | Use Stripe Billing to send a subscription or recurring invoice. [No-code subscriptions](https://dashboard.stripe.com/subscriptions?create=subscription) are available | Create a payment link for a subscription. |\n| **Collection tools** | [Automatic collection](https://docs.stripe.com/invoicing/automatic-collection) features, including Smart Retries and reminder emails are available. | [Revenue recovery](https://docs.stripe.com/billing/revenue-recovery) features, including Smart Retries and reminder emails are available for subscription payment links. |\n| **Reconciliation** | Auto-reconciliation of bank payments | Simple reconciliation by using URL parameters |\n| **Customers can choose what to pay** |     |     |\n| **Collect partial payments or set up payment plans** |     |     |\n| **Customers can edit quantities** |     |     |\n| **Coupons or discounts** |     |     |\n| **Send a quote or estimate and convert it to an invoice once finalized** |     |     |\n| **Upsells and cross-sells** |     |     |\n| **PCI compliance handling** | 4   |     |\n\n1 Use the [editable template](https://docs.stripe.com/invoicing/customize) to incorporate your own icons, brand colors, payment terms, page sizes, as well as memo and footer fields.  \n2 With [limited customization](https://docs.stripe.com/payment-links/customize), you can access 20 preset fonts, three predefined border radiuses, and options for adjusting your logo, background, product images, and the color of your own button.  \n3 Dynamic payment methods filter for eligibility, displaying the most relevant payment methods to maximize conversion. Payment method availability [varies by product](https://docs.stripe.com/payments/payment-methods/integration-options#product-support).  \n4 See the best practices for [globally compliant invoices](https://docs.stripe.com/invoicing/global-invoicing).",
    "title": "Invoicing | Stripe Documentation",
    "description": "Create and manage invoices for one-time payments with Stripe Invoicing.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/quotes/clone",
    "markdown": "# Renegotiate a quote | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to renegotiate a quote.\n\n#### Note\n\nYou can use quotes in test mode. To finalize, download, or accept quotes in live mode for one-time invoices through the API or Dashboard, you must upgrade to [Invoicing Plus](https://stripe.com/invoicing/pricing). See which plan [is right for you](https://support.stripe.com/questions/how-to-access-quotes).\n\nAfter you finalize and send a quote to your customer, you might need to make additional changes. For example, you want to apply a discount or fee. Stripe lets you duplicate a finalized quote, which creates a new draft quote with the same details as the original. You can update the new draft quote until ​​you’re ready to finalize and send it to your customer. If the quote is an open state, you can duplicate or revise it.\n\n## Revise a quote ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can revise an open quote using the Dashboard or [API](https://docs.stripe.com/api/quotes).\n\nTo revise an open quote in the Dashboard:\n\n1.  Go to the **Quotes details page**, and click the overflow menu ().\n    \n2.  Click **Revise quote**.\n    \n\n## Duplicate a quote ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can duplicate a draft, open, or accepted quote using the Dashboard or API.\n\nTo duplicate a quote using the Dashboard:\n\n1.  Go to the **Quotes details page**, and click the overflow menu ().\n    \n2.  Click **Duplicate quote**.\n    \n\nYou can also click the overflow menu in the [Quotes page](https://dashboard.stripe.com/test/quotes) to duplicate a quote.",
    "title": "Renegotiate a quote | Stripe Documentation",
    "description": "Learn how to renegotiate a quote.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/billing-apis",
    "markdown": "# About the Billing APIs | Stripe DocumentationThe Stripe Docs logo\n\n## Understand how the Billing API objects work together.\n\n[Subscriptions](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\") automatically create [Invoices](https://docs.stripe.com/api/invoices \"invoices\") and [Payment Intents](https://docs.stripe.com/payments/payment-intents \"PaymentIntent\") for you. They have the following parts:\n\n*   A [Product](https://docs.stripe.com/api/products \"Products\") to model what is being sold.\n*   A [Price](https://docs.stripe.com/api/prices \"Prices\") to determine the interval and amount to charge.\n*   A [Customer](https://docs.stripe.com/api/customers \"Customers\") to store the [Payment Methods](https://docs.stripe.com/api/payment_methods \"PaymentMethods\") used to make each recurring payment.\n\n## API object definitions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n| Resource | Definition |\n| --- | --- |\n| [Customer](https://docs.stripe.com/api/customers) | Represents a customer who purchases a subscription. Use the Customer object associated with a subscription to make and track recurring charges and to manage the products that they subscribe to. |\n| [Entitlement](https://docs.stripe.com/api/entitlements/active-entitlement) | Represents a customer’s access to a feature included in a service product that they subscribe to. When you create a subscription for a customer’s recurring purchase of a product, an active entitlement is automatically created for each feature associated with that product. When a customer accesses your services, use their active entitlements to enable the features included in their subscription. |\n| [Feature](https://docs.stripe.com/api/entitlements/feature) | Represents a function or ability that your customers can access when they subscribe to a service product. You can include features in a product by creating ProductFeatures. |\n| [Invoice](https://docs.stripe.com/api/invoices) | A statement of amounts a customer owes that tracks payment statuses from draft through paid or otherwise finalized. Subscriptions automatically generate invoices. |\n| [PaymentIntent](https://docs.stripe.com/api/payment_intents) | A way to build dynamic payment flows. A PaymentIntent tracks the lifecycle of a customer checkout flow and triggers additional authentication steps when required by regulatory mandates, custom Radar fraud rules, or redirect-based payment methods. Invoices automatically create PaymentIntents. |\n| [PaymentMethod](https://docs.stripe.com/api/payment_methods) | A customer’s payment instruments that they use to pay for your products. For example, you can store a credit card on a Customer object and use it to make recurring payments for that customer. Typically used with the Payment Intents or Setup Intents APIs. |\n| [Price](https://docs.stripe.com/api/prices) | Defines the unit price, currency, and billing cycle for a product. |\n| [Product](https://docs.stripe.com/api/products) | A good or service that your business sells. A service product can include one or more features. |\n| [ProductFeature](https://docs.stripe.com/api/product-feature) | Represents a single feature’s inclusion in a single product. Each product is associated with a ProductFeature for each feature that it includes, and each feature is associated with a ProductFeature for each product that includes it. |\n| [Subscription](https://docs.stripe.com/api/subscriptions) | Represents a customer’s scheduled recurring purchase of a product. Use a subscription to collect payments and provide repeated delivery of or continuous access to a product. |\n\nHere’s an example of how products, features, and entitlements work together. Imagine that you want to set up a subscription service that offers two tiers: a standard product with basic functionality, and an advanced product that adds extended functionality.\n\n1.  You create two features: `basic_features` and `extended_features`.\n2.  You create two products: `standard_product` and `advanced_product`.\n3.  For the standard product, you create one ProductFeature that associates `basic_features` with `standard_product`.\n4.  For the advanced product, you create two ProductFeatures: one that associates `basic_features` with `advanced_product` and one that associates `extended_features` with `advanced_product`.\n\nA customer, `first_customer`, subscribes to the standard product. When you create the subscription, Stripe automatically creates an Entitlement that associates `first_customer` with `basic_features`.\n\nAnother customer, `second_customer`, subscribes to the advanced product. When you create the Subscription, Stripe automatically creates two Entitlements: one that associates `second_customer` with `basic_features`, and one that associates `second_customer` with `extended_features`.\n\nYou can determine which features to provision for a customer by [retrieving their active entitlements or listening to the Active Entitlement Summary webhook](https://docs.stripe.com/billing/entitlements#entitlements). You don’t have to retrieve their subscriptions, products, and features.",
    "title": "About the Billing APIs | Stripe Documentation",
    "description": "Understand how the Billing API objects work together.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/quotes/overview",
    "markdown": "# How quotes work | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about the quotes workflow.\n\n#### Note\n\nYou can use quotes in test mode. To finalize, download, or accept quotes in live mode for one-time invoices through the API or Dashboard, you must upgrade to [Invoicing Plus](https://stripe.com/invoicing/pricing). See which plan [is right for you](https://support.stripe.com/questions/how-to-access-quotes).\n\n​​Quotes allow you to deliver estimated pricing for requested goods or services and can help facilitate negotiation before beginning a subscription or [invoice](https://docs.stripe.com/api/invoices \"invoices\").\n\n​​We designed the quote statuses to mirror a typical quoting flow that a sales agent follows, where they create a quote with line items that specify the items for purchase. This includes applying any discounts or taxes, sending the quote to a prospective customer, and provisioning the corresponding services upon their acceptance.\n\n| Status | Description | Possible actions |\n| --- | --- | --- |\n| `draft` | ​​Starting status for all quotes—at this point, you can still edit the quote. | [Finalize](#finalize) the quote into `open` or [cancel](#cancel) the quote. |\n| `open` | The quote is finalized and is now awaiting action from the customer. ​​You can only edit the expiration date now. | Mark the quote as `accepted` or [cancel](#cancel) the quote. |\n| `accepted` | ​​The customer accepted the quote. The quote generates an invoice, subscription or subscription schedule. | N/A |\n| `canceled` | ​​The quote expired or was canceled. You can no longer accept it. | N/A |\n\n### Canceled quotes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen a customer rejects a quote or you no longer want it to be valid, you can cancel it. You can no longer accept canceled quotes. Quotes that are in a `draft` or `open` state automatically cancel when they reach the expiration date. Stripe generates a `quote.canceled` webhook.\n\n### Accepted quotes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n​​After the customer agrees to your quote, you can mark it as accepted. Accepted quotes generate an invoice, subscription, or subscription schedule ​​automatically, depending on whether or not there are recurring prices on the quote or if the effective date of the quote is in the future.\n\n## Workflow transitions ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nQuotes can transition between these statuses:\n\n### Finalize draft quotes ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nQuotes are initially created as a `draft`. In this status, you can edit the quote and make any required changes. ​​You can finalize a quote as soon as you’re ready to send it to the customer, which moves it to the `open​` status while you await action from them.\n\nFinalizing a quote also assigns a `number` to it. This number consists of four parts: the prefix `QT`, the customer’s invoice prefix, the quote sequence, and the revision sequence. For example, `QT-68BB114-0001-1` is the first quote for a customer, and the quote is on the first revision. Quote number `QT-68BB114-0001-2`is the same quote but on the second revision. `QT-68BB114-0002-1` would be the second quote for the customer.\n\nYou can finalize a quote through the API as shown in the following example.\n\n`curl -X POST https://api.stripe.com/v1/quotes/qt_1HDGlYClCIKljWvsIGaAA06B/finalize \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\"`\n\n### Accept a quote ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can mark a quote as accepted only if it’s in the `open` status. Doing so transitions the quote to the `accepted` status and creates the invoice, subscription or subscription schedule.\n\nIf the quote doesn’t have a recurring price on any of its line items, a `draft` invoice is created from the quote with `auto_advance` set to `false`. You can make modifications to the invoice before finalizing and sending it to your customer for payment.\n\nIf the quote has at least one recurring price on a line item, then a subscription or subscription schedule is created. A subscription schedule is created if the effective date on the quote is in the future, otherwise a subscription is created. The first invoice on the subscription is in `draft` status with `auto_advance` set to `true`.\n\nIn the Dashboard, you can mark a quote as accepted through the **Convert to invoice** and **Convert to subscription** buttons on the quote detail page. You can mark a quote as accepted through the API as shown in the following example.\n\n`curl -X POST https://api.stripe.com/v1/quotes/qt_1HDGlYClCIKljWvsIGaAA06B/accept \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\"`\n\n### Cancel a quote ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can cancel a quote if its status is `draft` or `open`. Cancel a quote through the Dashboard on the quote detail page, or using the API as shown in the following example.\n\n`curl -X POST https://api.stripe.com/v1/quotes/qt_1HDGlYClCIKljWvsIGaAA06B/cancel \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\"`\n\n### Download a quote’s PDF ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe PDF method functions differently from the majority of the SDK methods you might be accustomed to that typically return data in JSON format. Instead, the PDF method has a unique output.\n\nIt directly returns a stream of data that represents the byte sequences of the incoming data.\n\nIn effect, instead of waiting for the entire data set to load before it becomes available, the byte stream can be read in ‘chunks’ or segments as the data streams in.\n\nThis method is especially useful for handling large data or real-time data processing, where you can start processing incoming data before the entire data load is complete.\n\n`curl https://files.stripe.com/v1/quotes/qt_0J1EnX589O8KAxCGEdmhZY3r/pdf \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\"`",
    "title": "How quotes work | Stripe Documentation",
    "description": "Learn about the quotes workflow.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/subscriptions",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n[Skip to content](#main-content)\n\n## Subscriptions\n\n## Create and manage subscriptions with the Stripe Billing APIs.\n\nSign up for developer updates:",
    "title": "Subscriptions | Stripe Documentation",
    "description": "Create and manage subscriptions with the Stripe Billing APIs.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/multi-entity-business",
    "markdown": "# Billing for a multi-entity business\n\n## Integrate Stripe Billing for a business with more than one legal entity.\n\nStripe requires you to have a separate account for each legal entity. Businesses might need to create different legal entities to accommodate international operations, set up financial isolation for different business units, or handle acquisitions. Use this guide to learn how to set up multiple Stripe accounts for a business that has multiple legal entities.\n\n## Multiple entities architecture![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo manage multiple legal entities in a scalable way, we recommend using Stripe Connect with a [Standard account](https://docs.stripe.com/connect/standard-accounts), where you have a platform account that serves as a single entry point, and multiple connected accounts for each line of business.\n\n![Organization with multiple accounts setup using Connect](https://b.stripecdn.com/docs-statics-srv/assets/structure_4_before.e35e09f6d8127fb01f240a30834b99b7.png)\n\nA platform account and multiple connected accounts, each representing different business lines.\n\nWith this account configuration, each account can maintain its own customers, subscriptions, and product catalog. The platform account provides a single integration point and a single, shared API key that you can use to manage multiple connected Stripe accounts.\n\nYou create a service on your app to route customers to the right account when they check out. On the backend, your integration passes in the correct account ID to make a direct charge for the relevant Standard account, which settles funds to that entity’s bank account.\n\n[](#monitor)\n\nTo get a consolidated view of metrics for multiple Stripe accounts, use the Stripe Data Pipeline to [sync your Stripe account with an external system](https://docs.stripe.com/stripe-data/access-data-in-warehouse). You can export the data for all your accounts to your data warehouse, where you can apply analytic tools to get business insights.\n\n[](#accounting)\n\nUse [Revenue Recognition](https://docs.stripe.com/revenue-recognition) to export and consolidate accounting reports. You can also import data into a single account and get a comprehensive view that way.\n\n[](#product-catalog)\n\nYour product catalog can be part of the platform account or each connected Standard account. Where you maintain your catalog depends on your business needs. For example, a company that operates in the US and in the EU likely wants to keep the catalog with the connected accounts to help them maintain local prices. A company with a global website that serves customers in multiple currencies likely wants to keep the catalog with the platform account and use multi-currency prices.\n\n### Lookup keys![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo efficiently manage product catalogs for connected accounts, use [lookup keys](https://docs.stripe.com/products-prices/manage-prices?dashboard-or-api=api#lookup-keys). Product IDs and lookup key names only need to be unique for each account.\n\n[](#entitlements)\n\nTo correctly associate a customer with a Stripe account, store the customer ID and Stripe account ID in your database so that when you check the statuses of invoices and subscriptions for entitlements, you know you’re referencing the correct Stripe account.\n\n[](#tax)\n\nIf you want to report taxes as a single entity for two Stripe accounts, you can merge the tax reports of those accounts. Export the data then combine the reports in a spreadsheet or with a partner such as TaxJar or Avalara.\n\n[](#rev-recovery)\n\nTo enable [revenue recovery](https://docs.stripe.com/billing/revenue-recovery), configure invoice templates, subscription lifecycles, and dunning emails for each individual Stripe account.\n\n[](#payment-methods)\n\nTo correctly associate a customer with a Stripe account, store the customer ID and Stripe account ID in your database. Doing so means that when you check the statuses of invoices and subscriptions for entitlements, you know you’re referencing the correct Stripe account.\n\nTo transition to multiple Stripe accounts, we recommend setting up a platform account and a connected account when you first get started.\n\n### Limitations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPayment method cloning currently has the following limitations:\n\n*   You can only clone payment methods that have the [type](https://docs.stripe.com/api/payment_methods/object#payment_method_object-type) set to `card` or `us_bank_account`.\n*   You can’t clone payment methods from one connected account to another connected account.\n*   You can’t clone payment methods from a connected account to a platform account.",
    "title": "Billing for a multi-entity business | Stripe Documentation",
    "description": "Integrate Stripe Billing for a business with more than one legal entity.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/taxes",
    "markdown": "# Subscriptions and Tax | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to collect and report taxes with Stripe Billing and Stripe Tax.\n\nAutomatically collect tax on recurring payments with Stripe Tax\n\n[](https://docs.stripe.com/billing/taxes/collect-taxes)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/billing-tax-hero.f53de0f36325b5ddc87dfe9a2ed3fbb6.png)\n\n## Use Stripe Tax with recurring payments Recommended![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n## Use tax rates with recurring payments![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)",
    "title": "Subscriptions and Tax | Stripe Documentation",
    "description": "Learn how to collect and report taxes with Stripe Billing and Stripe Tax.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/subscriptions/usage-based",
    "markdown": "# Usage-based billing | Stripe DocumentationThe Stripe Docs logo\n\n## Charge customers based on how much they use your product or service.\n\n#### Note\n\nUsage-based billing (also known as metered billing or consumption billing) is a common [pricing model](https://docs.stripe.com/products-prices/pricing-models \"pricing model\") for SaaS businesses that enables you to charge based on a customer’s usage of your product or service. As a business, you provide access to your service and bill your customer based on their usage. With Stripe Billing, you can set up and integrate different types of usage-based pricing models with your SaaS product.\n\n[\n\nSet up usage-based billing\n\n\n\n](https://docs.stripe.com/billing/subscriptions/usage-based/implementation-guide#what-you-will-build)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/usage-based-billing.7815fc3949e9351fd5e39cb2b02e4eca.svg)\n\n## Getting started![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### Note\n\nUBB data is accessible only in Stripe Subscriptions and Invoices. We’re striving for full interoperability of UBB data across our product suite.",
    "title": "Usage-based billing | Stripe Documentation",
    "description": "SaaS usage-based billing made easy with Stripe Billing",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/billing/automations",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Automations\n\n## Learn how to customize subscription and invoice workflows with automations.\n\nStripe Billing automations are a no-code way to build custom, automated workflows to streamline your business processes, enhance customer communication, and improve revenue recovery efforts.\n\nTailor automated workflows to fit your specific use case, for example:\n\n*   [Custom dunning flow for annual subscribers](https://docs.stripe.com/billing/automation-recipes#custom-dunning-flow)\n*   [Notify your team when high value invoices are overdue](https://docs.stripe.com/billing/automation-recipes#invoice-overdue-notifications)\n*   [Email a confirmation when a subscription is canceled](https://docs.stripe.com/billing/automation-recipes#subscription-cancellation-confirmation)\n*   [Give new users a 10 USD spend credit at signup](https://docs.stripe.com/billing/automation-recipes#signup-spend-credit) Beta\n\nWorkflows consist of triggers, filter conditions, and actions. This guide describes how to use those to build and configure your own custom automation. Follow an [automation recipe](https://docs.stripe.com/billing/automation-recipes) to get started with common use cases.\n\n## Set up automations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo get started with automations, follow these steps:\n\n1.  In the Stripe Dashboard, go to the [Automations tab](https://dashboard.stripe.com/test/revenue_recovery/automations) in Billing.\n2.  Click **New automation** or press the **n** key.\n3.  Name the automation.\n4.  Select the event that you want to trigger the automation.\n5.  (Optional) Add [filter conditions](https://docs.stripe.com/billing/automations#choose-filter-conditions) so that your automation only runs when the specified conditions are met.\n6.  Add a sequence of actions and delays.\n7.  (Optional) If the selected trigger applies to other automations, drag the new automation to the desired position in the priority order, then click **Save**.\n\n#### Warning\n\nWhen using automations, the [next\\_payment\\_attempt](https://docs.stripe.com/api/invoices/object#invoice_object-next_payment_attempt) is no longer set in `invoice.payment_failed` webhooks but is set in `invoice.updated` webhooks.\n\n## Choose a trigger![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can choose from five triggers:\n\n| Trigger | Description | Example use case |\n| --- | --- | --- |\n| Invoice due date upcoming | Actions are executed relative to the due date of the invoice. The automation terminates when the invoice is paid or voided. This trigger is only for invoices with `collection_method` set to `send_invoice`. | Manage customer communication by scheduling `invoice.will_be_due` webhooks at custom intervals. |\n| Invoice is finalized | Triggered when an invoice is finalized. The automation terminates when the invoice is paid, voided, or marked uncollectible. | Mark invoices for certain customer segments as uncollectible (write-off) after a period of time. |\n| Invoice is overdue | Triggered when an invoice becomes overdue. The automation terminates when the invoice is paid or voided. This trigger is only for invoices of type `send`. | Manage customer communication by scheduling `invoice.overdue` webhooks at custom intervals. Manage collections by scheduling emails to the collections team. |\n| Subscription is canceled | Trigger when a subscription is canceled. | Email a cancellation confirmation to the customer. Optionally include a cancellation reason survey. |\n| Subscription payment fails | Triggered when a subscription invoice payment fails its first attempt. The automation terminates when the invoice is paid or voided. | *   Custom retry behavior for a subset of customers<br>*   Notify your collections team of high-value payment failures. |\n\n## Choose filter conditions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAfter selecting a trigger, you can add one or more filter conditions. These conditions need to be met for your automation to run. For example, if you filter for customers on annual subscriptions, the automation only runs if there are annual subscriptions.\n\nDepending on the trigger, the following filter conditions are available:\n\n| Condition | Description |\n| --- | --- |\n| Customer metadata | A key-value pair to match on customer [metadata](https://docs.stripe.com/api/metadata). |\n| Invoice metadata | A key-value pair to match on invoice [metadata](https://docs.stripe.com/api/metadata). |\n| Invoice amount | A minimum or maximum amount per invoice defined in your default currency. Invoices not denominated in your default currency are evaluated against their conversion. |\n| Subscription interval | Limit to yearly or monthly subscriptions. |\n| Product | Limit to invoices or subscriptions that contain at least one of the products specified. |\n\nYou can use the [Metadata API field](https://docs.stripe.com/api/metadata) to directly apply metadata for customers and invoices.\n\n## Choose actions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following table describes the available actions for the various triggers:\n\n| Action | Description | Supported triggers |\n| --- | --- | --- |\n| Set retry policy | A retry policy defines how failed charges are retried. This action allows you to create a custom policy and attach it to an invoice. | Subscription payment fails |\n| Mark subscription unpaid | The subscription continues to generate invoices each billing cycle, which remain in `draft` state. | Subscription payment fails |\n| Cancel subscription | Canceling subscriptions disables creating new invoices for the subscription and stops automatic collection of all invoices from the subscription by setting `auto_advance` to `false`. _When you cancel a subscription, the Automation immediately stops running._ | Subscription payment fails |\n| Mark invoice uncollectible | The customer is unlikely to pay this invoice and you want to treat it as bad debt in your accounting process. | *   Subscription payment fails<br>*   Invoice finalized<br>*   Invoice overdue |\n| Send team email | Email a custom memo, along with details about the trigger to a team member or internal email address. | All triggers |\n| Send subscription cancellation email | Email a cancellation confirmation to your customers. You also have the option to include a survey link to collection cancellation reasons. | Subscription is canceled |\n| Send `invoice.will_be_due` webhook | You can schedule this webhook to be triggered with custom delays to get reminders about an invoice that’s about to be due. | Invoice due date is set |\n| Create subscription Beta | Creates a subscription for the newly created customer with a single product and price. | Customer is created |\n| Credit customer balance Beta | Makes a positive adjustment to the customer credit balance in the amount you choose. | Customer is created |\n\n## Manage and edit your automations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis section describes how to priority order and pause or stop automations. These actions help make sure your automations run as expected.\n\n### Priority ordering![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can configure multiple automations for the same trigger, but each event only triggers one automation. When an event occurs that applies to multiple automations, Stripe checks their filter conditions in priority order and runs the first one that matches. All other automations are ignored.\n\nIf an automation executes, it ignores your global settings.\n\n*   **Scenario A**: You create an automation for the `Subscription payment fails` event with no conditions applied. In this scenario, the automation runs every time a subscription payment fails. Your default settings for subscription payment failure won’t run.\n    \n*   **Scenario B**: You create an automation for the `Subscription payment fails` event with the condition that the invoice must be greater than 100 USD. In this scenario, the automation runs if the subscription payment fails and the invoice is over 100 USD. If a subscription payment fails and the invoice is less than 100 USD, your default settings for subscription payment failure run instead.\n    \n\nTo change a trigger’s priority order, open the list of automations, click the overflow menu () for any of that trigger’s automations, and select **Update priority**. You can also select it from the **Actions** menu on the automation details page. In the **Set priority** panel, drag each automation to the desired position and then click **Save**.\n\n### Pausing or stopping automations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo switch off or pause an automation, go to the [Automations tab](https://dashboard.stripe.com/test/revenue_recovery/automations) on the Revenue recovery page and turn off that automation’s toggle. If any executions are in progress for that automation, you can let them finish or immediately cancel all of them.\n\nYou can turn the automation on again at any time.",
    "title": "Automations | Stripe Documentation",
    "description": "This docs article explains core concepts of automations in Stripe and provides steps to set up and manage automations with examples of automation recipes like custom dunning flows, overdue invoice notifications, subscription cancellation confirmation, and creating signup credits.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/methodology/subscriptions-and-invoicing",
    "markdown": "# Revenue Recognition with subscriptions and invoicing\n\n## Learn how Revenue Recognition works with subscriptions and invoices.\n\nBecause of the detailed information available on subscriptions and [invoices](https://docs.stripe.com/api/invoices \"invoices\"), Revenue Recognition can accurately defer and recognize revenue for these resources. Revenue Recognition treats each invoice line item and subscription item as its own performance obligation.\n\nRevenue Recognition amortizes revenue by the millisecond, but our example uses a daily interval.\n\n## Licensed subscriptions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLicensed subscriptions are subscriptions that generate invoices for a service offered in an upcoming subscription interval. At the end of the interval, the subscription cycles and generates a new invoice for the next interval.\n\nEach subscription item corresponds to a single line item on the invoice, and automatically populates the period for that line item with the period start and end for the subscription item.\n\n* * *\n\nLet’s take a look at an example and timeline for a simple monthly subscription.\n\n*   On January 15, a customer starts a monthly subscription that costs 31 USD, which generates an invoice that gets finalized.\n\nIn this case, the period of service is from January 15 to February 14. The 31 USD is therefore recognized over 17 days in January and 14 days in February. If you inspected the account balances at the end of January, you’d see that 17 USD of revenue was recognized, and 14 USD of revenue remains deferred (to be recognized in February).\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +17.00 |\n| DeferredRevenue | +14.00 |\n\n## Metered subscriptions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhile licensed subscriptions items bill in advance, metered subscription items bill in arrears—at the point of invoice, all service has already been provided and all revenue recognized.\n\nMetered subscriptions allow businesses to submit usage information as service is provided, prior to generating an invoice. Because service is provided, the revenue must be recognized prior to the point of invoice.\n\nThis example introduces the concept of unbilled accounts receivable, which represents the amount of cash a business can expect to receive based on the service that they’ve already provided, but not yet invoiced.\n\nThis next example is for a metered subscription item where usage is submitted over time.\n\n*   On January 15, a customer subscribes to a monthly metered subscription at 1 USD per unit, and with `aggregate_usage=sum`.\n*   On January 25th, they use 15 units.\n*   On February 4th, they use another 17 units.\n*   On February 14th, the subscription generates an invoice of 32 USD.\n*   The invoice is finalized for 32 USD, but isn’t paid yet.\n\nIn this case, the period of service is from January 15 to February 14, but you don’t generate an invoice until February 14. However, the revenue from the 15 units of usage still needs to be recognized in January, for an amount of 15 USD. If you inspected the account balances at the end of January, you’d see that 15 USD of revenue was recognized, but instead of debiting accounts receivable, unbilled accounts receivable was debited.\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +15.00 |\n| UnbilledAccountsReceivable | +15.00 |\n\nIf you later inspected the account balances at the end of February, you’d observe the following:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| Revenue | +15.00 | +17.00 |\n| UnbilledAccountsReceivable | +15.00 | \\-15.00 |\n| AccountsReceivable |     | +32.00 |\n\n## Upgrades and downgrades![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSubscriptions can be upgraded and downgraded mid-month, and revenue needs to be recognized accordingly. If an invoice is cut mid-month to handle the prorated charges, the revenue schedule is also adjusted accordingly.\n\nThis next example is for a subscription that’s upgraded mid-month.\n\n*   On April 1, a customer starts a monthly subscription for 90 USD, which generates and finalizes an invoice.\n*   On April 21, the customer upgrades the subscription to cost 120 USD instead, which generates an invoice that accounts for the remaining 10 days of the month.\n\nIn this example, the customer receives 20 days of service with the 90 USD monthly subscription (60 USD in value) and 10 days of service with the 120 USD monthly subscription (40 USD in value). Therefore, in April, the recognized revenue is 100 USD.\n\n## Standalone invoices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe algorithm for recognizing revenue for standalone invoices is the same as that of a licensed subscription—the main difference is that line item periods aren’t automatically populated.\n\nTo recognize revenue correctly, remember to set the period for each invoice line item. If you don’t set a period on an invoice line item, the amount on that invoice line item is recognized immediately when the invoice finalizes. If you need to override or add a new service period, use the [Data Import feature](https://docs.stripe.com/revenue-recognition/data-import) to configure your invoice data, or set [rules](https://docs.stripe.com/revenue-recognition/rules) to customize revenue treatments on different invoices.\n\nIn this example, an invoice has two line items, one with a period set, and one without.\n\n*   On January 15, you create an invoice and finalize it with\n    *   A line item for 31 USD with a period from January 15 to February 14.\n    *   A line item for 5 USD with no period set.\n\nIn this case, the invoice is for a total of 36 USD. The 31 USD is recognized over 17 days in January and 14 days in February, but the 5 USD is immediately recognized on January 15. If you inspected the account balances at the end of January, you’d see that 22 USD (17 + 5) of revenue was recognized, and 14 USD of revenue remains deferred (to be recognized in February).\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +22.00 |\n| DeferredRevenue | +14.00 |\n\n## Uncollectible invoices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen an invoice is marked as uncollectible, we clear the accounts receivable account since we no longer expect payment.\n\nParts of the revenue for the invoice might have already been recognized. Upon marking it uncollectible, the recognized revenue is offset by contra revenue in the bad debt account.\n\nParts of the revenue for the invoice might still be deferred. Upon marking it uncollectible, the remaining deferred revenue is cleared.\n\nIn this example the invoice for a subscription finalizes and is later marked uncollectible.\n\n*   On January 15, a customer starts a monthly subscription for 31 USD. The invoice for 31 USD gets created and finalized.\n*   On February 1, the invoice is marked as uncollectible.\n\nIn this case, the customer received 17 days of service, but didn’t pay. The 17 USD that’s recognized at that point would be considered bad debt. The 14 USD in deferred revenue for a service that has yet to be provided is zeroed out. If you inspected the account balances on February 1, you’d see the following:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivable | +31.00 | \\-31.00 |\n| Revenue | +17.00 |     |\n| DeferredRevenue | +14.00 | \\-14.00 |\n| BadDebt |     | +17.00 |\n\nAn uncollectible invoice might still be paid. When the invoice is paid, the bad debt account is cleared out using a part of the received cash amount. The remaining cash amount goes to the recoverables account.\n\n## Voided invoices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen you void an invoice, the invoice has reached a terminal state. We therefore clear the accounts receivable account since the invoice can no longer be paid.\n\nYou might have already recognized parts of the revenue for the invoice. Upon voiding, the recognized revenue is offset by contra revenue in the voids account.\n\nParts of the revenue for the invoice might still be deferred. Upon voiding, the remaining deferred revenue is cleared.\n\nIn this example, the invoice for a subscription is finalized and later voided.\n\n*   On January 15, a customer starts a monthly subscription for 31 USD. The invoice for 31 USD gets created and finalized.\n*   On February 1, the invoice is voided.\n\nIn this case, the customer received 17 days of service, but didn’t pay. The 17 USD that’s recognized at that point would be voided. The 14 USD in deferred revenue for service that has yet to be provided, is zeroed out. If you inspected the account balances on February 1, you’d see the following:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivable | +31.00 | \\-31.00 |\n| Revenue | +17.00 |     |\n| DeferredRevenue | +14.00 | \\-14.00 |\n| Voids |     | +17.00 |\n\n## Credit notes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCredit notes allow the amount due on an invoice to be reduced after it finalizes. Since the expected payment is reduced, accounts receivable are reduced by the amount of the credit note.\n\nIf the credit note has no line items, the credit note is divided proportionally among all line items, based on the line item amounts. If the credit note has a specified line items, the credit note only applies to that line item.\n\nYou might’ve already recognized parts of the revenue for the invoice. When a credit note is issued, recognized revenue is proportionally offset by contra revenue in the credit notes account, based on the proportion of revenue that you recognized.\n\nParts of the revenue for the invoice might still be deferred. When a credit note is issued, deferred revenue is reduced, based on the proportion of revenue that’s still deferred.\n\nIn this example, the invoice for a subscription finalizes and a credit note is issued later.\n\n*   On January 1, a customer starts a three month subscription for 90 USD. The invoice for 90 USD gets created and finalized.\n*   On February 1, a credit note of 45 USD is issued.\n\nAt the end of March, the account balances would resemble the following:\n\n| Account | Jan | Feb | Mar |\n| --- | --- | --- | --- |\n| AccountsReceivable | +90.00 | \\-45.00 |     |\n| Revenue | +31.00 | +14.00 | +15.50 |\n| DeferredRevenue | +59.00 | \\-43.50 | \\-15.50 |\n| CreditNotes |     | +15.50 |     |\n\n## Tax liability![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo accurately handle your tax liability on invoices and subscriptions, use the `default_tax_rates` and `tax_rates` attribute on those resources to assign tax rates. If tax is modeled as a regular item, Revenue Recognition doesn’t automatically differentiate between revenue and tax unless you configure a [custom rule](https://docs.stripe.com/revenue-recognition/rules).\n\nIt’s worth noting that taxes aren’t recognizable as revenue. For example, an invoice for 50 USD with an exclusive tax of 5 USD has 50 USD in recognizable revenue and 5 USD of tax liability. The invoice and accounts receivable totals are both 55 USD.\n\nIn this example the invoice has an exclusive tax rate.\n\n*   On January 1, a customer starts a monthly subscription for 31 USD with an exclusive tax rate of 10%. The total due amount on the generated invoice is 34.10 USD.\n*   The invoice is paid immediately.\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +31.00 |\n| Cash | +34.10 |\n| TaxLiability | +3.10 |\n\nSimilarly, let’s take a look at an example for an invoice with an inclusive tax rate.\n\n*   On January 1, a customer starts a monthly subscription for 31 USD with an inclusive tax rate of 10%. The total due amount on the generated invoice is 31 USD.\n*   The invoice is paid immediately.\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +27.90 |\n| Cash | +31.00 |\n| TaxLiability | +3.10 |\n\n## Customer credit balance![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe customer credit balance is a balance on a customer that gets applied to future invoices automatically. Because the customer credit balance is treated as an additional payment (rather than a discount, for example), applying it to an invoice doesn’t reduce the tax liability for that invoice.\n\nHandling the customer credit balance involves what we call the customer balance account, which tracks the interactions between customer credit balance and invoices.\n\nIn this example, an invoice is created for a customer that maintains a customer credit balance.\n\n*   On January 15, an invoice for 31 USD is created and finalized. None of the line items have a service period, so revenue is immediately recognized.\n*   The customer has -11 USD in their customer credit balance. Stripe automatically applies -11 USD to the invoice and adjusts the customer credit balance to 0 USD.\n*   The customer pays 20 USD.\n\nIn this case, the resulting account balances would look like\n\n| Account | Jan |\n| --- | --- |\n| Cash | +20.00 |\n| Revenue | +31.00 |\n| CustomerBalance | \\-11.00 |",
    "title": "Revenue Recognition with subscriptions and invoicing | Stripe Documentation",
    "description": "Learn how Revenue Recognition works with subscriptions and invoices.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/customer-management",
    "markdown": "# Customer self-service with a customer portal\n\n## Allow your customers to manage their own accounts and subscriptions.\n\nProvide self-service functions to your customers by setting up a customer portal. You can configure it entirely in the Dashboard, or implement more powerful features, such as multiple configurations for different customers or for [connected accounts](https://docs.stripe.com/connect \"connected account\"), using the API.\n\nYou can fully automate many of your customer interactions by combining a customer portal with customer communications controlled by [Stripe Billing automations](https://docs.stripe.com/billing/automations). You create and manage automations in the Dashboard.\n\n## Get started with the customer portal![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[](https://docs.stripe.com/customer-management/activate-no-code-customer-portal \"Set up a customer portal\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/No-code.3f0b11f68b584b5471c4f0922566ae29.svg)](https://docs.stripe.com/customer-management/activate-no-code-customer-portal \"Set up a customer portal\")\n\nCreate and configure a customer portal using the Dashboard.\n\n## Customer portal features ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nA customer portal allows your customers to self-manage their payment details, invoices, and subscriptions in one place.\n\n|     |     |\n| --- | --- |\n| See what your customers can do in the customer portal | **Key customer portal features**<br><br>*   Download invoices<br>*   Update payment methods<br>*   Cancel a subscription<br>*   Update customer information<br>*   Upgrade and downgrade subscriptions<br><br>[View demo](https://billing.stripe.com/customer-portal-demo) |\n\n| Feature | Description |\n| --- | --- |\n| Customer management | Offer your customers a self-serve method to:<br><br>*   Update billing information, including their tax IDs<br>*   Update payment methods<br>*   Update subscriptions<br>*   Cancel, pause, resume, and view subscriptions<br>*   Pay, download, and view current and past invoices |\n| Cancellation deflection | Reduce churn by offering your customers a coupon when they try to cancel their subscription. Customers who cancel anyway can share why. You can collect those reasons through webhooks or Stripe Sigma. |\n| Interoperability | Use the portal with other Stripe products:<br><br>*   [Checkout](https://docs.stripe.com/payments/checkout)<br>*   [Payment Links](https://docs.stripe.com/payment-links)<br>*   [Connect](https://docs.stripe.com/connect)<br>*   [Invoices](https://docs.stripe.com/invoicing)<br>*   [Billing](https://docs.stripe.com/billing)<br>*   [Stripe Tax](https://docs.stripe.com/tax) |\n| Localization support | Automatically localize the portal based on your customers’ preferred language. To view a localized version of the portal, set your browser’s default language to the language you want to preview. See the full list of supported languages in the table below. |\n| Customized branding | Configure the portal to match your branding, including your icon, logo, colors, and business information. |\n| Payment methods | Manage payment methods to make it convenient for your customers to pay you. See the full list of [supported payment methods](#supported-payment-methods). Read the [payment methods](https://docs.stripe.com/payments/payment-methods/integration-options) guide to learn more. |\n| Invoice-only support | Yes. You don’t need to use subscriptions for the customer portal to be useful for your business and your customers. To preview invoicing management in the portal, complete the following step<br><br>1.  Turn on test mode in the Dashboard (nothing you do in test mode affects your live setup).<br>2.  Go to the [Customers page](https://dashboard.stripe.com/customers), and select a customer.<br>3.  Create a new invoice for the customer.<br>4.  Click **Actions**, then **Open customer portal**. For security reasons, the quick view option isn’t available for live mode customers. |\n| Language support | **Languages supported by the customer portal**<br><br>*   Bulgarian (bg)<br>*   Chinese Simplified (zh)<br>*   Chinese Traditional—Hong Kong (zh-Hant-HK)<br>*   Chinese Traditional—Taiwan (zh-Hant-TW)<br>*   Croatian (hr)<br>*   Czech (cs)<br>*   Danish (da)<br>*   Dutch (nl)<br>*   English, US (en)<br>*   English, UK (en-GB)<br>*   Estonian (et)<br>*   Filipino (fil)<br>*   Finnish (fi)<br>*   French, France (fr)<br>*   French, Canada (fr-CA)<br>*   German (de)<br>*   Greek (el)<br>*   Hungarian (hu)<br>*   Indonesian (id)<br>*   Italian (it)<br>*   Japanese (ja)<br>*   Korean (ko)<br>*   Latvian (lv)<br>*   Lithuanian (lt)<br>*   Malay (ms)<br>*   Maltese (mt)<br>*   Norwegian Bokmål (nb-NO)<br>*   Polish (pl)<br>*   Portuguese, Portugal (pt)<br>*   Portuguese, Brazil (pt-BR)<br>*   Romanian (ro)<br>*   Russian (ru)<br>*   Slovak (sk)<br>*   Slovenian (sl)<br>*   Spanish, Spain (es)<br>*   Spanish, Latin America (es-419)<br>*   Swedish (sv)<br>*   Thai (th)<br>*   Turkish (tr)<br>*   Vietnamese (vi) |\n| Stripe Connect compatibility | The customer portal works with Stripe Connect. If you’re using the customer portal with Stripe Connect, make sure you configure the customer portal for the platform instead of a connected account. |\n| Ephemeral sessions | Portal sessions are temporary. New portal sessions expire after a 5 minute period. If a customer uses it within that time period, the session expires within 1 hour of the most recent activity. |\n\n### Customer portal limitations ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe customer portal has the following limitations:\n\n*   If subscriptions use any of the following, customers can only _cancel_ them in the portal (they can’t _update_ such subscriptions):\n    \n    *   [Multiple products](https://docs.stripe.com/billing/subscriptions/multiple-products)\n    *   [Usage-based billing](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing)\n    *   Sending invoices for collection. Read more about the `collection_method` [parameter](https://docs.stripe.com/api/subscriptions/object#subscription_object-collection_method). If you use the Dashboard to create the subscription, you make this selection in the **Payment method** section.\n    *   Unsupported payment methods\n*   Customers can’t update or cancel subscriptions that currently have an update scheduled with a [subscription schedule](https://docs.stripe.com/billing/subscriptions/subscription-schedules).\n    \n*   Customers can only modify subscriptions if the new price has the same [tax behavior](https://docs.stripe.com/api/prices/create#create_price-tax_behavior) as the initial price. Additionally, no modifications are allowed if the tax behavior is `unspecified`, even if the tax behavior of the new price is `unspecified`. Learn more about the `tax_behavior` parameter and how it [relates to subscriptions](https://docs.stripe.com/billing/taxes/collect-taxes?tax-calculation=stripe-tax#product-and-price-setup).\n    \n*   The portal doesn’t display the payment method section if the portal doesn’t support the customer’s default payment method.\n    \n*   Customers can’t define multiple [Prices](https://docs.stripe.com/api/prices) with the same `product` and `recurring.interval` values. For example, to offer a magazine for 4.00 USD per month regular price and 3.00 USD per month for students, create a separate student magazine [Product](https://docs.stripe.com/api/product) version.\n    \n*   Customer modifications to a `trialing` subscription will end the free trial and create an invoice for immediate payment.\n    \n*   When you [allow customers to switch plans](https://docs.stripe.com/customer-management/configure-portal#configure-subscription-management), you can specify a maximum of 10 products for them to choose from.\n    \n\n## Supported payment methods ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n| [Payment method](https://docs.stripe.com/api/payment_methods/object#payment_method_object-type) | Description | Currencies | Merchant Country | Limitations |\n| --- | --- | --- | --- | --- |\n| ACH Direct Debit (`us_bank_account`) | Stripe users can receive bank transfers directly from customers. | USD | US  | None |\n| AU BECS Debit (`au_becs_debit`) | Bulk Electronic Clearing System (BECS) Direct Debit payments from customers with an Australian bank account. | AUD | AUS | None |\n| Boleto (`boleto`) | Boleto is a popular payment method in Brazil where customers pay by using a Boleto voucher with a generated number. | BRL | BR  | You must have a Brazilian Stripe account to accept Boleto from your customers. |\n| Cards (`card`) | Cards are one of the most popular ways to pay online, with broad global reach. There are different types of cards and several steps in the process. | Most currencies | Most locations | None |\n| Cash App Pay (`cashapp`) | Cash App is a popular consumer app in the US that allows customers to bank, invest, send, and receive money using their digital wallet. | USD | US  | None |\n| Link (`link`) | Link saves and autofills payment and shipping information for your customers so they don’t need to enter payment details manually. | Most currencies | Most locations | None |\n| PayPal (`paypal`) | PayPal is a payment method that enables customers in any country to pay using their PayPal account. | Most currencies | Europe | [Requires approval](https://docs.stripe.com/payments/paypal/set-up-future-payments#enable-recurring-payments-support-from-stripe-dashboard) |\n| Pre-authorized debits (`acss_debit`) | PADs are a low-cost, high volume batch processing network for financial transactions in Canada. | CAD, USD | CA, US | None |\n| SEPA direct debit (`sepa_debit`) | The Single Euro Payments Area (SEPA) is an initiative of the European Union to simplify payments within and across member countries. | EUR | AU, CA, Europe, HK, JP, MX, NZ, SG, US | None |\n| UK BACS Debit (`uk_bacs_debit`) | Bacs Direct Debit is a reusable, delayed notification payment method available to bank account holders from the United Kingdom. | GBP | UK  | You must have a UK Stripe account and a UK bank account to accept UK BACS Debit from your customers. |\n\n## Other hosted resources to use with the customer portal![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe offers multiple prebuilt resources so you can bill your customers quickly and maximize revenue retention and recovery.\n\n[](https://docs.stripe.com/payment-links \"Payment links\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/link.f0b2a66175b477e86a89e39eba75fb6c.svg)](https://docs.stripe.com/payment-links \"Payment links\")\n\nShare a link with your customers to get them signed up for your service through a payment page hosted by Stripe.\n\n[](https://docs.stripe.com/payments/checkout \"Checkout\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/checkout.4abfc4af6b46ecac81ce96bc8ff0213e.svg)](https://docs.stripe.com/payments/checkout \"Checkout\")\n\nLet your customers sign up through a prebuilt payment form. You can embed it in your site or redirect your users to a page hosted by Stripe.\n\n[](https://docs.stripe.com/payments/checkout/pricing-table \"Pricing table\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/pricing-table.f5d39b6bee7ac0aa8441b103ac986988.png)](https://docs.stripe.com/payments/checkout/pricing-table \"Pricing table\")\n\nCreate a pricing table in the Stripe Dashboard and embed the table in your site. Your customers select a plan then pay through Stripe Checkout.",
    "title": "Customer self-service with a customer portal | Stripe Documentation",
    "description": "Allow your customers to manage their own accounts and subscriptions.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/invoicing/dashboard",
    "markdown": "# Use the Dashboard | Stripe DocumentationThe Stripe Docs logo\n\n## Create, send, and modify invoices from the Stripe Dashboard.\n\nLearn how to create, send, and modify an [invoice](https://docs.stripe.com/api/invoices \"invoices\") from the [Dashboard](https://dashboard.stripe.com/invoices). Invoices provide an itemized list of goods and services rendered, which includes the cost, quantity, and taxes. You can also use them as a tool to collect payment. To send invoices automatically, [integrate with the Invoicing API](https://docs.stripe.com/invoicing/integration).\n\n## Create an invoice ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo create and send an invoice, complete the following steps:\n\n1.  In the Dashboard, go to the [Invoices overview page](https://dashboard.stripe.com/invoices) and click **Create Invoice** to open the [invoice editor](https://dashboard.stripe.com/invoices/create). Whenever you exit the invoice editor, Stripe saves a draft. (To delete a draft invoice, click the overflow menu () next to an invoice on the [Invoices page](https://dashboard.stripe.com/invoices).)\n    \n2.  Select an existing customer or click **Add new customer**. For new customers, you have to enter a name. You can optionally add an email address or other details.\n    \n3.  Optional Click the overflow menu () in the **Items** section to open the **Items Options** dialog. Choose the desired currency and tax rendering option for the invoice.\n    \n4.  Select **Add one-time item** to create a single, one-time item. To save a product for future use, select **Create new product**.\n    \n5.  Enter the **Quantity** and **Price** for your new item or product.\n    \n6.  Optional Click the **Item options** under each item to add a tax rate, coupon, or supply date.\n    \n    #### Note\n    \n7.  Optional Use the **Memo** box to provide more information to your customer. You can edit the memo on an invoice by clicking **Edit memo** on its details page.\n    \n8.  Select one of the following invoice delivery options:\n    \n    *   **Automatically charge a payment method on file**—Immediately charges the invoice amount to your customer’s payment method that you have on file.\n        \n    *   **Send invoice or payment page link manually**—Provides a payment link for you to send to customers after you confirm the invoice.\n        \n    *   **Email invoice with link**—Enables Stripe to send an email with a payment page and an invoice PDF.\n        \n    *   **Email invoice without link**—Enables Stripe to send an invoice PDF only.\n        \n9.  Optional Expand **Advanced options**, and add [custom fields](https://docs.stripe.com/invoicing/customize#custom-fields). To learn more, see [Net prices and taxes](https://docs.stripe.com/invoicing/taxes#net-price-taxes). Expand **Advanced options**, and add [custom fields](https://docs.stripe.com/invoicing/customize#custom-fields).\n    \n10.  Click **Review invoice** and decide whether you want to include additional emails or continue editing. Send the invoice.\n    \n\nCreate an invoice with the Dashboard\n\n## Modify an invoice ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWith the Dashboard, you can duplicate an invoice and modify the new copy. When you duplicate an invoice, Stripe copies all of the information on the original invoice except for credit notes, deleted (or archived) products, prices, coupons, discounts, and tax rates. If you made a mistake on an invoice you already created, duplicate it, make your corrections, and then send the new invoice. Remember to [void](https://docs.stripe.com/invoicing/overview#void) the incorrect invoice as well.\n\n#### Note\n\nYou can change the status of an [open](https://docs.stripe.com/invoicing/overview#open) invoice in the Dashboard by going to its details page and choosing **More** > **Change Invoice Status**.\n\nTo duplicate an invoice, [view your invoices](https://dashboard.stripe.com/invoices) and click the overflow menu () for the invoice you want to duplicate. Click **Duplicate invoice** to create, edit, and then send the new invoice.\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/invoice-duplication.7f22a89383b54d5e45693f642942afa1.png)\n\nDuplicate an invoice from the Dashboard\n\n## Customize an invoice ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can [customize invoices](https://docs.stripe.com/invoicing/customize) in several ways. These options allow you to add your own [branding](https://docs.stripe.com/invoicing/customize#brand-customization) and modify your invoices so that they comply in the jurisdictions ​​where you operate.\n\n## Invoice receipts ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe creates receipts when a customer pays an invoice, or makes any [subscription](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\") payment. We itemize the receipts for subscription and invoice payments to include line items, discounts, and taxes for the payment. To automatically send receipts, make sure that you enable the **Successful payments** option in your [Email settings](https://dashboard.stripe.com/settings/emails) and that you also add the customer’s email.\n\nAfter payment, the [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page) includes a link to a receipt that a customer can download for their own records. You can also manually send a receipt by clicking the **Send receipt** button on the **Invoice details** page. To email yourself a test receipt, go to your [Branding settings](https://dashboard.stripe.com/settings/branding) and hover over the email receipt to see the **Send test receipt** button. To learn more about email receipts, see [Email receipts](https://docs.stripe.com/receipts).",
    "title": "Use the Dashboard | Stripe Documentation",
    "description": "Create, send, and modify invoices from the Stripe Dashboard.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/invoicing/overview",
    "markdown": "# How invoicing works | Stripe DocumentationThe Stripe Docs logo\n\n## Learn more about the basics of Stripe Invoicing.\n\nInvoices provide an itemized list of goods and services rendered, which includes the cost, quantity, and taxes. You can send invoices to customers to collect payment or you can create an invoice and automatically charge a customer’s saved payment method. [Subscriptions](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\") automatically generate invoices for each billing cycle. Learn more about the [invoice lifecycle for subscriptions](https://docs.stripe.com/billing/subscriptions/overview#invoice-lifecycle).\n\nWhen you create an invoice, you can select an existing [customer](https://docs.stripe.com/invoicing/customer) and [product](https://docs.stripe.com/invoicing/products-prices) or create and save new ones. You can also create one-time products that only exist on the current invoice.\n\nYou can use both the [Dashboard](https://docs.stripe.com/invoicing/dashboard) and the [API](https://docs.stripe.com/api/invoices) to create, edit, and manage invoices.\n\n## Invoice lifecycle ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAfter they’re created manually or as part of a subscription, invoices move through a series of statuses as they’re created and processed. Stripe calls this the automatic collection workflow.\n\nThe basic lifecycle for invoices looks like this:\n\n1.  A newly created invoice has `draft` status.\n2.  Stripe [finalizes an invoice](https://docs.stripe.com/invoicing/integration/workflow-transitions#finalized) when it’s ready to be paid by changing its status to `open`. You can no longer change most details of a finalized invoice.\n3.  Stripe can wait for the customer to pay the invoice or automatically attempt to pay it using the customer’s default payment method.\n    *   If payment succeeds, Stripe updates the invoice status to `paid`.\n    *   If payment fails, the invoice remains `open`.\n4.  Optionally, you can change the status of an unpaid invoice to `void` or `uncollectible`.\n\nYou can [configure Stripe to send customer emails](https://docs.stripe.com/invoicing/send-email) at different stages of the invoice lifecycle, such as when it finalizes an invoice or when automatic payment fails.\n\n## Invoice statuses ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nInvoices can have one of five statuses. The actions you can take on an invoice depend on its status.\n\n| Status | Description | Possible Actions |\n| --- | --- | --- |\n| [draft](#draft) | The invoice isn’t ready to use. All invoices start in `draft` status. | *   Edit any part of the invoice.<br>*   When the invoice is ready to use, finalize it by changing its status to `open`.<br>*   If the invoice isn’t associated with a subscription, [delete](#deleted) it. |\n| [open](#open) | The invoice is finalized and awaiting payment. | *   Send the invoice to a customer for payment.<br>*   Change [only some elements of the invoice](https://docs.stripe.com/invoicing/invoice-edits). To make more substantive changes, create a new invoice and void the old one.<br>*   Change the invoice’s status to `paid`, `void`, or `uncollectible`. |\n| [paid](#paid) | This invoice is paid. | *   No further actions. |\n| [void](#void) | This invoice is canceled. | *   No further actions. |\n| [uncollectible](#uncollectible) | The customer is unlikely to pay the invoice. Normally, you treat it as bad debt in your accounting process. | *   Change the invoice’s status to `void` or `paid`. |\n\n### Draft invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can update almost any details of a `draft` invoice. You can also delete it, unless it’s associated with a subscription. When a `draft` invoice is ready to send for payment, you finalize it by changing its status to `open`.\n\nYou can delete a `draft` invoice. You can’t recover a deleted invoice.\n\n1.  Go to the [Invoices page](https://dashboard.stripe.com/test/invoices).\n    \n2.  Click the overflow menu () next to the invoice.\n    \n3.  Click **Delete draft**.\n    \n\n### Open invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe invoice has been finalized and is awaiting customer payment. If its amount due is less than the [minimum chargeable amount](https://docs.stripe.com/currencies#minimum-and-maximum-charge-amounts), it automatically transitions to `paid` status and Stripe debits the amount from the [customer’s credit balance](https://docs.stripe.com/billing/customer/balance).\n\nIn the Dashboard, invoices in `open` status can display a different badge, such as `Past due` or `Retrying`. In some scenarios, you can hover over the badge to view an explanatory tooltip.\n\nIf an open non-subscription invoice is waiting for a payment that’s initiated but still pending, it shows the `Pending` badge in the list of invoices. However, its details page shows the `Open` badge.\n\nYou can update only a few elements of an open invoice, such as the memo or metadata. To make more substantive changes, you must [revise the invoice](https://docs.stripe.com/invoicing/invoice-edits) by replacing it with a new one.\n\nYou can’t delete a finalized invoice. To cancel it, change its status to `void`.\n\n### Paid invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe customer has paid the invoice. This status is terminal, which means that the invoice’s status can never change.\n\nTo attempt a payment through the Dashboard, open the [Invoice details page](https://docs.stripe.com/invoicing/dashboard/manage-invoices#invoice-details-page) and click **Charge customer**.\n\n#### Out of band invoices![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf a customer pays an invoice out of band (outside of Stripe), you can manually change the [status](#invoice-statuses) to `paid` through the Dashboard or API.\n\nTo manually mark an open invoice as paid in the Dashboard, go to the **Invoice details** page, click **More** and select **Change invoice status**. In the resulting dialog, select the **Paid** option.\n\n### Void invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nVoiding an invoice is conceptually similar to deleting or canceling it. However, voiding an invoice maintains a paper trail, which allows you to look up the invoice by number. Voided invoices are treated as zero-value for reporting purposes, and aren’t payable. This status is terminal, which means that the invoice’s status can never change.\n\nAfter you void an invoice, the [Hosted Invoice Page](https://docs.stripe.com/invoicing/hosted-invoice-page) is still accessible, and displays a message indicating that the invoice has been voided. You can only void an invoice in `open` or `uncollectible` status.\n\n#### Note\n\nConsult with local regulations to determine whether and how an invoice might be amended, canceled, or voided in the jurisdiction you’re doing business in. You might need to [issue another invoice](https://docs.stripe.com/invoicing/integration#create-invoice-code) or [credit note](https://docs.stripe.com/invoicing/integration/programmatic-credit-notes) instead. Stripe recommends that you consult with your legal counsel for advice specific to your business.\n\nTo void an invoice from the Dashboard:\n\n1.  Go to the **Invoice details** page.\n    \n2.  Click **More** and select **Change invoice status**.\n    \n3.  In the resulting dialog, select **Void**.\n    \n\n### Uncollectible invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSometimes your customers can’t pay their outstanding bills. For example, assume that you provide 1,000 USD worth of services to your customer, but they’ve since declared bankruptcy and have no assets to pay the invoice.\n\nAs a result, you decide to write off the invoice as unlikely to be paid. In this case, you can update the status of the invoice to be `uncollectible`. This allows you to track the amount owed for reporting purposes as part of your bad debt accounting process.\n\nYou can mark an open invoice as uncollectible through the **Invoice details** page by clicking **Change invoice status**.\n\n## See also![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   [Use the Dashboard](https://docs.stripe.com/invoicing/dashboard)\n*   [Integrate with the API](https://docs.stripe.com/invoicing/integration)\n*   [Status transitions and finalization](https://docs.stripe.com/invoicing/integration/workflow-transitions)",
    "title": "How invoicing works | Stripe Documentation",
    "description": "Learn more about the basics of Stripe Invoicing.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition",
    "markdown": "# Revenue Recognition overview | Stripe DocumentationThe Stripe Docs logo\n\n## Automate your accrual accounting process with Stripe Revenue Recognition.\n\nRevenue recognition is a fundamental part of accrual accounting. Generally accepted accounting principles (GAAP) state that you recognize revenue when you realize and earn it, which might be earlier or later than when you actually receive cash. Correctly recognizing and deferring revenue enables you to have the most accurate insights into your business profitability and financial health.\n\n## Who needs revenue recognition ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nRevenue recognition is critical for many types of businesses, especially:\n\n*   Public companies or large businesses with over 25 million USD in annual revenue—because they’re legally required to comply with ASC 606 and GAAP and IFRS accounting standards.\n*   Startups that need to follow accrual accounting to raise money from investors or get a loan from a bank.\n*   Subscription and service-based businesses.\n*   Businesses where customers pay up front before receiving a good or service.\n\nRevenue recognition can provide these businesses with a clear picture of their performance.\n\nRevenue recognition gets complicated quickly as businesses scale with larger product lines and increased payment volumes. For subscription businesses that need to manage changes, refunds, disputes, and prorations, revenue recognition can be especially complex. Such subscription updates can complicate the process of recognizing and deferring revenue accurately and compliantly.\n\n### New accounting standards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nOn May 28, 2014, the Financial Accounting Standards Board (FASB) and International Accounting Standards Board (IASB) jointly issued [Accounting Standards Codification (ASC) 606](https://asc.fasb.org/606/tableOfContent), a new framework for businesses to recognize revenue from contracts with customers.\n\n## Stripe Revenue Recognition ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nStripe Revenue Recognition helps you simplify the process of recognizing revenue without the need for engineering involvement or lengthy configurations. Stripe Revenue Recognition offers you:\n\n*   Recognized and deferred [revenue summaries](https://docs.stripe.com/revenue-recognition/reports/monthly-summary)\n*   Downloadable accounting [reports and waterfall](https://docs.stripe.com/revenue-recognition/reports/waterfall) charts\n*   Interactive revenue numbers for full [audit](https://docs.stripe.com/revenue-recognition/reports/audit-numbers) transparency\n*   Configurable revenue recognition [rules](https://docs.stripe.com/revenue-recognition/rules) and accounting period controls\n\nRead more about Stripe’s revenue recognition [methodology](https://docs.stripe.com/revenue-recognition/methodology).",
    "title": "Revenue Recognition overview | Stripe Documentation",
    "description": "Automate your accrual accounting process with Stripe Revenue Recognition.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-reports",
    "markdown": "# Stripe reporting | Stripe DocumentationThe Stripe Docs logo\n\n## Get insights to run, grow, and understand your business.\n\nGet financial reports\n\nUse preconfigured reports to understand basic activity on your account—like payments, payouts, fees, and balance changes. View in the Dashboard or download a CSV to complete accounting tasks.\n\n[\n\nFind free reports\n\n\n\n](https://docs.stripe.com/reports)\n\n![](https://b.stripecdn.com/docs-statics-srv/assets/reporting-hero.b986b9ddc9f8a36d8e544570a2550ba4.png)\n\n## Automated business insights![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n[](https://docs.stripe.com/revenue-recognition \"Revenue recognition\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/revenue-recognition.b80ff778d613a23e11d4817f92ade748.png)](https://docs.stripe.com/revenue-recognition \"Revenue recognition\")\n\n[Revenue recognition](https://docs.stripe.com/revenue-recognition \"Revenue recognition\")\n\nAutomate your accrual accounting process to meet ASC 606 and IFRS 15 compliance.\n\n[](https://docs.stripe.com/reconciliation \"Reconciliation automation\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/reconciliation.1660e9fca394f7c7fdd7032b0f051967.png)](https://docs.stripe.com/reconciliation \"Reconciliation automation\")\n\n[Reconciliation automation](https://docs.stripe.com/reconciliation \"Reconciliation automation\")\n\n[Beta](https://docs.stripe.com/reconciliation \"Reconciliation automation\")\n\nAutomate the process of comparing financial records to close your books.\n\nBilling\n\n*   [Pricing models](https://docs.stripe.com/products-prices/pricing-models)\n*   [Acquire new customers](https://docs.stripe.com/quotes)\n*   [Bill and collect payments](https://docs.stripe.com/billing/subscriptions/build-subscriptions)\n*   [Recover and retain revenue](https://docs.stripe.com/billing/revenue-recovery)\n*   [Subscription schedules](https://docs.stripe.com/billing/subscriptions/subscription-schedules)\n\nTax\n\n*   [Calculate and collect tax](https://docs.stripe.com/tax/set-up)\n*   [Monitor your tax thresholds](https://docs.stripe.com/tax/monitoring)\n*   [Locations Stripe calculates tax](https://docs.stripe.com/tax/supported-countries)\n*   [Validate Tax IDs](https://docs.stripe.com/tax/invoicing/tax-ids)\n*   [Report and file tax](https://docs.stripe.com/tax/filing)\n\nReporting\n\n*   [Recognize revenue](https://docs.stripe.com/revenue-recognition/get-started)\n*   [Prebuilt financial reports](https://docs.stripe.com/reports)\n*   [Automated reconciliation](https://docs.stripe.com/reconciliation)\n*   [Growth and churn metrics](https://docs.stripe.com/billing/subscriptions/view-metrics)\n\nData\n\n*   [Sync to a data warehouse](https://docs.stripe.com/stripe-data/access-data-in-warehouse)\n*   [Save frequently-used queries](https://docs.stripe.com/stripe-data/write-queries#saving-queries)\n*   [Import external data](https://docs.stripe.com/stripe-data/import-external-data)\n*   [Prebuilt query templates](https://docs.stripe.com/stripe-data/query-transactions)\n*   [Write custom reports](https://docs.stripe.com/stripe-data/write-queries)",
    "title": "Stripe reporting | Stripe Documentation",
    "description": "Along with a suite of reporting tools, Stripe offers several different prebuilt reports to help analyze your business.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/reports/multiple-accounts",
    "markdown": "# Reports for multiple accounts | Stripe DocumentationThe Stripe Docs logo\n\n## Reports for multiple accountsInvite only\n\n## Download consolidated reports for multiple accounts that belong to your organization.\n\nIf you manage multiple Stripe accounts within your [organization](https://docs.stripe.com/get-started/account/orgs), you can download a consolidated report that includes data from all the accounts, instead of individually accessing and downloading reports from each account separately.\n\n## Download consolidated reports ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo download a consolidated report, you must have a [role](https://docs.stripe.com/get-started/account/teams/roles) with permission to download the given reports in each of the accounts, such as Analyst. You can download consolidated [Balance](https://docs.stripe.com/reports/balance) and [Reconcilliation](https://docs.stripe.com/reports/payout-reconciliation) reports.\n\nTo download a consolidated report for multiple accounts in your organization:\n\n1.  Navigate to any account in the Dashboard, then click **More** > **Reports**.\n2.  Select a downloadable report.\n3.  Click **Download**.\n4.  In the Accounts section, select the additional accounts that you want to include in the consolidated report. We add a new Account ID column to the report.\n5.  Select a download format:\n\n*   Select **Single report** to combine the rows from each individual report into a single CSV file.\n*   Select **Separate report for each account** to generate a .zip folder that contains each individual report as a separate CSV file.\n\n## File size limits ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you download reports, there’s a 10 GB limit for each individual account report and a 15 GB limit for consolidated reports with multiple accounts. If you exceed the file download limit, reduce the size of a report by configuring [filters](https://docs.stripe.com/reports/options), such as **Date** and **Currency**.",
    "title": "Reports for multiple accounts | Stripe Documentation",
    "description": "Download consolidated reports for multiple accounts that belong to your organization.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/methodology",
    "markdown": "# Revenue Recognition methodology | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how Revenue Recognition works out of the box within Stripe.\n\nRevenue Recognition is integrated with other Stripe objects to provide intelligent default settings for how revenue should be recognized.\n\nRevenue Recognition automatically calculates all transactions that happen within Stripe down to the millisecond, including subscriptions, invoices, one-time payments, refunds, disputes, and so on.\n\n#### Note\n\nRevenue recognition requirements vary based on a number of factors and the parameters listed above may or may not fit your business. You need to ensure that you understand and comply with the requirements applicable to your business, and that you model your business accordingly.\n\n## Chart of accounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nRevenue recognition is built on top of a double-entry accounting ledger that tracks debits and credits resulting from your business activity.\n\nTo get the most out of Revenue Recognition, it helps to understand the default chart of accounts and the debits and credits that impact those accounts.\n\n| Account | Debit/Credit type | Description |\n| --- | --- | --- |\n| Revenue | Revenue (credit) | Recognizable portion of finalized invoices, prorated invoice items, and metered billing that count towards revenue during the month. For example, if an invoice line item is for 90 USD with 10 USD in taxes, the total invoice is 100 USD, but the recognizable portion is only 90 USD. |\n| Refunds | Contra Revenue (debit) | Portion of the refunded amount previously recognized. For example, if you issue a 120 USD refund on an annual subscription during the second month, 20 USD for the first 2 months is contra revenue. The remaining 100 USD is adjusted and reflected in your deferred revenue balance in the balance sheet. |\n| Disputes | Contra Revenue (debit) | Portion of the disputed amount previously recognized. For example, if there’s a 120 USD dispute on an annual subscription during the second month, 20 USD for the first 2 months is contra revenue. The remaining 100 USD is adjusted and reflected in your deferred revenue balance in the balance sheet. |\n| CreditNotes | Contra Revenue (debit) | Portion of the credit note amount previously recognized. For example, if there’s a 120 USD credit note on an annual subscription during the second month, 20 USD for the first 2 months is contra revenue. The remaining 100 USD is adjusted and reflected in your deferred revenue balance in the balance sheet. |\n| BadDebt | Contra Revenue (debit) | Previously recognized revenue from invoices that have been marked as uncollectible. |\n| Voids | Contra Revenue (debit) | Previously recognized revenue from invoices that have been voided. |\n| UnbilledVoids | Contra Revenue (debit) | Previously recognized revenue from prorated invoice items that have been deleted. These items are sometimes deleted when they generate unbilled accounts receivable and revenue. |\n| Transfer | Contra Revenue (debit) | Previously recognized revenue from separate transfers. |\n| Discounts | Contra Revenue (debit) | Recognized revenue from invoices that received discounts. Revenue Recognition discount as contra revenue support is currently in private beta. |\n| CustomerBalanceAdjustments | Expense (debit) | Expenses incurred due to manual adjustments to a customer credit balance or exclusion associated with post-paid credit notes on customer balance. |\n| ExternalCustomerBalanceAdjustments | Expense (debit) | Expenses incurred due to exclusion associated with post-paid credit notes on external customer balance. |\n| Underpayments | Expense (debit) | Expenses incurred due to transfers that underpay an invoice, as used by the [customer credit balance](https://docs.stripe.com/invoicing/bank-transfer#underpayments) payment method or [Sources](https://docs.stripe.com/sources/customers). |\n| Fees | Expenses (debit) | Expenses incurred due to Stripe fees. Revenue Recognition Stripe fees support is currently in private beta. |\n| Recoverables | Gains (credit) | Recovered funds that aren’t attributable to revenue. For example, if you have a 120 USD dispute on an annual subscription during the second month, 20 USD for the first 2 months is contra revenue and the remaining 100 USD is adjusted from the deferred revenue balance. If you win the dispute and 120 USD is returned to you, 20 USD is reflected as revenue and the remaining 100 USD is reflected as recoverables. |\n| Exclusion | Gains (credit) | Excluded funds that aren’t attributable to revenue. To exclude transactions, set up [exclusion rules](https://docs.stripe.com/revenue-recognition/rules/create-a-rule#treatments) or use [exclusion import](https://docs.stripe.com/revenue-recognition/data-import#exclusion-import). |\n| FxLoss | Loss (debit) | Total loss due to foreign currency exchange rates. |\n| ConnectTransferLoss | Loss (debit) | Total loss due to destination charge refund, and the transfer reversal will reverse the ConnectTransferLoss account. |\n\n## Data modeling for Revenue Recognition![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can better understand Revenue Recognition by understanding the data modeling—see the following descriptions of how Revenue Recognition handles common Stripe resources.\n\n### Subscriptions and Invoicing![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSubscriptions and Invoices are higher level resources that contain detailed information about each transaction.\n\nSubscriptions create invoices on each cycle, with each subscription item corresponding to an invoice line item. The period of each line item is automatically populated with the period of the subscription item.\n\nRevenue recognition treats each invoice line item as its own performance obligation. When the invoice finalizes, the total recognizable amount is deferred and subsequently amortized evenly over the period of each invoice line item.\n\nIf a period isn’t set on an invoice line item, the amount on that invoice line item is recognized entirely when the invoice is finalized. Use the [Data Import feature](https://docs.stripe.com/revenue-recognition/data-import) to configure your invoice data, or set [rules](https://docs.stripe.com/revenue-recognition/rules) to customize when and how invoice line items are recognized.\n\nFor more details and examples regarding how Revenue Recognition handles subscriptions and invoices with specific scenarios involving upgrades, downgrades, discounts, taxes, and so on, review the [Subscriptions and Invoicing](https://docs.stripe.com/revenue-recognition/methodology/subscriptions-and-invoicing) page.\n\n### One-time payments![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nOne-time payments created in the Dashboard or through the [Charges](https://docs.stripe.com/api/charges) and [PaymentIntents](https://docs.stripe.com/api/payment_intents) APIs don’t contain as much information as invoices.\n\nBecause no service period or fulfillment information exists for them, by default, one-time payments are recognized immediately when the payment occurs.\n\n[Import data](https://docs.stripe.com/revenue-recognition/data-import) to add a service period or split a payment into different revenue recognition schedules. This allows you to customize revenue treatment behavior and configure rules such as payment amount, description, and customer email.\n\nFor more details and examples on how Revenue Recognition handles one-time payments, review the [One-time payments](https://docs.stripe.com/revenue-recognition/methodology/one-time-payments) page.\n\n### Refunds and disputes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nRevenue Recognition handles refunds and disputes by generating contra revenue to offset already recognized revenue.\n\nFor transactions with both already-recognized and deferred revenue, the recognized portion is added to either the refunds or disputes contra revenue account, which cancels out the deferred revenue.\n\nFor more details and examples on how Revenue Recognition handles refunds and disputes, review the [Refunds and Disputes](https://docs.stripe.com/revenue-recognition/methodology/refunds-and-disputes) page.\n\n### External transactions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can track revenue collected outside of Stripe using invoices. Configure the invoice as you would any other, and then mark the invoice as paid either directly in the Dashboard, or through the `paid_out_of_band` option in the API.\n\nInvoices marked as paid outside of Stripe contribute not to the cash account, but rather to the external asset account.\n\n#### Caution\n\nIf you’d like to consolidate your financial data from outside Stripe onto Revenue Recognition, review the [Data import](https://docs.stripe.com/revenue-recognition/data-import) page.\n\n### Multi-currency![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf your business handles transactions in multiple currencies, accurately recognizing revenue can be complicated.\n\nRevenue Recognition processes transactions and generates journal entries based on your account’s settlement currencies. Transactions with presentment currencies that aren’t supported as settlement currencies are automatically converted to your account’s default settlement currency.\n\nFor payments and paid invoices, we use the exchange rate for the actual money movement (that is, reflected on the balance transaction). If you incur a time delay between issuing a bill (for example, an invoice) and it getting paid, the difference in amounts because of changing exchange rates between the two times is added to the FxLoss account.\n\nFor more details and examples on how Revenue Recognition handles multiple currencies, review the [Multi-currency](https://docs.stripe.com/revenue-recognition/methodology/multi-currency) page.\n\n### Data availability ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nRevenue Recognition computes your data twice daily, at 0:00am UTC and at 12:00pm UTC.\n\nThe data processed at 0:00am UTC encompasses account activity from the prior day’s 12:00pm to that day’s 11:59pm UTC. The 12:00pm UTC update covers activity from 0:00am to 11:59am UTC of the same day.\n\nIt can take 16-72 hours to process the data. Users in time zones far from UTC might notice slight delays in reports because late-day activity in PST corresponds to early hours of the following day in UTC.\n\nAs an example, you might have account activity occurring on August 1, 2023, from 0:00 am to 11:59 am UTC. You can expect to see this activity reflected in the Revenue Recognition reports by August 4, 2023, at 12:00 pm UTC. Similarly, you can access reports for activity from 12:00 pm to 11:59 pm UTC on August 1, 2023 by August 5, 2023, at 0:00 am UTC.\n\n## Journal entries![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEvery billing activity in Stripe generates a set of journal entries. A journal entry is a record of a transaction. Each journal entry consists of a debit and a credit account. For example, an entry which finalizes an invoice would debit AccountsReceivable and credit DeferredRevenue. Paying an invoice would debit Cash and credit AccountsReceivable.\n\nThese entries may occur in asset, liability, equity, expense, or revenue accounts. You can learn more about the definitions of each account that will appear in a journal entry under our [Chart of accounts](https://docs.stripe.com/revenue-recognition/methodology#chart-of-accounts) section.\n\nThe table below shows the applicable billing activities for common journal entries. You can export journal entries to CSV using the debits and credits report, which you can find in the [Reports tab in the Dashboard](https://dashboard.stripe.com/revenue-recognition). In addition, there are options to download debits and credits reports by the event type, which provide a brief description of the recorded event, making it easier to understand the nature of each journal entry.\n\n#### Caution\n\nThe following table isn’t the complete set of entries. We’ll be periodically updating the entries. If there’s a specific entry that you require assistance with, please [create a ticket](https://support.stripe.com/contact/email?topic=financial_reports) on our support page.\n\n| Debit | Credit | Definition |\n| --- | --- | --- |\n| AccountsReceivable | DeferredRevenue | Invoice being finalized |\n|     | UnbilledAccountsReceivable | Unbilled invoice item being invoiced |\n|     | PassthroughFees | Finalize an invoice with passthrough fees |\n|     | TaxLiability | Finalize an invoice with tax |\n| BadDebt | AccountsReceivable | Mark an invoice as uncollectible |\n|     | PendingCash | Mark an invoice with a pending ACH as uncollectible |\n|     | Recoverables | Mark an invoice which is partially paid with customer balance as uncollectible |\n| Cash | AccountsReceivable | Invoice is paid |\n|     | CustomerBalance | Paying for a negative customer balance |\n|     | Exclusion | Cash is excluded |\n|     | PendingCash | ACH paying invoice is confirmed |\n|     | Recoverables | Winning a dispute for amounts that were previously adjusted from deferred revenue balance |\n| ConnectTransferLoss | Cash | Loss from a transfer |\n| CreditNotes | AccountsReceivable | Prepaid credit note is issued on an unpaid invoice |\n|     | CustomerBalance | Post paid credit note credits customer balance |\n|     | ExternalCustomerBalance | Post paid credit note credits external customer balance |\n| CustomerBalance | CustomerBalanceAdjustments | Reduce the amount owned by the customer |\n| CustomerBalanceAdjustments | CustomerBalance | Increase the amount owned by the customer |\n| DeferredRevenue | Cash | Caused by Refunds and Disputes |\n|     | Revenue | Revenue is recognized |\n| ExternalAsset | AccountsReceivable | Mark an invoice as paid outside of Stripe |\n| Refunds | Cash | Refund |\n| TaxLiability | CustomerBalance | Credit note on an invoice with tax, and it credits customer balance |\n|     | ExternalCustomerBalance | Credit note on an invoice with tax, and it credits external customer balance |\n| UnbilledAccountsReceivable | Revenue | Revenue recognized on unbilled invoice item |\n| UnbilledVoids | UnbilledAccountsReceivable | Unbilled invoice item is deleted |\n| Voids | AccountsReceivable | Void an invoice |\n|     | BadDebt | Void an uncollectible invoice |\n|     | CustomerBalance | Void an invoice partially paid with customer balance |\n\nThe activities above are all based on positive amounts. It is important to note that these billing activities can be reversed. These reverse activities occur when activities are triggered on negative invoice line item amounts.\n\n## Negative Line Item![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nA negative line item occurs when the value of the line item becomes higher than the amount it is paid for. This occurs typically during a subscription downgrade or upgrade when the product tier changes.\n\nHere is an example of journal entries which contains a negative line item caused by a downgrade:\n\n*   On April 1, the invoice is generated for a monthly subscription worth $90 USD and the customer pays for it.\n*   On April 21, the customer requests a downgrade of their service to a $30 USD subscription. This results in 2 unbilled line items for the remaining time of the subscription.\n    *   il\\_1 is for the remaining time on new plan worth $10\n    *   il\\_2 is for the remaining time of old plan worth $-30\n*   On May 1, the invoice is generated containing the line items generated by the downgrade as well for the new line item, il\\_3, representing the month of May. The customer pays for the invoice on the same day.\n*   On May 4, the customer requests a full refund on the invoice for May, resulting in full refunds on the line item created by the downgrade as well as the new line item for May. We process the refund.\n\n| Date | Debit | Credit | Amount | Line Item |\n| --- | --- | --- | --- | --- |\n| 2022-04-21 | UnbilledAccountsReceivable | Revenue | $10 | il\\_1 |\n|     | Revenue | UnbilledAccountsReceivable | $30 | il\\_2 |\n| 2022-05-01 | AccountsReceivable | DeferredRevenue | $30 | il\\_3 |\n|     | Cash | AccountsReceivable | $30 | il\\_3 |\n|     | DeferredRevenue | Revenue | $30 | il\\_3 |\n|     | AccountsReceivable | UnbilledAccountsReceivable | $10 | il\\_1 |\n|     | Cash | AccountsReceivable | $10 | il\\_1 |\n|     | UnbilledAccountsReceivable | AccountsReceivable | $30 | il\\_2 |\n|     | AccountsReceivable | Cash | $30 | il\\_2 |\n| 2022-05-04 | Refunds | Cash | $10 | il\\_1 |\n|     | Cash | Refunds | $30 | il\\_2 |\n|     | Revenue | Cash | $30 | il\\_3 |",
    "title": "Revenue Recognition methodology | Stripe Documentation",
    "description": "Learn how Revenue Recognition works out of the box within Stripe.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/pricing",
    "markdown": "# Stripe DocumentationThe Stripe Docs logo\n\n## Pricing\n\n## Learn about fees and pricing tiers for Revenue Recognition.\n\nStripe charges a fee for every payment that we process. To see what fees we charged, read the [fees report](https://dashboard.stripe.com/balance?type=stripe_fee), which Stripe updates daily. Some fees for line items might take a few days to appear in the report.\n\nThe following table explains Revenue Recognition fees.\n\n| Situation | Revenue Recognition fees charged |\n| --- | --- |\n| **Successful transactions** | Stripe applies the fee only when a payment succeeds (for example, when an invoice is paid or when a one-time payment is made). |\n| **Transactions processed by Stripe** | Stripe calculates the fee based on the volume processed, rather than the volume recognized. If a user paid 120 USD for an annual subscription on December 1, Stripe calculates the fee based on the 120 USD volume in December, rather than the 10 USD recognized in December. |\n| **Refunded transactions** | If you refund the corresponding payment, Stripe won’t refund the Revenue Recognition fee. |\n| **Excluded transactions** | Stripe charges a fee for all transactions we process, which means you incur a fee even if you exclude a transaction from Revenue Recognition using [custom rules](https://docs.stripe.com/revenue-recognition/rules). The transaction still counts toward your volume because Stripe successfully processed the transaction. |\n| **Voided transactions** | If you void an invoice, it won’t appear in your monthly volume and Stripe won’t charge the Revenue Recognition fee. |\n\n## Fees for multiple settlement currencies![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEach currency has an [equivalent threshold](https://stripe.com/revenue-recognition#pricing). If you have multiple settlement currencies, the combined percentage of thresholds met determines the final fee tier. For each currency, Stripe computes the percentage of volume to the currency’s volume threshold. We call this _percentage-to-threshold volume_. If the total percentage-to-threshold-volume is more than 100, you qualify for a lower-priced tier.\n\nTo demonstrate, see the following two example scenarios.\n\n#### Scenario 1![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe total percentage-to-threshold-volume is 82%, which means you don’t qualify for the discount.\n\n| Currency | Merchant volume | Threshold volume | Percentage-to-threshold volume |\n| --- | --- | --- | --- |\n| USD | 80,000 | 100,000 | 80% |\n| GBP | 1,000 | 50,000 | 2%  |\n\n#### Scenario 2![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe total percentage-to-threshold-volume is 120%, which means you qualify for the discount.\n\n| Currency | Merchant volume | Threshold volume | Percentage-to-threshold volume |\n| --- | --- | --- | --- |\n| USD | 80,000 | 100,000 | 80% |\n| GBP | 20,000 | 50,000 | 40% |\n\n## Features without fees![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe doesn’t charge fees for:\n\n*   [Rules](https://docs.stripe.com/revenue-recognition/rules)\n*   [Reports](https://docs.stripe.com/revenue-recognition/reports)\n*   [Accounting period controls](https://docs.stripe.com/revenue-recognition/accounting-period-control)\n*   [Data export](https://docs.stripe.com/revenue-recognition/api)",
    "title": "Pricing | Stripe Documentation",
    "description": "Learn about fees and pricing tiers for Revenue Recognition.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/connect",
    "markdown": "# Revenue Recognition for Connect platforms\n\n## Revenue Recognition for Connect platformsBeta\n\n## Learn how Revenue Recognition works with Connect platforms.\n\nYou can collect application fees in three ways: [destination charges](https://docs.stripe.com/connect/destination-charges), [direct charges](https://docs.stripe.com/connect/direct-charges), and [separate charges and transfers](https://docs.stripe.com/connect/separate-charges-and-transfers).\n\nCreate destination charges on your platform account to take fees, then transfer remaining funds to your connected accounts. Revenue Recognition recognizes the revenue from the application fees.\n\nCreate direct charges to make charges directly on the connected account and take fees in the process. Revenue Recognition recognizes the revenue from the application fees.\n\nCreate separate charges and transfers to make charges on your platform account on behalf of connected accounts, perform transfers separately, and retain funds in the process. Revenue Recognition recognizes the revenue from the retained funds.\n\nDestination charges are available to all users. If you’re interested in using Revenue Recognition for direct charges or separate charges and transfers, please [create a ticket](https://support.stripe.com/contact/email?topic=financial_reports) on our support page.",
    "title": "Revenue Recognition for Connect platforms | Stripe Documentation",
    "description": "Learn how Revenue Recognition works with Connect platforms.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/methodology/multi-currency",
    "markdown": "# Revenue Recognition with multiple currencies\n\n## Learn how Revenue Recognition works with multiple currencies.\n\nTwo types of currencies are important for the purpose of revenue recognition—presentment currencies and settlement currencies. Presentment currencies are the currencies that your customers use to pay, settlement currencies are the currencies that you receive payment in.\n\nFor all transactions with presentment currencies matching one of your settlement currencies, Revenue Recognition processes journal entries in that currency directly. In this case, no currency conversion takes place because you can receive payment in that currency directly. Transactions with presentment currencies that aren’t supported as a settlement currency are automatically converted to the default settlement currency for your Stripe account.\n\nPayments and paid [invoices](https://docs.stripe.com/api/invoices \"invoices\") use the exchange rate for the actual money movement (that is, what’s reflected on the balance transaction) for revenue recognition. For example, if you collected 10 EUR from a customer that settled in your account as 12 USD, Revenue Recognition uses 12 USD as the transaction amount.\n\nOne-time payments and invoices that are paid immediately when they finalize don’t incur exposure to fluctuating exchange rates or foreign exchange gains or losses.\n\n## FX loss![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nHowever, sometimes an invoice is finalized first, and paid later. In this case, the exchange rate may have changed between finalization and payment, creating a need to track gains and losses because of foreign exchange.\n\nFor revenue recognition purposes (for example, calculating accounts receivable), any activity that gets booked before an invoice is paid uses an estimated exchange rate at the time the invoice finalizes. The difference between the estimated exchange rate and the actual exchange rate, if any, is added to the FxLoss account.\n\nIn this example, the exchange rate changes between when the invoice finalizes and when it’s paid—and assumes your account settles in USD, but the customer is paying in EUR.\n\n*   On January 1, an invoice finalizes for 30 EUR. The EUR to USD exchange rate is 1.20\n*   On February 1, the customer pays the invoice for 30 EUR. The EUR to USD exchange rate is 1.10\n\nBecause of the change in exchange rate, we expected to receive 36 USD at the time the invoice finalized, but we only received 33 USD when it was paid, resulting in a net FX loss of 3 USD.\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivables | +36.00 | \\-36.00 |\n| Revenue | +36.00 |     |\n| Cash |     | +33.00 |\n| FxLoss |     | +3.00 |\n\n## FX Loss from refunds and disputes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFxLoss can occur whenever you have a time delay between two operations, which could happen when a payment gets refunded later.\n\nIn this example, the exchange rate changes between a one time payment and when it gets refunded—and assume your account settles in USD, and the customer is paying in EUR.\n\n*   On January 1, the customer makes a one time payment for 30 EUR. The EUR to USD exchange rate is 1.20.\n*   On February 1, they receive a refund for 30 EUR. The EUR to USD exchange rate is 1.10\n\nBecause of the change in exchange rate, you received 36 USD, but refunded only 33 USD, resulting in a net FX gain of 3 USD.\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| Revenue | +36.00 |     |\n| Cash | +36.00 | \\-36.00 |\n| Refunds |     | +33.00 |\n| FxLoss |     | \\-3.00 |",
    "title": "Revenue Recognition with multiple currencies | Stripe Documentation",
    "description": "Learn how Revenue Recognition works with multiple currencies.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/reports",
    "markdown": "# Revenue Recognition reports | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about Revenue Recognition reports.\n\nRevenue Recognition automatically generates reports that you can view in the Stripe Dashboard and export as CSV files. These reports include key information like revenue and deferred revenue. They’re available in both aggregate views for high-level analysis, and detailed views so you can validate data.\n\n## Integration requirements ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nRevenue Recognition assumes that you’ve properly modeled your business. This includes:\n\n*   Modeling subscriptions using [products and prices](https://docs.stripe.com/products-prices/overview), and [customers](https://docs.stripe.com/billing/customer).\n*   Setting taxes using the [default\\_tax\\_rates](https://docs.stripe.com/api/subscriptions/object#subscription_object-default_tax_rates) attribute, not as line items.\n*   Setting discounts using the [discount](https://docs.stripe.com/api/subscriptions/object#subscription_object-discount) object, not as [invoice](https://docs.stripe.com/api/invoices \"invoices\") items.\n\n#### Caution\n\nRevenue recognition requirements vary based on a number of factors, including the location of your business and the goods and services that you sell. You need to make sure that you understand and comply with the requirements applicable to your business, and that you model your business accordingly.\n\n## Dashboard ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe Revenue Recognition section of your Dashboard provides high-level information regarding the operations and financial health of your business. It includes [graphs for recognized revenue and deferred revenue](https://dashboard.stripe.com/revenue-recognition), a [monthly summary](https://dashboard.stripe.com/revenue-recognition), and a [revenue waterfall report](https://dashboard.stripe.com/revenue-recognition/accounting-reports).\n\nThe Revenue Recognition section is also where you can manage your Stripe integration, such as [uploading your revenue data](https://dashboard.stripe.com/revenue-recognition/data-import), [defining custom rules](https://dashboard.stripe.com/revenue-recognition/rules) on how to treat your revenue, and [mapping to the chart of accounts](https://docs.stripe.com/revenue-recognition/chart-of-accounts) that you use in your general ledger.\n\nYou can download any accounting report or statement you’re viewing by clicking **Download**. Below is a list of the different report formats available to you for download as a CSV file:\n\n| Report format | Description |\n| --- | --- |\n| **Summary** | This report provides a summary of revenue recognition on your account for the selected period. |\n| **Product** | This report provides a detailed view of revenue recognition on your account over the selected period, organized by product. |\n| **Price** | This report provides a detailed view of revenue recognition on your account over the selected period, organized by price. It can include information such as pricing metadata and pricing intervals. |\n| **Customer** | This report provides a detailed view of revenue recognition on your account over the selected period, organized by customer. It can include information such as customer name, email, and address. |\n| **Invoice** | This report provides a detailed view of revenue recognition on your account over the selected period, organized by invoice. It can include information such as charges, refunds, and dispute IDs. |\n| **Line item** | This report provides a detailed view of revenue recognition on your account over the selected period, organized by line item. It can include information at the granularity of a line item (such as charges, refunds, and dispute IDs). |\n| **Metadata** | This report provides a customized summary of revenue recognition on your account for the selected period, grouped by the user selected metadata object type and key. This report supports grouping by charge, customer, invoice, invoice item, product, or subscription metadata. Learn more about metadata [here](https://docs.stripe.com/api/metadata). |\n| **Event type** | This report is available in the debits and credits reports. It provides a detailed view of revenue recognition on your account over the selected period, organized by event type. The event type provides a brief description of the recorded event, making it easier to understand the nature of each journal entry. |\n| **Invoice event type** | This report is available in the debits and credits reports. It provides a detailed view of revenue recognition on your account over the selected period, organized by invoice and event type. It can include information such as charges, refunds, and dispute IDs. |\n| **Line item event type** | This report is available in the debits and credits reports. It provides a detailed view of revenue recognition on your account over the selected period, organized by line item and event type. It can include information at the granularity of a line item (such as charges, refunds, and dispute IDs). |\n\n#### Caution\n\nRevenue Recognition generates reports from transactions processed by Stripe. Expect a 72 hour delay before the data displays in the Dashboard.\n\nAlso, all report information is accessible only after you [import the data](https://docs.stripe.com/revenue-recognition/data-import).\n\n### Revenue graphs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe revenue graphs in the Dashboard provide a high-level view of your business by displaying revenue activity over time. The recognized revenue graph shows your net recognized revenue and the deferred revenue graph shows your ending balance per month.\n\nThe monthly and daily charts differentiate between open and closed accounting periods using colors. The figures continue to change until the accounting period closes. Toggling to the daily view provides a day-by-day snapshot of recognized and deferred revenue for the selected month. Revenue from metered billing is recognized in full when invoices finalize, or when the accounting period closes.\n\n### AR aging graphs ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe accounts receivable (AR) aging graphs in the Dashboard provide a high-level view of your accounts receivable activity over time. Use this information to understand the financial health of your customers. The balance graph shows the outstanding invoice amounts for the specified periods. The summary table shows unpaid invoice amounts and categorizes them by how long the invoices have been outstanding for the specified period.\n\n### Monthly summary ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe [monthly summary](https://docs.stripe.com/revenue-recognition/reports/monthly-summary) provides a detailed breakdown of activity for the last complete month. Use this information to understand how your activity affected revenue and to book journal entries. You can also see activity that contributed to your net revenue. For example, you can see the portions of new billings that you recognized, and contra revenue items. This section also lists changes to deferred revenue based on your activity, like portions of new billings that you haven’t recognized and contra revenue items.\n\nThe monthly summary only shows details if you had activity. For example, if you don’t have any contra revenue, the monthly summary doesn’t include it.\n\n### Revenue waterfall ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe [revenue waterfall](https://docs.stripe.com/revenue-recognition/reports/waterfall), sometimes called a revenue schedule chart, displays expected recognizable revenue over time. Use this to understand how activity from each period affects revenue in future periods.\n\nThis report shows expected revenue amounts based on historical billings. It doesn’t model future billings and it doesn’t predict future revenue from those potential billings. The expected future revenue amounts change as you add future billings.\n\n### CSV reports ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can download reports as a CSV file at any time. To do this:\n\n1.  Click **Download** next to the report.\n2.  If applicable, select the report format.\n3.  Choose the columns you want to include in the report.\n4.  Click **Download**.\n\nThe reports you can download include:\n\n| Report | Description |\n| --- | --- |\n| **[Income statement](https://docs.stripe.com/revenue-recognition/reports/income-statement)** | Detailed revenue and contra revenue breakdown by month |\n| **Balance sheet** | Detailed balance sheet account breakdown by month |\n| **Debits and credits** | Monthly debit and credit journal entries shown at these levels: summary, product, price, customer, invoice, line item, metadata, event type, invoice event type, and line item event type |\n| **Accounts receivable aging** | Outstanding invoice amounts grouped into age buckets shown at these levels: summary, product, price, customer, invoice, line item, and metadata |\n| **Corrections** | Monthly correction entries shown at these levels: summary, product, price, customer, invoice, line item, and metadata |\n\nThe [income statement](https://docs.stripe.com/revenue-recognition/reports/income-statement) report shows revenue, contra revenue, expenses, gains, and losses. Contra revenue adjustments are deductions from gross revenue. Applying the contra revenue to your gross revenue results in your net income. Use this report to better understand your net revenue and determine how you want to track contra revenue items.\n\nThe balance sheet report shows the beginning and ending balances for accounts like deferred revenue, accounts receivable, cash, and so on. You can use this report to understand overall inflows and outflows to these accounts, as well as how revenue activity ties to cash.\n\nThe accounts receivable aging report consolidates outstanding invoice amounts and groups them into age ranges: not yet due, 1-30 days, 31-60 days, 61-90 days, 91-120 days, and over 120 days. The report rounds up the ranges (for example, an invoice overdue by 30.5 days falls into the 31-60 days range). You can use this report to understand your collections performance and identify customers with outstanding invoices that are potentially collectible.\n\nThe corrections report displays corrected ledger entries, ensuring the accuracy and transparency of your accounting data. Corrections occur when changes are made to ledger entries in closed accounting periods. These changes are due to:\n\n*   [Data import](https://docs.stripe.com/revenue-recognition/data-import) for past transactions\n*   Adding, updating, and deleting [chart of accounts mappings](https://docs.stripe.com/revenue-recognition/chart-of-accounts) or [rules](https://docs.stripe.com/revenue-recognition/rules)\n*   Modifying [revenue controls](https://docs.stripe.com/revenue-recognition/revenue-controls)\n*   Bug fixes introduced by Revenue Recognition system upgrades\n\nTo allow corrections to backdate to their original periods, reopen the closed accounting periods with [accounting period control](https://docs.stripe.com/revenue-recognition/accounting-period-control).",
    "title": "Revenue Recognition reports | Stripe Documentation",
    "description": "Learn about Revenue Recognition reports.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/revenue-contracts",
    "markdown": "# Revenue Recognition contracts | Stripe DocumentationThe Stripe Docs logo\n\n## Revenue Recognition contractsBeta\n\n## Learn how to configure revenue contracts and model enterprise B2B sales contracts in Stripe Revenue Recognition.\n\nThe revenue contracts feature facilitates the representation of enterprise sales-led contracts in [Revenue Recognition](https://dashboard.stripe.com/revenue-recognition). It allows you to customize revenue schedules using custom performance obligations that are decoupled from billing periods. Additionally, you can track key metrics at a contract level and improve your financial insights.\n\n## Customize revenue schedules ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nRevenue contracts enables the creation of custom contract items that dictate how revenue is recognized instead of invoice line items. It allows you to attach billing models (for example, invoices, subscriptions, payments) to the contract used as payment collection containers.\n\n### Example ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nGiven a 2-year B2B contract with monthly billing, you can create a contract item for the 2-year period:\n\n| Contract Item |     |\n| --- | --- |\n| Amount | 10000 |\n| [Price](https://docs.stripe.com/api/prices) | price\\_1 |\n| Period | Jan 1, 2022 - Jan 1, 2024 |\n\nYou can then attach a transaction/billing model to the contract to be used for payment allocation:\n\nGiven this contract setup, Revenue Recognition can augment reports by incorporating non-GAAP accounts like contract assets and deferred revenue. In turn, this enables us to elevate our metrics as the contract undergoes monthly billing.\n\n## Track contract-level metrics ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you open up a revenue contract in Revenue Recognition, you can track high-level metrics across a group of contract items and transactions such as:\n\n*   Total contract value\n*   Annual contract value\n*   Billing to date\n*   Revenue to date\n*   Future schedule billings\n*   Unbilled deferred revenue\n\n## Integration ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n### Salesforce CPQ Connector ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can import all your orders and contracts generated in Salesforce using the [Stripe Billing Connector for Salesforce CPQ](https://docs.stripe.com/connectors/salesforce-cpq/overview). When this connection is set up, you can manage Stripe Billing subscriptions and revenue contracts associated with your Salesforce orders.\n\n### API ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWe’re working on a direct API solution for the creation and management of revenue contracts.",
    "title": "Revenue Recognition contracts | Stripe Documentation",
    "description": "Learn how to configure revenue contracts and model enterprise B2B sales contracts in Stripe Revenue Recognition.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/overrides",
    "markdown": "# Revenue Recognition transaction overrides | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to make manual corrections to your Revenue Recognition reports.\n\n#### Warning\n\nStripe will soon deprecate the transaction override feature. Use the [data import feature](https://docs.stripe.com/revenue-recognition/data-import) instead.\n\nIt’s possible for the information on a transaction to become inaccurate for revenue recognition purposes. This can happen for a number of reasons, such as human error or evolving terms of a sale. The transaction override feature allows you to make corrections, regardless of when you created the transaction.\n\n## Creating a transaction override ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can find the transaction overrides section at the bottom of the Revenue Recognition page.\n\n![Add transaction override modal](https://b.stripecdn.com/docs-statics-srv/assets/transaction-override-add-modal.8d198b30d4dc9c1a53fa374d4d647550.png)\n\n[](#model)\n\nTo get started, enter the `id` of the transaction to override. Stripe supports overrides on the following transaction models:\n\nYou can find the `id` of a transaction in the Dashboard or using the API. If the transaction occurred in a previous month, you can also find it in the following report downloads when formatted by [invoice](https://docs.stripe.com/api/invoices \"invoices\"):\n\n*   Invoice Statement\n*   Debits and credits\n*   Corrections\n\n[](#override)\n\nThe following override types are available:\n\n| Override Type | Description |\n| --- | --- |\n| Recognition period start and end dates | The start date and end dates correspond to when the service started and ended. The revenue of this transaction is recognized within this period. Start and end dates can have the same value, in which case revenue is recognized all at once. Read more about [how transaction overrides work](https://docs.stripe.com/revenue-recognition/overrides#how-transaction-overrides-work) below. |\n| Transaction exclusion | Excluding a transaction removes all records of it from revenue recognition. This only works for invoices that are either [voided](https://docs.stripe.com/invoicing/overview#void) or [manually marked as paid](https://docs.stripe.com/invoicing/overview#paid), and have no customer balance applied to them. |\n\n## How transaction overrides work ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can create transaction overrides for transactions that occurred in both past accounting periods and in the current accounting period. If the transaction occurred in a past accounting period, corrections are implemented prospectively at the end of the current accounting period. You can view these corrections in the reports for the current period after it closes.\n\nIf the overridden transaction occurred in the current accounting period, it’s not reflected as a correction in the current period. Instead, it’s recognized using the new attributes from the override.\n\nCreating a transaction override doesn’t alter the attributes of the transaction model being overridden.\n\nYou can make changes to a transaction override by deleting the override and creating a new one. If you delete an override that impacts transactions in closed [accounting periods](https://docs.stripe.com/revenue-recognition/accounting-period-control), the first open accounting period will reflect the effect of the deletion. If the deleted override impacts transactions in open accounting periods, the effect applies directly to those accounting periods.\n\n#### Note\n\nIf you have any feedback on how we can improve transaction overrides to better suit your accounting needs, visit https://support.stripe.com/.",
    "title": "Revenue Recognition transaction overrides | Stripe Documentation",
    "description": "Learn how to make manual corrections to your Revenue Recognition reports.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/reports/audit-numbers",
    "markdown": "# Audit your numbers | Stripe DocumentationThe Stripe Docs logo\n\n## Use the Stripe Dashboard to examine the details of your revenue numbers.\n\nYou can get a detailed view of accounting numbers from the Dashboard either by customers or by transactions for:\n\n*   Each number in the [monthly summary report](https://docs.stripe.com/revenue-recognition/reports/monthly-summary)\n*   Each number in the [revenue waterfall report](https://docs.stripe.com/revenue-recognition/reports/waterfall)\n*   Each number in the AR aging summary report\n*   A customer\n*   An invoice\n\n## Monthly summary report ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nChoose a month in [the summary section](https://dashboard.stripe.com/revenue-recognition) to get a report of the activity that occurred during that time.\n\nClick an amount in the report to see the details of this number broken down into a list of customers and their total amount for the month.\n\nIn the customer list, click a customer name to see all their transactions for the month.\n\n## Revenue waterfall report ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSelect a range of dates in [the waterfall section](https://dashboard.stripe.com/revenue-recognition/accounting-reports) (by month-year) to see the distribution of revenue across one or more accounting periods.\n\nClick an amount in the report to see the details of this number broken down into a list of customers and their total.\n\nIn the customer list, click a customer name to see all their transactions for the specified dates.\n\n## AR aging summary report ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSpecify a time period in [the AR aging summary section](https://dashboard.stripe.com/revenue-recognition) to see unpaid invoice balances along with the length of time the invoices have been outstanding (age).\n\nClick an amount in the table to see the details of this number broken down into a list of customers or invoices. From the customer list, select a customer to see all their invoices for the specified time period and age. From the invoice list, select an invoice to see its invoice details.\n\n## Customers ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSelect a customer from the [Customers view](https://dashboard.stripe.com/customers) in the Dashboard.\n\nIn the **Invoices** section, click **View revenue recognition** to see the customer’s accounting details, which include:\n\n*   The total balance for each account\n*   The details on each account across the accounting periods\n\n## Invoices ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nSelect an invoice from the [Invoices view](https://dashboard.stripe.com/invoices) in the Dashboard.\n\nChoose **More** > **View revenue recognition** to see the invoice’s accounting details, which include:\n\n*   The total balance for each account\n*   The details on each account across the accounting periods",
    "title": "Audit your numbers | Stripe Documentation",
    "description": "Use the Stripe Dashboard to examine the details of your revenue numbers.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/rules",
    "markdown": "# Revenue Recognition rules | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about Revenue Recognition rules.\n\nConfigure [Revenue Recognition rules](https://dashboard.stripe.com/revenue-recognition/rules) to define revenue treatments specific to your business.\n\nStripe Revenue Recognition allows you to configure custom rules to handle revenue treatments specific to your business needs. For example, you can configure a rule to:\n\n*   **Categorize** an [invoice](https://docs.stripe.com/api/invoices \"invoices\") line item as a tax or fee\n*   **Book** a transaction amount or invoice line item as a passthrough fee\n*   **Exclude** transactions from specific customers or test invoices\n*   **Amortize** revenue over a specified time period relative to payment or invoice finalization date\n*   **Recognize** revenue after a specific time period to model a future fulfillment schedule\n*   **Allocate** multiple revenue treatments to a single transaction amount\n\nRules are typically applied to reports 24-48 hours after setting them. Rules that you apply to a report have an `active` status. Rules that you haven’t applied to a report remain in a `processing` status.\n\n## Default rules![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Revenue Recognition provides a set of default rules to model the [methodology](https://docs.stripe.com/revenue-recognition/methodology) for handling common Stripe resources.\n\n*   For invoice line items with service periods, the line item amount amortizes evenly over its service period. If a period isn’t set on an invoice line item, the amount is recognized entirely when the invoice finalizes.\n*   Other payments not made through an invoice are recognized immediately upon payment if no service period or fulfillment information exists, or by the [imported](https://docs.stripe.com/revenue-recognition/data-import) service period or fulfillment data.\n\n![Default rules](https://b.stripecdn.com/docs-statics-srv/assets/default-rules.1cdaa035a358fec4294971ba23bddaa1.png)\n\n## Custom rules![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCustom rules override Stripe’s default revenue treatment behaviors where applicable and you can add or modify them on the Stripe Dashboard.\n\nYou can apply rules to:\n\n*   [Products](https://docs.stripe.com/api/products \"Products\")\n*   [Customers](https://docs.stripe.com/api/customers \"Customers\")\n*   [Invoice line items](https://docs.stripe.com/api/invoices/line_item)\n*   [Other payments](https://docs.stripe.com/api/charges) (that is, payments that aren’t associated with invoices)\n\nSee how to [create a rule and define revenue treatments](https://docs.stripe.com/revenue-recognition/rules/create-a-rule). You can also explore sample rules on tax treatment, pass-through fees, exclusion, and custom time periods.\n\n## Rule ordering and hierarchy![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEach transaction can only have one rule applied to it when processing revenue reports. In situations where a single transaction fits the “Apply-to” criteria for multiple rules, rule hierarchy determines which rule to apply to the transaction. The higher a rule is ranked on the list, the higher the priority it’s assigned.\n\nYou can rearrange the order of the rules by clicking **Change rule order** as shown below:\n\n![Rules](https://b.stripecdn.com/docs-statics-srv/assets/rules.076bd00821d7a78ec4d541afe8c9b669.png)\n\nAfter clicking **Change rule order**, you can reorder the rules to adjust their priorities.\n\n![Rule order](https://b.stripecdn.com/docs-statics-srv/assets/rule-order.6232b5130188f7e9b253d7f9d197e3f0.png)\n\n## Best practices for effectively maintaining your rules![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAs your business grows, it’s important to make sure you regularly maintain your rules to ensure the accuracy of your revenue reports. The following are some best practices to keep rules correct for your Revenue Recognition reports.\n\n**Know when to create a rule**\n\nWhen applied correctly, Stripe’s default rules and revenue treatment methodology for handling [subscription](https://docs.stripe.com/billing/subscriptions/creating \"subscriptions\") events accurately recognize and defer revenue for businesses who require more control over their unique use.\n\n**Regularly monitor rules to ensure they’re up-to-date**\n\nBilling models, customer types and edge cases can regularly change, and you should evolve your rules accordingly. To make sure that revenue treatments remain predictable, periodically check your rules so they’re up-to-date in terms of hierarchy and effective period.\n\n**Check if your accounting period is open or closed when new rules are applied**\n\nIf the effective period for a new rule overlaps with a closed accounting period, it generates corrections if the rules are retroactively applied to transactions from past (closed) accounting periods. If you want to avoid this, reopen your books by opening your accounting period prior to adding the rule.",
    "title": "Revenue Recognition rules | Stripe Documentation",
    "description": "Learn about Revenue Recognition rules.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/accounting-period-control",
    "markdown": "# Revenue Recognition accounting period control\n\n## Learn how to configure accounting periods for your Revenue Recognition.\n\nAccounting period control allows you to configure how to close accounting periods. You can either manually close the books with all checks and adjustments finished each month, or you can let Stripe automate closing the books.\n\nYou can also reopen past accounting periods using accounting period control. This is useful when you first start using Revenue Recognition because it allows you to make adjustments to past data without creating corrections in the current period. For example, when you apply [rules](https://docs.stripe.com/revenue-recognition/rules) to fit Revenue Recognition with your own business model, it’s likely to change the history of closed accounting periods. You can decide on whether to reopen the closed accounting periods or make adjustments in the current accounting period.\n\n## Setting accounting periods ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can find the accounting periods section on [the Revenue Recognition controls page](https://dashboard.stripe.com/revenue-recognition/controls).\n\n![Accounting periods controls](https://b.stripecdn.com/docs-statics-srv/assets/accounting_period_controls.fb8cf9f3b14df4f18c32afcf8c697779.png)\n\n[](#accounting-period-mode)\n\nTo get started, select the `mode` for your accounting periods. The default is `automatic`.\n\n| Mode | Descriptions |\n| --- | --- |\n| Automatic | Accounting periods automatically close at the end of each month. |\n| Manual | You control when to close the accounting periods. |\n\n[](#latest-closed-accounting-period)\n\nWhen you set `latest closed accounting period`, you close the selected accounting period along with all previous accounting periods, and you open all following periods. You can choose one of the periods in the past 24 months, and you can also choose `no closed accounting periods`. For example, when you choose the `latest closed accounting period` to be February 2021 in `manual` mode, the accounting periods looks like the following example:\n\n|     |     |\n| --- | --- | --- | --- | --- | --- | --- |\n| Before Jan 2021 | Jan 2021 | Feb 2021 | Mar 2021 | Apr 2021 | May 2021 | Jun 2021 |\n| Closed | Closed | Closed | Open | Open | Open | Open |\n\n## How accounting period control works ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n**Controlling closing process for your accounting period cycle**\n\nAccounting period control allows you to configure the closing process with your own workflow for the accounting period cycle. You can choose the `manual` mode, and check all terms and fix the human errors before closing the accounting periods manually, or you can automate closing your Revenue Recognition book using the `automatic` mode.\n\n**Getting started with Revenue Recognition**\n\nIf you’re new to Revenue Recognition, use accounting period control to get started. For example, when you apply [rules](https://docs.stripe.com/revenue-recognition/rules) to fit Revenue Recognition with your own business model, you can set `manual` mode with `no closed accounting periods`. In this way, all the changes go into the original accounting periods, which can help you understand your books.\n\nYou can open accounting periods after setting [revenue recognition rules](https://docs.stripe.com/revenue-recognition/rules), unless you need to issue corrections. In that case, you must close the accounting period before setting any rules.\n\nAdjustments for accounting periods take 48-72 hours to complete. When completed, you can see the setting in monthly summary charts and CSV-only reports in the Dashboard. For example, when you choose the `latest closed accounting period` to be February 2021 in `manual` mode, the charts and reports look like the following example:\n\n![Revenue chart with manual mode and latest closed accounting period as February 2021](https://b.stripecdn.com/docs-statics-srv/assets/accounting-period-control-revenue-chart.d6ab06169fb7d15f27f2e7cfe5a2282e.png)\n\n![Income statement report with manual mode and latest closed accounting period as February 2021](https://b.stripecdn.com/docs-statics-srv/assets/accounting-period-control-income-statement-report.da2f6a5fb6491e4e4da58c115c7089f7.png)",
    "title": "Revenue Recognition accounting period control | Stripe Documentation",
    "description": "Learn how to configure accounting periods for your Revenue Recognition.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/examples",
    "markdown": "# Revenue Recognition examples | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about Revenue Recognition using some common examples.\n\nAfter reading the Revenue Recognition [overview](https://docs.stripe.com/revenue-recognition) and [methodology](https://docs.stripe.com/revenue-recognition/methodology) pages, use what you learned to review the examples below. Unless stated otherwise, the examples assume that revenue recognition takes place on a per-day basis. Stripe’s tooling recognizes revenue every millisecond but using a daily increment simplifies the calculations.\n\n## Monthly subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 15, at 00:00:00 UTC, a customer starts a monthly subscription that costs 31 USD.\n*   The subscription generates an [invoice](https://docs.stripe.com/api/invoices \"invoices\").\n*   The invoice finalizes and the customer pays 31 USD.\n\nIn this example, the invoice and revenue periods are from January 15, 2019 to February 14, 2019. The 31 USD is recognized across 17 days in January and 14 days in February. If you looked at the summary after January ends, you might see something like:\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +17.00 |\n| DeferredRevenue | +14.00 |\n\nThis means that recognized revenue increased by 17 USD for the days in January, and deferred revenue increased by 14 USD for revenue you expect to recognize in February.\n\n## Annual subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts an annual subscription that costs 365 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and the customer pays 365 USD.\n\nIn this example, the invoice and revenue periods are from 1/1/2019 to 12/31/2019. The 365 USD is recognized daily throughout the year. If you looked at the summary after March ends, you might see something like:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 |\n| --- | --- | --- | --- |\n| Revenue | +31.00 | +28.00 | +31.00 |\n| DeferredRevenue | +334.00 | \\-28.00 | \\-31.00 |\n\n## Monthly metered subscription ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThere are four types of [aggregate\\_usage](https://docs.stripe.com/api/prices/create#create_price-recurring-aggregate_usage), each of which has a different implication on how revenue is recognized.\n\n### Sum![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   On January 15, a customer subscribes to a monthly [metered](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing) subscription at 1 USD per unit, and with `aggregate_usage=sum`.\n*   On January 25, they use 15 units.\n*   On February 4, they use another 17 units.\n*   On February 14, the subscription generates an invoice of 32 USD.\n*   The invoice finalizes for 32 USD, but isn’t paid yet.\n\nIn this example, the invoice and revenue periods are from January 15, 2019 to February 14, 2019. Although the invoice isn’t generated until February 14, the 15 USD from January 25 still has to be recognized when the usage was reported. If you looked at the summary after January ends, you might see something like:\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +15.00 |\n| UnbilledAccountsReceivable | +15.00 |\n\nIf you looked at the summary after February ends and the invoice is yet to be paid, you might see something like:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| Revenue | +15.00 | +17.00 |\n| UnbilledAccountsReceivable | +15.00 | \\-15.00 |\n| AccountsReceivable |     | +32.00 |\n\n### Max![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   On January 15, a customer subscribes to a monthly [metered](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing) subscription at 1 USD per unit, and with `aggregate_usage=max`.\n*   On January 25, they use 17 units.\n*   On February 4, they use another 15 units.\n*   On February 14, the subscription generates an invoice of 17 USD.\n\nIn this example, the invoice and revenue periods are from January 15, 2019 to February 14, 2019. If you looked at the summary after January ends, you might see something like:\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +17.00 |\n| UnbilledAccountsReceivable | +17.00 |\n\nIf you looked at the summary after February ends and the invoice is yet to be paid, you might see something like:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| Revenue | +17.00 |     |\n| UnbilledAccountsReceivable | +17.00 | \\-17.00 |\n| AccountsReceivable |     | +17.00 |\n\nThe 15 units recorded on February 4 don’t impact revenue recognition because they’re not the max usage record.\n\n### Last during period![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   On January 15, a customer subscribes to a monthly [metered](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing) subscription at 1 USD per unit, and with `aggregate_usage=last_during_period`.\n*   On January 25, they use 17 units.\n*   On January 27, they use 10 units.\n*   On February 4, they use another 15 units.\n*   On February 14, the subscription generates an invoice of 15 USD.\n\nIn this example, the invoice and revenue periods are from January 15, 2019 to February 14, 2019. If you looked at the summary after January ends, you might see something like:\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +10.00 |\n| UnbilledAccountsReceivable | +10.00 |\n\nThe 17 units recorded on January 25 doesn’t have any impact on revenue recognition because it’s not the last usage record during the period at the end of Jan.\n\nIf you looked at the summary after February ends and the invoice is yet to be paid, you might see something like:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| Revenue | +10.00 | +5.00 (-10.00 + 15.00) |\n| UnbilledAccountsReceivable | +10.00 | \\-10.00 |\n| AccountsReceivable |     | +15.00 |\n\nThe 17 units recorded on January 25 and 10 units recorded on January 27 don’t have any impact on revenue recognition because they aren’t the last usage during the period.\n\n### Last ever![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   On January 15, a customer subscribes to a monthly [metered](https://docs.stripe.com/products-prices/pricing-models#usage-based-pricing) subscription at 1 USD per unit, and with `aggregate_usage=last_ever`.\n*   On January 25, they use 17 units.\n*   On January 27, they use 10 units.\n*   On February 4, they use another 15 units.\n*   On February 8, they use another 18 units.\n*   On February 14, the subscription generates an invoice of 18 USD.\n*   On March 14, the subscription generates another invoice of 18 USD.\n\nIn this example, the invoice and revenue periods are from January 15, 2019 to February 14, 2019. If you looked at the summary after January ends, you might see something like:\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +10.00 |\n| UnbilledAccountsReceivable | +10.00 |\n\nThe 10 units recorded on January 25 doesn’t have any impact on revenue recognition because it’s not the last usage record at the end of Jan.\n\nIf you looked at the summary after February ends, you might see something like:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| Revenue | +10.00 | +8.00 (-10.00 + 18.00) |\n| UnbilledAccountsReceivable | +10.00 | \\-10.00 |\n| AccountsReceivable |     | +18.00 |\n\nNow in the period of February 14 to March 14, because there’s no usage record within the period, we recognize 18 USD when the invoice happens. If you looked at the summary after March ends, you might see something like:\n\n| Account | Jan | Feb | Mar |\n| --- | --- | --- | --- |\n| Revenue | +10.00 | +8.00 (-10.00 + 18.00) | +18.00 |\n| UnbilledAccountsReceivable | +10.00 | \\-10.00 |\n| AccountsReceivable |     | +18.00 | +18.00 |\n\n## Upgrade ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On April 1, at 00:00 UTC, a customer starts a monthly subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes on April 1 and the customer pays 90 USD.\n*   On April 21 at 00:00 UTC, they upgrade to a monthly subscription that costs 120 USD.\n    *   Two unbilled invoice items are created to represent (1) -30 USD for the unused time of the previous plan and (2) 40 USD for the remaining time of the new plan.\n*   The next invoice includes the two unbilled invoice items and is finalized on May 1, at 00:00:00 UTC with 3 line items:\n    *   \\-30 USD for the unused time of the previous plan with the service period from April 21 at 00:00 UTC to May 1 at 00:00 UTC.\n    *   40 USD for the remaining time of the new plan with the service period from April 21 at 00:00 UTC to May 1 at 00:00 UTC.\n    *   120 USD for the service in May with the service period from May 1 at 00:00 UTC to June 1 at 00:00 UTC.\n\nIf you looked at the summary after May ends, you might see something like:\n\n| Account | Apr | May |\n| --- | --- | --- |\n| Revenue | +100.00 | +120.00 |\n| AccountsReceivable | +90.00 | +130.00 |\n| UnbilledAccountsReceivable | +10.00 | \\-10.00 |\n\n## Downgrade ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On April 1, at 00:00 UTC, a customer starts a monthly subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes on April 1 and the customer pays 90 USD.\n*   On April 21 at 00:00 UTC, they downgrade to a monthly subscription that costs 30 USD.\n    *   Two unbilled invoice items are created to represent (1) -30 USD for the unused time of the previous plan and (2) 10 USD for the remaining time of the new plan.\n*   The next invoice includes the two unbilled invoice items and is finalized on May 1, at 00:00:00 UTC with 3 line items:\n    *   \\-30 USD for the unused time of the previous plan with the service period from April 21 at 00:00 UTC to May 1 at 00:00 UTC.\n    *   10 USD for the remaining time of the new plan with the service period from April 21 at 00:00 UTC to May 1 at 00:00 UTC.\n    *   30 USD for the service in May with the service period from May 1 at 00:00 UTC to June 1 at 00:00 UTC.\n\nIf you looked at the summary after May ends, you might see something like:\n\n| Account | Apr | May |\n| --- | --- | --- |\n| Revenue | +70.00 | +30.00 |\n| AccountsReceivable | +90.00 | +10.00 |\n| UnbilledAccountsReceivable | \\-20.00 | +20.00 |\n\n## Customer credit balance ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 15, at 00:00:00 UTC, a customer starts a monthly subscription that costs 31 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes on January 15, at 00:00:00 UTC.\n*   The customer has -11 USD in its customer credit balance. Stripe automatically applies -11 USD to the invoice and adjusts the customer credit balance to 0 USD.\n*   The customer pays 20 USD on February 9.\n\nIn this example, the invoice and revenue periods are from 1/15/2019 to 2/14/2019. The 31 USD is recognized across 17 days in January and 14 days in February. If you looked at the summary after January ends, you might see something like:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivable | +20.00 | \\-20.00 |\n| Cash |     | +20.00 |\n| CustomerBalance | \\-11.00 |     |\n| Revenue | +17.00 | +14.00 |\n| DeferredRevenue | +14.00 | \\-14.00 |\n\nIn this scenario, the customer has an existing customer credit balance that’s used to pay the invoice. It’s also possible for a negative amount on an invoice to credit the customer credit balance, which is then used to pay the invoice. This often happens when a customer downgrades to a cheaper subscription. For example, assume that:\n\n*   A -31 USD invoice with one invoice line item finalizes on January 15, at 00:00:00 UTC.\n*   The service period for the -31 USD invoice line item is from January 15 00:00:00 UTC to February 15 00:00:00 UTC.\n*   Stripe automatically credits 31 USD to the customer credit balance and closes the invoice.\n\nThe -31 USD line item books a journal entry that debits DeferredRevenue and credits AccountsReceivable. When Stripe credits the customer credit balance, it books another journal entry that debits AccountsReceivable and credits CustomerBalance. In the summary at the end of January, you might see something like:\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivable |     |     |\n| Cash |     |     |\n| CustomerBalance | +31.00 |     |\n| Revenue | \\-17.00 | \\-14.00 |\n| DeferredRevenue | \\-14.00 | +14.00 |\n\nNotice that eventually the net revenue is -31 USD.\n\n## Refund ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and the customer pays 90 USD.\n*   On February 1, they receive a full refund.\n\nWhen you make a full refund:\n\n*   The customer receives cash.\n*   Recognized revenue is offset by contra revenue in the refunds account.\n*   Deferred revenue from the subscription that hasn’t been recognized is cleared.\n\nIn this example, the customer received one month of service, so they receive a 31 USD refund. The refund also decreases the cash balance in your Stripe account by 90 USD. At the time of the refund, there was 59 USD remaining in deferred revenue, so this is also cleared. If you viewed the summary after March ends, it might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 |\n| --- | --- | --- | --- |\n| Revenue | +31.00 |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |\n| Cash | +90.00 | \\-90.00 |     |\n| Refunds |     | +31.00 |     |\n\n## Partial refund ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and the customer pays 90 USD.\n*   On February 1, they receive a partial refund of 9 USD.\n\nWhen the partial refund is made:\n\n*   The customer receives 9 USD.\n*   Recognized revenue is proportionally offset by contra revenue in the refunds account.\n*   Deferred revenue from the subscription that hasn’t been recognized is also proportionally reduced.\n\nIn this example, the customer received one month of service, so 31 USD has been recognized. There is 59 USD remaining in deferred revenue. The partial refund of 9 USD is 10% of 90 USD. Therefore, the refunds account (part of contra revenue) is increased by 3.10 USD (10% of 31 USD), and deferred revenue is decreased by 5.90 USD (10% of 59 USD). If you viewed the summary after March ends, it might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | March 2019 |\n| --- | --- | --- | --- |\n| Revenue | +31.00 | +25.20 | +27.90 |\n| DeferredRevenue | +59.00 | \\-31.10 (= -25.20 + -5.90) | \\-27.90 |\n| Cash | +90.00 | \\-9.00 |     |\n| Refunds |     | +3.10 |     |\n\n## Void ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes, but the customer hasn’t paid yet.\n*   On February 1, you void the invoice.\n\nWhen you void the invoice:\n\n*   The accounts receivable account is cleared because we don’t expect to get paid.\n*   Recognized revenue is offset by contra revenue in the voids account.\n*   Deferred revenue from the subscription that hasn’t been recognized is cleared.\n\nIn this example, the customer received one month of service, so 31 USD in recognized revenue is voided. At the time of the invoice being voided, there was 59 USD remaining in deferred revenue, so this is also cleared. If you viewed the summary after March ends, it might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 |\n| --- | --- | --- | --- |\n| AccountsReceivable | +90.00 | \\-90.00 |     |\n| Revenue | +31.00 |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |\n| Voids |     | +31.00 |     |\n\n## Uncollectible ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes, but the customer hasn’t paid yet.\n*   On February 1, the invoice is marked as uncollectible.\n\nWhen the invoice is marked as uncollectible:\n\n*   The accounts receivable account is cleared because we don’t expect to get paid.\n*   Recognized revenue is offset by contra revenue in the bad debt account.\n*   Deferred revenue from the subscription that hasn’t been recognized is cleared.\n\nIn this example, the customer received one month of service, so 31 USD in recognized revenue becomes bad debt. At the time of the invoice being marked as uncollectible, there was 59 USD remaining in deferred revenue, so this is also cleared. If you viewed the summary after March ends, it might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 |\n| --- | --- | --- | --- |\n| AccountsReceivable | +90.00 | \\-90.00 |     |\n| Revenue | +31.00 |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |\n| BadDebt |     | +31.00 |     |\n\nAn uncollectible invoice might still be paid. When the invoice is paid, the bad debt account is cleared out using a part of the received cash amount. The remaining cash amount goes to the recoverables account. If the invoice is paid in April, the summary might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 | Apr 2019 |\n| --- | --- | --- | --- | --- |\n| AccountsReceivable | +90.00 | \\-90.00 |     |     |\n| Revenue | +31.00 |     |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |     |\n| BadDebt |     | +31.00 |     | \\-31.00 |\n| Cash |     |     |     | +90.00 |\n| Recoverables |     |     |     | +59.00 |\n\nAn uncollectible invoice might still be voided. When the invoice is voided, the bad debt account is cleared out and the contents are moved into the void account. If the invoice is voided in April, the summary might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 | Apr 2019 |\n| --- | --- | --- | --- | --- |\n| AccountsReceivable | +90.00 | \\-90.00 |     |     |\n| Revenue | +31.00 |     |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |     |\n| BadDebt |     | +31.00 |     | \\-31.00 |\n| Void |     |     |     | +31.00 |\n\n## Uncollectible invoice with applied customer credit balance ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 15 at 00:00:00 UTC, a customer starts a monthly subscription that costs 31 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes on January 15 at 00:00:00 UTC.\n*   The customer’s credit balance is -11 USD. Stripe automatically applies -11 USD to the invoice and adjusts the credit balance accordingly.\n*   On February 15, the invoice is marked as uncollectible.\n\nIn this example, the invoice and revenue periods are from January 15, 2019 to February 14, 2019. Stripe recognizes the 31 USD across 17 days in January and 14 days in February.\n\nStripe automatically offsets recognized revenue with the bad debt account if an invoice is set as uncollectible. With the customer’s 11 USD credit balance, Stripe considers 6 USD (11 x 17 / 31) as recognized revenue and 5 USD (11 x 14 / 31) as deferred revenue. The portion of paid deferred revenue is considered as a gain and booked in the recoverables account.\n\nThe summary after February end might look something like:\n\n| Account | Starting | Jan | Feb | Ending |\n| --- | --- | --- | --- | --- |\n| AccountsReceivable | 0.00 | +20.00 | \\-20.00 | 0.00 |\n| BadDebt | 0.00 |     | +11.00 | 11.00 |\n| CustomerBalance | 11.00 | \\-11.00 |     | 0.00 |\n| Recoverables | 0.00 |     | +5.00 | 5.00 |\n| Revenue | 0.00 | +17.00 |     | 17.00 |\n| DeferredRevenue | 0.00 | +14.00 | \\-14.00 | 0.00 |\n\nAs another example, you can increase the customer’s invoice due amount when there’s an outstanding balance (that is, they owe some amount to you). Consider the following:\n\n*   A 31 USD invoice with one invoice line item finalizes on January 15 at 00:00:00 UTC.\n*   The service period for the 31 USD invoice line item is from January 15 00:00:00 UTC to February 15 00:00:00 UTC.\n*   There is a customer credit balance of 10 USD. Because of this, Stripe adds that amount to the invoice making the outstanding balance be 0 USD.\n    *   This debits AccountsReceivable and credits CustomerBalance for 10 USD.\n*   Stripe marks the invoice as uncollectible on February 15.\n\nFor an uncollectible invoice, the portion of due customer credit balance isn’t collected. Because of this, it’s considered a negative gain and booked as a negative amount to the recoverables account.\n\nThe summary after February end might look something like:\n\n| Account | Starting | Jan | Feb | Ending |\n| --- | --- | --- | --- | --- |\n| AccountsReceivable | 0.00 | +41.00 | \\-41.00 | 0.00 |\n| BadDebt | 0.00 |     | +17.00 | 17.00 |\n| CustomerBalance | \\-10.00 | +10.00 |     | 0.00 |\n| Recoverables | 0.00 |     | \\-10.00 | \\-10.00 |\n| Revenue | 0.00 | +17.00 |     | 17.00 |\n| DeferredRevenue | 0.00 | +14.00 | \\-14.00 | 0.00 |\n\n## Uncollectible and disputed or refunded ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAn uncollectible invoice can be paid, then later disputed or refunded.\n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes, but the customer hasn’t paid yet.\n*   On February 1, the invoice is marked as uncollectible.\n*   On April 1, the invoice is paid.\n*   On May 1, the corresponding charge is disputed.\n\nAs shown in the Uncollectible example, when the invoice is marked as uncollectible and later paid:\n\n*   The bad debt account is cleared out.\n*   The remainder is booked as recoverables.\n\nIn this example, the customer later decides to dispute the charge. When a dispute occurs, the summary might look something like:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 | Apr 2019 | May 2019 |\n| --- | --- | --- | --- | --- | --- |\n| AccountsReceivable | +90.00 | \\-90.00 |     |     |     |\n| Revenue | +31.00 |     |     |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |     |     |\n| BadDebt |     | +31.00 |     | \\-31.00 |     |\n| Cash |     |     |     | +90.00 | \\-90.00 |\n| Disputes |     |     |     |     | +31.00 |\n| Recoverables |     |     |     | +59.00 | \\-59.00 |\n\nAn invoice marked as uncollectible, paid, and later refunded works in a similar manner except that it uses the refunds account instead of the disputes account.\n\n## Dispute ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIn case of a dispute, Revenue Recognition works similarly to how a refund works except that it uses the disputes account instead. This example also shows what happens if you win a dispute. It uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and the customer pays 90 USD.\n*   On February 1, they dispute the payment.\n*   On April 1, you win the dispute because the bank rules in your favor.\n\nWhen the customer makes the dispute:\n\n*   Cash is returned to the customer.\n*   Recognized revenue is offset by contra revenue in the disputes account.\n*   Deferred revenue from the subscription that hasn’t been recognized is cleared.\n\nWhen you win the dispute:\n\n*   Cash is returned to you.\n*   Recognized revenue and deferred revenue don’t change.\n*   Cash is offset by an increase in the recoverables account.\n\nIn this example, the customer received one month of service, so 31 USD in recognized revenue is disputed. The dispute also decreases the cash balance in your Stripe account by 90 USD. At the time of the dispute, there was 59 USD remaining in deferred revenue, so this is also cleared. Later in time, in April, the bank rules in your favor, so the cash is returned to you.\n\nIf you viewed the summary after April ends, it might look something like this:\n\n| Account | Jan 2019 | Feb 2019 | Mar 2019 | Apr 2019 |\n| --- | --- | --- | --- | --- |\n| Revenue | +31.00 |     |     |     |\n| DeferredRevenue | +59.00 | \\-59.00 |     |     |\n| Cash | +90.00 | \\-90.00 |     | +90.00 |\n| Disputes |     | +31.00 |     |     |\n| Recoverables |     |     |     | +90.00 |\n\n## Credit note after a payment ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can use a refund, a customer credit, or an out-of-band credit to issue a credit note to a customer after they’ve made a payment.\n\nFor example, say a customer starts a subscription for a 3 month period on January 1 at 00:00:00 UTC that costs 90 USD. The subscription generates an invoice and the customer pays it immediately. On February 1, you issue a credit note of 45 USD where you: refund 15 USD; credit 10 USD to the customer balance; and credit 20 USD to an external customer balance (an out-of-band credit). Your summary for March would like something like this:\n\n| Account | Jan 2021 | Feb 2021 | Mar 2021 |\n| --- | --- | --- | --- |\n| Cash | +90.00 | \\-15.00 |     |\n| Revenue | +31.00 | +14.00 | +15.50 |\n| DeferredRevenue | +59.00 | \\-43.50 | \\-15.50 |\n| Refunds |     | +5.10 |     |\n| CreditNotes |     | +10.40 |     |\n| CustomerBalance |     | +10.00 |     |\n| ExternalCustomerBalance |     | +20.00 |     |\n\n## Credit note without line items ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1 at 00:00:00 UTC, a customer starts a 6 month subscription that costs 181 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes, but the customer hasn’t paid yet.\n*   On February 1, you issue a credit note of 90.50 USD.\n\nWhen the credit note is issued:\n\n*   The accounts receivable account is reduced according to the credit note’s amount.\n*   Recognized revenue is offset by contra revenue proportionally in the credit notes account.\n*   Deferred revenue from the subscription that hasn’t been recognized is reduced proportionally to the credit note’s amount.\n\nIf you viewed the summary after March ends, it might look something like this:\n\n| Account | Starting | Jan 2019 | Feb 2019 | Mar 2019 | Ending Mar 2019 |\n| --- | --- | --- | --- | --- | --- |\n| AccountsReceivable | 0.00 | +181.00 | \\-90.50 |     | 90.50 |\n| Revenue | 0.00 | +31.00 | +14.00 | +15.50 | 60.50 |\n| DeferredRevenue | 0.00 | +150.00 | \\-89.00 | \\-15.50 | 0.00 |\n| CreditNotes | 0.00 |     | +15.50 |     | 15.50 |\n\nWhen the credit note is voided on May 3rd:\n\n*   Reverses the credit notes account.\n*   Increases accounts receivable back to the original invoice due amount.\n*   Recognizes the reduced revenue in May instead of February, March, and April.\n*   Reinstates the reduced deferred revenue in May.\n\nThe summary after June end might look something like:\n\n| Account | Starting | Jan 2019 | Feb 2019 | Mar 2019 | Apr 2019 | May 2019 | Jun 2019 | Ending |\n| --- | --- | --- | --- | --- | --- | --- | --- | --- |\n| AccountsReceivable | 0.00 | +181.00 | \\-90.50 |     |     | +90.50 |     | 181.00 |\n| Revenue | 0.00 | +31.00 | +14.00 | +15.50 | +15.00 | +75.50 | +30.00 | 181.00 |\n| DeferredRevenue | 0.00 | +150.00 | \\-89.00 | \\-15.50 | \\-15.00 | \\-0.50 | \\-30.00 | 0.00 |\n| CreditNotes | 0.00 |     | +15.50 |     |     | \\-15.50 |     | 15.50 |\n\nBe aware that a credit note without line items doesn’t match with a specific invoice line item. Rather, the amount of the credit note is divided proportionally among the invoice line items.\n\n## Credit note with line items ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nA credit note with line items would work in a similar way that a credit note without line items does except that a credit note line item is used for adjusting the revenue and other accounts for a corresponding invoice line item.\n\n## Credit note with negative line items ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAdjustments to accounts for a credit note with negative line items are the reverse of those for a credit note with positive line items.\n\nLearn how to [credit negative invoice line items in the Dashboard](https://docs.stripe.com/invoicing/dashboard/credit-notes#negative-line-items) or [programmatically with the API](https://docs.stripe.com/invoicing/integration/programmatic-credit-notes#negative-line-items).\n\n## External asset ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you manually mark invoices as paid outside of Stripe, the external asset account increases. All other accounts operate as if the invoice is paid, but the cash account doesn’t change. You can import third party transaction data and consolidate all your revenue sources into your Stripe reporting by using the [Data Import feature](https://docs.stripe.com/revenue-recognition/data-import).\n\nBelow is an example involving the external asset account with the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a monthly subscription that costs 31 USD.\n*   The subscription generates an invoice, and the invoice finalizes on the same day.\n*   The invoice is manually marked as paid outside of Stripe on February 5.\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivable | +31.00 | \\-31.00 |\n| Revenue | +31.00 |     |\n| Cash |     |     |\n| ExternalAsset |     | +31.00 |\n\n## Tax exempt ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYour [customers](https://docs.stripe.com/api/customers) can have a [tax exemption status](https://docs.stripe.com/billing/taxes/tax-rates#tax-exempt-and-reverse-charge) of either `exempt` or `reverse`. No tax is calculated on the invoice in either case.\n\nFor example, say a customer with a tax exemption status of `reverse` starts a monthly subscription on January 1 at 00:00:00 UTC. It costs 31 USD per month and has a tax-inclusive rate of 10%. Because the customer is tax exempt, the total amount due is 27.90 USD. The subscription generates an invoice, the invoice finalizes, and the customer pays the invoice on the same day. Your journal entry would look like this:\n\n| Account | Debit | Credit |\n| --- | --- | --- |\n| Revenue |     | +27.90 |\n| Cash | +27.90 |     |\n\n## Tax-inclusive rate on invoice items ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAn invoice item can include a tax-inclusive rate. When you add an invoice item to an invoice, it can use the same accounting period or a different accounting period from its creation date.\n\n### Same accounting period ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nFor example, say a customer starts a service for a period of 1 month on January 1 at 00:00:00 UTC. The total amount due is 34.10 USD and has a tax-inclusive rate of 10%. You add the invoice item to an invoice on January 1, the invoice finalizes, and the customer pays the invoice on the same day. Your journal entry would look like this:\n\n| Account | Debit | Credit |\n| --- | --- | --- |\n| Revenue |     | +31.00 |\n| Cash | +34.10 |     |\n| TaxLiability |     | +3.10 |\n\n### Different accounting period ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nFor example, say a customer starts a service for a 3 month period on January 1 at 00:00:00 UTC. The total amount due is 100.00 USD and has a tax-inclusive rate of 10%. You add the invoice item to an invoice on March 1, the invoice finalizes, and the customer pays the invoice on the same day. Your journal entry would look like this:\n\n| Account | Jan | Feb | Mar |\n| --- | --- | --- | --- |\n| Revenue | \\-34.10 | \\-30.80 | \\-31.00 |\n| Cash |     |     | +100.00 |\n| TaxLiability |     |     | \\-10.00 |\n| UnbilledAccountsReceivable | +34.10 | +30.80 | \\-64.90 |\n| UnbilledVoids |     |     | +5.90 |\n\n## Tax liability ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nInvoices and invoice line items can be [assigned tax rates](https://docs.stripe.com/invoicing/taxes/tax-rates). When tax rates are assigned, the Revenue Recognition reports can compute tax liability.\n\nBelow is an example using an exclusive tax rate with the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a monthly subscription that costs 31 USD with an exclusive tax rate of 10%. The total due amount is 34.10 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and is paid on the same day.\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +31.00 |\n| Cash | +34.10 |\n| TaxLiability | +3.10 |\n\nBelow is an example using an inclusive tax rate with the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a monthly subscription that costs 31 USD with an inclusive tax rate of 10%. The total due amount is 31 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and is paid on the same day.\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +27.90 |\n| Cash | +31.00 |\n| TaxLiability | +3.10 |\n\n## Multi-currency ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, an invoice finalizes and the customer immediately pays 30 EUR.\n*   Your account’s settlement currency is USD.\n*   The EUR to USD exchange rate is 1.20 at the time of finalization and payment.\n\nIn this example, you receive 36 USD. Because the invoice finalizes and is paid immediately, you have no exposure to fluctuating exchange rates and therefore no foreign exchange (FX) gains or losses.\n\n| Account | Jan |\n| --- | --- |\n| Revenue | +36.00 |\n| Cash | +36.00 |\n\n## FX loss ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, an invoice finalizes for 30 EUR.\n*   On February 1, at 00:00:00 UTC, the customer pays the invoice for 30 EUR.\n*   Your account’s settlement currency is USD.\n*   The EUR to USD exchange rate is 1.20 at the time of finalization.\n*   The EUR to USD exchange rate is 1.10 at the time of payment.\n\nIn this example, the exchange rate changed between invoice finalization and payment, so you receive 33 USD instead of 36.\n\n| Account | Jan | Feb |\n| --- | --- | --- |\n| AccountsReceivable | +36.00 | \\-36.00 |\n| Revenue | +36.00 |     |\n| Cash |     | +33.00 |\n| FxLoss |     | +3.00 |\n\n## FX loss from a refund or dispute ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, an invoice finalizes for 30 EUR.\n*   On February 1, at 00:00:00 UTC, the customer pays the invoice for 30 EUR.\n*   On March 1, at 00:00:00 UTC, a refund is issued for 30 EUR.\n*   Your account’s settlement currency is USD.\n*   The EUR to USD exchange rate is 1.20 at the time of finalization.\n*   The EUR to USD exchange rate is 1.20 at the time of payment.\n*   The EUR to USD exchange rate is 1.30 at the time of refund.\n\nIn this example, the exchange rate changed between invoice payment and refund, so you receive 36 USD but you later refund 39 USD. Therefore, you incur 3 USD for FxLoss.\n\n| Account | Jan | Feb | Mar |\n| --- | --- | --- | --- |\n| AccountsReceivable | +36.00 | \\-36.00 |     |\n| Revenue | +36.00 |     |     |\n| Refunds |     |     | +36.00 |\n| Cash |     | +36.00 | \\-39.00 |\n| FxLoss |     |     | +3.00 |\n\nA dispute works in the same way as a refund, except that it books the disputes account instead of the refunds account.\n\n## Multiple settlement currencies ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example uses the following assumptions:\n\n*   Your account settles in USD by default but EUR is also a supported settlement currency.\n*   On January 1, at 00:00:00 UTC, two invoices finalize for separate customers-one is for 30 EUR, and the other is for 400 NOK.\n*   The NOK to USD conversion rate is 0.10 at the time of finalization and payment.\n*   Both invoices are paid immediately.\n\nIn this example, you receive 40 USD from the NOK transaction and 30 EUR from the EUR transaction. Because EUR is a supported settlement currency, no exchange rate is applied.\n\n| Account | Currency | Jan |\n| --- | --- | --- |\n| Revenue | USD | +40.00 |\n| Revenue | EUR | +30.00 |\n| Cash | USD | +40.00 |\n| Cash | EUR | +30.00 |\n\n## Fees Beta![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### Beta\n\nRevenue Recognition Stripe fees support is currently in private beta. If you’re interested in getting early access, please [create a ticket](https://support.stripe.com/contact/email?topic=financial_reports) on our support page.\n\nThis example uses the following assumptions:\n\n*   On January 1, at 00:00:00 UTC, a customer starts a three month subscription that costs 90 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes and the customer pays 90 USD.\n*   This payment has a Stripe processing fee of 0.02 USD.\n\nIf you view the summary after March ends, you’ll see something like this:\n\n| Account | Jan | Feb | Mar |\n| --- | --- | --- | --- |\n| Revenue | +31.00 | +28.00 | +31.00 |\n| DeferredRevenue | +59.00 | \\-28.00 | \\-31.00 |\n| Cash | +89.98 |     |     |\n| Fees | +0.02 |     |     |\n\nNotice fees are booked on a cash-basis.\n\n## Exclude transactions ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTransactions behave differently when excluded, depending on whether they have been paid or not. If a transaction is paid in cash, we debit the cash account and credit the exclusion account after exclusion. If it’s paid by CustomerBalance, we debit the customer balance account and credit the customer balance adjustments account after exclusion. We don’t generate journal entries for unpaid transactions; they behave as if the transaction never occurred.\n\nIf you exclude transactions in a closed accounting period, it incurs corrections for transactions that have already been paid. Learn more about [corrections](https://docs.stripe.com/revenue-recognition/reports).\n\n### Exclude paid transactions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   On January 5, 2022, at 09:00:00 UTC, you create a one-time payment of 10 USD using either the Dashboard, the Charges APIs, or the Payment Intents APIs.\n*   By default, Revenue Recognition immediately recognizes the revenue from this one-time payment.\n*   On February 5, 2022, you exclude the payment.\n*   The accounting periods for January 2022 are either closed or open.\n\nAfter you exclude the payment:\n\n*   The revenue account clears to 0 USD because the payment doesn’t generate revenue.\n*   The cash account remains at 10 USD, acknowledging the received payment.\n*   An amount of 10 USD is added to the exclusion account.\n\nAt the end of February, your summary might reflect the following:\n\n| Account | January | February |\n| --- | --- | --- |\n| Cash | +10.00 |     |\n| Revenue | +10.00 | \\-10.00 |\n| Exclusion |     | +10.00 |\n\n### Exclude unpaid transactions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   On January 1, 2022, at 00:00:00 UTC, a customer initiates a one-month subscription (from January 1 to Jan 31) that costs 31 USD.\n*   The subscription generates an invoice.\n*   The invoice finalizes, but the customer doesn’t make a payment.\n*   On February 1, 2022, you exclude the payment.\n*   The accounting periods are open for January 2022.\n\nIf you exclude a finalized invoice during an open accounting period, it leaves no trace of activity related to the invoice. We remove all of the account activities, excluding the cash and customer balance account that isn’t involved in this case, and don’t generate journal entries from the finalization and exclusion of the invoice.",
    "title": "Revenue Recognition examples | Stripe Documentation",
    "description": "Learn about Revenue Recognition using some common examples.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/revenue-controls",
    "markdown": "# Revenue Recognition controls | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to adjust the behavior of Revenue Recognition with controls.\n\nConfigure [Revenue Recognition controls](https://dashboard.stripe.com/revenue-recognition/controls) to customize how revenue is recognized specifically for your business. Adjustments to controls take 48-72 hours to complete. When completed, the settings are reflected across all Revenue Recognition charts and reports.\n\n## Amortization granularity ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nBy default, Revenue Recognition recognizes revenue by the millisecond. We also support recognizing revenue by the month, with two different treatment options for handling the first and last months of the service period.\n\n| Amortization | Descriptions |\n| --- | --- |\n| By millisecond (default) | Recognize revenue down to the millisecond. |\n| By month evenly | Recognize revenue down to the month. Cut off the last month. |\n| By month evenly, first and last month prorated | Recognize revenue down to the month. Prorate the amounts in the first and last months by millisecond. |\n\nAdjusting this configuration affects all of your journal entries within Revenue Recognition. If you want to avoid creating corrections in the current period, we recommend that you [open all accounting periods](https://docs.stripe.com/revenue-recognition/accounting-period-control) prior to the adjustment.\n\n## Catch-up revenue ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nRevenue Recognition primarily recognizes revenue based on the service period attached to transactions. However, when the service period begins before the booked date (that is, the finalization date for an invoice, the creation date or imported booked date for a standalone charge), the revenue from the prior periods are instead recognized entirely in the month of the booked date to avoid making changes to the past. We refer to this type of revenue as _catch-up_ revenue.\n\nYou can disable or enable this behavior by toggling the **Apply catch-up revenue** switch.\n\nToggling this configuration affects any applicable journal entries you have within Revenue Recognition. If you want to avoid creating corrections in the current period, we recommend that you [open all accounting periods](https://docs.stripe.com/revenue-recognition/accounting-period-control) prior to the adjustment.",
    "title": "Revenue Recognition controls | Stripe Documentation",
    "description": "Learn how to adjust the behavior of Revenue Recognition with controls.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/chart-of-accounts",
    "markdown": "# Map to your chart of accounts\n\n## Map transactions from the Stripe default accounts to the chart of accounts in your general ledger.\n\nYou can customize Stripe Revenue Recognition reporting to use your General Ledger (GL) chart of accounts instead of using the default [Stripe accounts](https://docs.stripe.com/revenue-recognition/methodology). You can configure a rule to map transactions by product, shipping region, or invoice metadata to your GL account. Stripe applies your custom mappings to the [CSV reports](https://docs.stripe.com/revenue-recognition/reports#csv-reports) you download and also when you [audit your revenue numbers](https://docs.stripe.com/revenue-recognition/reports/audit-numbers). A mapping rule consists of the following:\n\n| Mapping rule attribute | Description |\n| --- | --- |\n| Stripe account | The [Stripe default account](https://docs.stripe.com/revenue-recognition/methodology#chart-of-accounts) that you want to override. |\n| GL account | The name of the GL account you want to override the Stripe account with. |\n| GL account number | The number corresponding to the GL account. |\n| Effective period | The time period the mapping applies to.<br><br>An [invoice line item](https://docs.stripe.com/api/invoices/line_item) fulfills the effective period requirement if the finalization time of the invoice is within the specified effective period.<br><br>A [charge](https://docs.stripe.com/api/charges) fulfills the effective period requirement if the balance transaction it corresponds to has a creation time that’s within the specified effective period. |\n| Condition | An optional criteria to map transactions by product, shipping region, or invoice metadata. If not specified, all transactions involving the configured Stripe account are mapped to the GL account. |\n| Status | **Active**: The mapping rule is active and all transactions are mapped as per the rule.<br><br>**Processing**: The rule is processing. On completion, the rule is active and transactions are mapped accordingly. |\n\n## Configuring a mapping rule![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nMapping rule configuration is a 4-step process—click the add mapping button on the accounts mapping page to begin.\n\n1.  **Select Stripe account**: Select the default Stripe account from the dropdown for which you want to create the rule.\n2.  **Select GL account**: You can select your GL account from the dropdown or add one if you can’t find it in the dropdown. When setting up the rules for the first time, you have to add these accounts by specifying the GL account name and number. You have to specify at least a name or a number to add the account.\n3.  **Specify effective period**: The effective period is the time frame in which the mapping rule is applicable. Select a start and end date from the dropdown to configure the effective period. If you specify an effective period that overlaps with closed accounting periods, you’ll see corrections in your report in the current open accounting period. You can reopen the past accounting periods corresponding to the effective period to avoid corrections.\n4.  **Specify mapping condition (optional)\\***: You can optionally specify a mapping condition on any of the following attributes:\n    *   **Product**: If you have product specific accounts in your GL, you can classify your transactions based on the products that you have configured in the Stripe Dashboard.\n    *   **Shipping region**: Similar to products, you can specify the shipping region to map transactions to the relevant GL account. Only ISO-compliant country and state codes are supported.\n    *   **Invoice metadata**: You can configure a custom rule using invoice metadata if your GL accounts don’t track transactions by product or shipping region. Create a rule by selecting a key and adding a value. The keys are from metadata you created in past invoices.\\*\\*\n\nClick **Map accounts** to create the mapping rule and for Stripe to [process the data](https://docs.stripe.com/revenue-recognition/methodology#data-availability). The rule’s status changes to active when the data processing is complete, and you can then download reports with the mapped GL accounts.\n\n## Mapping rule configuration example![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following example involves 3 different products:\n\n*   Product A: Annual subscription cost of 1,200 USD\n*   Product B: Annual subscription cost of 2,400 USD\n*   Product C: Annual subscription cost of 3,600 USD\n\nIf you sell 1 subscription each for A, B, and C in January, your journal entry at the end of the month appears as follows without account mapping:\n\n| Account | January |\n| --- | --- |\n| Revenue | +600 USD |\n| Deferred Revenue | +6600 USD |\n\nHowever, the user has 3 separate revenue accounts in its GL, say revenue\\_A, revenue\\_B, and revenue\\_C for tracking revenue corresponding to these 3 products. The user has to do manual work to identify revenue in these accounts before posting to its GL.\n\nIf you have product-specific accounts in your General Ledger that you want to map to, you can create 3 mapping rules:\n\n| Stripe account | GL account number | GL account | Condition | Effective period |\n| --- | --- | --- | --- | --- |\n| Revenue | 10001 | revenue\\_A | Product A | Jan 2023 - Indefinite |\n| Revenue | 10002 | revenue\\_B | Product B | Jan 2023 - Indefinite |\n| Revenue | 10003 | revenue\\_C | Product C | Jan 2023 - Indefinite |\n\nAfter you set up these rules, your journal entries will contain three line items reflecting the revenue distribution for each product. This can help you streamline the process of posting to your GL.\n\n| GL account number | Account | January |\n| --- | --- | --- |\n| 1001 | revenue\\_A | +100 USD |\n| 1002 | revenue\\_B | +200 USD |\n| 1003 | revenue\\_C | +300 USD |\n| \\-  | Deferred Revenue | +6600 USD |\n\n\\* For a default Stripe account, you can only pick one attribute to create a rule. Please [create a ticket](https://support.stripe.com/contact/email?topic=financial_reports) on our support page if you have any questions.  \n\\*\\* Don’t import any personally identifiable information and/or protected health information.",
    "title": "Map to your chart of accounts | Stripe Documentation",
    "description": "Map transactions from the Stripe default accounts to the chart of accounts in your general ledger.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/data-import",
    "markdown": "# Revenue Recognition data import | Stripe DocumentationThe Stripe Docs logo\n\n## Revenue Recognition data importBeta\n\n## Import data from other sources to manage all of your revenue recognition in Stripe.\n\nPerform revenue recognition on non-Stripe transactions and adjust the recognition schedules of existing Stripe transactions, or exclude the existing Stripe transactions from the revenue.\n\nData import is categorized by general import or exclusion import.\n\n**General import** allows you to upload revenue data with CSV files. You can import transactions processed completely outside of Stripe and customize the recognition terms of existing Stripe transactions to fit your business model. For example, you can import data to:\n\n*   **Add** a service period to a Stripe payment.\n*   **Override** the service period of a line item in a Stripe [invoice](https://docs.stripe.com/api/invoices \"invoices\").\n*   **Split** a payment into multiple different revenue schedules.\n*   **Import** an external payment processor’s data with a service period, amount, and currency.\n\n**Exclusion import** allows you to exclude transactions from your revenue by uploading the IDs of the transactions to exclude. You can exclude the following types of transactions: invoice, invoice item, invoice line item, standalone payment.\n\n#### Caution\n\nWhen you import data related to India, make sure you’re in compliance with India data locality requirements.\n\n## General import![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can import data into Revenue Recognition reports and view all the data you’ve imported from the [Data import page](https://dashboard.stripe.com/revenue-recognition/data-import). Click **Download CSV template** and select **General import CSV** to see the required format for the data import feature. You can then click **Import CSV** and select **General import** to upload your completed template. See the following descriptions of the CSV format:\n\n**Source**\n\nThe provider of the original transaction. Examples:\n\n*   `Stripe` (case-insensitive) for transactions processed by Stripe\n*   Any value such as `Checks` or `App Store`, an arbitrary identifier that helps you group the source of a set of transactions\n\n**Transaction ID**\n\nThe ID of a transaction. Examples:\n\n*   An ID such as `ch_123456` or `py_1234` for Stripe payments\n*   An ID such as `in_12345` for Stripe invoices\n*   Any value such as `my_internal_id` or `Check Number 1234`, an arbitrary identifier that helps you track a single transaction\n\n**Split transaction ID**\n\nIf you’re not overriding an invoice line item service period or splitting a transaction, you can leave this blank.\n\nWhen overriding an invoice line item service period, this is the invoice line item ID. Examples:\n\n*   An ID such as `il_1234`, that you can find from your Revenue Recognition reports at the invoice line item level\n\nIf you’re splitting a transaction, this is an arbitrary identifier that differentiates between different parts of the same transaction. Examples:\n\n*   `bike`\n*   `my_internal_id`\n\n**Booked date**\n\nThis is the date that you recorded the transaction in `YYYY-MM-DD` format in the UTC timezone.\n\n**Recognition start date**\n\nThis is the date that you want to start recognizing revenue in `YYYY-MM-DD` format in the UTC timezone.\n\n**Recognition end date**\n\nThis is the date that you want to stop recognizing revenue in `YYYY-MM-DD` format in the UTC timezone.\n\n**Amount**\n\nThis is the numeric amount of the transaction without any currency symbols. For example, for 10.95 USD, you would specify `10.95`.\n\n**Currency**\n\nThis is the three-letter [ISO 4217 currency code](https://en.wikipedia.org/wiki/ISO_4217) for the currency of the recognized revenue of the transaction. For example, for 10.95 USD, you would specify `usd`. Your Stripe account must be set up to support the specified currency.\n\n**Description**\n\nThis can be any arbitrary description. You can use these in combination with [Revenue Recognition rules](https://docs.stripe.com/revenue-recognition/rules) to further customize your recognized revenue.\n\n### Additional verifications![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   All rows must have a transaction ID.\n*   All of the split parts of a transaction must have an amount that adds up to the original transaction.\n*   External transactions must provide a booked date, revenue recognition start and end date, amount, and currency.\n*   We ignore overrides on payments attached to Stripe invoices, so if you want to override such a payment, use the invoice itself as the transaction.\n\n## Exclusion import![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can exclude transactions from revenue and view the excluded transactions that you imported from the [Data import page](https://dashboard.stripe.com/revenue-recognition/data-import). Click **Download CSV template** and select **Exclusion import CSV** to see the required format for the exclusion data import feature. You can then click **Import CSV** and select **Exclusion import** to upload your completed template.\n\n**Transaction ID**\n\nTransaction ID examples include:\n\n*   `ch_123456` or `py_1234` – An ID for a standalone Stripe payment. If a payment or charge is linked with an invoice, don’t use the charge or payment ID. Use the invoice ID for exclusion instead.\n*   `in_12345` – An ID for Stripe invoices.\n*   `ii_12345` – An ID for Stripe invoice items.\n*   `il_12345` – An ID for Stripe invoice line items.\n\n## Opening accounting periods![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nApplying a transaction to a closed accounting period generates corrections. If you want to apply past transactions directly to a past accounting period, make sure that the past accounting period is open. If you forgot to do this, you don’t need to re-import data, you can [open the relevant accounting period](https://docs.stripe.com/revenue-recognition/accounting-period-control) and wait for the reports to be recalculated.",
    "title": "Revenue Recognition data import | Stripe Documentation",
    "description": "Import data from other sources to manage all of your revenue recognition in Stripe.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/api",
    "markdown": "# Revenue Recognition API | Stripe DocumentationThe Stripe Docs logo\n\n## Revenue Recognition APIBeta\n\n## Access Stripe Revenue Recognition reports programmatically to automate your accrual accounting.\n\nFor accrual accounting, Stripe Revenue Recognition provides [downloadable reports](https://docs.stripe.com/revenue-recognition/reports), such as a [monthly summary](https://docs.stripe.com/revenue-recognition/reports/monthly-summary) and a [revenue waterfall](https://docs.stripe.com/revenue-recognition/reports/waterfall). You can download these reports in CSV format through the [Dashboard](https://dashboard.stripe.com/revenue-recognition) or you can programmatically access them through the API.\n\nRevenue Recognition has six supported report types:\n\n*   `revenue_recognition.debit_credit_summary.1`\n*   `revenue_recognition.debit_credit_by_price.1`\n*   `revenue_recognition.debit_credit_by_product.1`\n*   `revenue_recognition.debit_credit_by_customer.1`\n*   `revenue_recognition.debit_credit_by_invoice.1`\n*   `revenue_recognition.debit_credit_by_invoice_line_item.1`\n\n#### Caution\n\nBecause this feature is in beta, the data fields might change.\n\n## Download a report![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following example downloads the debits and credits by summary for May 2021.\n\nFirst, create a report run using [Create a Report Run](https://docs.stripe.com/api/reporting/report_run/create).\n\nTo get a report for May 2023, set `parameters[interval_start]` to 1 May 2023 and `parameters[interval_end]` to 1 Jun 2023.\n\n`curl https://api.stripe.com/v1/reporting/report_runs \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d report_type=\"revenue_recognition.debit_credit_summary.1\" \\  -d \"parameters[interval_start]\"=1682899200 \\  -d \"parameters[interval_end]\"=1685577600`\n\nNext, check whether the [Report Run](https://docs.stripe.com/api/reporting/report_run/object) object succeeds by fetching the report run object:\n\nThe report run object ID starts with `frr_`.\n\n`curl https://api.stripe.com/v1/reporting/report_runs/{{REPORT_RUN_OBJECT_ID}} \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\"`\n\nWhen the object’s `status` is `succeeded`, you can download the CSV using its `result.id` value, as in the following example:\n\nThe report run result ID starts with `file_`.\n\n`curl https://files.stripe.com/v1/files/{{REPORT_RUN_RESULT_ID}}/contents \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:`\n\n## Report Run Parameters![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n| Report Type | Required Run Parameters | Optional Run Parameters |\n| --- | --- | --- |\n| revenue\\_recognition.debit\\_credit\\_summary.1 | *   `interval_start`<br>*   `interval_end` | *   `decimal_format` |\n| revenue\\_recognition.debit\\_credit\\_by\\_price.1 | *   `interval_start`<br>*   `interval_end` | *   `customer`<br>*   `decimal_format` |\n| revenue\\_recognition.debit\\_credit\\_by\\_product.1 | *   `interval_start`<br>*   `interval_end` | *   `customer`<br>*   `decimal_format` |\n| revenue\\_recognition.debit\\_credit\\_by\\_customer.1 | *   `interval_start`<br>*   `interval_end` | *   `decimal_format` |\n| revenue\\_recognition.debit\\_credit\\_by\\_invoice.1 | *   `interval_start`<br>*   `interval_end` | *   `customer`<br>*   `invoice`<br>*   `invoice_line_item`<br>*   `decimal_format` |\n| revenue\\_recognition.debit\\_credit\\_by\\_invoice\\_line\\_item.1 | *   `interval_start`<br>*   `interval_end` | *   `customer`<br>*   `invoice`<br>*   `invoice_line_item`<br>*   `decimal_format` |\n\n## Report Run Columns![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBy default, reports are run with the default set of columns. You can customize the selection and ordering of columns in the output by including the optional columns parameter with a [list of column names](https://docs.stripe.com/reports/api#report-runs). You can find the supported columns for each report type below.\n\n### Summary![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAPI report type: `revenue_recognition.debit_credit_summary.1`\n\n| Column Name | Default | Description |\n| --- | --- | --- |\n| accounting\\_period |     | The accounting period |\n| open\\_accounting\\_period |     | The open accounting period; entries in open periods are subject to change |\n| currency |     | Three-letter [ISO code for the currency](https://docs.stripe.com/currencies) of the amount. |\n| debit |     | The debited account |\n| credit |     | The credited account |\n| amount |     | Amount change, expressed in major units of the currency (for example, dollars for USD, or pesos for MXN). |\n| credit\\_gl\\_code |     | The credited general ledger code |\n| debit\\_gl\\_code |     | The debited general ledger code |\n\n### By Price![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAPI report type: `revenue_recognition.debit_credit_by_price.1`\n\n| Column Name | Default | Description |\n| --- | --- | --- |\n| accounting\\_period |     | The accounting period |\n| open\\_accounting\\_period |     | The open accounting period; entries in open periods are subject to change |\n| currency |     | Three-letter [ISO code for the currency](https://docs.stripe.com/currencies) of the amount. |\n| price\\_id |     | The price associated with this change. |\n| debit |     | The debited account |\n| credit |     | The credited account |\n| amount |     | Amount change, expressed in major units of the currency (for example, dollars for USD, or pesos for MXN). |\n| credit\\_gl\\_code |     | The credited general ledger code |\n| debit\\_gl\\_code |     | The debited general ledger code |\n\n### By Product![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAPI report type: `revenue_recognition.debit_credit_by_product.1`\n\n| Column Name | Default | Description |\n| --- | --- | --- |\n| accounting\\_period |     | The accounting period |\n| open\\_accounting\\_period |     | The open accounting period; entries in open periods are subject to change |\n| currency |     | Three-letter [ISO code for the currency](https://docs.stripe.com/currencies) of the amount. |\n| product\\_id |     | The product associated with this change. |\n| debit |     | The debited account |\n| credit |     | The credited account |\n| amount |     | Amount change, expressed in major units of the currency (for example, dollars for USD, or pesos for MXN). |\n| credit\\_gl\\_code |     | The credited general ledger code |\n| debit\\_gl\\_code |     | The debited general ledger code |\n\n### By Customer![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAPI report type: `revenue_recognition.debit_credit_by_customer.1`\n\n| Column Name | Default | Description |\n| --- | --- | --- |\n| accounting\\_period |     | The accounting period |\n| open\\_accounting\\_period |     | The open accounting period; entries in open periods are subject to change |\n| currency |     | Three-letter [ISO code for the currency](https://docs.stripe.com/currencies) of the amount. |\n| customer\\_id |     | The customer associated with this change. |\n| debit |     | The debited account |\n| credit |     | The credited account |\n| amount |     | Amount change, expressed in major units of the currency (for example, dollars for USD, or pesos for MXN). |\n| credit\\_gl\\_code |     | The credited general ledger code |\n| debit\\_gl\\_code |     | The debited general ledger code |\n\n### By Invoice![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAPI report type: `revenue_recognition.debit_credit_by_invoice.1`\n\n| Column Name | Default | Description |\n| --- | --- | --- |\n| accounting\\_period |     | The accounting period |\n| open\\_accounting\\_period |     | The open accounting period; entries in open periods are subject to change |\n| currency |     | Three-letter [ISO code for the currency](https://docs.stripe.com/currencies) of the amount. |\n| transaction\\_model\\_id |     | The model in Stripe associated with this change - either an invoice line item, invoice, invoiceitem, charge, or etc. |\n| debit |     | The debited account |\n| credit |     | The credited account |\n| booked\\_date |     | The date that the ledger entry is added to the books. |\n| amount |     | Amount change, expressed in major units of the currency (for example, dollars for USD, or pesos for MXN). |\n| debit\\_gl\\_code |     | The debited general ledger code |\n| credit\\_gl\\_code |     | The credited general ledger code |\n| invoice\\_id |     | The invoice associated with this change. Standalone charges or invoice items not associated with an invoice are `null`. |\n| invoice\\_line\\_item\\_id |     | The ID of the invoice line\\_item. |\n| invoice\\_item\\_id |     | The ID of the invoice item |\n| subscription\\_item\\_id |     | The ID of the subscription\\_item. |\n| price\\_id |     | The price associated with this change. Standalone charges or invoice items not associated with a price are `null`. |\n| product\\_id |     | The product associated with this price. |\n| customer\\_id |     | The customer associated with this change. |\n| subscription\\_id |     | The subscription associated with this change. |\n| charge\\_id |     | The charge associated with this change. |\n| refund\\_id |     | The refund associated with this change. |\n| dispute\\_id |     | The dispute associated with this change. |\n| presentment\\_currency |     | The presentment (customer facing) currency of the transaction. |\n| presentment\\_amount |     | The presentment (customer facing) amount. |\n\n### By Invoice Line Item![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAPI report type: `revenue_recognition.debit_credit_by_invoice_line_item.1`\n\n| Column Name | Default | Description |\n| --- | --- | --- |\n| accounting\\_period |     | The accounting period |\n| open\\_accounting\\_period |     | The open accounting period; entries in open periods are subject to change |\n| currency |     | Three-letter [ISO code for the currency](https://docs.stripe.com/currencies) of the amount. |\n| transaction\\_model\\_id |     | The model in Stripe associated with this change—an invoice line item, invoice, invoice item, charge, and so on. |\n| debit |     | The debited account |\n| credit |     | The credited account |\n| booked\\_date |     | The date that the ledger entry is added to the books. |\n| amount |     | Amount change, expressed in major units of the currency (for example, dollars for USD, or pesos for MXN). |\n| debit\\_gl\\_code |     | The debited general ledger code |\n| credit\\_gl\\_code |     | The credited general ledger code |\n| invoice\\_id |     | The invoice associated with this change. Standalone charges or invoice items not associated with an invoice are `null`. |\n| invoice\\_line\\_item\\_id |     | The ID of the invoice line\\_item. |\n| invoice\\_item\\_id |     | The ID of the invoice item |\n| subscription\\_item\\_id |     | The ID of the subscription\\_item. |\n| price\\_id |     | The price associated with this change. Standalone charges or invoice items not associated with a price are `null`. |\n| product\\_id |     | The product associated with this price. |\n| customer\\_id |     | The customer associated with this change. |\n| subscription\\_id |     | The subscription associated with this change. |\n| charge\\_id |     | The charge associated with this change. |\n| refund\\_id |     | The refund associated with this change. |\n| dispute\\_id |     | The dispute associated with this change. |\n| presentment\\_currency |     | The presentment (customer facing) currency of the transaction. |\n| presentment\\_amount |     | The presentment (customer facing) amount. |\n\nIf you encounter any issues, you can contact [revenue-recognition-api-beta@stripe.com](mailto:revenue-recognition-api-beta@stripe.com).",
    "title": "Revenue Recognition API | Stripe Documentation",
    "description": "Access Stripe Revenue Recognition reports programmatically to automate your accrual accounting.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/reports/monthly-summary",
    "markdown": "# Monthly summary | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about the monthly summary report.\n\nThe [monthly summary](https://dashboard.stripe.com/revenue-recognition/) provides a detailed breakdown of activity for the previous month. You can use this information to understand how your billing activity affected your revenue and to book journal entries.\n\n![Monthly summary for July 2020](https://b.stripecdn.com/docs-statics-srv/assets/monthly-summary-v2.ba474e8e2a801fedb0674c40bae653ad.png)\n\nYou can see that the net recognized revenue is 171,601 USD and the ending balance of deferred revenue at the end of July is 310,000 USD.\n\n## Recognized revenue ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nItems can be broken down into two categories: revenue and contra revenue. The following table explains each item under recognized revenue:\n\n| Item | Category | Description |\n| --- | --- | --- |\n| Revenue from billings this month | Revenue | The recognized revenue portion from finalized invoice line items and standalone payments occurring this month. The revenue of a standalone payment is recognized when the payment occurs. |\n| Recognized revenue previously deferred | Revenue | The recognized revenue portion from invoice line items finalized in previous months. |\n| Revenue from metered subscriptions this month | Revenue | The revenue from metered subscriptions. |\n| Revenue from unbilled services | Revenue | The revenue from unbilled invoice items. |\n| Revenue from platform fees | Revenue | The revenue from platform fees. [Learn how a platform fee impacts revenue](https://docs.stripe.com/revenue-recognition/connect/destination-charges#revenue-collected-with-application_fee_amount). |\n| Less canceled unbilled invoice items | Contra revenue | The contra revenue originated from the deleted unbilled invoice items. |\n| Less refunds | Contra revenue | The contra revenue originated from refunds. This contra revenue offsets previously recognized revenue. [Learn how a refund impacts revenue.](https://docs.stripe.com/revenue-recognition/examples#refund) |\n| Less disputes | Contra revenue | The contra revenue originated from disputes. This contra revenue offsets previously recognized revenue. [Learn how a dispute impacts revenue.](https://docs.stripe.com/revenue-recognition/examples#dispute) |\n| Less voided billings | Contra revenue | The contra revenue originated from voids. This contra revenue offsets previously recognized revenue. [Learn how voiding impacts revenue.](https://docs.stripe.com/revenue-recognition/examples#void) |\n| Less bad debt | Contra revenue | The contra revenue originated from marking invoices as uncollectible. This contra revenue offsets previously recognized revenue. [Learn how marking an invoice as uncollectible impacts revenue.](https://docs.stripe.com/revenue-recognition/examples#uncollectible) |\n| Less credit notes | Contra revenue | The contra revenue originated from credit notes. This contra revenue offsets previously recognized revenue. |\n| Less refunds from platform fees | Contra revenue | The contra revenue originated from refunding platform fees. [Learn how a platform fee refund impacts revenue](https://docs.stripe.com/revenue-recognition/connect/destination-charges#loss-and-contra-revenue-with-issuing-refunds). |\n| Less transfer | Contra revenue | The contra revenue originated from separate transfers. [Learn how a separate transfer impacts revenue](https://docs.stripe.com/revenue-recognition/connect/charges-transfers). |\n| Net revenue |     | The recognized revenue less the contra revenue. |\n\n## Deferred revenue ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe deferred revenue section gives the breakdown of what changed in the deferred revenue balance. The following table lists the items under this section:\n\n| Item | Description |\n| --- | --- |\n| Starting balance | The ending balance of the deferred revenue from the previous month. |\n| Deferred change from new billings this month | The deferred revenue from finalized invoice line items and standalone payments occurring this month. With the exception of unbilled revenue that was recognized in previous months (that is, included in “Revenue from unbilled services” in previous months), every invoice line item and standalone payment books its deferred revenue regardless of their revenue recognition schedule. |\n| Less recognized revenue | The portion of deferred revenue that was recognized this month. |\n| Less credits issued | The remaining deferred revenue erased due to refunds, disputes, voids, uncollectible invoices, and credit notes. [Learn how a refund impacts the remaining deferred revenue.](https://docs.stripe.com/revenue-recognition/examples#refund) |\n| Ending balance | The ending balance of the deferred revenue from this month. |\n\n## Finalized invoice example ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThis example includes only one [invoice](https://docs.stripe.com/api/invoices \"invoices\") with the following assumptions:\n\n*   The invoice finalizes on July 10, 2020.\n*   The invoice has only one line item whose service period is from July 20, 2020 to September 17, 2020.\n*   The amount for the invoice line item is 60 USD, out of which 12 USD is recognized in July and 48 USD is deferred.\n\nThe monthly summary for July 2020 would look like this:\n\n|     |     |\n| --- | --- |\n| **Recognized revenue** |     |\n| Revenue from billings this month | 12 USD |\n| **Net revenue** | 12 USD |\n| **Deferred revenue** |     |\n| Starting balance Jul 1 UTC | 0 USD |\n| Deferred change from new billings this month | 60 USD |\n| Less recognized revenue | \\-12 USD |\n| **Ending balance Jul 31 UTC** | 48 USD |\n| **Future scheduled billings** |     |\n| Starting balance Jul 1 UTC | 0 USD |\n| **Ending balance Jul 31 UTC** | 0 USD |\n\nContinuing on this example, if the invoice is refunded on August 15, 2020, the monthly summary for August 2020 would look like this:\n\n|     |     |\n| --- | --- |\n| **Recognized revenue** |     |\n| Less refunds | \\-12 USD |\n| **Net revenue** | \\-12 USD |\n| **Deferred revenue** |     |\n| Starting balance Aug 1 UTC | 48 USD |\n| Less credits issued | \\-48 USD |\n| **Ending balance Aug 31 UTC** | 0 USD |\n| **Future scheduled billings** |     |\n| Starting balance Aug 1 UTC | 0 USD |\n| **Ending balance Aug 31 UTC** | 0 USD |\n\n## Standalone payment example ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe revenue of a standalone payment is recognized when the payment occurs. This example has only one charge with the following assumptions:\n\n*   The charge occurs on July 15, 2020.\n*   The charge’s amount is 17 USD.\n\nThe monthly summary for July 2020 would look like this:\n\n|     |     |\n| --- | --- |\n| **Recognized revenue** |     |\n| Revenue from billings this month | 17 USD |\n| **Net revenue** | 17 USD |\n| **Deferred revenue** |     |\n| Starting balance Jul 1 UTC | 0 USD |\n| Deferred change from new billings this month | 17 USD |\n| Less recognized revenue | 17 USD |\n| **Ending balance Jul 31 UTC** | 0 USD |\n| **Future scheduled billings** |     |\n| Starting balance Jul 1 UTC | 0 USD |\n| **Ending balance Jul 31 UTC** | 0 USD |",
    "title": "Monthly summary | Stripe Documentation",
    "description": "Learn about the monthly summary report.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/revenue-recognition/reports/waterfall",
    "markdown": "# Revenue waterfall | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about the revenue waterfall report.\n\nThe [waterfall report](https://dashboard.stripe.com/revenue-recognition/accounting-reports) displays information about your monthly revenue. You can select a range to view, and you can specify a month to show recognized revenue up to.\n\nFor example, the waterfall below shows the revenue that was billed from April 2020 to May 2020 and monthly recognized revenue up to the end of June 2020:\n\n![Revenue waterfall](https://b.stripecdn.com/docs-statics-srv/assets/waterfall-v7.cbcf5791e6a75f6673319f1e31ca33fc.png)\n\nYou can see that 2,000,000 USD in net revenue was booked on April 2020. Out of 2,000,000 USD, 400,000 USD was recognized in May 2020. At the end of June, 1,100,000 USD was recognized, and 900,000 USD wasn’t recognized yet.\n\n## Booked revenue ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe **Booked** column in the waterfall report shows the revenue booked by month. The booked revenue of a month is the amount of revenue and deferred revenue booked by [invoice](https://docs.stripe.com/api/invoices \"invoices\") line items, invoice items, standalone payments, refunds, disputes, and metered billing usage.\n\n### Simple invoice![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example is based on the following assumptions:\n\n*   The invoice and invoice line item finalize on July 14, 2020.\n*   The amount of the invoice line item is 31 USD, and its service period is from July 21, 2020 to Aug 20, 2020.\n\nThe revenue waterfall would look like this:\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     |     |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **Jun 2020** | **Jul 2020** | **Aug 2020** | **Sep 2020** | **Recognized** | **Remaining** |\n| Jul 2020 | 31 USD |     | 11 USD | 20 USD |     | 31 USD | 0 USD |\n\n### Negative recognized revenue![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn the revenue waterfall, the recognized revenue can be negative due to refunds, disputes, invoices marked as uncollectible, and voided invoices.\n\nThis example is based on the following assumptions:\n\n*   The invoice and invoice line item finalize on July 14, 2020.\n*   The amount of the invoice line item is 31 USD, and its service period is from July 21, 2020 to Aug 20, 2020.\n*   The invoice is voided on September 12, 2020.\n\nThe booked revenue for July 2020 would net at 31 USD, and the booked revenue for Sep 2020 would be net -31 USD, as shown in the following revenue waterfall:\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     |     |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **Jun 2020** | **Jul 2020** | **Aug 2020** | **Sep 2020** | **Recognized** | **Remaining** |\n| Jul 2020 | 31 USD |     | 11 USD | 20 USD |     | 0 USD | 0 USD |\n| Aug 2020 | 0 USD |     |     |     |     | 0 USD | 0 USD |\n| Sep 2020 | \\-31 USD |     |     |     | \\-31 USD | 0 USD | 0 USD |\n\n### Revenue does not include taxes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe total amount of the invoice doesn’t necessarily equal the booked revenue because of taxes.\n\nThis example is based on the following assumptions:\n\n*   The invoice and invoice line item finalize on July 14, 2020\n*   The invoice line item’s amount is 35 USD, and its service period is from July 21, 2020 to Aug 20, 2020\n*   The invoice line item’s tax is 4 USD (inclusively)\n\nEven though the invoice’s total amount is 35 USD, the billed revenue would be 31 USD because the tax is 4 USD, as shown in the following revenue waterfall:\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     |     |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **June 2020** | **July 2020** | **Aug 2020** | **Sep 2020** | **Recognized** | **Remaining** |\n| Jul 2020 | 31 USD |     | 11 USD | 20 USD |     | 31 USD | 0 USD |\n\n### The invoice’s due amount is not revenue![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe amount due for the invoice doesn’t necessarily equal the revenue because an invoice can be paid with the customer balance.\n\nThis example is based on the following assumptions:\n\n*   The invoice and invoice line item finalize on July 14, 2020.\n*   The amount of the invoice line item is 31 USD, and its service period is from July 21, 2020 to Aug 20, 2020.\n*   The invoice is partially paid by customer balance for 10 USD.\n\nEven though the amount due for the invoice is 21 USD, the revenue would still be 31 USD, as shown in the following revenue waterfall:\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     |     |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **Jun 2020** | **Jul 2020** | **Aug 2020** | **Sep 2020** | **Recognized** | **Remaining** |\n| Jul 2020 | 31 USD |     | 11 USD | 20 USD |     | 31 USD | 0 USD |\n\n### Invoice item![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nInvoice items are created automatically during upgrade and downgrade to represent the unused time of the previous plan and the remaining time of the new plan. You can also create invoice items manually.\n\nBooked revenue includes the revenue of an invoice item in the month that the invoice item first appears.\n\nThis example is based on the following assumptions:\n\n*   The invoice item is created on May 14, 2020.\n*   The amount of the invoice item is 31 USD, and its service period is from May 14, 2020 to June 13, 2020.\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     |     |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **Apr 2020** | **May 2020** | **Jun 2020** | **Jul 2020** | **Recognized** | **Remaining** |\n| May 2020 | 31 USD |     | 18 USD | 13 USD |     | 31 USD | 0 USD |\n\nTo continue with this example, say you create an invoice on Jun 19, 2020, roll the above invoice item to the invoice, and create one more line item with the following assumptions:\n\n*   The amount of the invoice line item is 62 USD.\n*   The service period for the invoice line item is from Jun 21, 2020 to Jul 20, 2020.\n\nThe invoice contains two invoice line items. One is the invoice item created in May. The other is the invoice line item created on June 19, 2020. The total amount of the invoice is 93 USD.\n\nThe revenue waterfall would look like this:\n\n|     |     |     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     |     |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **Apr 2020** | **May 2020** | **Jun 2020** | **Jul 2020** | **Recognized** | **Remaining** |\n| May 2020 | 31 USD |     | 18 USD | 13 USD |     | 31 USD | 0 USD |\n| Jun 2020 | 62 USD |     |     | 22 USD | 40 USD | 62 USD | 0 USD |\n\n### Metered billing![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis example uses the following assumptions:\n\n*   1 unit costs 10 USD.\n*   3 units are recorded in June 2020.\n*   2 units are recorded in July 2020.\n*   An invoice finalizes on July 15, 2020, to invoice 5 units.\n\nThe revenue waterfall would look like this:\n\n|     |     |     |     |     |     |\n| --- | --- | --- | --- | --- | --- |\n| **Booked** |     | **Recognized** |     | **As of Sep 2020** |     |\n| **Month** | **Total** | **Jun 2020** | **Jul 2020** | **Recognized** | **Remaining** |\n| Jun 2020 | 30 USD | 30 USD |     | 30 USD | 0 USD |\n| Jul 2020 | 20 USD |     | 20 USD | 20 USD | 0 USD |\n\n## Replication in Sigma ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo replicate the revenue waterfall report in [Sigma](https://docs.stripe.com/stripe-data/access-data-in-dashboard), use the `revenue_recognition_debits_and_credits` table.\n\nThis query generates waterfall numbers for revenue booked from Nov 2022 to Nov 2023, and recognized up to Nov 2024. Feel free to adjust the dates to your desired time frame.\n\n#### Note\n\nIf you’re using our [chart of accounts](https://docs.stripe.com/revenue-recognition/chart-of-accounts) beta feature, be sure to update the `unbilled_ar_accounts` mapping in the query below to reflect the accounts in your general ledger.\n\n`select \"billing_period\", \"currency\", \"total\", \"2022-11-01\", \"2022-12-01\", \"2023-01-01\", \"2023-02-01\", \"2023-03-01\", \"2023-04-01\", \"2023-05-01\", \"2023-06-01\", \"2023-07-01\", \"2023-08-01\", \"2023-09-01\", \"2023-10-01\", \"2023-11-01\", \"2023-12-01\", \"2024-01-01\", \"2024-02-01\", \"2024-03-01\", \"2024-04-01\", \"2024-05-01\", \"2024-06-01\", \"2024-07-01\", \"2024-08-01\", \"2024-09-01\", \"2024-10-01\", \"2024-11-01\", \"deferred\", \"future_billings\" from (   with unbilled_ar_accounts as (     values 'UnbilledAccountsReceivable'   )    , formatted_changes as (     select       booked_date,       date_format(accounting_period_date, '%Y-%m-%d') as accounting_period,       debit,       credit,     \tdebit_account_type,     \tcredit_account_type,       currency,       if(lower(currency) in ('bif', 'clp', 'djf', 'gnf', 'jpy', 'kmf', 'krw', 'mga', 'pyg', 'rwf', 'vnd', 'vuv', 'xaf', 'xof', 'xpf'), cast(amount as decimal(18, 0)), cast(0.01 * amount as decimal(18, 2))) as decimalized_settlement_amount,       case when debit in (select * from unbilled_ar_accounts) OR credit in (select * from unbilled_ar_accounts) then true else false end AS is_unbilled     from revenue_recognition_debits_and_credits   )    , raw_net_changes as (     select       debit as account,       debit_account_type as account_type,       decimalized_settlement_amount as raw_net_change,       *     from formatted_changes     union all     select       credit as account,       credit_account_type as account_type,       -decimalized_settlement_amount as raw_net_change,       *     from formatted_changes   )    , net_changes as (     select       (case when account_type in ('Assets', 'ContraRevenue', 'Expenses', 'Losses')       \tthen raw_net_change else -raw_net_change end) as net_change,       *     from raw_net_changes   )    , waterfall_entries as (     select       account,       currency,       date_trunc('month', booked_date) as billing_period,       accounting_period,       is_unbilled,       (net_change * (case when account_type = 'Revenue' then 1 else -1 end)) as net_change     from net_changes     where account_type in ('Revenue', 'ContraRevenue')   )    select     currency,     billing_period,     sum(net_change) as total,       nullif(sum(case when accounting_period = '2022-11-01' then net_change else 0 end), 0) as \"2022-11-01\",       nullif(sum(case when accounting_period = '2022-12-01' then net_change else 0 end), 0) as \"2022-12-01\",       nullif(sum(case when accounting_period = '2023-01-01' then net_change else 0 end), 0) as \"2023-01-01\",       nullif(sum(case when accounting_period = '2023-02-01' then net_change else 0 end), 0) as \"2023-02-01\",       nullif(sum(case when accounting_period = '2023-03-01' then net_change else 0 end), 0) as \"2023-03-01\",       nullif(sum(case when accounting_period = '2023-04-01' then net_change else 0 end), 0) as \"2023-04-01\",       nullif(sum(case when accounting_period = '2023-05-01' then net_change else 0 end), 0) as \"2023-05-01\",       nullif(sum(case when accounting_period = '2023-06-01' then net_change else 0 end), 0) as \"2023-06-01\",       nullif(sum(case when accounting_period = '2023-07-01' then net_change else 0 end), 0) as \"2023-07-01\",       nullif(sum(case when accounting_period = '2023-08-01' then net_change else 0 end), 0) as \"2023-08-01\",       nullif(sum(case when accounting_period = '2023-09-01' then net_change else 0 end), 0) as \"2023-09-01\",       nullif(sum(case when accounting_period = '2023-10-01' then net_change else 0 end), 0) as \"2023-10-01\",       nullif(sum(case when accounting_period = '2023-11-01' then net_change else 0 end), 0) as \"2023-11-01\",       nullif(sum(case when accounting_period = '2023-12-01' then net_change else 0 end), 0) as \"2023-12-01\",       nullif(sum(case when accounting_period = '2024-01-01' then net_change else 0 end), 0) as \"2024-01-01\",       nullif(sum(case when accounting_period = '2024-02-01' then net_change else 0 end), 0) as \"2024-02-01\",       nullif(sum(case when accounting_period = '2024-03-01' then net_change else 0 end), 0) as \"2024-03-01\",       nullif(sum(case when accounting_period = '2024-04-01' then net_change else 0 end), 0) as \"2024-04-01\",       nullif(sum(case when accounting_period = '2024-05-01' then net_change else 0 end), 0) as \"2024-05-01\",       nullif(sum(case when accounting_period = '2024-06-01' then net_change else 0 end), 0) as \"2024-06-01\",       nullif(sum(case when accounting_period = '2024-07-01' then net_change else 0 end), 0) as \"2024-07-01\",       nullif(sum(case when accounting_period = '2024-08-01' then net_change else 0 end), 0) as \"2024-08-01\",       nullif(sum(case when accounting_period = '2024-09-01' then net_change else 0 end), 0) as \"2024-09-01\",       nullif(sum(case when accounting_period = '2024-10-01' then net_change else 0 end), 0) as \"2024-10-01\",       nullif(sum(case when accounting_period = '2024-11-01' then net_change else 0 end), 0) as \"2024-11-01\",     sum(case when accounting_period >= '2024-12-01' and is_unbilled = false then net_change else 0 end) as deferred,     sum(case when accounting_period >= '2024-12-01' and is_unbilled = true then net_change else 0 end) as future_billings    from waterfall_entries   where     net_change != 0     and billing_period >= timestamp '2022-11-01 00:00:00'     and billing_period < timestamp '2023-12-01 00:00:00'   group by currency, billing_period   order by currency asc, billing_period asc )`",
    "title": "Revenue waterfall | Stripe Documentation",
    "description": "Learn about the revenue waterfall report.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/stripe-data",
    "markdown": "# Stripe data | Stripe DocumentationThe Stripe Docs logo\n\n[](https://docs.stripe.com/stripe-data/access-data-in-dashboard \"Create custom reports\")\n\n[![](https://b.stripecdn.com/docs-statics-srv/assets/custom-reporting-purple.a483f4be74b9776cb08a355af7d3dc38.png)](https://docs.stripe.com/stripe-data/access-data-in-dashboard \"Create custom reports\")\n\nUse Sigma to generate reports from the Dashboard about charges, refunds, disputes, and other critical operational and finance metrics.",
    "title": "Stripe data | Stripe Documentation",
    "description": "Use Stripe data to answer critical questions about the performance of your business. Write queries and run reports directly in the Stripe Dashboard with Sigma. Sync Stripe data with your own data warehouse, like Amazon Redshift or Snowlflake. Or import external data into Stripe and integrate with the Data Management API or set up recurring CSV imports with a data connector, like Amazon S3.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/testing",
    "markdown": "# Testing Issuing | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to test your integration and simulate purchases.\n\nYou can issue cards and simulate purchases using your own Stripe integration in test mode. This allows you to test your integration before you go live without having to make real purchases. You can only use these cards for testing within your Stripe account and not for external purchases.\n\n#### Caution\n\nWhen testing your [authorization endpoint](https://docs.stripe.com/issuing/purchases/authorizations), make sure that you have set the endpoint for test mode in your [Issuing settings](https://dashboard.stripe.com/account/issuing). Toggle **View test data** to switch between test and live mode data and settings.\n\n## Fund your test mode Issuing balance![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBefore you create test mode transactions, you must add test mode funds to the Issuing balance on your account. These aren’t real funds, and you can only use them for simulating purchases in test mode.\n\n### Issuing users in the US![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIssuing users in the US use “pull” funding, and use _Top-ups_ to fund their Issuing balance. You can create test mode top-ups in the Dashboard, or with the [Top-ups API](https://docs.stripe.com/api/topups/create). Learn more about funding Issuing balances for [US users](https://docs.stripe.com/issuing/funding/balance?push-pull-preference=pull).\n\n### Issuing users in the UK and euro area![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo top up their balance, Issuing users in the UK and Europe “push” funds using _Funding Instructions_. You can do this in the test mode Dashboard, or with the [Funding Instructions API](https://docs.stripe.com/api/funding_instructions). Learn more about funding Issuing balances for [UK and euro area users](https://docs.stripe.com/issuing/funding/balance?push-pull-preference=push).\n\nYou can simulate a card purchase by specifying authorization details in the Dashboard.\n\n[](#without-code-create-card)\n\nUse the [API](https://docs.stripe.com/issuing/cards) or the [Dashboard](https://dashboard.stripe.com/issuing/cards) to create a cardholder and card in test mode.\n\n[](#without-code-create-test-purchase)\n\nNavigate to the [Issuing Cards page](https://dashboard.stripe.com/issuing/cards) in test mode, find your newly-created card, then click **Create test purchase**.\n\nYou can select to create either an [Authorization](https://docs.stripe.com/api/issuing/authorizations/object) or [Transaction](https://docs.stripe.com/api/issuing/transactions/object) by force capture.\n\nDepending on your selection, you can provide a number of properties, such as amount, business data, and so on.\n\nClick **Submit** to create the purchase. If you selected authorization and have configured your [synchronous webhook](https://docs.stripe.com/issuing/controls/real-time-authorizations), you can use it to approve or decline the authorization. The browser redirects to the page for the newly-created authorization.\n\n[](#without-code-create-test-capture)\n\nTo create a test capture with an authorization in the Dashboard, enter test mode and complete the following steps:\n\n1.  Navigate to the [Authorizations](https://dashboard.stripe.com/issuing/authorizations) page under **Issued Cards**.\n2.  Click the authorization you want to capture, then click **Capture**.\n\nYou can capture an authorization for an amount that’s lesser, greater, or equivalent to the authorized total. You can also [capture multiple times](https://docs.stripe.com/issuing/purchases/transactions?issuing-capture-type=multi_capture) regardless of the authorization’s current state.\n\nEnter the amount you want to capture, then click **Submit** to create the capture. The browser redirects you to the Transactions page and selects the newly created transaction.",
    "title": "Testing Issuing | Stripe Documentation",
    "description": "Learn how to test your integration and simulate purchases.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/customize-your-program",
    "markdown": "# Customize your program | Stripe DocumentationThe Stripe Docs logo\n\n## Card benefits and rewards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n### Card benefits![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAll cards issued through Stripe have a roster of available cardholder benefits. By default, your cardholders receive automatically-included benefits that vary depending on the card product type of your program. You can also enroll your program in optional benefits that fit the needs of your use case and can help drive cardholder transactions in the categories you aim to incentivize spend for. [Optional benefits](https://docs.stripe.com/issuing/customize-your-program#optional-benefits) are available for a fee.\n\nBy default, cardholders get the following benefits with each card product:\n\n|     |     |\n| --- | --- |\n| **Card product type** | **Included benefits** |\n| [Visa Business](https://usa.visa.com/support/small-business/card-benefits.html#1) | *   Auto Rental Collision Damage Waiver<br>*   Travel and Emergency Assistance Services<br>*   Purchase Security/Extended Protection<br>*   Roadside Dispatch®<br>*   [Visa SavingsEdge](https://www.visasavingsedge.com/e/members/registration.php?sid=92XXdKrlo92#step1)<br>*   Dovly Uplift™ Smart Credit Engine<br>*   ID Navigator Powered by NortonLifeLock |\n| [Visa Business Signature](https://usa.visa.com/support/small-business/card-benefits.html#2) | *   Auto Rental Collision Damage Waiver<br>*   Travel and Emergency Assistance Services<br>*   Purchase Security/Extended Protection<br>*   Roadside Dispatch®<br>*   [Visa SavingsEdge](https://www.visasavingsedge.com/e/members/registration.php?sid=92XXdKrlo92#step1)<br>*   Dovly Uplift™ Smart Credit Engine<br>*   ID Navigator Powered by NortonLifeLock<br>*   Lost Luggage Reimbursement<br>*   Travel Accident Insurance<br>*   Visa Luxury Hotel Collection access<br>*   Visa Concierge |\n| [Commercial](https://usa.visa.com/run-your-business/commercial-solutions/enterprise-government-cards/commercial-card-enterprise-government.html#2) Corporate<br><br>[Commercial](https://usa.visa.com/run-your-business/commercial-solutions/enterprise-government-cards/commercial-card-enterprise-government.html#2) Purchasing<br><br>[Commercial](https://usa.visa.com/run-your-business/commercial-solutions/enterprise-government-cards/commercial-card-enterprise-government.html#2) Fleet | *   Auto Rental Collision Damage Waiver<br>*   Travel and Emergency Assistance Services<br>*   Roadside Dispatch®<br>*   Liability waiver |\n\n#### Note\n\nThis table refers to Visa benefits only. For information about MasterCard benefits, please contact [support](https://support.stripe.com/) or your account manager.\n\nAll programs require the following services be provided to cardholders. You can offer the service to your cardholders yourself, or use the card network’s offering for a usage-based fee.\n\n*   Cardholder inquiry service\n*   Lost or stolen card reporting\n*   Emergency card replacement and emergency cash disbursement\n\n### Optional benefits![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen setting up your program, you can also choose to provide one or more additional, non-standard benefits from the list below. These benefits will incur a per active card fee when utilized that Stripe passes on to you. After you select the benefits you’re interested in or want your cards enrolled in, your Stripe account or support partner will work with you to provide additional details and make sure they’re set up properly.\n\nOptional benefits are available to you through a third-party Stripe network partner. Enrollment isn’t effective until you receive confirmation from Stripe or our benefits partner. Certain terms, conditions and exclusions apply.\n\n|     |     |\n| --- | --- |\n| **Card product type** | **Optional benefits** |\n| [Visa Business](https://usa.visa.com/support/small-business/card-benefits.html#1) | *   Baggage delay reimbursement<br>*   Cellular telephone protection<br>*   RideShare protection (not available in all states)<br>*   Emergency evacuation and transportation/repatriation of remains coverage<br>*   Emergency medical/dental benefit<br>*   Event ticket protection<br>*   Hotel theft protection (1,000 USD or 1,500 USD)<br>*   Lost luggage reimbursement (1,250 USD, 3,000 USD, or 5,000 USD)<br>*   Price protection (250 USD, 500 USD, or 1,000 USD)<br>*   Return protection<br>*   Travel accident insurance (options between 100,000 USD - 1,000,000 USD)<br>*   Trip cancellation/trip interruption (2,000 USD or 5,000 USD)<br>*   Trip delay reimbursement |\n| [Visa Business Signature](https://usa.visa.com/support/small-business/card-benefits.html#2) | *   Baggage delay reimbursement<br>*   Cellular telephone protection<br>*   RideShare protection (not available in all states)<br>*   Emergency evacuation and transportation/repatriation of remains coverage<br>*   Emergency medical/dental benefit<br>*   Event ticket protection<br>*   Hotel theft protection (1,000 USD or 1,500 USD)<br>*   Price protection (250 USD, 500 USD, or 1,000 USD)<br>*   Return protection<br>*   Trip cancellation/trip interruption (2,000 USD or 5,000 USD)<br>*   Trip delay reimbursement |\n| [Commercial](https://usa.visa.com/run-your-business/commercial-solutions/enterprise-government-cards/commercial-card-enterprise-government.html#2) Corporate<br><br>[Commercial](https://usa.visa.com/run-your-business/commercial-solutions/enterprise-government-cards/commercial-card-enterprise-government.html#2) Purchasing<br><br>[Commercial](https://usa.visa.com/run-your-business/commercial-solutions/enterprise-government-cards/commercial-card-enterprise-government.html#2) Fleet | *   Baggage delay reimbursement<br>*   RideShare protection (not available in all states)<br>*   Emergency evacuation and transportation/repatriation of remains coverage<br>*   Emergency medical/dental benefit<br>*   Event ticket protection<br>*   Hotel theft protection (1,000 USD or 1,500 USD)<br>*   Lost luggage reimbursement (1,250 USD, 3,000 USD, or 5,000 USD)<br>*   Price protection (250 USD, 500 USD, or 1,000 USD)<br>*   Return protection<br>*   Travel accident insurance (options between 100,000 USD - 1,000,000 USD)<br>*   Trip cancellation/trip interruption (2,000 USD or 5,000 USD)<br>*   Trip delay reimbursement |\n\n### Marketing![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCommunicating benefit details to cardholders is critical to ensuring they find value in benefits and use them. Our card network provider must review and approve all marketing materials or cardholder-facing terms before publishing. We work with you during the approval process by supplying you with sample, pre-approved messaging if you don’t draft your own. This is a required step to launching a benefits program. The review process can take 5-7 business days.\n\n### Rewards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAlthough Stripe doesn’t provide rewards on any of its issued cards, you can set up your own rewards program on any of the cards you issue through us. Of the card product types Stripe offers, rewards are only a requirement for Visa Business Signature. The only requirement before going live is to make sure that our card network partner has reviewed and signed off on the reward terms and promotion details.",
    "title": "Customize your program | Stripe Documentation",
    "description": "Learn how to customize Stripe Issuing to the unique needs of your business.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/categories",
    "markdown": "# Issuing merchant categories | Stripe DocumentationThe Stripe Docs logo\n\nA/C, Refrigeration Repair  \n`ac_refrigeration_repair`7623Accounting/Bookkeeping Services  \n`accounting_bookkeeping_services`8931Advertising Services  \n`advertising_services`7311Agricultural Cooperative  \n`agricultural_cooperative`0763Airlines, Air Carriers  \n`airlines_air_carriers`4511Airports, Flying Fields  \n`airports_flying_fields`4582Ambulance Services  \n`ambulance_services`4119Amusement Parks/Carnivals  \n`amusement_parks_carnivals`7996Antique Reproductions  \n`antique_reproductions`5937Antique Shops  \n`antique_shops`5932Aquariums  \n`aquariums`7998Architectural/Surveying Services  \n`architectural_surveying_services`8911Art Dealers and Galleries  \n`art_dealers_and_galleries`5971Artists Supply and Craft Shops  \n`artists_supply_and_craft_shops`5970Auto Body Repair Shops  \n`auto_body_repair_shops`7531Auto Paint Shops  \n`auto_paint_shops`7535Auto Service Shops  \n`auto_service_shops`7538Auto and Home Supply Stores  \n`auto_and_home_supply_stores`5531Automated Cash Disburse  \n`automated_cash_disburse`6011Automated Fuel Dispensers  \n`automated_fuel_dispensers`5542Automobile Associations  \n`automobile_associations`8675Automotive Parts and Accessories Stores  \n`automotive_parts_and_accessories_stores`5533Automotive Tire Stores  \n`automotive_tire_stores`5532Bail and Bond Payments (payment to the surety for the bond, not the actual bond paid to the government agency)  \n`bail_and_bond_payments`9223Bakeries  \n`bakeries`5462Bands, Orchestras  \n`bands_orchestras`7929Barber and Beauty Shops  \n`barber_and_beauty_shops`7230Betting/Casino Gambling  \n`betting_casino_gambling`7995Bicycle Shops  \n`bicycle_shops`5940Billiard/Pool Establishments  \n`billiard_pool_establishments`7932Boat Dealers  \n`boat_dealers`5551Boat Rentals and Leases  \n`boat_rentals_and_leases`4457Book Stores  \n`book_stores`5942Books, Periodicals, and Newspapers  \n`books_periodicals_and_newspapers`5192Bowling Alleys  \n`bowling_alleys`7933Bus Lines  \n`bus_lines`4131Business/Secretarial Schools  \n`business_secretarial_schools`8244Buying/Shopping Services  \n`buying_shopping_services`7278Cable, Satellite, and Other Pay Television and Radio  \n`cable_satellite_and_other_pay_television_and_radio`4899Camera and Photographic Supply Stores  \n`camera_and_photographic_supply_stores`5946Candy, Nut, and Confectionery Stores  \n`candy_nut_and_confectionery_stores`5441Car Rental Agencies  \n`car_rental_agencies`7512Car Washes  \n`car_washes`7542Car and Truck Dealers (New & Used) Sales, Service, Repairs Parts and Leasing  \n`car_and_truck_dealers_new_used`5511Car and Truck Dealers (Used Only) Sales, Service, Repairs Parts and Leasing  \n`car_and_truck_dealers_used_only`5521Carpentry Services  \n`carpentry_services`1750Carpet/Upholstery Cleaning  \n`carpet_upholstery_cleaning`7217Caterers  \n`caterers`5811Charitable and Social Service Organizations - Fundraising  \n`charitable_and_social_service_organizations_fundraising`8398Chemicals and Allied Products (Not Elsewhere Classified)  \n`chemicals_and_allied_products`5169Child Care Services  \n`child_care_services`8351Childrens and Infants Wear Stores  \n`childrens_and_infants_wear_stores`5641Chiropodists, Podiatrists  \n`chiropodists_podiatrists`8049Chiropractors  \n`chiropractors`8041Cigar Stores and Stands  \n`cigar_stores_and_stands`5993Civic, Social, Fraternal Associations  \n`civic_social_fraternal_associations`8641Cleaning and Maintenance  \n`cleaning_and_maintenance`7349Clothing Rental  \n`clothing_rental`7296Colleges, Universities  \n`colleges_universities`8220Commercial Equipment (Not Elsewhere Classified)  \n`commercial_equipment`5046Commercial Footwear  \n`commercial_footwear`5139Commercial Photography, Art and Graphics  \n`commercial_photography_art_and_graphics`7333Commuter Transport, Ferries  \n`commuter_transport_and_ferries`4111Computer Network Services  \n`computer_network_services`4816Computer Programming  \n`computer_programming`7372Computer Repair  \n`computer_repair`7379Computer Software Stores  \n`computer_software_stores`5734Computers, Peripherals, and Software  \n`computers_peripherals_and_software`5045Concrete Work Services  \n`concrete_work_services`1771Construction Materials (Not Elsewhere Classified)  \n`construction_materials`5039Consulting, Public Relations  \n`consulting_public_relations`7392Correspondence Schools  \n`correspondence_schools`8241Cosmetic Stores  \n`cosmetic_stores`5977Counseling Services  \n`counseling_services`7277Country Clubs  \n`country_clubs`7997Courier Services  \n`courier_services`4215Court Costs, Including Alimony and Child Support - Courts of Law  \n`court_costs`9211Credit Reporting Agencies  \n`credit_reporting_agencies`7321Cruise Lines  \n`cruise_lines`4411Dairy Products Stores  \n`dairy_products_stores`5451Dance Hall, Studios, Schools  \n`dance_hall_studios_schools`7911Dating/Escort Services  \n`dating_escort_services`7273Dentists, Orthodontists  \n`dentists_orthodontists`8021Department Stores  \n`department_stores`5311Detective Agencies  \n`detective_agencies`7393Digital Goods Media – Books, Movies, Music  \n`digital_goods_media`5815Digital Goods – Applications (Excludes Games)  \n`digital_goods_applications`5817Digital Goods – Games  \n`digital_goods_games`5816Digital Goods – Large Digital Goods Merchant  \n`digital_goods_large_volume`5818Direct Marketing - Catalog Merchant  \n`direct_marketing_catalog_merchant`5964Direct Marketing - Combination Catalog and Retail Merchant  \n`direct_marketing_combination_catalog_and_retail_merchant`5965Direct Marketing - Inbound Telemarketing  \n`direct_marketing_inbound_telemarketing`5967Direct Marketing - Insurance Services  \n`direct_marketing_insurance_services`5960Direct Marketing - Other  \n`direct_marketing_other`5969Direct Marketing - Outbound Telemarketing  \n`direct_marketing_outbound_telemarketing`5966Direct Marketing - Subscription  \n`direct_marketing_subscription`5968Direct Marketing - Travel  \n`direct_marketing_travel`5962Discount Stores  \n`discount_stores`5310Doctors  \n`doctors`8011Door-To-Door Sales  \n`door_to_door_sales`5963Drapery, Window Covering, and Upholstery Stores  \n`drapery_window_covering_and_upholstery_stores`5714Drinking Places  \n`drinking_places`5813Drug Stores and Pharmacies  \n`drug_stores_and_pharmacies`5912Drugs, Drug Proprietaries, and Druggist Sundries  \n`drugs_drug_proprietaries_and_druggist_sundries`5122Dry Cleaners  \n`dry_cleaners`7216Durable Goods (Not Elsewhere Classified)  \n`durable_goods`5099Duty Free Stores  \n`duty_free_stores`5309Eating Places, Restaurants  \n`eating_places_restaurants`5812Educational Services  \n`educational_services`8299Electric Razor Stores  \n`electric_razor_stores`5997Electric Vehicle Charging  \n`electric_vehicle_charging`5552Electrical Parts and Equipment  \n`electrical_parts_and_equipment`5065Electrical Services  \n`electrical_services`1731Electronics Repair Shops  \n`electronics_repair_shops`7622Electronics Stores  \n`electronics_stores`5732Elementary, Secondary Schools  \n`elementary_secondary_schools`8211Emergency Services (GCAS) (Visa use only)  \n`emergency_services_gcas_visa_use_only`9702Employment/Temp Agencies  \n`employment_temp_agencies`7361Equipment Rental  \n`equipment_rental`7394Exterminating Services  \n`exterminating_services`7342Family Clothing Stores  \n`family_clothing_stores`5651Fast Food Restaurants  \n`fast_food_restaurants`5814Financial Institutions  \n`financial_institutions`6012Fines - Government Administrative Entities  \n`fines_government_administrative_entities`9222Fireplace, Fireplace Screens, and Accessories Stores  \n`fireplace_fireplace_screens_and_accessories_stores`5718Floor Covering Stores  \n`floor_covering_stores`5713Florists  \n`florists`5992Florists Supplies, Nursery Stock, and Flowers  \n`florists_supplies_nursery_stock_and_flowers`5193Freezer and Locker Meat Provisioners  \n`freezer_and_locker_meat_provisioners`5422Fuel Dealers (Non Automotive)  \n`fuel_dealers_non_automotive`5983Funeral Services, Crematories  \n`funeral_services_crematories`7261Furniture Repair, Refinishing  \n`furniture_repair_refinishing`7641Furniture, Home Furnishings, and Equipment Stores, Except Appliances  \n`furniture_home_furnishings_and_equipment_stores_except_appliances`5712Furriers and Fur Shops  \n`furriers_and_fur_shops`5681General Services  \n`general_services`1520Gift, Card, Novelty, and Souvenir Shops  \n`gift_card_novelty_and_souvenir_shops`5947Glass, Paint, and Wallpaper Stores  \n`glass_paint_and_wallpaper_stores`5231Glassware, Crystal Stores  \n`glassware_crystal_stores`5950Golf Courses - Public  \n`golf_courses_public`7992Government Licensed On-line Casinos (On-Line Gambling)(US Region only)  \n`government_licensed_online_casions_online_gambling_us_region_only`7801Government Services (Not Elsewhere Classified)  \n`government_services`9399Government-Licensed Horse/Dog Racing (US Region only)  \n`government_licensed_horse_dog_racing_us_region_only`7802Government-Owned Lotteries (Non-US region)  \n`government_owned_lotteries_non_us_region`9406Government-Owned Lotteries (US Region only)  \n`government_owned_lotteries_us_region_only`7800Grocery Stores, Supermarkets  \n`grocery_stores_supermarkets`5411Hardware Stores  \n`hardware_stores`5251Hardware, Equipment, and Supplies  \n`hardware_equipment_and_supplies`5072Health and Beauty Spas  \n`health_and_beauty_spas`7298Hearing Aids Sales and Supplies  \n`hearing_aids_sales_and_supplies`5975Heating, Plumbing, A/C  \n`heating_plumbing_a_c`1711Hobby, Toy, and Game Shops  \n`hobby_toy_and_game_shops`5945Home Supply Warehouse Stores  \n`home_supply_warehouse_stores`5200Hospitals  \n`hospitals`8062Hotels, Motels, and Resorts  \n`hotels_motels_and_resorts`7011Household Appliance Stores  \n`household_appliance_stores`5722Industrial Supplies (Not Elsewhere Classified)  \n`industrial_supplies`5085Information Retrieval Services  \n`information_retrieval_services`7375Insurance - Default  \n`insurance_default`6399Insurance Underwriting, Premiums  \n`insurance_underwriting_premiums`6300Intra-Company Purchases  \n`intra_company_purchases`9950Jewelry Stores, Watches, Clocks, and Silverware Stores  \n`jewelry_stores_watches_clocks_and_silverware_stores`5944Landscaping Services  \n`landscaping_services`0780Laundries  \n`laundries`7211Laundry, Cleaning Services  \n`laundry_cleaning_services`7210Legal Services, Attorneys  \n`legal_services_attorneys`8111Luggage and Leather Goods Stores  \n`luggage_and_leather_goods_stores`5948Lumber, Building Materials Stores  \n`lumber_building_materials_stores`5211Manual Cash Disburse  \n`manual_cash_disburse`6010Marinas, Service and Supplies  \n`marinas_service_and_supplies`4468Marketplaces  \n`marketplaces`5262Masonry, Stonework, and Plaster  \n`masonry_stonework_and_plaster`1740Massage Parlors  \n`massage_parlors`7297Medical Services  \n`medical_services`8099Medical and Dental Labs  \n`medical_and_dental_labs`8071Medical, Dental, Ophthalmic, and Hospital Equipment and Supplies  \n`medical_dental_ophthalmic_and_hospital_equipment_and_supplies`5047Membership Organizations  \n`membership_organizations`8699Mens and Boys Clothing and Accessories Stores  \n`mens_and_boys_clothing_and_accessories_stores`5611Mens, Womens Clothing Stores  \n`mens_womens_clothing_stores`5691Metal Service Centers  \n`metal_service_centers`5051Miscellaneous Apparel and Accessory Shops  \n`miscellaneous_apparel_and_accessory_shops`5699Miscellaneous Auto Dealers  \n`miscellaneous_auto_dealers`5599Miscellaneous Business Services  \n`miscellaneous_business_services`7399Miscellaneous Food Stores - Convenience Stores and Specialty Markets  \n`miscellaneous_food_stores`5499Miscellaneous General Merchandise  \n`miscellaneous_general_merchandise`5399Miscellaneous General Services  \n`miscellaneous_general_services`7299Miscellaneous Home Furnishing Specialty Stores  \n`miscellaneous_home_furnishing_specialty_stores`5719Miscellaneous Publishing and Printing  \n`miscellaneous_publishing_and_printing`2741Miscellaneous Recreation Services  \n`miscellaneous_recreation_services`7999Miscellaneous Repair Shops  \n`miscellaneous_repair_shops`7699Miscellaneous Specialty Retail  \n`miscellaneous_specialty_retail`5999Mobile Home Dealers  \n`mobile_home_dealers`5271Motion Picture Theaters  \n`motion_picture_theaters`7832Motor Freight Carriers and Trucking - Local and Long Distance, Moving and Storage Companies, and Local Delivery Services  \n`motor_freight_carriers_and_trucking`4214Motor Homes Dealers  \n`motor_homes_dealers`5592Motor Vehicle Supplies and New Parts  \n`motor_vehicle_supplies_and_new_parts`5013Motorcycle Shops and Dealers  \n`motorcycle_shops_and_dealers`5571Motorcycle Shops, Dealers  \n`motorcycle_shops_dealers`5561Music Stores-Musical Instruments, Pianos, and Sheet Music  \n`music_stores_musical_instruments_pianos_and_sheet_music`5733News Dealers and Newsstands  \n`news_dealers_and_newsstands`5994Non-FI, Money Orders  \n`non_fi_money_orders`6051Non-FI, Stored Value Card Purchase/Load  \n`non_fi_stored_value_card_purchase_load`6540Nondurable Goods (Not Elsewhere Classified)  \n`nondurable_goods`5199Nurseries, Lawn and Garden Supply Stores  \n`nurseries_lawn_and_garden_supply_stores`5261Nursing/Personal Care  \n`nursing_personal_care`8050Office and Commercial Furniture  \n`office_and_commercial_furniture`5021Opticians, Eyeglasses  \n`opticians_eyeglasses`8043Optometrists, Ophthalmologist  \n`optometrists_ophthalmologist`8042Orthopedic Goods - Prosthetic Devices  \n`orthopedic_goods_prosthetic_devices`5976Osteopaths  \n`osteopaths`8031Package Stores-Beer, Wine, and Liquor  \n`package_stores_beer_wine_and_liquor`5921Paints, Varnishes, and Supplies  \n`paints_varnishes_and_supplies`5198Parking Lots, Garages  \n`parking_lots_garages`7523Passenger Railways  \n`passenger_railways`4112Pawn Shops  \n`pawn_shops`5933Pet Shops, Pet Food, and Supplies  \n`pet_shops_pet_food_and_supplies`5995Petroleum and Petroleum Products  \n`petroleum_and_petroleum_products`5172Photo Developing  \n`photo_developing`7395Photographic Studios  \n`photographic_studios`7221Photographic, Photocopy, Microfilm Equipment, and Supplies  \n`photographic_photocopy_microfilm_equipment_and_supplies`5044Picture/Video Production  \n`picture_video_production`7829Piece Goods, Notions, and Other Dry Goods  \n`piece_goods_notions_and_other_dry_goods`5131Plumbing, Heating Equipment, and Supplies  \n`plumbing_heating_equipment_and_supplies`5074Political Organizations  \n`political_organizations`8651Postal Services - Government Only  \n`postal_services_government_only`9402Precious Stones and Metals, Watches and Jewelry  \n`precious_stones_and_metals_watches_and_jewelry`5094Professional Services  \n`professional_services`8999Public Warehousing and Storage - Farm Products, Refrigerated Goods, Household Goods, and Storage  \n`public_warehousing_and_storage`4225Quick Copy, Repro, and Blueprint  \n`quick_copy_repro_and_blueprint`7338Railroads  \n`railroads`4011Real Estate Agents and Managers - Rentals  \n`real_estate_agents_and_managers_rentals`6513Record Stores  \n`record_stores`5735Recreational Vehicle Rentals  \n`recreational_vehicle_rentals`7519Religious Goods Stores  \n`religious_goods_stores`5973Religious Organizations  \n`religious_organizations`8661Roofing/Siding, Sheet Metal  \n`roofing_siding_sheet_metal`1761Secretarial Support Services  \n`secretarial_support_services`7339Security Brokers/Dealers  \n`security_brokers_dealers`6211Service Stations  \n`service_stations`5541Sewing, Needlework, Fabric, and Piece Goods Stores  \n`sewing_needlework_fabric_and_piece_goods_stores`5949Shoe Repair/Hat Cleaning  \n`shoe_repair_hat_cleaning`7251Shoe Stores  \n`shoe_stores`5661Small Appliance Repair  \n`small_appliance_repair`7629Snowmobile Dealers  \n`snowmobile_dealers`5598Special Trade Services  \n`special_trade_services`1799Specialty Cleaning  \n`specialty_cleaning`2842Sporting Goods Stores  \n`sporting_goods_stores`5941Sporting/Recreation Camps  \n`sporting_recreation_camps`7032Sports Clubs/Fields  \n`sports_clubs_fields`7941Sports and Riding Apparel Stores  \n`sports_and_riding_apparel_stores`5655Stamp and Coin Stores  \n`stamp_and_coin_stores`5972Stationary, Office Supplies, Printing and Writing Paper  \n`stationary_office_supplies_printing_and_writing_paper`5111Stationery Stores, Office, and School Supply Stores  \n`stationery_stores_office_and_school_supply_stores`5943Swimming Pools Sales  \n`swimming_pools_sales`5996TUI Travel - Germany  \n`t_ui_travel_germany`4723Tailors, Alterations  \n`tailors_alterations`5697Tax Payments - Government Agencies  \n`tax_payments_government_agencies`9311Tax Preparation Services  \n`tax_preparation_services`7276Taxicabs/Limousines  \n`taxicabs_limousines`4121Telecommunication Equipment and Telephone Sales  \n`telecommunication_equipment_and_telephone_sales`4812Telecommunication Services  \n`telecommunication_services`4814Telegraph Services  \n`telegraph_services`4821Tent and Awning Shops  \n`tent_and_awning_shops`5998Testing Laboratories  \n`testing_laboratories`8734Theatrical Ticket Agencies  \n`theatrical_ticket_agencies`7922Timeshares  \n`timeshares`7012Tire Retreading and Repair  \n`tire_retreading_and_repair`7534Tolls/Bridge Fees  \n`tolls_bridge_fees`4784Tourist Attractions and Exhibits  \n`tourist_attractions_and_exhibits`7991Towing Services  \n`towing_services`7549Trailer Parks, Campgrounds  \n`trailer_parks_campgrounds`7033Transportation Services (Not Elsewhere Classified)  \n`transportation_services`4789Travel Agencies, Tour Operators  \n`travel_agencies_tour_operators`4722Truck Stops  \n`truck_stop_iteration`7511Truck/Utility Trailer Rentals  \n`truck_utility_trailer_rentals`7513Typesetting, Plate Making, and Related Services  \n`typesetting_plate_making_and_related_services`2791Typewriter Stores  \n`typewriter_stores`5978U.S. Federal Government Agencies or Departments  \n`u_s_federal_government_agencies_or_departments`9405Uniforms, Commercial Clothing  \n`uniforms_commercial_clothing`5137Used Merchandise and Secondhand Stores  \n`used_merchandise_and_secondhand_stores`5931Utilities  \n`utilities`4900Variety Stores  \n`variety_stores`5331Veterinary Services  \n`veterinary_services`0742Video Amusement Game Supplies  \n`video_amusement_game_supplies`7993Video Game Arcades  \n`video_game_arcades`7994Video Tape Rental Stores  \n`video_tape_rental_stores`7841Vocational/Trade Schools  \n`vocational_trade_schools`8249Watch/Jewelry Repair  \n`watch_jewelry_repair`7631Welding Repair  \n`welding_repair`7692Wholesale Clubs  \n`wholesale_clubs`5300Wig and Toupee Stores  \n`wig_and_toupee_stores`5698Wires, Money Orders  \n`wires_money_orders`4829Womens Accessory and Specialty Shops  \n`womens_accessory_and_specialty_shops`5631Womens Ready-To-Wear Stores  \n`womens_ready_to_wear_stores`5621Wrecking and Salvage Yards  \n`wrecking_and_salvage_yards`5935",
    "title": "Issuing merchant categories | Stripe Documentation",
    "description": "Learn about the available categories that businesses are grouped in.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/adding-funds-to-your-card-program",
    "markdown": "# Add funds to your card program\n\n## Learn about your options to fund card spend.\n\nIn order to power card spend, Stripe Issuing users must fund an Issuing Balance. Your default funding option is using an external bank account. Depending on your integration and region, you have the option to pull funds or to push funds from an external bank account to your Issuing balance. If you use Stripe Payments, you can fund your Issuing balance from your Stripe acquiring balance and/or from your external bank account. This page provides information to help you decide which mechanism works better for your integration.\n\n## Funding your card program![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nDetermining how to fund your card program is a core part of your Stripe Issuing integration. In order to avoid insufficient funds declines when making purchases on issued cards, your account needs to have sufficient funds in the Issuing Balance. As a best practice you should:\n\n1.  Add funds to cover planned spending.\n2.  Create alerts that tell you when your Issuing balance is low.\n3.  Review funding options to efficiently move money into your Issuing balance.\n\nFor businesses on Stripe Issuing, the default way to fund your card spend is a top-up from an external bank account. Specifically, in the US, the default is a pull-funded top-up, and in the UK and Euro zone the default is a push-funded top-up.\n\n|     |     |     |     |     |\n| --- | --- | --- | --- | --- |\n| ### Funding option![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) | **Pull-funded top-ups**<br><br>_Default method in the US. Sufficient as sole funding method._ | **Push-funded top-ups**<br><br>_Default method in the UK and Euro area; optional in the US. Sufficient as sole funding method._ | **Stripe balance transfers**<br><br>_Requires Stripe Payments. Optional in the US, UK and Euro area._ | **Connect balance transfers**<br><br>_Requires Stripe Connect. Optional in the US, UK and Euro area._ |\n| ### How it works![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) | Pull-funded top-ups fund your Issuing balance from an external bank account.<br><br>Users with a direct or Connect integration can initiate pull-funded top-ups via the [create top-up](https://docs.stripe.com/api/topups/create) endpoint or in the Dashboard. A platform’s connected accounts can initiate pull-funded top-ups via the API only. | Push-funded top-ups also fund your Issuing balance from an external bank account. However, unlike pull-funded top-ups, you don’t need to add your external bank account to Stripe.<br><br>Instead, push-funded top-ups use an account or routing number to push funds to your Issuing balance via: Same-day wire or ACH credit transfer (US) BACS / FPS (UK) Sepa Credit Transfer (Euro area)<br><br>Routing information can be found via the [Dashboard](https://docs.stripe.com/issuing/funding/balance?issuing-currency=usd#access-account-information-for-push-funding-in-the-dashboard) or by making a `create` or `list` call to the [Funding Instruction](https://docs.stripe.com/api/issuing/funding_instructions) endpoint. However, connected accounts can only view routing information by calling [List Funding Instructions](https://docs.stripe.com/api/issuing/funding_instructions/list). | Balance transfers move funds to your Issuing balance from your Stripe balance, which contains your payments proceeds.<br><br>Users with a direct or Connect integration can initiate Stripe balance transfers via the balance transfer API endpoint or in the Dashboard. A platform’s connected accounts can only initiate Stripe balance transfers to Issuing balance via the API.<br><br>If you need to pay out excess funds in the Issuing balance, you can initiate a [Payout](https://docs.stripe.com/api/payouts/create). | Transfers funds to or from the Issuing balance of a connected account from the platform’s Issuing balance. |\n| ### Fund origination![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) | External bank account | External bank account | Stripe balance (Payments) | Platform Issuing balance (Connect) |\n| ### Settlement time![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) | Funds can take up to 5 business days to become available. Expedited top-ups may be available. | Funding speed depends on the rails that the funds are pushed over. There may be additional delays for your first few top-ups. | Funds settle instantly in the US and within one business day in the UK and Euro area. | Funds settle instantly in all available regions. |\n| ### Availability![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) | Available in the US on Direct and Connect integrations.<br><br>See documentation for pull-funded top-ups for [Connect](https://docs.stripe.com/issuing/connect/funding?issuing-funding-type=us-pull-funding) and [Direct](https://docs.stripe.com/issuing/funding/balance?push-pull-preference=pull) integrations.<br><br>Not currently available in the UK or Euro area. | Available in the US in the APIbeta and Dashboard. See documentation for push-funded top-ups for [Connect](https://docs.stripe.com/issuing/connect/funding?issuing-funding-type=us-push-funding) or [Direct](https://docs.stripe.com/issuing/funding/balance?push-pull-preference=push) integrations.<br><br>Available in the UK and Euro area. See the documentation for push-funded top-ups for Connect ([UK](https://docs.stripe.com/issuing/connect/funding?issuing-funding-type=uk-push-funding), [Euro area](https://docs.stripe.com/issuing/connect/funding?issuing-funding-type=euro-push-funding)) and [Direct](https://docs.stripe.com/issuing/funding/balance?push-pull-preference=push) integrations. | Available in the USbeta, UKbeta, and Euro areabeta. See documentation for [Connect](https://docs.stripe.com/issuing/connect/funding?issuing-funding-type=us-pull-funding) and [Direct](https://docs.stripe.com/issuing/funding/balance?push-pull-preference) integrations. | Available in the USbeta, UKbeta, and Euro areabeta. See documentation for [Connect](https://docs.stripe.com/issuing/connect/funding?issuing-funding-type=us-pull-funding) integrations. |\n| ### Best for![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) | Pull-funded top-ups are best for users who want to build their own logic around when they want to top up. For example, you can build a flow to use the Balances API to view your current balances and automatically trigger a pull-funded top-up if your Issuing balance goes below a certain threshold.<br><br>For US users, this is the easiest funding method to start with, especially when using the Dashboard. | Push-funded top-ups are best for users focused on capital efficiency, since this funding method allows platforms to fund their Issuing balance on the same day. Platforms can then hold more funds in an interest-bearing account outside of Stripe and quickly move those funds into their Issuing balance as needed.<br><br>Push-funded top-ups are also good for users who have originating banks with APIs that support automated integrations. Some users also prefer not to connect an external bank account to their Issuing balance. | Balance transfers are best for users that also use Stripe to process their payments since it allows the user to use their acquiring balance to fund their Issuing balance. | Platform Issuing balance transfers are best for users that have a Connect integration and plan to programmatically fund connected accounts, since this funding mechanism allows the platform to instantly pre-fund any connected account’s Issuing balance to the right level to avoid transaction declines. |\n\n## Using funding methods in practice![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBusinesses on Stripe Issuing can operate a card program with the default funding method and nothing more. But if your business is integrated with additional Stripe products such as Connect or Payments, you can benefit by using multiple methods.\n\nFor example, suppose you are an e-commerce platform providing an expense management card to each of the online shops on your platform. In this case, build a [Connect integration](https://docs.stripe.com/issuing/connect) where each shop on your platform represents a connected account. Shops on your platform can accept payments and fund cards by transferring balances, all on Stripe. If your merchants also collect funds from users outside of Stripe, they can use push-funded top-ups from an external bank account. When you’re ready, allocate collected funds by transferring funds from your platform Issuing balance to the Issuing balance of specific connected accounts.\n\nTaking a US platform as an example, your funding setup could look like this:\n\nYou could also enable your shops, represented as connected accounts, to directly accept payments and move funds into their account to pay for their expenses.",
    "title": "Add funds to your card program | Stripe Documentation",
    "description": "Learn about your options to fund card spend.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/purchases/atm-usage",
    "markdown": "# Use cards at automated teller machines (ATMs)\n\n## Learn how you can use your Stripe Issuing cards at ATMs.\n\nStripe allows you to use your cards at ATMs for cash withdrawals if you enable the feature for your account, and if you’ve set up valid PINs for them.\n\n## Enable ATM withdrawals![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nATM withdrawals aren’t enabled by default, so you need to request approval for your use case [through support](https://support.stripe.com/?contact=true). In addition, make sure all your relevant cards have PINs set up by following our [PIN management guide](https://docs.stripe.com/issuing/cards/pin-management).\n\n## Treatment of ATM transactions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe Issuing treats ATM withdrawals as standard transactions, but a few characteristics of the authorization signal that it’s an ATM withdrawal:\n\n*   The [merchant category code](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-merchant_data-category_code) is set to 6011—`Automated Cash Disburse`.\n*   An ATM [fee value](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-amount_details-atm_fee) might be present.\n*   The [PIN check](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-verification_data-pin_check) is a `match`.\n\nYou can approve or decline them using the same [webhook integration](https://docs.stripe.com/issuing/controls/real-time-authorizations) as other authorizations.\n\n## Restrictions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n*   **Limits**: ATM withdrawals are subject to a daily maximum limit. Your support representative can share your limit with you and work to increase it if it’s not sufficient for your use case.\n*   **Cash Deposits**: Stripe-issued cards aren’t enrolled in any ATM cash deposit programs and don’t have the ability to accept cash deposits. Cash deposit-enabled ATMs won’t trigger prompts for deposits when a Stripe-issued card is used.\n\n## Availability![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUsers in the US can [contact support](https://support.stripe.com/?contact=true) to request ATM cash withdrawals on issued cards. Withdrawals are not yet available in the UK or EU, but users can [contact support](https://support.stripe.com/?contact=true) for more information about future availability in these regions.\n\n## Fees![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe does not assess any fees of its own for ATM withdrawals, but ATM operators often do. These fees are generally:\n\n*   **ATM use surcharge**: Added to the total transaction amount (this is the [atm fee](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-amount_details-atm_fee) amount a cardholder sees at the ATM.)\n    \n*   **Dynamic Currency Conversion (DCC)**: When the cardholder is given the option between a local currency and the card’s default currency (for example, using a US issued card in the EU), ATMs generally apply a markup on conversion rates when a cardholder picks the card’s default currency. While this isn’t an explicit fee, the conversion rates functionally behave as a tax on ATM transactions.\n    \n\nNeither the ATM provider nor Stripe apply any cash advance fees or annual percentage rate (APR) to an ATM withdrawal.\n\nDifferent markets have different ATM rules and fee structures that influence the frequency and intensity of the fees charged, but the way we describe the fees above generally applies regardless of the country. If an ATM charges a fee to a cardholder, we’ll pass it on as part of the amount for a given authorization. Otherwise, cardholders and issuing users won’t see any impact.",
    "title": "Use cards at automated teller machines (ATMs) | Stripe Documentation",
    "description": "Learn how you can use your Stripe Issuing cards at ATMs.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/manage-fraud",
    "markdown": "# Manage fraud with Stripe Issuing controls and tools\n\n## Understand how fraud can impact your issuing program and the steps you can take to combat it.\n\nAs a payment facilitation product, Issuing inherently incurs potential fraud risks and liabilities for both businesses and issuers. Because of this, you need to understand your responsibility for losses and how to best manage this risk as part of using our platform. This document provides guidance on the types of fraud, identifies who’s liable when fraud occurs, and outlines the resources available from Stripe to assist you in monitoring for and preventing fraud.\n\n## Fraud in Issuing![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPayments has three primary types of fraud:\n\n*   **Transaction fraud**: The unauthorized use of a payment card to fraudulently obtain money or property\n*   **Business fraud**: A person creates a fraudulent account (often with a stolen identity) to commit fraud.\n*   **Account takeover (ATO) fraud**: A legitimate account owner’s login is compromised by an unauthorized third party who takes actions on their account.\n\nWhile business fraud and ATO fraud can occur in Issuing, transaction fraud often poses a greater risk. This guide focuses on transaction fraud and the tools available to help you combat it.\n\n## Transaction fraud![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nOn Stripe Issuing, we see transaction fraud in the form of unauthorized charges on a Stripe-issued card. Transaction fraud can occur at any point in a cardholder’s lifecycle. Purchases at legitimate businesses are also subject to transaction fraud. An issued card can be compromised by:\n\n*   Physical theft\n*   Being lost by the cardholder\n*   Compromised credentials through tactics such as:\n    *   Phishing\n    *   Spyware\n    *   Non-secure checkouts\n    *   External breaches\n\n### Loss liability![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLoss liability stems from an issue with a transaction that results in a financial loss for one party. Liability usually arises from either transaction fraud or a business not fulfilling its obligations on a purchase.\n\nLoss liability is assigned to either the merchant (the provider of the service or goods being purchased), you as the Stripe Issuing user, or (in rare cases) the cardholder. This means that when loss liability is allocated to the “issuer,” you’re accountable unless an exception applies.\n\nStripe Issuing allows you to design your fraud monitoring system, and make your own business logic and transaction decisions. Although Stripe might offer assistance with transaction fraud prevention, you’re still responsible for all losses where the Issuer is deemed liable. So you need to build sufficient controls to monitor, manage, and prevent fraud.\n\n### Liability assignment![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn many cases, the business owns liability for fraudulent transactions. There are, however, a few _factors that might result in the liability shifting to you_, the Stripe Issuing user.\n\n*   **Card-present Transactions** If the card or a mobile wallet such as Apple Pay and Google Pay is present for the transaction, the issuer is generally liable for fraud, with a few exceptions:\n    \n*   Cards and wallets need to be electronically read wherever available, that is, by using the contact or contactless chip interface or swiping the magnetic stripe. For manually entered card numbers, such as with mail order or telephone orders, _liability is with the business_.\n    \n*   If a chip-enabled card is used at a terminal that only supports magnetic stripe payments, liability shifts to the merchant.\n    \n    *   However, if the terminal used by the merchant generally supports chip transactions, but the magnetic stripe is used for a given transaction, _liability remains with you, as the issuing user_.\n*   **Card-not-present transactions** If the card is _not_ present for the transaction (that is, online commerce), _liability is determined primarily by 3DS_.\n    \n\n#### Note\n\n**_3DS_** [3DS](https://docs.stripe.com/issuing/3d-secure) is an additional layer of authentication that a merchant can request on authorizations it believes to be high risk (and thus likely to result in the issuer being responsible for fraud liability in the event of a dispute). This additional layer of verification (usually through a form of multi-factor authentication such as a one-time passcode) triggers a “liability shift” where fraud liability shifts from the merchant to the issuer, regardless of the circumstance.\n\nWhen 3DS is requested by a business for a specific card authorization, the cardholder might need to complete additional authentication to complete the transaction. However, whether the authentication is triggered depends on whether you’ve enrolled the card in 3DS and whether there are any exemptions or “frictionless” flows, which automatically bypass any configured 3DS requests. 3DS enrollment isn’t required in the US and is turned off by default; accordingly, US issuers don’t consistently enroll their cards because they don’t want any unnecessary friction for their cardholders. In the context of Stripe Issuing, when a merchant triggers 3DS, fraud liability usually automatically shifts to you, as the Stripe Issuing user, regardless of whether you have 3DS enabled on your cards. Accordingly, having 3DS enabled helps you reduce the risk of financial liability for fraudulent transactions. To learn more, you can [read about 3DS for Stripe Issuing](https://docs.stripe.com/issuing/3d-secure).\n\n### Digital Wallet Usage![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nRegardless of 3DS considerations, the use of a Stripe Issuing card in an Apple Pay or Google Pay wallet for a card-not-present transaction also _shifts liability to the issuer_.\n\nGiven the risk that liability transaction fraud can create, you need to take proactive measures to monitor for and prevent it. The following are controls and tools that you can add to your Stripe Issuing program. We recommend using as many controls and tools as possible to limit your program’s transaction fraud risk.\n\n| Control/tool | Benefits | Drawbacks |\n| --- | --- | --- |\n| [3D Secure](https://docs.stripe.com/issuing/3d-secure) (3DS) | Reduces loss liability on certain transactions by introducing an additional layer of cardholder verification. | Cardholders experience an additional verification step for some transactions. |\n| [Spending controls](https://docs.stripe.com/issuing/controls/spending-controls) | Sets rules on cards and cardholders to control spending. | Limited capability to apply a complex set of rules. |\n| [Real-time webhook](https://docs.stripe.com/issuing/controls/real-time-authorizations) | Approves or rejects an authorization decision in real-time based on all data available at the point of sale. | Requires integration into the Stripe webhook. |\n| Stripe Defense Layer beta | Automatically blocks high-risk transactions based on Stripe’s own risk modeling | Some legitimate transactions might be declined. |\n| [Verification Data](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-verification_data) | Declines authorizations when the CVV or expiration date don’t match on the authorization. | Custom configuration isn’t available. |\n| [Token Management](https://docs.stripe.com/issuing/controls/token-management) | Allows you to suspend or deactivate digital wallet tokens associated with fraudulent activity. | Requires integration into the Tokens API. |\n| [Card management](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-status) | Allows you to suspend or deactivate physical or virtual cards associated with fraudulent activity. | None. |\n| [Disputes](https://docs.stripe.com/issuing/purchases/disputes) | Disputes can help you recover funds lost from unauthorized activity. | Disputes aren’t guaranteed to result in funds recovery and may take time to resolve. |\n\n### Proactive fraud protection controls![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### KYC/KYB![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nKnow Your Customer (KYC) or Know Your Business (KYB) is the mandatory process of collecting and verifying information about the company or individual who will be using the cards. Information includes the legal entity and personal information about the representative of the business, as well as those who own or control the business.\n\nThe easiest way to manage KYC/KYB is to integrate [Connect Onboarding](https://docs.stripe.com/connect/custom/hosted-onboarding), which lets Stripe take care of the complexity around the basic obligations.\n\n#### Spending controls![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSpending controls allow you to block specific countries or merchant categories (for example, casinos), and set spending limits per authorization (such as 100 USD) or per month (such as 3000 USD per month). You can apply these controls to either individual cards or cardholders. They’re most effective when the expected spending pattern is known.\n\nWe recommend implementing a combination of spending limits and merchant category controls to help limit your exposure in case of unauthorized use. For more information, see [Spending controls](https://docs.stripe.com/issuing/controls/spending-controls).\n\n#### 3D Secure![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n3D Secure (3DS) is an additional layer of authentication used by merchants to make sure an online purchase is from a legitimate cardholder. 3DS is used for online transactions and only works if the merchant requests it and you have it enabled for your Issuing program. The additional 3DS step occurs at checkout where the cardholder is shown an authentication page and is prompted to enter a verification code sent to their phone or email.\n\nWe recommend enabling 3DS to reduce fraud loss exposure for online transactions. Learn more about [3DS and how to enable it](https://docs.stripe.com/issuing/3d-secure).\n\n### Real-time fraud protection controls![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### Real-time webhook![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can approve or decline authorization requests in real-time based on the data available to you at the point of authorization. This gives you control over authorization outcomes and enables you to implement your own fraud-prevention logic. Use Stripe’s real-time webhook to target a specific fraud pattern while minimizing the impact on other spending behaviors. For example, you can use authorization data on the location of the authorization to block specific geographies, currencies, and merchants. Learn more about the [real-time webhook and how it works](https://docs.stripe.com/issuing/controls/real-time-authorizations).\n\n#### Stripe Defense Layer![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBy default, Stripe offers several automatic controls to help reduce your fraud exposure without changing loss liability. Among other considerations, Stripe attempts to block authorizations that:\n\n*   Appear to be card testing.\n*   We estimate to be extremely high risk based on our own risk modeling.\n\nThese defenses usually impact a very small subset (less than 0.5%) of authorizations, are purely additive, and shouldn’t be considered a substitute for your own risk management program. Ultimately, you need to identify the ideal balance between user experience and risk management that works best for your program’s specific characteristics. The Stripe Defense Layer doesn’t affect liability.\n\n#### Fraud challenges![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFraud Challenges provide an additional layer of verification for users to confirm purchases via SMS. This helps minimize accidental blocks of legitimate purchases that may initially appear high-risk. After confirming the purchase, the cardholder can retry the transaction. For more information, see [Fraud challenges](https://docs.stripe.com/issuing/controls/fraud-challenges).\n\nAuthorization Signals allow you to make real-time decisions to reject or approve an authorization, based on:\n\n*   [Verification Data](https://docs.stripe.com/issuing/controls/advanced-fraud-tools/authorization-signals#verification-data): Whether card values provided at checkout match with the ones on file\n*   [Fraud Disputability Assessment](https://docs.stripe.com/issuing/controls/advanced-fraud-tools/authorization-signals#fraud-disputability-assessment): The likelihood of whether an authorization can be disputed in the event of fraud\n*   [High-Risk Merchant Alerts](https://docs.stripe.com/issuing/controls/advanced-fraud-tools/authorization-signals#high-risk-merchant-alerts): The risk level of a merchant based on dispute activity\n*   Card testing risk: The likelihood of a card testing attack\n\nTo learn more, see [authorization signals](https://docs.stripe.com/issuing/controls/advanced-fraud-tools/authorization-signals).\n\n### Post-fraud transaction tools![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n#### Token management![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nManage digital wallet tokens through the API to quickly shut down digital wallet cards that have been associated with fraudulent activity. Read more about [enabling token management and the API](https://docs.stripe.com/issuing/controls/token-management).\n\n#### Card management![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you or your cardholder suspect unauthorized activity, you can temporarily deactivate a card with the Dashboard or API to block further unauthorized use while you investigate. If the activity was authorized, you can preserve the card’s credentials and reactivate it. Whenever you confirm unauthorized use, immediately cancel the card. Read additional details on [card management and how to use the API](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-status).\n\n#### Disputes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen fraudulent transactions occur, you can file disputes with Visa or Mastercard through the Dashboard or API for those transactions with the reason ‘Fraudulent’. In some cases, depending on what verification is conducted at the point of sale, the merchant might be liable for the fraudulent transaction. Read more about [handling disputes](https://docs.stripe.com/issuing/purchases/disputes).\n\n## User-facing controls & education![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can adjust various aspects of Stripe’s fraud controls, and educate your cardholders to reduce how often they are needed.\n\n### User configurations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nDepending on your use case and workflow, you can request adjustments to Stripe’s default controls, such as:\n\n*   Relaxing 3DS requirements\n*   Increasing transaction amount caps\n\nWhile Stripe can accommodate these requests on a case-by-case basis, you’re ultimately responsible for any increased risk or loss liability that results from such requests.\n\n### Educate your cardholders![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEducate your cardholders about how to keep their card information safe. Teach them to pay close attention to the activity on their accounts to increase the likelihood of them—and you—catching fraudulent activity early. Make your cardholders aware of the following preventative measures:\n\n*   **Check for card skimmers in physical stores:** Verify no cameras or skimming equipment are present on the payment terminal. Check for anything inserted in, or attached to, the card reader, ports, display, or keypad.\n*   **Transact at trustworthy businesses:** Only provide your card information to merchants that you’re familiar with and trust.\n*   **Cancel a card as soon as it’s lost or stolen:** Take immediate action to prevent unauthorized use before a fraudulent actor can obtain your card credentials. To continue spending, create a new card after canceling the lost or stolen one.\n\n## Monitor metrics![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following are metrics we recommend monitoring to help identify and measure fraud on your Issuing-enabled accounts.\n\n### Leading metrics![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLeading metrics are metrics that can help you identify potential fraud in its early stages.\n\n*   Authorization declines due to incorrect verification data (CVC2, expiry date), over time.\n*   Authorization rate, over time.\n*   Authorizations outside of geographic footprint, over time.\n*   Authorizations by acquiring merchant country, over time.\n*   Authorizations by merchant category code, over time.\n*   [Force captures](https://docs.stripe.com/issuing/purchases/transactions?issuing-capture-type=force_capture), over time.\n\n### Lagging metrics![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLagging metrics are metrics that can help you assess how much fraudulent activity has impacted your Issuing program:\n\n*   Percentage of total spend that has been disputed for fraud, over time.\n*   Dispute win-loss rate, over time.\n*   Absolute dispute losses, over time.\n*   Acquiring merchants with the highest percentage of transactions disputed.\n\n## Managing fraud![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe potential for fraud in Issuing necessitates thorough monitoring and proactive fraud management. By understanding your roles and responsibilities and effectively leveraging Stripe’s resources, you can reduce these risks to levels that you deem appropriate for your business.\n\nKeep the following in mind as you decide on your approach to fraud management:\n\n**How much fraud you should expect to see**: The average volume of monthly fraud varies significantly based on industry, geography, business model, and so on. Most users file fraud disputes on 0.1% or less of their transaction volume, but it can vary greatly, depending on your issuing activity. It’s unusual to have no fraud whatsoever, except in rare business models or if you have low volumes.\n\n**Definition of a dispute**: A dispute occurs when an account holder challenges a charge on their card statement with their card issuer. The reason for the dispute varies—the account holder might not recognize the charge, perceive it as fraudulent, or feel dissatisfied with the goods or services they purchased. Disputes can help issuers recover funds in the event of fraudulent activity.\n\n**Additional Stripe fraud signals and controls**: Stripe Issuing currently offers an Enhanced Risk Suite beta for API-centric users that are interested in using advanced signals to help identify and prevent transaction fraud. If you’d like to learn more, please [contact support](mailto:issuing-beta-feedback@stripe.com).",
    "title": "Manage fraud with Stripe Issuing controls and tools | Stripe Documentation",
    "description": "Understand how fraud can impact your issuing program and the steps you can take to combat it.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/connect",
    "markdown": "# Set up an Issuing and Connect integration\n\n## Learn how to issue cards on connected accounts.\n\n[Stripe Connect](https://docs.stripe.com/connect \"Connect\") provides Stripe Issuing platforms with foundational infrastructure to manage funds flows and compliance requirements. In a Connect integration, the platform account makes API calls on behalf of the connected accounts.\n\n[](#when-to-use-connect)\n\nIf you need to issue cards for users that aren’t directly employed by your business, set up Stripe Connect for your Issuing integration. For example, a business building a new expense management product for small businesses can integrate with Connect. Each small business that uses the expense management product is set up as a connected account.\n\nAfter you set up and onboard connected accounts, your customers can support their card spend by funding their Issuing balance from their external bank account (or, in certain cases, your customers’ spend can be supported by your platform Issuing balance). Your customers can also create cardholders and cards and set up spending controls.\n\n[](#create-connected-accounts-with-issuing-capabilities)\n\nTo issue cards, each business entity must use a connected account. Issuing only supports connected accounts that don’t use a Stripe-hosted Dashboard, and where your platform is responsible for requirements collection and loss liability, also known as a Custom connected account. Learn how to [create connected accounts](https://docs.stripe.com/connect/design-an-integration?connect-onboarding-surface=api&connect-dashboard-type=none&connect-economic-model=buy-rate&connect-loss-liability-owner=platform&connect-charge-type=direct) that work with Issuing. All accounts must request the `card_issuing` and `transfers` [account capabilities](https://docs.stripe.com/connect/account-capabilities).\n\n#### Beta\n\n#### Create an account![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCreate a new connected account [through the Dashboard](https://docs.stripe.com/connect/dashboard/managing-individual-accounts#creating-accounts) or using the API with [create Account](https://docs.stripe.com/api/accounts/create).\n\n#### Start with test mode accounts\n\nTest mode connected accounts can’t receive or spend real money and can’t be used in live mode, but they’re identical in configuration and functionality.\n\n`curl https://api.stripe.com/v1/accounts \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d country=US \\  -d \"capabilities[transfers][requested]\"=true \\  -d \"capabilities[card_issuing][requested]\"=true \\  -d \"controller[stripe_dashboard][type]\"=none \\  -d \"controller[fees][payer]\"=application \\  -d \"controller[losses][payments]\"=application \\  -d \"controller[requirement_collection]\"=application`\n\n#### Enable Issuing on existing connected accounts![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf your platform already has a Connect integration with connected accounts, you can request Issuing on those accounts [through the Dashboard](https://docs.stripe.com/connect/dashboard/managing-individual-accounts#updating-capabilities) or through the API.\n\n`curl https://api.stripe.com/v1/accounts/`\n\n`{{CONNECTED_ACCOUNT_ID}}`\n\n `\\  -u \"  sk_test_4eC39HqLyjWDarjtT1zdp7dc  :\" \\  -d \"capabilities[card_issuing][requested]\"=true`\n\n#### Issuing and Treasury accounts\n\nIf your platform already has [connected accounts](https://docs.stripe.com/connect/accounts), make sure they have a supported configuration for Issuing or Treasury. Issuing only supports connected accounts that don’t use a Stripe-hosted Dashboard, and where your platform is responsible for requirements collection and loss liability, also known as a Custom connected account. If this isn’t the case, you must create new accounts to use Issuing or Treasury. You can see your existing account’s configuration on the [Connect accounts](https://dashboard.stripe.com/connect/accounts/overview) page in your Dashboard.\n\nYou can also use the API to retrieve the account information and verify that the `capabilities` property has the issuing capability active:\n\n`curl https://api.stripe.com/v1/accounts \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\"`\n\n`{   \"object\": \"list\",   \"data\": [     {       \"id\": \"acct_1234\",       \"object\": \"account\",     ...       \"capabilities\": {         \"card_issuing\": \"active\",         \"transfers\": \"active\",       },     ...       \"controller\": {         \"stripe_dashboard\": {           \"type\": \"none\"         },         \"fees\": {           \"payer\": \"application\"         },         \"losses\": {           \"payments\": \"application\"         },         \"is_controller\": true,         \"type\": \"application\",         \"requirement_collection\": \"application\"       },     },   ...   ] }`\n\n[](#onboard-connected-accounts)\n\nAfter you create a connected account, you need to provide more information about the account holder. The [capability object](https://docs.stripe.com/api/capabilities/object) has a `requirements` hash that contains `currently_due` [identity verification requirements](https://docs.stripe.com/connect/handling-api-verification). The user must provide the details itemized in the `requirements` hash to enable Issuing capabilities.\n\nIf you create an Account object in test mode and want to bypass onboarding requirements to test functionality, use the [Accounts update API](https://docs.stripe.com/api/accounts/update) to provide [test values](https://docs.stripe.com/connect/testing-verification) that fulfill all the requirements.\n\nDepending on the [business type](https://docs.stripe.com/connect/identity-verification#business-type), the user provides details about the individual, company, non-profit organization, or government entity (Stripe Treasury doesn’t support government entities).\n\nChoose one of the following onboarding options:\n\n[Stripe-hosted onboarding](https://docs.stripe.com/connect/hosted-onboarding) is a web form hosted by Stripe with your brand’s name, color, and icon. Stripe-hosted onboarding uses the [Accounts API](https://docs.stripe.com/api/accounts) to read the requirements and generate an onboarding form with robust data validation and is localized for all Stripe-supported countries.\n\nBefore using Connect Onboarding, you must provide the name, color, and icon of your brand in the Branding section of your [Connect settings page](https://dashboard.stripe.com/test/settings/connect).\n\nYou can use hosted onboarding to allow connected accounts to link an `external_account` (which is required for payouts) by enabling it through your [Connect Onboarding settings](https://dashboard.stripe.com/settings/connect).\n\nTo create an onboarding link for the connected account, use the [Account Links API](https://docs.stripe.com/api/account_links/create).\n\n`curl https://api.stripe.com/v1/account_links \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d account={{CONNECTED_ACCOUNT_ID}} \\   --data-urlencode refresh_url=\"https://example.com/reauth\" \\   --data-urlencode return_url=\"https://example.com/return\" \\   -d type=account_onboarding`\n\n#### Caution\n\nFor security reasons, don’t email, text, or send account link URLs directly to your connected account. We recommend that you distribute the account link URL from within your platform’s application, where their account is authenticated.\n\nThe response you receive includes the `url` parameter containing the link for your connected account to onboard to your platform.\n\n## Collect and verify required information ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nWhen you create a connected account and request capabilities, the response returns a list of all required information. To see the requirements specific to a capability, [retrieve the account capability](https://docs.stripe.com/api/capabilities/retrieve) and look at `requirements.past_due`.\n\n#### Note\n\nHere are the requirements to activate the `card_issuing` capability:\n\n| FIELD | PARAMETER | ADDITIONAL NOTES |\n| --- | --- | --- |\n| Legal name | `company.name` |     |\n| Business address | `company.address.*` | The address can’t be a P.O. box, a Highway Contract (HC) box, or a private mailbox. It must be in the US for US-based accounts, UK for UK-based accounts, or a European country for Europe-based accounts. |\n| Business type | `business_type` | The business type can be company, individual, or non-profit. |\n| Company tax ID | `company.tax_id` |     |\n| Phone | `company.phone` |     |\n| Merchant category code | `business_profile.mcc` |     |\n| URL | `business_profile.url` | If the user doesn’t have a URL, you can provide the `business_profile.product_description` instead. |\n| Estimated worker count | `business_profile.estimated_worker_count` | An estimated upper bound of your workers (employees, contractors, vendors, and so on) currently working for the business. |\n| Annual revenue | `business_profile.annual_revenue` | The user’s gross annual revenue for its preceding fiscal year. |\n| Terms of service | `settings.card_issuing.tos_acceptance.ip` `settings.card_issuing.tos_acceptance.date` | Record the connected accounts [accepting the Issuing terms of service](https://docs.stripe.com/issuing/connect/tos_acceptance). |\n\n#### Representatives and beneficial owners![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCompanies and non-profit organizations require additional onboarding information for representatives (that is, directors \\[`relationship.director`\\] and executives \\[`relationship.executive`\\]), and any beneficial owner that owns more than 25% of the company (`relationship.owner`). Each connected account must have at least one representative, who’s usually an executive or director, depending on where the account is located. They must be able to certify that the information provided is correct. Beneficial owners aren’t required.\n\nLearn more about [beneficial owners, representatives, and directors](https://support.stripe.com/questions/beneficial-owner-and-director-definitions).\n\n| FIELD | PARAMETER | ADDITIONAL NOTES |\n| --- | --- | --- |\n| Legal name | `first_name`, `last_name` |     |\n| Date of birth | `dob.day`, `dob.month`, `dob.year` |     |\n| Residential address | `address.*` | The address can’t be a P.O. box, a Highway Contract (HC) box, or a private mailbox. It must be in the US for US-based accounts. |\n| Email | `email` |     |\n| Title | `title` | Examples for the title include CEO or Director. |\n| Phone | `phone` |     |\n| US Tax ID or last 4 digits of SSN | `id_number` | Accounts of US-based platforms must provide a social security number, and non-US tax ID numbers or ID documents aren’t accepted as a substitute. You can provide either the full nine-digit social security number (`id_number`) or the last four digits (`ssn_last_4`) initially. If verification with the last four digits is unsuccessful, then the full nine-digit number is required. |\n| ID document scan | `verification.document` | Provide an identity document if the full nine-digit social security number can’t be verified. See the [acceptable verification documents by country](https://docs.stripe.com/connect/handling-api-verification#acceptable-verification-documents). |\n\n[\n\n## Handle new requirements coming due and changes to the capability status![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#handle-new-requirements-changes)\n\nSometimes after providing all required information, an account might need to provide additional details or documents. These new requirements appear in the [requirements.eventually\\_due](https://docs.stripe.com/api/accounts/object#account_object-requirements-eventually_due) array or in [requirements.currently\\_due](https://docs.stripe.com/api/accounts/object#account_object-requirements-currently_due). Set up your integration to listen for changes to account requirements by [using webhooks](https://docs.stripe.com/connect/handling-api-verification#verification-process).\n\nIf the capability is already `active` and the account doesn’t satisfy new requirements due on that capability before the [current deadline](https://docs.stripe.com/api/accounts/object#account_object-requirements-current_deadline), the capability becomes `inactive` until the requirements are satisfied.\n\n### Document uploads![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf an account’s information can’t be verified, Stripe might require a document to verify the identity of a person (for example, a Passport) or to verify information about the legal entity (for example, a letter from the tax authority). To satisfy document requirements, platforms can send the user to Connect Onboarding (where they’ll be [prompted to upload the document](https://docs.stripe.com/connect/custom/hosted-onboarding#new-reqs-due)), or collect the document from the account in another interface and [upload it through the API](https://docs.stripe.com/connect/handling-api-verification#upload-a-file).\n\n### Failure to verify identity within 29 days of the initial application ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAfter an account submits all the [required information](https://docs.stripe.com/issuing/connect#required-verification-information) for Issuing and accepts the Issuing terms of service, Stripe considers the application complete. If we can’t verify an account’s information, the capability remains `inactive` until the account provides additional information or uploads a document.\n\nIf the account remains `inactive` 29 days after completing the application, you must send an email notice to the account informing them that we couldn’t verify their identity ([see the template](https://docs.stripe.com/issuing/compliance-us/issuing-regulated-customer-notices?issuing-notices-sender=stripe#spend-card-application-rejected-for-failure-to-verify-identity)).\n\nStripe monitors for completed applications with unverified identities, and takes the following action after 29 days in live mode and after 1 hour in [test mode](https://docs.stripe.com/connect/testing):\n\n*   [Generates an account notice](https://docs.stripe.com/issuing/compliance-us/issuing-regulated-customer-notices?issuing-notices-sender=stripe#events-that-require-a-customer-notice)\n*   Clears the [Issuing terms of service acceptance hash](https://docs.stripe.com/api/accounts/object#account_object-settings-card_issuing-tos_acceptance) so terms acceptance becomes a `currently_due` requirement\n\nYou can submit a new application at any time by updating the business information and recording a new acceptance of Issuing’s terms.\n\nStripe recommends that you present the terms of service as the last step of onboarding, which allows you to track the timing of application completion by referring to the term’s [acceptance date](https://docs.stripe.com/api/accounts/object#account_object-settings-card_issuing-tos_acceptance-date).\n\n### Terms of service violations![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf Stripe identifies a connect account that has violated Stripe’s terms of service, Stripe sets the Issuing capability on the account to `inactive`, deactivates any cards, and notifies the account (see [the email template](https://docs.stripe.com/issuing/compliance-us/issuing-regulated-customer-notices?issuing-notices-sender=stripe#account-closed-by-stripe-for-terms-of-service-violation)). This might happen when an account’s cards are used in relation to [prohibited or restricted businesses](https://stripe.com/legal/restricted-businesses), such as illegal activities, gambling, firearms, adult content, or cryptocurrencies, or in relation to [prohibited activities for Issuing](https://stripe.com/legal/restricted-businesses#additional-product-specific-prohibitions) , such as consumer spending, primarily international use, lending, or other abusive or noncompliant use.\n\n### Accounts inactive for more than 395 days![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe disables issuing on accounts that haven’t completed any card transactions in the past 13 months (395 days). For accounts with additional capabilities, Stripe only disables Issuing if there have also been no payments or Treasury transactions in the prior 395 days, and the Treasury balance is 9.99 USD or less. When Issuing is disabled for inactivity, the Connect account’s card\\_issuing capability status changes to `inactive` and the capability requirements show a [disabled\\_reason](https://docs.stripe.com/api/capabilities/object#capability_object-requirements-disabled_reason) of `rejected.inactivity`. Learn more about [managing inactive accounts](https://support.stripe.com/questions/issuing-managing-inactive-connect-accounts) with Issuing.\n\n[\n\n## Create cardholders and cards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n\n\n](#create-cardholders-and-cards)\n\nA Cardholder object represents an individual or business entity that you can issue cards to. Each cardholder needs to be associated with a connected account to be issued a virtual or physical card. One connected account can have many cardholders.\n\nLearn more about [Cardholders and cards](https://docs.stripe.com/issuing/connect/cardholders-and-cards).\n\n[](#Add-funds)\n\nThe Issuing balance is separate from the connected account’s main balance. When issued cards are used for transactions, they draw from the Issuing balance.\n\nBefore an issued card can be used for transactions, you must first allocate funds to the connected account’s [Issuing balance](https://docs.stripe.com/issuing/funding/balance) associated with the card. An Issuing Balance holds funds reserved for the card and is safely separated from earnings, [payouts](https://docs.stripe.com/payouts), and funds from other Stripe products. Learn how to [fund connected accounts](https://docs.stripe.com/issuing/connect/funding) for Issuing.\n\n[](#using-dashboard-issuing)\n\nView the connected accounts on your platform and create new accounts from the [Connect page](https://dashboard.stripe.com/connect/accounts/overview) in the Dashboard. An account might appear as `restricted` in the Dashboard if requirements are `past_due` for any of the requested capabilities (including `transfers`). You can ignore this if `card_issuing` is active.\n\nYou can also do the following from the dashboard:\n\n*   View account activity for a selected account.\n*   Edit business and personal details for a selected account.\n*   Create cardholders, cards, or test authorizations on the account. To do so, click the overflow menu (), select **View Dashboard as (account name)**, and then navigate to **Card issuing**.\n*   View program details for a selected account. Follow the above steps to **View Dashboard as (account name)**, then navigate to **Settings**, the **Issuing** section, and click [Card programs](https://dashboard.stripe.com/settings/issuing/card-programs).\n\nYou can also access the Issuing page for a connected account directly by navigating to this URL and replacing `{{CONNECT_ACCOUNT_ID}}` with the appropriate value: `https://dashboard.stripe.com/{{CONNECT_ACCOUNT_ID}}/issuing/overview`\n\nAs the platform, only you can view the Dashboard on behalf of your connected accounts. Your connected accounts won’t have a Stripe username or password, or access to the Dashboard.",
    "title": "Set up an Issuing and Connect integration | Stripe Documentation",
    "description": "Learn how to issue cards on connected accounts.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/connect/tos_acceptance",
    "markdown": "# Update the Issuing terms of service acceptance\n\n## Learn how to present accurate business information for your connected accounts and accept the Issuing terms of service.\n\nPlatforms must present the account representative with the business information on file for confirmation prior to submission to Stripe Issuing. Make sure that the account representatives update any information that’s no longer accurate:\n\n*   Business Information (including the Tax Identification Number if applicable)\n*   Name, date of birth, address, and SSN of account representative and beneficial owners\n\n### Referencing the terms and disclosures![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPresent the account representative with a disclosure stating that Celtic Bank, a member of FDIC, issues the cards. Additionally, provide them with all relevant links to the Issuing program’s [terms and disclosures](https://docs.stripe.com/issuing/compliance-us#issuing-terms). The representative must accept the terms to complete their application.",
    "title": "Update the Issuing terms of service acceptance | Stripe Documentation",
    "description": "Learn how to present accurate business information for your connected accounts and accept the Issuing terms of service.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/virtual",
    "markdown": "# Virtual cards with Issuing | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about virtual cards created with Issuing.\n\nYou can retrieve or display virtual card details through the Dashboard, the API, or by using [Issuing Elements](https://docs.stripe.com/issuing/elements). [PCI-DSS](https://stripe.com/guides/pci-compliance) rules protect cardholder data, and not all methods of card information retrieval are PCI-DSS compliant.\n\n## Display virtual card details to cardholders![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can use [Issuing Elements](https://docs.stripe.com/issuing/elements) to display virtual card details to your cardholders without this information passing through your servers. This method is fully PCI-DSS compliant, and we recommend it for most Issuing users. Stripe offers Issuing Elements as a part of [Stripe.js](https://docs.stripe.com/js).\n\n## Retrieve virtual card details![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFor PCI-DSS compliance, we recommend limiting retrieval of virtual card information to the Dashboard or Issuing Elements. If you use the API to retrieve card information, or if you export virtual card information from the Dashboard, store it in a password manager or otherwise encrypt it.\n\nYou can retrieve both the full unredacted card number and CVC from the API. For security reasons, you can only use these fields with virtual cards in live mode, and we omit them unless you explicitly request them with the [expand](https://docs.stripe.com/api/expanding_objects) property. You can only retrieve these fields for physical cards in [test mode](https://docs.stripe.com/keys#test-live-modes). Additionally, you can only access them through the [Retrieve a card](https://docs.stripe.com/api/issuing/cards/retrieve) endpoint.\n\n`curl -G https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"expand[]\"=number \\  -d \"expand[]\"=cvc`\n\n## Details about PCI-DSS![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you are generating virtual cards for your own use, you are not required to attain PCI-DSS compliance for Issuing activity. If you are generating virtual cards for use by your users, you may be considered a Service Provider under PCI-DSS rules. Service Providers must be PCI-DSS compliant.\n\nIf you accept payments through Stripe, read more about your [PCI-DSS obligations](https://stripe.com/guides/pci-compliance). These obligations are in addition to requirements noted above.",
    "title": "Virtual cards with Issuing | Stripe Documentation",
    "description": "Learn about virtual cards created with Issuing.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/physical",
    "markdown": "# Physical cards | Stripe DocumentationThe Stripe Docs logo\n\n## Understand the difference between standard and customized physical cards.\n\nStripe offers two types of physical cards. This document provides an overview of the card types and the different options you have for creating them.\n\n| Card type | Description | Timeline | Recommended use cases |\n| --- | --- | --- | --- |\n| **Standard cards** | Select a card with a black or white background and add your business logo on the front to customize it. [Learn how to create standard cards](https://docs.stripe.com/issuing/cards/physical/standard). | Available immediately for all users. | Ideal if you’re looking to go to market fast, for a pilot launch, or if you’re thinking of issuing a smaller quantity of cards (less than a thousand). |\n| **Custom cards** | Fully customize your cards with your artwork and design choices on the front and back. You can also design custom carriers (the paper your card is attached to for shipping). [Learn more about custom cards](https://docs.stripe.com/issuing/cards/physical/custom). | Custom cards, carriers, and envelopes can be fully customized for your brand. The design process typically takes a few weeks, followed by a manufacturing lead time of several months. Once custom items are manufactured and tested, a custom bundle will be set up by Stripe for you to use these new items. | Custom cards are useful if physical cards are a core part of your business and you’re planning on issuing a large amount of cards. Custom cards let you feature your brand goals in your customers’ wallets. |\n\n## Getting started![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’re just getting started with Stripe Issuing, we recommend using Standard cards. If your use case requires it, and after you’re comfortable issuing Standard cards, you can get started with Custom cards. See [Standard cards](https://docs.stripe.com/issuing/cards/physical/standard) and [Custom cards](https://docs.stripe.com/issuing/cards/physical/custom) to learn more.",
    "title": "Physical cards | Stripe Documentation",
    "description": "Understand the difference between standard and customized physical cards.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/connect/funding",
    "markdown": "# Funding Issuing balances with Connect\n\n## Learn how to fund connected accounts for Issuing.\n\nBefore an issued card can be used for transactions, you must first allocate funds to the connected account’s [Issuing balance](https://docs.stripe.com/issuing/funding/balance) associated with the card. An Issuing balance holds funds reserved for the card and is safely separated from earnings, [payouts](https://docs.stripe.com/payouts), and funds from other Stripe products.\n\n[](#fund-from-bank-account)\n\nYou have two options for funding an Issuing balance from an external account that each have different setups: pull funding and push funding.\n\n*   **Pull funding** is the default funding option in the US and isn’t available in the EU or the UK. You need to verify external bank accounts, which usually causes a delay in transferring funds (up to 5 business days). This option allows you to control and identify which bank your top-up originates from.\n*   **Push funding** is available in the UK and EU and as a beta in the US. This options allows you to originate the funds from your own bank account to Stripe. You might be able to receive funds the same day with push funding, which depends on the process you use (for example, ACH or wire transfer).\n\nBefore you can top-up a connected account from your user’s bank account, you must first collect and verify their account information. Stripe provides the option of collection through [Stripe.js](https://docs.stripe.com/payments/elements) with verification using microdeposits.\n\n### Collecting your users’ information![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo debit the user’s bank account for funding, you will need to collect their bank account information and submit evidence of their authorization to debit their account. This is known as a [mandate](https://docs.stripe.com/api/sources/create#create_source-mandate), and ensures both you and Stripe remain compliant with ACH network rules, as well as provide you with access to evidence to ease in any dispute resolution.\n\nCreate a form that captures:\n\n*   Name\n*   Routing number\n*   Account number\n\nAs your customers submit the mandate, you should record:\n\n*   IP address\n*   User agent\n*   Date\n\nIf instead you prefer to collect mandates from your users _offline_ (such as via phone or a paper agreement), you won’t upload evidence of acceptance to Stripe. You should maintain your own record of the acceptance and provide us a contact email in case the evidence is requested.\n\n### Creating the token and source![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCreate a token using the [Bank Account Token API](https://docs.stripe.com/api/tokens/create_bank_account), and then use it to create a source. Create both the bank account token and `source` on the connected account you want to fund.\n\n#### Caution\n\nStore these `Source` tokens in your own system where your integration can retrieve them. Stripe currently doesn’t provide a way to programmatically retrieve or list the tokens after they’re created.\n\n`curl https://api.stripe.com/v1/tokens \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \" \\  -d \"bank_account[country]\"=US \\  -d \"bank_account[currency]\"=usd \\  -d \"bank_account[account_holder_name]\"=\"Jenny Rosen\" \\  -d \"bank_account[account_holder_type]\"=individual \\  -d \"bank_account[routing_number]\"=110000000 \\  -d \"bank_account[account_number]\"=000000000009`\n\nCreate a `source` using the token you obtained:\n\n`curl https://api.stripe.com/v1/sources \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \" \\  -d type=ach_debit \\  -d currency=usd \\  -d token={{TOKEN_ID}} \\   -d \"owner[address][line1]\"=\"510 Townsend Street\" \\  -d \"owner[address][city]\"=\"San Francisco\" \\  -d \"owner[address][state]\"=California \\  -d \"owner[address][country]\"=US \\   --data-urlencode \"owner[email]\"=\"jenny.rosen@example.com\" \\  -d \"owner[name]\"=\"Jenny Rosen\" \\  -d \"owner[phone]\"=5554443333`\n\n### Verifying sources with microdeposits![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTwo small deposits with the statement description **ACCTVERIFY** are sent to the bank account within 1-2 days. You should collect these two amounts from your user to verify the bank account.\n\n`curl https://api.stripe.com/v1/sources/{{SOURCE_ID}}/verify \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \" \\  -d \"values[]\"=32 \\  -d \"values[]\"=45`\n\n### Top-up a connected account’s Issuing balance ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nFund the Issuing balance on your connected account with top-ups by passing in the `source` that was made and setting the `destination_balance` to `issuing`.\n\n`curl https://api.stripe.com/v1/topups \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`: \\   -H \"Stripe-Account: {{CONNECTED_STRIPE_ACCOUNT_ID}}\" \\   -d \"amount\"=2000 \\   -d \"currency\"=\"usd\" \\   -d \"description\"=\"Top-up for week of May 31\" \\   -d \"destination_balance\"=\"issuing\" \\   -d \"statement_descriptor\"=\"Top-up\" \\   -d \"source\"=\"{{SOURCE_ID}}\"`\n\n[](#fund-from-connected-account-balance)\n\nYou must [sign up for the Balance Transfer API private beta](#request-early-access) to transfer funds from your Stripe balance into your Issuing balance.\n\n`curl https://api.stripe.com/v1/balance_transfers \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`: \\   -H \"Stripe-Account: {{CONNECTED_STRIPE_ACCOUNT_ID}}\" \\   -d amount=1000 \\   -d currency=usd \\   -d \"source_balance[type]\"=payments \\   -d \"destination_balance[type]\"=issuing`\n\nTransfers from your connected account’s Stripe balance are instant and available 24x7 in the US, or take one business day in the UK and euro area countries. This allows you to quickly and easily utilize earned funds from Stripe Payments for spend with Stripe Issuing.\n\nYou can only move an amount up to the available Stripe balance. Funds won’t be available in the Issuing balance while the transfer is pending.\n\nUse the [retrieve balance](https://docs.stripe.com/api/balance/balance_retrieve) endpoint to get your available Stripe balance amounts broken down by [`source_type`](https://docs.stripe.com/api/balance/balance_object#balance_object-available-source_types).\n\n### Request early access ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nAccess to the Balance Transfer API is currently limited to beta users. You must be an Issuing customer to join the beta. To request access to the beta, log in to your Stripe account and refresh the page. [Contact Stripe](https://stripe.com/contact/sales) for more information.\n\n[](#retrieve-an-issuing-balance)\n\nTo check the current Issuing balance of a connected account, call the [Balance API](https://docs.stripe.com/api/balance/balance_retrieve) GET endpoint and pass the connected account ID into the header.\n\n`curl https://api.stripe.com/v1/balance \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \"`\n\nThe`balance` object is returned with a corresponding `issuing` object that includes the current available balance:\n\n`{   \"object\": \"balance\", ...     \"issuing\": {     \"available\": [       {         \"amount\": 100,         \"currency\": \"usd\"       }     ]   },   \"livemode\": false }`\n\n[](#pay-out-an-issuing-balance)\n\nThe funds in an Issuing balance can also be paid out to a connected account’s [external bank account](https://docs.stripe.com/api/external_accounts) using the [Payouts API](https://docs.stripe.com/api/payouts/create) POST endpoint and specifying the `source_balance` of the payout as `issuing.`\n\n`curl https://api.stripe.com/v1/payouts \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -H \"Stripe-Account:   {{CONNECTED_ACCOUNT_ID}}  \" \\  -d source_balance=issuing \\  -d amount=100 \\  -d currency=usd`",
    "title": "Funding Issuing balances with Connect | Stripe Documentation",
    "description": "Learn how to fund connected accounts for Issuing.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/digital-wallets",
    "markdown": "# Use digital wallets with Issuing\n\nWhen the user taps the `PKAddPassButton`, create and present a `PKAddPaymentPassViewController`, which contains Apple’s UI for the push provisioning flow.\n\n#### Note\n\n`PKAddPaymentPassViewController` can use the `primaryAccountIdentifier` from the previous step to determine if a card has already been provisioned on a specific device. For example, if the card has already been added to an iPhone, Apple’s UI offers to add it to a paired Apple Watch.\n\n`import Stripe  class MyViewController: UIViewController {   // ...   func beginPushProvisioning() {     let config = STPPushProvisioningContext.requestConfiguration(       withName: \"Jenny Rosen\", // the cardholder's name       description: \"RocketRides Card\", // optional; a description of your card       last4: \"4242\", // optional; the last 4 digits of the card       brand: .visa, // optional; the brand of the card       primaryAccountIdentifier: self.primaryAccountIdentifier // the primary_account_identifier value from the previous step     )     let controller = PKAddPaymentPassViewController(requestConfiguration: config, delegate: self)     self.present(controller!, animated: true, completion: nil)   } }`\n\nFor more context, see how the [sample app](https://github.com/stripe-samples/push-provisioning-samples/blob/main/client/ios/Code/ViewController.swift#L280-L288) uses a `PKAddPaymentPassViewController`.\n\nThe `PKAddPaymentPassViewController`’s initializer takes a delegate that you need to implement – typically this can just be the view controller from which you’re presenting it. We provide a class called `STPPushProvisioningContext` to help you implement these methods.\n\n``class MyViewController: UIViewController {   var pushProvisioningContext: STPPushProvisioningContext? = nil   // ... }  extension MyViewController: PKAddPaymentPassViewControllerDelegate {   func addPaymentPassViewController(_ controller: PKAddPaymentPassViewController, generateRequestWithCertificateChain certificates: [Data], nonce: Data, nonceSignature: Data, completionHandler handler: @escaping (PKAddPaymentPassRequest) -> Void) {     self.pushProvisioningContext = STPPushProvisioningContext(keyProvider: self)     // STPPushProvisioningContext implements this delegate method for you, by retrieving encrypted card details from the Stripe API.     self.pushProvisioningContext?.addPaymentPassViewController(controller, generateRequestWithCertificateChain: certificates, nonce: nonce, nonceSignature: nonceSignature, completionHandler: handler);   }    func addPaymentPassViewController(_ controller: PKAddPaymentPassViewController, didFinishAdding pass: PKPaymentPass?, error: Error?) {     // Depending on if `error` is present, show a success or failure screen.     self.dismiss(animated: true, completion: nil)   } }``\n\nFor more context, see how the [sample app](https://github.com/stripe-samples/push-provisioning-samples/blob/main/client/ios/Code/ViewController.swift#L293-L349) implements `PKAddPaymentPassViewControllerDelegate`.\n\nYou can see that the `STPPushProvisioningContext`’s initializer expects a `keyProvider`. This is an instance of a class that implements the `STPIssuingCardEphemeralKeyProvider` protocol.\n\nThis protocol defines a single required method, `createIssuingCardKeyWithAPIVersion:completion`. To implement this method, make an API call to your backend. Your backend creates an Ephemeral Key object using the Stripe API, and returns it to your app. Your app then calls the provided completion handler with your backend’s API response.\n\n`extension MyViewController: STPIssuingCardEphemeralKeyProvider {     func createIssuingCardKey(withAPIVersion apiVersion: String, completion: @escaping STPJSONResponseCompletionBlock) {         // This example uses Alamofire for brevity, but you can make the request however you want         AF.request(\"[https://myapi.com/ephemeral_keys](https://myapi.com/ephemeral_keys)\",                    method: .post,                    parameters: [\"api_version\": apiVersion])         .responseJSON { response in             switch response.result {             case .success:                 if let data = response.data {                     do {                         let obj = try JSONSerialization.jsonObject(with: data, options: []) as! [AnyHashable: Any]                         completion(obj, nil)                     } catch {                         completion(nil, error)                     }                 }             case .failure(let error):                 completion(nil, error)             }         }     } }`\n\nFor more context, see how the [sample app](https://github.com/stripe-samples/push-provisioning-samples/blob/main/client/ios/Code/ViewController.swift#L379-L394) implements `STPIssuingCardEphemeralKeyProvider`.",
    "title": "Use digital wallets with Issuing | Stripe Documentation",
    "description": "Learn how to use Issuing to add cards to digital wallets.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/connect/cardholders-and-cards",
    "markdown": "# Connected accounts, cardholders, and cards\n\n`{   \"object\": \"list\",   \"data\": [     {       \"id\": \"ic_1234a\",       \"object\": \"issuing.card\",       \"brand\": \"Visa\",       \"cancellation_reason\": null,       \"cardholder\": {         \"id\": \"ich_1234a\",         \"object\": \"issuing.cardholder\",         \"billing\": {           \"address\": {             \"city\": \"San Francisco\",             \"country\": \"US\",             \"line1\": \"510 Townsend Street\",             \"line2\": null,             \"postal_code\": \"94111\",             \"state\": \"CA\"           }         },         \"company\": null,         \"created\": 1656537695,         \"email\": \"jenny.rosen@example.com\",         \"individual\": null,         \"livemode\": false,         \"metadata\": {},         \"name\": \"Jenny Rosen\",         \"phone_number\": \"+18008675309\",         \"requirements\": {           \"disabled_reason\": null,           \"past_due\": []         },         \"spending_controls\": {           \"allowed_categories\": [],           \"blocked_categories\": [],           \"spending_limits\": [],           \"spending_limits_currency\": null         },         \"status\": \"active\",         \"type\": \"individual\"       },       \"created\": 1656537950,       \"currency\": \"usd\",       \"exp_month\": 5,       \"exp_year\": 2025,       \"last4\": \"0021\",       \"livemode\": false,       \"metadata\": {},       \"pin\": null,       \"replaced_by\": null,       \"replacement_for\": null,       \"replacement_reason\": null,       \"shipping\": null,       \"spending_controls\": {         \"allowed_categories\": [           \"car_rental_agencies\"         ],         \"blocked_categories\": null,         \"spending_limits\": [           {             \"amount\": 8000,             \"categories\": [],             \"interval\": \"per_authorization\"           }         ],         \"spending_limits_currency\": \"usd\"       },       \"status\": \"active\",       \"type\": \"virtual\",       \"wallets\": {         \"apple_pay\": {           \"eligible\": true,           \"ineligible_reason\": null         },         \"google_pay\": {           \"eligible\": true,           \"ineligible_reason\": null         },         \"primary_account_identifier\": null       }     },     {       \"id\": \"ic_1234b\",       \"object\": \"issuing.card\",       \"brand\": \"Visa\",       \"cancellation_reason\": null,       \"cardholder\": {         \"id\": \"ich_1234a\",         \"object\": \"issuing.cardholder\",         \"billing\": {           \"address\": {             \"city\": \"San Francisco\",             \"country\": \"US\",             \"line1\": \"510 Townsend Street\",             \"line2\": null,             \"postal_code\": \"94111\",             \"state\": \"CA\"           }         },         \"company\": null,         \"created\": 1656537695,         \"email\": \"jenny.rosen@example.com\",         \"individual\": null,         \"livemode\": false,         \"metadata\": {},         \"name\": \"Jenny Rosen\",         \"phone_number\": \"+18008675309\",         \"requirements\": {           \"disabled_reason\": null,           \"past_due\": []         },         \"spending_controls\": {           \"allowed_categories\": [],           \"blocked_categories\": [],           \"spending_limits\": [],           \"spending_limits_currency\": null         },         \"status\": \"active\",         \"type\": \"individual\"       },       \"created\": 1656537947,       \"currency\": \"usd\",       \"exp_month\": 5,       \"exp_year\": 2025,       \"last4\": \"0013\",       \"livemode\": false,       \"metadata\": {},       \"pin\": null,       \"replaced_by\": null,       \"replacement_for\": null,       \"replacement_reason\": null,       \"shipping\": null,       \"spending_controls\": {         \"allowed_categories\": null,         \"blocked_categories\": null,         \"spending_limits\": [           {             \"amount\": 50000,             \"categories\": [],             \"interval\": \"daily\"           }         ],         \"spending_limits_currency\": \"usd\"       },       \"status\": \"active\",       \"type\": \"virtual\",       \"wallets\": {         \"apple_pay\": {           \"eligible\": true,           \"ineligible_reason\": null         },         \"google_pay\": {           \"eligible\": true,           \"ineligible_reason\": null         },         \"primary_account_identifier\": null       }     }   ],   \"has_more\": false,   \"url\": \"/v1/issuing/cards\" }`",
    "title": "Connected accounts, cardholders, and cards | Stripe Documentation",
    "description": "Learn how to create and manage cardholders and cards with Stripe Connect.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/replacements",
    "markdown": "# Replacement cards | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to replace cards that are expired, damaged, lost, or stolen.\n\nYou can replace cards that are expired, damaged, lost, or stolen. The process differs slightly for each kind of card replacement.\n\n*   **Card expired**: The card has reached its expiration date and is no longer valid.\n*   **Card damaged**: The cardholder requests a new card for a reason other than lost or stolen (for example, a physical card’s chip no longer reads properly).\n*   **Card lost/stolen**: The card is reported lost or stolen and a new card number, expiry, security code are issued.\n\nDepending on the scenario, the replacement card might have a different card number, expiry, or security code from the original:\n\n| Scenario | New card number | New security code | New expiry |\n| --- | --- | --- | --- |\n| **Card expired** | No  | Yes | Yes |\n| **Card damaged** | No  | Yes | Yes |\n| **Card lost/stolen** | Yes | Yes | Yes |\n\n## Replacements for expired or damaged cards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPhysical cards can get damaged, and both physical cards and virtual cards expire, but you can create replacement cards that have the same card number. The cardholder can continue to use the original card before the replacement card is activated, as long as the card isn’t too damaged or already expired. Activating the replacement card cancels the original card if it isn’t already canceled.\n\nTo create a replacement card for an expired or damaged card, create a [Card](https://docs.stripe.com/api#issuing_card_object) with `replacement_for` using the expired or damaged `Card` ID and `replacement_reason` set to `expired` or `damaged`.\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1Cm3pZIyNTgGDVfzI83rasFP \\  -d currency=usd \\  -d type=virtual \\  -d replacement_for=ic_1LL8wgLUVt6Jcs5dgLLfwcAE \\  -d replacement_reason=expired`\n\n## Replacements for lost or stolen cards![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nLost or stolen cards get new card numbers for security reasons. We need to cancel the original cards before we can create the replacement card.\n\nTo create a replacement card for a lost or stolen card:\n\n1.  Cancel the lost or stolen card by using the [update card](https://docs.stripe.com/api#update_issuing_card) endpoint to set its `status` to `canceled` and its `cancellation_reason` to `lost` or `stolen`.\n    \n2.  Create a [Card](https://docs.stripe.com/api#issuing_card_object) with `replacement_for` using the lost or stolen `Card` ID and `replacement_reason` set to `lost` or `stolen`.\n    \n\n`curl https://api.stripe.com/v1/issuing/cards/ic_1CoYuRKEl2ztzE5GIEDjQiUI \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d status=canceled \\  -d cancellation_reason=lost`\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1Cm3pZIyNTgGDVfzI83rasFP \\  -d currency=usd \\  -d type=virtual \\  -d replacement_for=ic_1CoYuRKEl2ztzE5GIEDjQiUI \\  -d replacement_reason=lost`\n\n## All replacements![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAll replacement cards have renewed expiration dates and new security codes. Authorizations made on the original cards are migrated to the replacements, but might still clear on the original cards. Like the originals, replacement cards must be activated before use.\n\n## Card-on-file updating![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFor many of our card programs, Stripe automatically updates the card details on file with acquiring merchants, even when a card is completely reissued. This feature offers several benefits, including saving your cardholders the hassle of manually re-entering card details when their cards expire.\n\n### Card expired![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUpdating the payment details for a card that has been replaced due to expiration ensures that recurring payments and stored payment details continue to function smoothly. This provides cardholders with a seamless experience even when their cards expire.\n\n### Card lost or stolen![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBy default, Stripe updates merchants with the new card number, expiry, and security code of a replacement card, even when the card is lost or stolen.\n\nIf you prefer not to provide these details to acquiring merchants, cancel the lost or stolen card and issue a new one without specifying the `replacement_for` card. This prevents the replacement card from being explicitly tied to the card that’s been lost or stolen.",
    "title": "Replacement cards | Stripe Documentation",
    "description": "Learn how to replace cards that are expired, damaged, lost, or stolen.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/connect/embedded-components",
    "markdown": "# Embed Issuing card management into your website\n\n## Use prebuilt UI components to embed Issuing card management into your website.\n\n#### Beta\n\nGive your connected accounts access to Issuing card management functionality on your website by using [Connect embedded components](https://docs.stripe.com/connect/get-started-connect-embedded-components). Connect embedded components allow you to create complex integrations with Stripe products that require minimal coding and configuration out of the box.\n\nStripe offers two different components for Issuing card management:\n\n*   Issuing Card component\n*   Issuing Cards List component\n\n#### Security tip\n\nThese components are for **admin users** of connected accounts, who can access sensitive card and cardholder data of the entire connected account. These components shouldn’t be used to render UI for individual cardholders in any circumstance.\n\n## Quickstart![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIssuing Connect embedded components requires access to [Issuing and Connect](https://docs.stripe.com/issuing/connect).\n\nTo learn how embedded components work, see the [Connect embedded components](https://docs.stripe.com/connect/get-started-connect-embedded-components) guide. The corresponding [embedded components quickstart](https://docs.stripe.com/connect/connect-embedded-components/quickstart) can help you set up your environment.\n\nTo embed Issuing card management into your website:\n\n1.  Follow the steps to [create a connected account with Issuing capabilities](https://docs.stripe.com/issuing/connect#create-connected-accounts-with-issuing-capabilities).\n2.  [Create a cardholder and cards](https://docs.stripe.com/issuing/connect/cardholders-and-cards) for that connected account.\n3.  [Create an AccountSession](https://docs.stripe.com/connect/connect-embedded-components/quickstart#server-endpoint) with `issuing_card: {enabled: true}` or `issuing_cards_list: {enabled: true}`.\n4.  [Add the `issuing-card` or `issuing-cards-list` component to the DOM](https://docs.stripe.com/connect/connect-embedded-components/quickstart#embedded-component).\n\n[](#issuing-card-component)\n\nThe Issuing Card component allows an admin to view individual card details. From this view, they can activate, deactivate (freeze), or cancel cards. If you implement [sensitive data display](#sensitive-data-display), they can also view card numbers (PANs) and CVVs or CVCs for virtual cards.\n\n### Issuing Card configuration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis embedded component supports the following parameter:\n\n| Method | Type | Description |\n| --- | --- | --- |\n| `setDefaultCard` | `string` | Sets the Issuing [Card](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id) ID to display upon initial load. |\n| `setCardSwitching` | `boolean` | Sets whether or not to render the card dropdown selector. Sets to `true` by default. |\n| `setFetchEphemeralKey` | `Function` | Sets the callback that fetches the ephemeral key for the card. See [sensitive data display](#sensitive-data-display). |\n\n[](#issuing-cards-list-component)\n\nThe Issuing Cards List component allows an admin to view all the cards on a connected account. They can filter cards by cardholder, creation date, and card type.\n\nWhen the admin clicks on a row in the table, they see a view of the selected card where they can activate, deactivate (freeze), or cancel the card. If you implement [sensitive data display](#sensitive-data-display), they can also view card numbers (PANs) and CVC or CVVs for virtual cards.\n\n### Issuing Cards List configuration![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis embedded component supports the following parameters:\n\n| Method | Type | Description |\n| --- | --- | --- |\n| `setFetchEphemeralKey` | `Function` | Sets the callback that fetches the ephemeral key for the currently selected card. See [sensitive data display](#sensitive-data-display). |\n\n[](#sensitive-data-display)\n\nIssuing Connect embedded components integrate with [Issuing Elements](https://docs.stripe.com/issuing/elements) to provide a PCI-compliant way for you to allow your admins to view card numbers (PANs) and CVV or CVCs for virtual cards. The sensitive data renders inside Stripe-hosted iframes and never touches your servers.\n\nThe components can use an ephemeral key to securely retrieve card information from the Stripe API without publicly exposing your secret keys.\n\nTo enable this functionality you must:\n\n1.  Set up an ephemeral key exchange on your server.\n2.  Pass an asynchronous callback to the components.\n\nStripe generates a `nonce` from the [Card ID](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id) in the Issuing Card or Issuing Cards List component when a card is selected or loaded. Stripe then calls your callback function which returns an ephemeral key, and then renders a `Show numbers` button if the ephemeral key is valid.\n\n### Ephemeral key exchange![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYour server-side endpoint needs to accept a [Card ID](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id) and a `nonce`. It can then create an ephemeral key using Stripe.\n\nHere’s how you might implement an ephemeral key creation endpoint in web application frameworks across various languages:\n\n`// This example sets up an endpoint using the Express framework. // Watch this video to get started: [https://youtu.be/rPR2aJ6XnAc](https://youtu.be/rPR2aJ6XnAc)  const express = require('express'); const bodyParser = require('body-parser'); const app = express();  app.use(bodyParser.urlencoded({ extended: true }));  const stripe = require('stripe')(`\n\n`'sk_test_4eC39HqLyjWDarjtT1zdp7dc'`\n\n`);  app.post('/ephemeral-keys', async (request, response) => {   const { card_id, nonce } = request.body;    const ephemeralKey = await stripe.ephemeralKeys.create({     nonce: nonce,     issuing_card: card_id,   }, {     apiVersion: '2024-06-20',     stripeAccount: '{{CONNECTED_ACCOUNT_ID}}',   });    response.json({     ephemeralKeySecret: ephemeralKey.secret,     nonce: nonce,     issuingCard: card_id,   }); });`\n\n### Asynchronous callback![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou must define an asynchronous function that accepts a named argument with property `issuingCard` which is a [Card](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-id) ID and additionally, a `nonce` property. This function must return an `Object` with properties `issuingCard`, `nonce`, and `ephemeralKeySecret` which are retrieved from the endpoint you set up in the previous step.\n\nHere’s how you might implement this callback:\n\n`const issuingCard = stripeConnectInstance.create('issuing-card'); const fetchEphemeralKey = async (fetchParams) =>  {   const { issuingCard, nonce } = fetchParams;    // This may vary greatly based on your implementation   const response = await myServer.getEphemeralKey({issuingCard, nonce})    return {     issuingCard: response.issuingCard,     nonce: response.nonce,     ephemeralKeySecret: response.ephemeralKeySecret   } }  issuingCard.setFetchEphemeralKey(fetchEphemeralKey); document.body.appendChild(issuingCard);`\n\n[](#additional-configuration)\n\nYou can customize and configure your Connect embedded components to match your website’s look and feel. You can set this configuration when you initialize the `StripeConnectInstance`. See [customize the look of Connect embedded components](https://docs.stripe.com/connect/get-started-connect-embedded-components#customize-the-look-of-connect-embedded-components) for more details.",
    "title": "Embed Issuing card management into your website | Stripe Documentation",
    "description": "Use prebuilt UI components to embed Issuing card management into your website.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/physical/address-validation",
    "markdown": "# Physical cards address validation | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to enable and manage address validation features for physical cards.\n\nStripe Issuing needs accurate and properly formatted shipping addresses to ensure successful delivery of physical cards to their intended recipient. Cards sent to invalid addresses get returned to Stripe, but the delivery attempt and the eventual return can take over 2 weeks to complete. Returned cards can create an operational burden, increase your overall costs, and delay your cardholders’ receipt of your physical cards.\n\nTo maximize your delivery success, Stripe’s Cards API has built-in address normalization and validation. Stripe compares the shipping address you provide to a third-party address database and identifies or fixes any issues with the address.\n\n## Address normalization![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nNormalization ensures that your addresses adhere to the standards of the shipment’s country while also correcting any easy-to-fix errors in your addresses.\n\nExamples of normalization include:\n\n#### Address standardization to ensure proper formatting ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n`// Before \"shipping\": {   \"address\": {     \"line1\": \"354 Oyster Point Blvd South San Francisco, CA 94080\", // incorrectly formatted line1     \"city\": \"South San Francisco\",     \"postal_code\": \"94080\",     \"state\": \"CA\",     \"country\": \"US\"   } }  // After \"shipping\": {   \"address\": {     \"line1\": \"354 OYSTER POINT BLVD\",     \"city\": \"SOUTH SAN FRANCISCO\",     \"postal_code\": \"94080\",     \"state\": \"CA\",     \"country\": \"US\"   } }`\n\n#### Address correction to apply corrections found from matching with an existing validated address ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\n`// Before \"shipping\": {   \"address\": {     \"line1\": \"354 Oyster Point\",     \"city\": \"South San Francisco\",     \"postal_code\": \"94080\",     \"state\": \"NM\", // incorrect state with an available correction     \"country\": \"US\"   } }  // After \"shipping\": {   \"address\": {     \"line1\": \"354 OYSTER POINT BLVD\", // added BLVD suffix     \"city\": \"SOUTH SAN FRANCISCO\",     \"postal_code\": \"94080\",     \"state\": \"CA\", // corrected state     \"country\": \"US\"   } }`\n\nThe normalized address is included in the [address validation](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-shipping-address_validation) hash that is returned after successfully creating a physical card or updating a card’s shipping address with address normalization enabled.\n\n#### ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\n`\"shipping\": {   // address supplied during card creation   \"address\": {     \"line1\": \"354 Oyster Point Blvd South San Francisco, TX 94080\",     \"city\": \"South San Francisco\",     \"postal_code\": \"94080\",     \"state\": \"TX\",     \"country\": \"US\"   },   // address validation hash   \"address_validation\": {     // the normalized address     \"normalized_address\": {       \"line1\": \"354 OYSTER POINT BLVD\",       \"city\": \"SOUTH SAN FRANCISCO\",       \"state\": \"CA\",       \"postal_code\": \"94080\",       \"country\": \"US\"     },     \"mode\": \"validation_and_normalization\",     \"result\": \"likely_deliverable\"   } }`\n\n## Address validation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nValidation determines whether your address is deliverable by attempting to match to an existing, validated address and is done after applying normalization.\n\nThe result of this validation is included in the address validation hash. Depending on the [address validation mode](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-shipping-address_validation-mode) used this might result in an API error.\n\n| Result | Description |\n| --- | --- |\n| `likely_deliverable` | If a partially matching or fully matching address is found in our third party database, your address is considered likely deliverable. |\n| `likely_undeliverable` | If no matching or partially matching address is found in our third party database, your address is considered likely undeliverable. |\n| `indeterminate` | The deliverability of the address couldn’t be determined. |\n\nFor example, the previous example showed the validation result of `likely_deliverable`.\n\n`\"address_validation\": {   // the normalized address   \"normalized_address\": {     \"line1\": \"354 OYSTER POINT BLVD\",     \"city\": \"SOUTH SAN FRANCISCO\",     \"state\": \"CA\",     \"postal_code\": \"94080\",     \"country\": \"US\"   },   \"mode\": \"validation_and_normalization\",   // the result showing that address was validated to be likely deliverable   \"result\": \"likely_deliverable\" }`\n\n## Managing address validation features with address validation modes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe Cards API supports three address validation modes, which can optionally be specified in the [address\\_validation](https://docs.stripe.com/api/issuing/cards/create#create_issuing_card-shipping-address_validation) parameter when creating a physical card or updating a card’s shipment.\n\n| Mode | Description |\n| --- | --- |\n| `validation_and_normalization` | Validates and normalizes your card’s shipping address before submitting it for fulfillment. Stripe attempts to automatically apply any appropriate corrections and formatting to your address before determining deliverability. If the card’s shipping address is likely undeliverable, you get an API request error. |\n| `normalization_only` | Normalizes your card’s shipping address before submitting it for fulfillment, and applies any appropriate corrections and formatting to your address. Address deliverability isn’t enforced, and you don’t get an API request error. |\n| `disabled` | Ships your card using the address provided as-is, without applying any normalization or validating its deliverability. This is only recommended when an address is known to be correct or otherwise validated. |\n\nUse `validation_and_normalization` for the address validation mode. We also provide alternate modes depending on your scenario:\n\n*   `disabled`: If you believe a card is incorrectly blocked.\n*   `normalization only`: If you want to minimize API errors but still gain the benefits of normalization. The default is `normalization_only` if not specified.\n\n### Validation and normalization![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYour card is shipped with the validated, normalized address. Address deliverability is enforced, and the API errors if the address is likely undeliverable. Stripe strongly recommends using this mode to ensure deliverability for the address.\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1Cm3pZIyNTgGDVfzI83rasFP \\  -d type=physical \\  -d currency=usd \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Fake St\" \\  -d \"shipping[address][city]\"=\"Fake City\" \\  -d \"shipping[address][state]\"=NY \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[address_validation][mode]\"=validation_and_normalization`\n\n`\"error\": {   \"message\": {     \"The address is undeliverable based on given inputs. Please ensure that the address was inputted correctly and can be delivered to.\"   } }`\n\n### Normalization only![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYour card will be shipped with the normalized address. Address deliverability isn’t enforced, and you don’t get an API request error if the address is likely undeliverable.\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1Cm3pZIyNTgGDVfzI83rasFP \\  -d type=physical \\  -d currency=usd \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Fake St\" \\  -d \"shipping[address][city]\"=\"Fake City\" \\  -d \"shipping[address][state]\"=NY \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[address_validation][mode]\"=normalization_only`\n\n`# Example response {   \"id\":  \"ic_test1CDR9auHsQKan42gGK34\",   \"object\": \"issuing.card\",   \"shipping\": {     // address supplied during card creation     \"address\": {       \"line1\": \"1234 Fake Street\",       \"city\": \"Fake city\",       \"postal_code\": \"94111\",       \"state\": \"NY\",       \"country\": \"US\"     },     // address validation information     \"address_validation\": {       // the card will be shipped with this address       \"normalized_address\": {         \"line1\": \"1234 FAKE ST\",         \"city\": \"FAKE CITY\",         \"state\": \"NY\",         \"postal_code\": \"94111\",         \"country\": \"US\"       },       \"mode\": \"normalization_only\",       \"result\": \"likely_undeliverable\"     },     // other fields...   },   // other fields... }`\n\n### Disabled![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThis mode ships your card using the address provided as-is, without applying normalization or validating its deliverability. A normalized address and validation result will not be returned. This is recommended only when an address is known to be correct or otherwise validated.\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1Cm3pZIyNTgGDVfzI83rasFP \\  -d type=physical \\  -d currency=usd \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Fake St\" \\  -d \"shipping[address][city]\"=\"Fake City\" \\  -d \"shipping[address][state]\"=NY \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[address_validation][mode]\"=disabled`\n\n`// Example response {   \"id\":  \"ic_test1CDR9auHsQKan42gGK34\",   \"object\": \"issuing.card\",   \"shipping\": {     // address supplied during card creation     \"address\": {       \"line1\": \"1234 Fake Street\",       \"city\": \"Fake city\",       \"postal_code\": \"94111\",       \"state\": \"NY\",       \"country\": \"US\"     },     // address validation information     \"address_validation\": {       \"mode\": \"disabled\"     },     // other fields...   },   // other fields... }`\n\n## Integrating address validation into your card creation flow![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWe provide several examples on how to integrate your flow with address validation features below. These examples are not exhaustive, and are only meant to serve as ideas to help you with your integration.\n\n### Strict address validation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe best way to increase deliverability is to never bypass address validation, requiring your customers to always submit deliverable addresses.\n\n### Address suggestions![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nPrompting a user to select between a suggested address and the one they provided is a common flow that you can build yourself using our address validation features.\n\n### Relaxed address validation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can gracefully handle undeliverable address errors by requiring the user to confirm the address they submitted. By leveraging the `disabled` address validation mode, you can make sure that your customers are able to order cards without much friction if their address is known to be correct.\n\n## Testing address validation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can supply a magic value for `line1` to trigger certain validation conditions in test mode. You must pass in legitimate values for the `city`, `state`, and `postal_code` arguments.\n\n| Value | Type |\n| --- | --- |\n| `address_valid` | Send a test mode request using a deliverable shipping address. |\n| `address_invalid` | Send a test mode request using an undeliverable shipping address. |\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1Cm3pZIyNTgGDVfzI83rasFP \\  -d type=physical \\  -d currency=usd \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=address_invalid \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[address_validation][mode]\"=validation_and_normalization`",
    "title": "Physical cards address validation | Stripe Documentation",
    "description": "Learn how to enable and manage address validation features for physical cards.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/other/choose-cardholder",
    "markdown": "# Choose a cardholder type | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to select the best cardholder type for your use case.\n\nWhen creating a [Cardholder object](https://docs.stripe.com/api/#issuing_cardholder_object), you can specify a type: either `individual` or `company`—you can’t change the type after you create the cardholder. Setting a type is optional and defaults to individual if none is specified.\n\nYou might have to collect additional information, depending on the cardholder type you choose. For individual cardholders, you must provide first name and last name, and proof of acceptance of [Authorized User Terms](https://docs.stripe.com/issuing/cards#accept-authorized-user-terms). This data isn’t required for company cardholders.\n\n## Find your use case![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nChoosing a cardholder type depends on your use case. View your use case and other program details from the [Card programs](https://dashboard.stripe.com/settings/issuing/card-programs) page in the Dashboard.\n\n### Individual cardholders![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCreate _individual cardholders_ if you’re issuing the card to an employee or contractor of your business or to an owner, employee, or contractor of one of your connected accounts.\n\nThis is the default and most common type.\n\nSome example use cases for individual cardholders include:\n\n*   Building a new expense management product for small businesses where the platform issues cards to employees or contractors of those small businesses\n*   Giving cards to your own employees to make purchases for your company\n*   Building a fleet card product that issues cards to drivers\n*   Running a platform that enables businesses to give cards to their employees for disbursing employee benefits or perks\n\n### Company cardholders![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nCreate _company cardholders_ if you’re issuing the card directly to an entity.\n\nThis type is less common, and may not be available depending on the use-case you provided at onboarding. If you’re restricted, Stripe returns the `Cardholder type must be individual` error.\n\nHere are some example use cases for company cardholders:\n\n*   A platform that creates virtual cards to use programmatically for online purchases with company funds and for its benefit. For example, purchasing inventory for resale or paying for cloud services. The cards are _not_ given to individual employees for individual expenses (for example, expensing a business lunch).\n*   A platform that creates cards assigned to a vehicle (like a rental car or semi-truck). The cards stay with the vehicle at all times. Alternating drivers use the card to refuel the vehicle. The card does not belong to any one individual.\n\n#### Caution\n\nIn some cases, you may not be able to create company cardholders, depending on Stripe’s review of your use case at onboarding. If this restriction applies to you, Stripe notifies you. You receive an error message if you try to create a company cardholder and your account has this restriction.\n\n## Changing cardholder type![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAfter a cardholder has been created, you can’t change its type.\n\nIf you have linked a card to the cardholder, you can’t change who the cardholder is.\n\nIf you haven’t linked any cards to the cardholder, you can create a new cardholder with the correct type. In most cases, you don’t need to delete the existing cardholder. But make sure that you assign the appropriate type to new cardholders to avoid any potential disruption in service.",
    "title": "Choose a cardholder type | Stripe Documentation",
    "description": "Learn how to select the best cardholder type for your use case.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/customer-support",
    "markdown": "# Customer support for Issuing and Treasury\n\nOrdering and replacing cards Lost or stolen cards[Make an API call](https://docs.stripe.com/issuing/cards/replacements#replacements-for-lost-or-stolen-cards) to immediately cancel and replace any physical or virtual cards reported as compromised.\n\nIf any authorizations were approved on a compromised card, you might [dispute the transaction(s)](https://docs.stripe.com/issuing/purchases/disputes) as fraud.\n\nExpired or damaged physical cards[Make an API call](https://docs.stripe.com/issuing/cards/replacements) to replace physical cards that are expired or damaged.Delayed physical cardsDelays in card manufacturing can occur if there is a pending [cardholder watchlist screening](https://support.stripe.com/questions/issuing-watchlist-reviews). Ensure that the cardholder is active and has fulfilled all necessary requirements. If you have chosen the Standard shipping method, which does not provide tracking, and the cardholder has not received the card within 10 business days, we recommend canceling and ordering a replacement (Stripe will credit the creation and shipment cost back to you).\n\nAlternatively, if you have selected Express or Priority shipping methods, which include tracking, you can retrieve the tracking number from the Dashboard or [via the API](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-shipping-tracking_number).\n\nCardholder experience Authorization declined[Make an API call](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-request_history-reason) to retrieve the authorization and review the request\\_history.reason.Cancel pending authorizationInform the cardholder that it is not possible to cancel pending authorizations. Only the acquiring merchant can void an authorization.\n\nAdvise customers that the authorization will automatically expire 7 days after creation (31 days if hotels, airlines, and car rental companies) and the held funds will be released at that time.\n\nMissing refund[Make an API call](https://docs.stripe.com/api/issuing/transactions/list#list_issuing_transactions-type) to retrieve a list of transactions associated with the card where the type is `refund`.\n\nStripe attempts to link refunds to original transactions. If this does not happen, you can review the amount and merchant data across all results to identify a match.\n\nDisputing a transactionEnsure that the cardholder has exhausted other means of resolving the issue, and obtain documentation of these attempts to use as evidence when filing the dispute.\n\nMake an API call to [create](https://docs.stripe.com/issuing/purchases/disputes?dashboard-or-api=api) and [submit](https://docs.stripe.com/issuing/purchases/disputes?dashboard-or-api=api#submission) a dispute on behalf of the cardholder.\n\nDispute loss reasonIf you are interested in the ability to retrieve a dispute loss reason via API, apply for the beta by [submitting your interest](https://docs.stripe.com/issuing/purchases/disputes) while logged into your platform account. If you do not have access to the beta, [contact support](https://support.stripe.com/) for more information that you can relay to the cardholder regarding why a dispute was lost.Excessive PIN retriesIf a card’s PIN is entered incorrectly three consecutive times, the PIN becomes blocked and the card becomes inactive. In most countries, cardholders can [unblock a card’s PIN at an ATM](https://docs.stripe.com/issuing/cards/pin-management#changing-a-cards-pin-at-an-atm).\n\nUsers who are gated into the encrypted PIN management feature might also [change the PIN](https://docs.stripe.com/issuing/cards/pin-management#changing-a-pin-with-the-cards-api) for an issued card using the Card Update API. However, depending on the region the card is used in, the new PIN might not be immediately usable.\n\nOnce the pin is unblocked, you will need to [make an API call](https://docs.stripe.com/api/issuing/cards/update#update_issuing_card-status) to update the card status to active. If you would like to request access to encrypted PIN management, [contact support](https://support.stripe.com/).\n\nCardholder inactive[Make an API call](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-requirements) to retrieve the cardholder requirements array so that you can review the disabled\\_reason and confirm whether any information is past\\_due.Cannot add card to digital walletEnsure you have already [configured digital wallets](https://docs.stripe.com/issuing/cards/digital-wallets). If configured, request screenshots from the cardholder of the error message being surfaced. [Contact support](https://support.stripe.com/) for in-depth troubleshooting assistance once you have obtained documentation from the cardholder.Fraud management Turning on 3DSConfirm your customer understands that 3DS can only be turned on at the connected account level, meaning they will not be able to toggle the feature on or off for individual cardholders.\n\nAfter the feature is enabled, acquiring merchants might immediately start challenging card-not-present authorization requests for any users that have linked a phone number or email address to the card or cardholder.\n\nOnce you’re ready, [contact support](https://support.stripe.com/) to request 3DS be enabled and provide the Stripe ID of the connected account.\n\nUpdate spending controlsMake an API call to update the spending controls on the [cardholder object](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-spending_controls) or the [card object](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-spending_controls) itself.Enabling fraud challenges betaIf you are providing cardholders with notice of suspected fraud and the ability to override this warning, [apply for enrollment in the beta](https://docs.stripe.com/issuing/controls/fraud-challenges) by submitting your interest while logged into your platform account.Issuing balance Top-ups from external bank account[Make an API call](https://docs.stripe.com/issuing/connect/funding) to add funds to a connected account’s Issuing balance. Set appropriate expectations with cardholders for settlement timing based on your region. If top-ups are reportedly delayed, you can [make an API call](https://docs.stripe.com/api/topups/retrieve) to retrieve a list of top-ups associated with the connected account.Balance transfer (to fund from Stripe balance)You must sign up for the [Balance Transfer API private beta](https://docs.stripe.com/issuing/connect/funding#request-early-access) to transfer funds from a connected account’s Stripe balance into their Issuing balance.Payouts[Make an API call](https://docs.stripe.com/issuing/connect/funding#pay-out-an-issuing-balance) to pay out funds from a connected account’s issuing balance to their external bank account.Complaints Operational complaintsStripe expects you to acknowledge all operational complaints within 5 business days and resolve them within 15 business days from complaint submission date.\n\nIn addition, you must [report an aggregated list of complaints](https://docs.stripe.com/treasury/handling-complaints) to Stripe on a monthly basis.\n\nExecutive complaintsPromptly notify Stripe within 1 business day of complaint submission date. Executive complaints include any threats of litigation and complaints received from regulators and complaints that allege Unfair or Deceptive Acts and Practices (UDAP), discrimination, consumer harm or legal concerns.\n\nUpon receipt of an Executive Complaint, refrain from further interaction with the customer until Stripe reviews the complaint. Stripe works closely with you to resolve all Executive Complaints. In addition, you must [report an aggregated list of complaints](https://docs.stripe.com/treasury/handling-complaints) to Stripe on a monthly basis.",
    "title": "Customer support for Issuing and Treasury | Stripe Documentation",
    "description": "Resolve common Issuing and Treasury questions and issues.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/physical/personalization-designs",
    "markdown": "# Manage personalization designs | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to prepare and use personalization designs for creating physical cards.\n\n## Personalization designs![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nA [personalization design](https://docs.stripe.com/api/issuing/cards/physical/personalization_designs) is a logical grouping of all the design attributes required to personalize and ship a card. It includes both a physical bundle and any other elements needed to complete personalization on a card:\n\n*   A [physical bundle](https://docs.stripe.com/api/issuing/cards/physical/physical_bundles) is a set of physical goods in inventory that are personalized and shipped when you issue a card. See [Standard cards](https://docs.stripe.com/issuing/cards/physical/standard) or [Custom cards](https://docs.stripe.com/issuing/cards/physical/custom) to learn more. You can also [view all of your physical bundles](https://docs.stripe.com/api/issuing/physical_bundles/list)\n*   Some bundles support or require other design attributes, such as card logos and carrier text.\n\nA card logo is an image printed onto the card, which you provide to Stripe as a file upload. Stripe only prints card logos in one color, so for the highest quality print we require that card logo images are purely binary containing a black logo on a white background with no grayscale. To upload a logo, use the [File API](https://docs.stripe.com/api/files/create) with `purpose` set to `issuing_logo`.\n\n`curl https://files.stripe.com/v1/files \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`: \\   -F \"file\"=\"@/path/to/a/file.jpg\" \\   -F \"purpose\"=\"issuing_logo\"`\n\nCarrier text is a set of content, which you provide as separate pieces of text, printed onto a carrier letter template. When creating a personalization design, you need to specify both the physical bundle to use, as well as a card logo and carrier text if the bundle requires it.\n\n`curl https://api.stripe.com/v1/issuing/personalization_designs \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d physical_bundle=ics_Kc3MX9PPsUFFMp \\  -d card_logo=  {{FILE_ID}}   \\  -d \"carrrier_text[header_title]\"=Hello`\n\nStripe must review and approve your design (and the underlying physical bundle) before fulfilling any cards made with that design. See [Personalization design review](https://docs.stripe.com/issuing/cards/physical/personalization-designs#personalization-design-review) to learn more.\n\nThere is no limit to the number of personalization designs you can create. This gives you the flexibility to express any number of combinations of a physical bundle, card logo, and carrier text to best suit your use case.\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=  {{CARDHOLDER_ID}}   \\  -d currency=usd \\  -d type=physical \\  -d personalization_design=ipcd_OhggKRta0zu2Te`\n\n## Personalization design review![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf your personalization design includes a logo or carrier text, Stripe must review it to make sure they comply with the guidelines set by our partner networks. A design’s `status` field indicates whether it’s under review, active, or rejected. Cards created with personalization designs in review wait for fulfillment until the personalization design clears review. A personalization design can’t leave the review state if its physical bundle hasn’t been approved yet.\n\nAfter approval, the personalization design status advances to active. After becoming active, any cards with fulfillment waiting on the personalization design may be fulfilled. Any cards created with a personalization design that is already active may be fulfilled immediately. Note that other reviews, such as cardholder watchlist screening, may also prevent a card from being fulfilled immediately.\n\nYou can only set/update the `physical_bundle`, `card_logo`, and `carrier_text` attributes when first creating the personalization design, or after the personalization design has been rejected.\n\n### Handle design rejection![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen a personalization design is rejected, you’re notified with a webhook if configured. The personalization design object identifies which part of the design violated design guidelines and reason(s) for the rejection in the `rejection_reasons` attribute.\n\n| Rejection reason | Explanation |\n| --- | --- |\n| non\\_binary\\_image | The image isn’t binary - it contains colors, including grayscale, other than black and white. You can use image manipulation software to threshold the image into binary form. |\n| network\\_name | The image or text improperly uses the name of a credit card network. |\n| other\\_entity | The image or text improperly uses the name of another entity. |\n| geographic\\_location | The image or text contains the name of a geographic location. |\n| non\\_fiat\\_currency | The image or text contains a reference to non-fiat currency. |\n| promotional\\_material | The image or text contains advertising, promotional material, or a tagline. |\n| inappropriate | The image or text contains inappropriate content. |\n| other | The image or text was flagged for some other reason. See Stripe Support to contact us about how to remediate the rejection. |\n\nYou can [update the relevant design attributes](https://docs.stripe.com/api/issuing/personalization_designs/update) to address the rejection. Any updates returns the personalization design to the review state, which prevents any further updates to those attributes.\n\n### Handle status changes programmatically![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe provides webhook events for personalization design updates to help you integrate personalization design management into your own platform.\n\n| Webhook event | Trigger |\n| --- | --- |\n| issuing\\_personalization\\_design.updated | Occurs whenever you or Stripe updates a personalization design. |\n| issuing\\_personalization\\_design.activated | Occurs whenever Stripe activates the bundle for a personalization design and design review approves the design. |\n| issuing\\_personalization\\_design.rejected | Occurs whenever a personalization design rejects a personalization design. |\n| issuing\\_personalization\\_design.deactivated | Occurs whenever Stripe deactivates the bundle for a personalization design. |\n\nSee [webhooks](https://docs.stripe.com/webhooks) to learn more.\n\n### Test status changes![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nStripe drives all status changes to a personalization design. However, we provide several test mode helpers so you can test your integration by triggering status changes yourself in test mode:\n\n*   [Activate a test mode design](https://docs.stripe.com/api/issuing/personalization_designs/activate_testmode)\n*   [Deactivate a test mode design](https://docs.stripe.com/api/issuing/personalization_designs/deactivate_testmode)\n*   [Reject a test mode design](https://docs.stripe.com/api/issuing/personalization_designs/reject_testmode)\n\n## Set a default personalization design![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo help streamline your integration, you can set a default personalization design so that you don’t need to explicitly specify a personalization design for every card you create.\n\nWhen creating or updating a personalization design, set the `is_default` preference to `true`. The `is_default` preference for the previous default design is automatically set to `false`, as there can only be one default.\n\n`curl https://api.stripe.com/v1/issuing/personalization_designs/ipcd_OhggKRta0zu2Te \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"preferences[is_default]\"=true`\n\nAfter you have a default set, any cards you create without specifying a personalization design automatically use the default. Trying to create a card without specifying a personalization design when you don’t have any defaults set results in an error.\n\nYou can always override the default personalization design when creating a card by specifying the `personalization_design` parameter.\n\n## Change personalization designs without deploying code using lookup keys![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSome businesses built on Stripe Issuing offer multiple card products to their cardholders. The personalization design representing the card product can change over time. If you hardcode your personalization designs and you want to change them, the process often requires you to deploy new code. You can use [lookup keys](https://docs.stripe.com/api/issuing/personalization_designs/create#create_issuing_personalization_design-lookup_key) to remove the need to deploy new code when you want to change personalization designs.\n\nTo use lookup keys with personalization designs, you can assign a unique lookup key by passing the `lookup_key` parameter when creating or updating a personalization design. Instead of hardcoding a personalization design ID, you hardcode the lookup key value and query for the matching personalization design using the [personalization design list endpoint](https://docs.stripe.com/api/issuing/personalization_designs/list#list_issuing_personalization_designs-lookup_keys).\n\nTo improve performance, you might want to cache and/or only reload the personalization design occasionally. When it’s time to change the personalization design for a card product, you can create or update a new personalization design using the existing value for `lookup_key` while setting `transfer_lookup_key` to `true`.\n\n`curl https://api.stripe.com/v1/issuing/personalization_designs \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d physical_bundle=ics_Kc3MX9PPsUFFMp \\  -d card_logo=  {{FILE_ID}}   \\  -d \"carrrier_text[header_title]\"=Hello \\  -d lookup_key=\"My lookup key\" \\  -d transfer_lookup_key=true`\n\n## Manage personalization designs using Connect![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen using Connect, personalization designs can be managed at both the platform and connected account levels, just as described above. However, Connect also grants you some ways to streamline your integration even further, by giving connected accounts access to resources at the platform level.\n\n### Personalization designs and physical bundles![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEach of your connected accounts can access personalization designs and physical bundles created at the platform level. This means that you can:\n\n*   Issue cards from a connected account with a personalization design created on the platform.\n*   Create a personalization design on a connected account using a physical bundle available within the platform’s account. This allows you to create these resources on your platform account, and share them across all of your connected accounts. We recommend managing as much as possible at the platform level, unless there are any items that should explicitly be hidden from a connected account, or will only ever be used for specific connected accounts.\n\n### Default personalization designs![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nEach of your connected accounts can set their own default personalization design. You can also [set a default personalization design](https://docs.stripe.com/api/issuing/personalization_designs/create#create_issuing_personalization_design-preferences-is_default) at the platform level. If set, the platform default is used when you issue a card for a connected account without specifying a design, and that connected account doesn’t have a default.\n\nIf you want issued cards to use the platform default, you can unset the default personalization design for the connected account.",
    "title": "Manage personalization designs | Stripe Documentation",
    "description": "Learn how to prepare and use personalization designs for creating physical cards.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards",
    "markdown": "# Create cards with the API\n\n## Learn how to create cardholders and issue cards.\n\nYou can create virtual and physical cards on Mastercard or Visa (or both) with the [Cards API](https://docs.stripe.com/api/issuing/cards). Cardholders can use [virtual cards](https://docs.stripe.com/issuing/cards/virtual) instantly after you create them. Stripe sends you [physical cards](https://docs.stripe.com/issuing/cards/physical) in the mail.\n\nYou can also create virtual and physical cards with the [Dashboard](https://dashboard.stripe.com/issuing/cards).\n\n[](#create-cardholder)\n\nThe [Cardholder](https://docs.stripe.com/api/#issuing_cardholder_object) object represents an individual or business entity that you can issue cards to. Create a `Cardholder` with a [name](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-name) to display on cards and the [billing](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-billing) address, which is often requested when the cardholder makes online purchases, and is usually the business address of the connected account or your platform.\n\nWhen you create a cardholder or update it later, you can include additional information such as a `phone_number` or `email`, which are required for some features like [digital wallets](https://docs.stripe.com/issuing/cards/digital-wallets). You can also specify [`preferred_locales`](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-preferred_locales) to customize the cardholder’s language for features such as [3D Secure](https://docs.stripe.com/issuing/3d-secure).\n\n`curl https://api.stripe.com/v1/issuing/cardholders \\   -u` \n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`: \\   -d \"name\"=\"Jenny Rosen\" \\   -d \"email\"=\"jenny.rosen@example.com\" \\   -d \"phone_number\"=\"+18008675309\" \\   -d \"status\"=\"active\" \\   -d \"type\"=\"individual\" \\   -d \"individual[first_name]\"=\"Jenny\" \\   -d \"individual[last_name]\"=\"Rosen\" \\   -d \"individual[dob][day]\"=1 \\   -d \"individual[dob][month]\"=11 \\   -d \"individual[dob][year]\"=1981 \\   -d \"billing[address][line1]\"=\"123 Main Street\" \\   -d \"billing[address][city]\"=\"San Francisco\" \\   -d \"billing[address][state]\"=\"CA\" \\   -d \"billing[address][postal_code]\"=\"94111\" \\   -d \"billing[address][country]\"=\"US\"`\n\nStripe returns a `Cardholder` object that contains the information you provided and sends the `issuing_cardholder.created` [webhook](https://docs.stripe.com/webhooks) event.\n\n### Individual type cardholder requirements ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nThe cardholder [type](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-type) defaults to `individual`, but you can [set the type](https://docs.stripe.com/issuing/other/choose-cardholder) to `company` if you choose.\n\nYou must provide values for the first and [last names](https://docs.stripe.com/api/issuing/cardholders/create#create_issuing_cardholder-individual-last_name) of individual cardholders, which Stripe screens in accordance with regulatory guidelines. Consider also providing [date of birth](https://docs.stripe.com/api/issuing/cardholders/create#create_issuing_cardholder-individual-dob), which might help reduce [watchlist reviews](https://support.stripe.com/questions/issuing-watchlist-reviews).\n\nIf you’re issuing cards to individuals for programs backed by Celtic Bank (not required for `company` type cardholders), you must record acceptance of the [Celtic Bank Authorized User Terms](https://stripe.com/legal/issuing/celtic-authorized-user-terms) before [activating](#activate-card) a card for that cardholder. See the [Required Agreements for Issuing and Treasury](https://docs.stripe.com/issuing/compliance-us) for more information about which agreements you’re required to present to accountholders and cardholders.\n\nIf applicable, Stripe alerts you to this requirement in the `requirements` property of the `Cardholder` object:\n\n`{   \"id\": \"ich_1MGlTC2eZvKYlo2CJnowP9Z5\",   \"name\": \"Jenny Rosen\",   ...   \"requirements\": {     \"disabled_reason\": \"requirements.past_due\",     \"past_due\": [       \"individual.card_issuing.user_terms_acceptance.date\",       \"individual.card_issuing.user_terms_acceptance.ip\",     ],   },   ... }`\n\nYou can accept the terms on behalf of the `Cardholder` by passing in the Unix timestamp of when the cardholder accepted their terms and also their IP address.\n\n`curl https://api.stripe.com/v1/issuing/cardholders/ich_1MGlTC2eZvKYlo2CJnowP9Z5 \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d \"individual[card_issuing][user_terms_acceptance][date]\"=1470266163 \\  -d \"individual[card_issuing][user_terms_acceptance][ip]\"=\"91.121.146.224\"`\n\nWhen you’ve met the requirements for card activation (such as first and last names, plus proof of user terms acceptance) you can activate cards for them.\n\n[](#create-card)\n\nCreate a [Card](https://docs.stripe.com/api#issuing_card_object) and assign it to the cardholder. This request contains the ID of the `Cardholder` object, `currency`, and `type` (either `virtual` or `physical`) of the card.\n\nCreating a physical card requires a shipping address, and you can provide [additional arguments](https://docs.stripe.com/issuing/cards/physical/standard#shipping-your-cards) to specify shipment packaging and delivery service.\n\n`curl https://api.stripe.com/v1/issuing/cards \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d cardholder=ich_1MGlTC2eZvKYlo2CJnowP9Z5 \\  -d currency=usd \\  -d type=virtual`\n\nStripe returns a `Card` object upon creation, and sends the `issuing_card.created` [webhook](https://docs.stripe.com/webhooks) event.\n\n[](#activate-card)\n\nFor [authorizations](https://docs.stripe.com/issuing/purchases/authorizations) to be approved on a card, its `status` must be set to `active`. [Past-due requirements](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-requirements-past_due) block card activation.\n\n### Activate on creation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou can activate the card when creating it using the Dashboard or the API. In the Dashboard, when creating a card, click **Activate card**. Using the API, set `status` to `active` when using the [create card](https://docs.stripe.com/api/#create_issuing_card) endpoint.\n\n### Activate after creation![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nAlternatively, after creating an inactive card, you can activate it using the Dashboard or the API. To activate it using the Dashboard, select the card you want to activate, then click **Activate card**. To activate it using the API, use the [update card](https://docs.stripe.com/api#update_issuing_card) endpoint to set its `status` to `active`.\n\n`curl https://api.stripe.com/v1/issuing/cards/ic_1Cm3paIyNTgGDVfzBqq1uqxR \\  -u \"`\n\n`sk_test_4eC39HqLyjWDarjtT1zdp7dc`\n\n`:\" \\  -d status=active`\n\n### Re-activate after blocking![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIn some cases, multiple incorrect PIN attempts on a transaction deactivates a card, preventing further authorizations. To reactivate the card, use the Dashboard or the [update card](https://docs.stripe.com/api#update_issuing_card) API to set the card’s `status` to `active`.",
    "title": "Create cards with the API | Stripe Documentation",
    "description": "Learn how to create cardholders and issue cards.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/get-support",
    "markdown": "# Get support for self-service cards\n\n## Learn who to contact for support with self-service cards.\n\nBecause of the different logos displayed on the back of our Issuing cards, it can often be unclear who users should contact for support issues (for example Stripe, Visa, or their platform).\n\n![Card with branded logo](https://b.stripecdn.com/docs-statics-srv/assets/card_design_stripe_logo.dea346f5e114ab1b898b765ba94d9e9b.png)\n\nA branded card design\n\nBelow we’ve outlined who your point of contact should be with Issuing cards depending on your use case.\n\n### End-user![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’ve been provisioned a card by an entity, reach out directly to them for support issues—Stripe can’t assist end users directly.\n\n### Platform user![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’re receiving questions from users of your provisioned cards, you can [request support](https://support.stripe.com/contact/login) from Stripe. Make sure to inform your cardholders that they need to reach out to you for support issues.",
    "title": "Get support for self-service cards | Stripe Documentation",
    "description": "Learn who to contact for support with self-service cards.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/marketing-guidance-europe-uk",
    "markdown": "# Stripe Issuing marketing guidelines | Stripe DocumentationThe Stripe Docs logo\n\n## Learn about marketing guidelines for Issuing programs in the United Kingdom and Europe.\n\n#### Note\n\nRequirements as of 1 June 2022\n\n## Scope of application![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThese marketing guidelines only apply when you’re marketing Stripe’s Issuing product and services. If you’re only using Stripe Issuing for your own business expenses (and not to facilitate or provide services to your customers) then we wouldn’t expect you to carry out any marketing of Stripe’s products and services (so these marketing guidelines wouldn’t apply).\n\n## Basic Requirements![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo offer and promote Stripe’s Issuing products in the United Kingdom and countries within Europe, your user interfaces and advertising must adhere to the guidelines outlined in this document. We’re providing these guidelines to help you navigate the financial regulations that govern the messaging you can use to describe our Issuing product. Deviation from these guidelines can result in poor user experiences and potential regulatory consequences for both you and Stripe. As such, consult both your in-house Legal team and Stripe’s compliance team ([platform-compliance@stripe.com](mailto:platform-compliance@stripe.com)), if it’s unclear how to apply these guidelines to your user interfaces or advertising.\n\nWe’ve organized the relevant information for you in the following components:\n\n*   Messaging guidelines\n*   Pre-approved messages\n*   Language\n*   Prohibited types of marketing\n*   User agreements\n*   Required legal disclosures\n*   Record keeping and monitoring\n\n## Messaging Guidelines ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nIn the context of marketing, financial regulations require user interfaces and advertising to be fair, clear, and not misleading (taking into account how the advertising is communicated and whom it is directed to).\n\nAll statements must be factual and no important facts can be omitted.\n\n*   A misleading statement or omission is “important” if it’s likely to affect the choice of a product or the attitude towards it.\n    *   Price and cost are considered important and should therefore be revealed in the main message.\n    *   Advertising must not emphasize any potential benefits of the product without also giving a fair and prominent indication of any relevant risks:\n*   Statements must be factual and verifiable\n*   Disclaimers may not contradict factual statements, they may only explain or modify them.\n*   Advertising shouldn’t describe a feature of a product or service as “guaranteed,” “protected,” or “secure,” or use a similar term unless (1) those phrases constitute a fair, clear, and not misleading description of the feature of product and (2) the advertising communicates all of the necessary information, and presents that information with sufficient clarity and prominence, and uses the terms fair, clear, and not misleading.\n*   Advertising relating to a currency transfer service is likely to be misleading if it presents an exchange rate in a way that’s likely to give the impression that the rate is available to a person or a class of persons but in reality that rate is unlikely to be obtained by that person or class of persons with respect to a typical transaction.\n\nAll materials must clearly, prominently, and correctly state important terms, including:\n\n*   Costs, benefits, and other fundamental points of the products or services offered\n*   Related products or services offered as an option or requirement to obtain certain terms\n*   Important limitations or conditions on the terms or availability of products and services, such as time limitations for favorable rates, promotional features, expiration dates, prerequisites for obtaining specific products or services, or conditions for canceling services\n*   Certain “trigger” words that might require additional legal statements (for example, “free,” “until,” “pre-approved,” “fixed”)\n*   If advertising compares a product or service with that offered by another provider, the provider must make sure that the comparison is meaningful and presented in a fair and balanced way.\n\nYou must draw the user’s attention to fundamental terms, such as limitations and conditions, which are important for the user to make an informed decision.\n\n*   Consider the four **location principles** for providing information: prominence, presentation of information (text size, formatting, on-screen readability), placement of qualifying information, and proximity of all information relevant to the evaluated messages.\n*   Consider the “big impression” and whether you’re conveying important information or possibly ignoring it.\n\nAvoid images that imply affiliation with, or endorsement of, celebrities, or government entities.\n\nEvaluating marketing materials from a “common user” point of view.\n\n*   To determine whether an act or practice is misleading, consider whether your user’s interpretation or reaction to a statement, omission, act, or practice is reasonable in the given circumstances. In other words, whether an act or practice can be unfair or deceptive depends on how a member of the expected audience (its customers) would interpret the statement.\n\nProof of the claim\n\n*   Advertised claims must be substantiated, whether explicit or implicit. “Evidence” means that there must be a reasonable basis for each claim.\n    *   You must disclose limitations necessary to make sure that the claim isn’t false, fraudulent, or misleading.\n    *   You must distinguish “exaggerations,” which don’t need to be substantiated, from allegations. Exaggerations are subjective and generally can’t be proved whether they’re true or false.\n    *   Be careful with using “absolute” terms in the claim like “all,” “only,” or “always” without qualification, these words suggest that there can be no exceptions to the claim.\n\nYou must refrain from terms that could imply that this product can be used for consumer purposes.\n\n*   Don’t refer to contractor earnings as “wages.”\n*   Don’t use terms like “Personal Account” or “Consumer Account” to describe the product.\n*   Don’t use marketing phrases that promote consumer use cases (for example, “Spend funds to buy the things you love!”).\n*   Don’t describe the card as a “credit card.” This is a commercial prepaid program.\n*   Don’t market “transferring money” or “sending money” without approved language from Stripe.\n*   Don’t use words like “bank account,” “deposit account,” “checking account” or similar terms that connote a traditional bank account product.\n*   Don’t market through advertising mediums which are exclusively dedicated to consumers.\n\nDisparaging remarks about other financial products\n\n*   Don’t disparage debit, credit, bank accounts, banks, or other financial products used or issued by financial institutions.\n\nUse of “Registered” or ® markings\n\n*   Generally, the brand requirements are that the brand name use the required registration marks. However, after you mention the brand name once, you can stop using it—this is for the same document or material only (for example, your card carrier). We recommend that you use “superscript” in all ® representations.\n\nMarketing of other products and services\n\n*   If you advertise products or services other than those provided by Stripe, you must make it clear that those products or services aren’t provided by Stripe.\n*   If those products or services are regulated financial products, you must not advertise them unless you have the requisite regulatory authorization.\n\nInternational Marketing\n\n*   Although you can ship cards to international addresses for locally domiciled cardholders, you must not engage in marketing the Issuing Program to persons located outside of your relevant jurisdiction (either the UK or Europe as appropriate). This includes advertising or promoting Issuing through marketing channels such as social media, email, and paid search results. As with all other aspects of the Issuing program, you must comply with Card Network rules in connection with marketing activities.\n\n## Summary checklist![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYour marketing team should be familiar with these guidelines as they design advertising campaigns and web pages that market your Stripe Issuing program. Here are some additional considerations for your content:\n\nIf mentioning specific product details like, terms, costs, fees, dollar benefits, or any ‘numbers’, make sure they’re accurate:\n\n*   Ask: Is it true? How do you know it’s true? Can you prove it with stored data or a reputable source, if asked?\n*   Ask: Can most users achieve any promised results, and can you prove it, if asked?\n*   Ask: Do those figures require additional information so users know how they’re achievable? If so, have you disclosed that additional information?\n*   Ask: Are the product details explained fully?\n\nHere are claims that end up requiring a lot of documentation, and are therefore often avoided:\n\n*   Hard to prove claims like: “free”—if you’d like to use this claim contact [platform-compliance@stripe.com](mailto:platform-compliance@stripe.com)\n*   Absolute claims: “best,” “#1 or number 1,” “every,” “only,” “all,” “always,” “will get”, or “you’ll get”\n*   Credit-related statements: “pre-approved,” “fixed,” “earn interest”\n*   Don’t leave out key details users should know before signing up\n\nAlways prohibited\n\n*   Fake testimonials or quotes about the services\n\n## Language![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nWhen marketing services and products offered by Stripe, you must use either (a) English or (b) one of the official or commonly used languages of the country where your customer resides.\n\n## Prohibited types of marketing![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nUnless approved by Stripe in writing, you must not market Stripe’s products and services through any of the following types of marketing channels:\n\n*   Telemarketing\n\n## User agreements![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nYou must present user agreements to your prospective customers before they submit their application. This allows businesses to fully understand the terms and conditions of the product before entering into a contract to use Stripe Issuing services. There are a few user agreements that prospective customers need access to depending on their geographic location, including:\n\n*   [Stripe Services Agreement - UK](https://stripe.com/gb/legal/ssa)\n*   [Stripe Services Agreement - EU](https://stripe.com/ie/legal/ssa)\n*   Your platform’s terms and conditions\n\nYour platform’s terms and conditions must clearly outline any fees or credits that you plan to offer your customers and any activities or qualifications that they need to meet for the fee or credit to be applied.\n\nAdditionally, your customers’ cardholders should be prompted to accept the [Authorized User Terms](https://stripe.com/en-gb/issuing/authorized-users) before activating their cards.\n\n## Pre-approved messages![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nBecause marketing regulations can be cumbersome, we provide pre-approved messaging for communicating the key points of the Stripe Issuing program in your user-facing materials.\n\nWe allow non-substantive changes to these messages as long as the key information remains the same. Any substantive changes require approval from Stripe’s compliance team. Approvals can take up to 10 business days to process.\n\n| Category | Suggested Messaging |\n| --- | --- |\n| Limitations on card program use | Cardholders can only use the Card Program for commercial purposes (which means the payment of business expenses), and not for personal, family, or household purposes. |\n| Currency | All Card Program cards are GBP or EUR denominated. |\n| Where cards can be accepted for payment | Card Program cards can be used anywhere that accepts Visa cards. |\n| Where cards can be issued | Card Program cards can only be issued to cardholders who are UK or European incorporated companies or sole traders residing in the United Kingdom or Europe and who have a verifiable physical UK European street address (no P.O. Boxes). |\n| Speed of virtual card issuance | Instantly access your own virtual card |\n| Speed of physical card issuance | Receive your physical card in a matter of days |\n\n## Required Legal Disclosures![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nFor legal reasons, we require that all marketing, including user interfaces and advertisements, include this disclosure:\n\nFor UK users:\n\n> Cards are issued by Stripe Payments UK Limited, which is an electronic money institution authorized by the Financial Conduct Authority (firm reference number: 900461) for the issuing of electronic money. Cards are issued under the Visa card scheme pursuant to a license from Visa Europe Limited.\n\nFor European users:\n\n> Cards are issued by Stripe Technology Europe Limited, an electronic money institution authorized by the Central Bank of Ireland (firm reference number: C187865). Cards are issued under the Visa card scheme pursuant to a license from Visa Europe Limited.\n\nIncluding this disclosure is an essential element of managing your Stripe Issuing program. It gives your users the information they need to validate the legitimacy of the program and escalate complaints to our regulators, if needed.\n\nThe disclosure may be placed on your marketing in an area of your choosing, as long as the location follows the location principles described in the [“Messaging Guidelines”](#messaging-guidelines) above. Typically our customers opt to place the disclosures towards the end of their webpage, social media, or email marketing.\n\n## Space constrained advertisements![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nIf you’re planning to market through a medium with character limitations which prohibits the full disclosure as set out above (such as in a social media advertisement), include a shortened version of the required legal disclosure, and a link within the advertisement that redirects a user to a webpage with the full legal disclosure.\n\n> “Cards issued by Stripe”\n\n## Record keeping and monitoring![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo demonstrate your adherence to the requirements listed above, we ask that you keep thorough records of all marketing materials, customer data, account information, and other disclosures you make to customers for at least 5 years.\n\nStripe might occasionally ask you for copies of your marketing materials to make sure they adhere to these guidelines. You must provide copies of these materials within 10 business days of receiving a review request and agree to make any changes that Stripe requests as a result of the review.",
    "title": "Stripe Issuing marketing guidelines | Stripe Documentation",
    "description": "Learn about marketing guidelines for Issuing programs in the United Kingdom and Europe.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/cards/physical/testing",
    "markdown": "# Testing physical card shipment | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to test physical card fulfilment and simulate the shipping process.\n\nA physical card starts off with its shipping status as `pending` by default. As it progresses through fulfillment, subsequent possible values include: `shipped`, `delivered`, `returned`, `failure`, and `canceled`.\n\nRefer to the following diagram to see how the status transitions for physical card shipping:\n\nIn test mode, you can update a card’s shipping state yourself to test out the different values. You can only use cards created in test mode for testing within your Stripe account and not for external purchases. No cards are actually shipped in test mode.\n\nYou can simulate shipping a card by updating its shipping status in the Dashboard.\n\n[](#without-code-create-card)\n\nUse the [Dashboard](https://dashboard.stripe.com/issuing/cards) to create a cardholder and **physical card** in test mode.\n\n[](#without-code-ship-card)\n\n1.  In the Dashboard, first make sure you’re viewing test data.\n2.  Go to the [Issuing Cards page](https://dashboard.stripe.com/issuing/cards) and find your newly-created card.\n3.  Scroll to the **Card details** section.\n4.  Click **Update shipping status** and select the shipping action you want to simulate (for example, `Ship`).\n5.  Click **Submit** to apply your update and refresh the page.",
    "title": "Testing physical card shipment | Stripe Documentation",
    "description": "Learn how to test physical card fulfilment and simulate the shipping process.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/issuing/controls/spending-controls",
    "markdown": "# Issuing spending controls | Stripe DocumentationThe Stripe Docs logo\n\n## Learn how to use Issuing to set rules on cards and cardholders to control spending.\n\nYou can use spending controls to block [merchant categories](https://docs.stripe.com/issuing/categories) (for example, bakeries), [countries](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-merchant_data-country), or [merchant IDs](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-merchant_data-network_id), and to set spending limits such as 100 USD per authorization or 3000 USD per month. You can apply them to both [Cards](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-spending_controls) and [Cardholders](https://docs.stripe.com/api/issuing/cardholders/object#issuing_cardholder_object-spending_controls) either by setting their `spending_controls` fields when you create them or by updating them later.\n\nThe `spending_controls` object has the following structure:\n\n| Field |     | Type | Description |\n| --- | --- | --- |\n| `allowed_categories` |     | array | List of [categories](https://docs.stripe.com/issuing/categories) of authorizations to allow. All other categories will be blocked. |\n| `blocked_categories` |     | array | List of [categories](https://docs.stripe.com/issuing/categories) of authorizations to decline. All other categories will be allowed. |\n| `spending_limits` |     | array | List of [objects](https://docs.stripe.com/issuing/controls/spending-controls#spending-limits) that specify amount-based rules. |\n| `allowed_merchant_countries` |     | array | List of merchant [countries](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-merchant_data-country) to allow authorizations from. Authorizations from all other countries are blocked. |\n| `blocked_merchant_countries` |     | array | List of merchant [countries](https://docs.stripe.com/api/issuing/authorizations/object#issuing_authorization_object-merchant_data-country) to block authorizations from. Authorizations from all other countries are allowed. |\n\nSpending controls run before [real-time authorizations](https://docs.stripe.com/issuing/controls/real-time-authorizations) and can decline a purchase before the `issuing_authorization.request` is sent, resulting in a declined `issuing_authorization.created` event.\n\n#### Note\n\nMerchant ID spend controls are currently limited to beta users. You must be an Issuing customer to join the beta. To request access to the beta, Contact Stripe for more information.\n\n## Spending limits![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nSpending limit rules limit the total amount of spending for categories over intervals of time.\n\nThe `spending_limits` field within `spending_controls` is a list of objects that have the following structure:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| `amount` | integer | Maximum spend, in the currency of the card. Amounts in other currencies are converted to the card’s currency when evaluating this control. This amount is in the card’s currency and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal). |\n| `interval` | enum | Time interval that the amount applies to. See the [Card spending\\_controls](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-spending_controls-spending_limits-interval) for the possible values. All date-based intervals start at midnight UTC. |\n| `categories` | array (optional) | List of [categories](https://docs.stripe.com/issuing/categories) this limit applies to. Omitting this field will apply the limit to all categories. |\n\n#### Note\n\nIf you don’t set `spending_limits`, a default spending limit is applied to the newly created card in the amount of 500 USD per day. [Contact Support](https://support.stripe.com/contact/login) to disable this behavior.\n\n#### Note\n\nIn addition to the `spending_limits` configured on card, a default spending limit in the amount of 10000 USD is also applied to each authorization. This isn’t configurable. [Contact Support](https://support.stripe.com/contact/login) to disable this behavior.\n\nA card’s spending limits apply across any cards it replaces (that is, its [replacement\\_for](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-replacement_for) card and _that_ card’s [replacement\\_for](https://docs.stripe.com/api/issuing/cards/object#issuing_card_object-replacement_for) card, up the chain). A cardholder’s spending limits apply across all of their cards.\n\nEach spending limit only applies to its own categories. Spending limits alone do not block categories and should be used with either `allowed_categories` or `blocked_categories` to restrict spending to specific business types.\n\nIf a cardholder has overlapping spending limits (for example, 100 USD per authorization and 50 USD per authorization for their card), the most restrictive spending control applies.\n\nAdditional tips and fees can be [posted at a later time](https://docs.stripe.com/issuing/purchases/transactions?issuing-capture-type=over_capture), causing a spending limit to be exceeded.\n\n## Examples![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nThe following examples demonstrate different uses of spending controls for cards and cardholders.",
    "title": "Issuing spending controls | Stripe Documentation",
    "description": "Learn how to use Issuing to set rules on cards and cardholders to control spending.",
    "languageCode": "en-US"
  }
]