[
  {
    "url": "https://docs.stripe.com/api/transfers/list",
    "markdown": "# List all transfers | Stripe API Reference\n\nReturns a list of existing transfers sent to connected accounts. The transfers are returned in sorted order, with the most recently created transfers appearing first.\n\n### Parameters\n\n*   Only return transfers for the destination specified by this account ID.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` transfers, starting after transfer `starting_after`. Each entry in the array is a separate transfer object. If no more transfers are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/transfers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/transfers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tr_1MiN3gLkdIwHu7ixNCZvFdgA\",      \"object\": \"transfer\",      \"amount\": 400,      \"amount_reversed\": 0,      \"balance_transaction\": \"txn_1MiN3gLkdIwHu7ixxapQrznl\",      \"created\": 1678043844,      \"currency\": \"usd\",      \"description\": null,      \"destination\": \"acct_1MTfjCQ9PRzxEwkZ\",      \"destination_payment\": \"py_1MiN3gQ9PRzxEwkZWTPGNq9o\",      \"livemode\": false,      \"metadata\": {},      \"reversals\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/transfers/tr_1MiN3gLkdIwHu7ixNCZvFdgA/reversals\"      },      \"reversed\": false,      \"source_transaction\": null,      \"source_type\": \"card\",      \"transfer_group\": \"ORDER_95\"    }    {...}    {...}  ],}\n```\n\n## [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments [here](https://docs.stripe.com/radar/reviews).\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all transfers | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/topups/cancel",
    "markdown": "# Cancel a top-up | Stripe API Reference\n\nCancels a top-up. Only pending top-ups can be canceled.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the canceled top-up. If the top-up is already canceled or can’t be canceled, an error is returned.\n\nPOST /v1/topups/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/topups/tu_1NG6yj2eZvKYlo2C1FOBiHya/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tu_1NG6yj2eZvKYlo2C1FOBiHya\",  \"object\": \"topup\",  \"amount\": 2000,  \"balance_transaction\": null,  \"created\": 123456789,  \"currency\": \"usd\",  \"description\": \"Top-up for Jenny Rosen\",  \"expected_availability_date\": 123456789,  \"failure_code\": null,  \"failure_message\": null,  \"livemode\": false,  \"source\": null,  \"statement_descriptor\": \"Top-up\",  \"status\": \"canceled\",  \"transfer_group\": null}\n```\n\n## [Transfers](https://docs.stripe.com/api/transfers)\n\nA `Transfer` object is created when you move funds between Stripe accounts as part of Connect.\n\nBefore April 6, 2017, transfers also represented movement of funds from a Stripe account to a card or bank account. This behavior has since been split out into a [Payout](#payout_object) object, with corresponding payout endpoints. For more information, read about the [transfer/payout split](https://docs.stripe.com/transfer-payout-split).\n\nRelated guide: [Creating separate charges and transfers](https://docs.stripe.com/connect/separate-charges-and-transfers)\n\n## [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments [here](https://docs.stripe.com/radar/reviews).\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Cancel a top-up | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_lists/update",
    "markdown": "# Update a value list | Stripe API Reference\n\nUpdates a `ValueList` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Note that `item_type` is immutable.\n\n### Parameters\n\n*   The name of the value list for use in rules.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   The human-readable name of the value list.\n    \n\n### Returns\n\nReturns an updated `ValueList` object if a valid identifier was provided.\n\nPOST /v1/radar/value\\_lists/:id\n\n```\ncurl https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d name=\"Updated IP Blocklist\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"alias\": \"custom_ip_blocklist\",  \"created\": 1680201894,  \"created_by\": \"API\",  \"item_type\": \"ip_address\",  \"list_items\": {    \"object\": \"list\",    \"data\": [],    \"has_more\": false,    \"total_count\": 0,    \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MrQSwLkdIwHu7ixWOGS5c8M\"  },  \"livemode\": false,  \"metadata\": {},  \"name\": \"Updated IP Blocklist\"}\n```\n\n## [Retrieve a value list](https://docs.stripe.com/api/radar/value_lists/retrieve)\n\nRetrieves a `ValueList` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `ValueList` object if a valid identifier was provided.\n\nGET /v1/radar/value\\_lists/:id\n\n```\ncurl https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"alias\": \"custom_ip_blocklist\",  \"created\": 1680201894,  \"created_by\": \"API\",  \"item_type\": \"ip_address\",  \"list_items\": {    \"object\": \"list\",    \"data\": [],    \"has_more\": false,    \"total_count\": 0,    \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MrQSwLkdIwHu7ixWOGS5c8M\"  },  \"livemode\": false,  \"metadata\": {},  \"name\": \"Custom IP Blocklist\"}\n```\n\n## [List all value lists](https://docs.stripe.com/api/radar/value_lists/list)\n\nReturns a list of `ValueList` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   The alias used to reference the value list when writing rules.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` lists, starting after list `starting_after`. Each entry in the array is a separate `ValueList` object. If no more lists are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_lists\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_lists \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_lists\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1680201894,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MrQSwLkdIwHu7ixWOGS5c8M\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```\n\n## [Delete a value list](https://docs.stripe.com/api/radar/value_lists/delete)\n\nDeletes a `ValueList` object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueList` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_lists/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update a value list | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/transfer_reversals",
    "markdown": "# Transfer Reversals | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Ftransfer_reversals)\n\n## [The Transfer Reversal object](https://docs.stripe.com/api/transfer_reversals/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   Amount, in cents.\n    \n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n*   ID of the transfer that was reversed.\n    \n\n### More attributes\n\n*   #### \n    \n    balance\\_transactionnullable stringExpandable\n    \n\n*   #### \n    \n    destination\\_payment\\_refundnullable stringExpandable\n    \n*   #### \n    \n    source\\_refundnullable stringExpandable\n    \n\nThe Transfer Reversal object\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [Create a transfer reversal](https://docs.stripe.com/api/transfer_reversals/create)\n\nWhen you create a new reversal, you must specify a transfer to create it on.\n\nWhen reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.\n\nOnce entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.\n\n### Parameters\n\n*   A positive integer in cents representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount.\n    \n*   An arbitrary string which you can attach to a reversal object. This will be unset if you POST an empty value.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_application\\_feeboolean\n    \n\n### Returns\n\nReturns a transfer reversal object if the reversal succeeded. Raises [an error](#errors) if the transfer has already been reversed or an invalid transfer identifier was provided.\n\nPOST /v1/transfers/:id/reversals\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=400\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [Update a reversal](https://docs.stripe.com/api/transfer_reversals/update)\n\nUpdates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata and description as arguments.\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns the reversal object if the update succeeded. This call will raise [an error](#errors) if update parameters are invalid.\n\nPOST /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [Retrieve a reversal](https://docs.stripe.com/api/transfer_reversals/retrieve)\n\nBy default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the reversal object.\n\nGET /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```",
    "title": "Transfer Reversals | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_lists/retrieve",
    "markdown": "# Retrieve a value list | Stripe API Reference\n\nRetrieves a `ValueList` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `ValueList` object if a valid identifier was provided.\n\nGET /v1/radar/value\\_lists/:id\n\n```\ncurl https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"alias\": \"custom_ip_blocklist\",  \"created\": 1680201894,  \"created_by\": \"API\",  \"item_type\": \"ip_address\",  \"list_items\": {    \"object\": \"list\",    \"data\": [],    \"has_more\": false,    \"total_count\": 0,    \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MrQSwLkdIwHu7ixWOGS5c8M\"  },  \"livemode\": false,  \"metadata\": {},  \"name\": \"Custom IP Blocklist\"}\n```\n\n## [List all value lists](https://docs.stripe.com/api/radar/value_lists/list)\n\nReturns a list of `ValueList` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   The alias used to reference the value list when writing rules.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` lists, starting after list `starting_after`. Each entry in the array is a separate `ValueList` object. If no more lists are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_lists\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_lists \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_lists\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1680201894,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MrQSwLkdIwHu7ixWOGS5c8M\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```\n\n## [Delete a value list](https://docs.stripe.com/api/radar/value_lists/delete)\n\nDeletes a `ValueList` object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueList` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_lists/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a value list | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_lists/list",
    "markdown": "# List all value lists | Stripe API Reference\n\nReturns a list of `ValueList` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   The alias used to reference the value list when writing rules.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` lists, starting after list `starting_after`. Each entry in the array is a separate `ValueList` object. If no more lists are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_lists\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_lists \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_lists\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1680201894,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MrQSwLkdIwHu7ixWOGS5c8M\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```\n\n## [Delete a value list](https://docs.stripe.com/api/radar/value_lists/delete)\n\nDeletes a `ValueList` object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueList` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_lists/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all value lists | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/transfer_reversals/create",
    "markdown": "# Create a transfer reversal | Stripe API Reference\n\nWhen you create a new reversal, you must specify a transfer to create it on.\n\nWhen reversing transfers, you can optionally reverse part of the transfer. You can do so as many times as you wish until the entire transfer has been reversed.\n\nOnce entirely reversed, a transfer can’t be reversed again. This method will return an error when called on an already-reversed transfer, or when trying to reverse more money than is left on a transfer.\n\n### Parameters\n\n*   A positive integer in cents representing how much of this transfer to reverse. Can only reverse up to the unreversed amount remaining of the transfer. Partial transfer reversals are only allowed for transfers to Stripe Accounts. Defaults to the entire transfer amount.\n    \n*   An arbitrary string which you can attach to a reversal object. This will be unset if you POST an empty value.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_application\\_feeboolean\n    \n\n### Returns\n\nReturns a transfer reversal object if the reversal succeeded. Raises [an error](#errors) if the transfer has already been reversed or an invalid transfer identifier was provided.\n\nPOST /v1/transfers/:id/reversals\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=400\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [Update a reversal](https://docs.stripe.com/api/transfer_reversals/update)\n\nUpdates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata and description as arguments.\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns the reversal object if the update succeeded. This call will raise [an error](#errors) if update parameters are invalid.\n\nPOST /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [Retrieve a reversal](https://docs.stripe.com/api/transfer_reversals/retrieve)\n\nBy default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the reversal object.\n\nGET /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [List all reversals](https://docs.stripe.com/api/transfer_reversals/list)\n\nYou can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the `limit` and `starting_after` parameters to page through additional reversals.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` reversals, starting after reversal `starting_after`. Each entry in the array is a separate reversal object. If no more reversals are available, the resulting array will be empty. If you provide a non-existent transfer ID, this call raises [an error](#errors).\n\nGET /v1/transfers/:id/reversals\n\n```\ncurl -G https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals\",  \"has_more\": false,  \"data\": [    {      \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",      \"object\": \"transfer_reversal\",      \"amount\": 400,      \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",      \"created\": 1678147568,      \"currency\": \"usd\",      \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",      \"metadata\": {},      \"source_refund\": null,      \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"    }    {...}    {...}  ],}\n```\n\n## [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments [here](https://docs.stripe.com/radar/reviews).\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Create a transfer reversal | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_lists/delete",
    "markdown": "# Delete a value list | Stripe API Reference\n\nDeletes a `ValueList` object, also deleting any items contained within the value list. To be deleted, a value list must not be referenced in any rules.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueList` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_lists/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_lists/rsl_1MrQSwLkdIwHu7ixWOGS5c8M \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsl_1MrQSwLkdIwHu7ixWOGS5c8M\",  \"object\": \"radar.value_list\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Delete a value list | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/transfer_reversals/update",
    "markdown": "# Update a reversal | Stripe API Reference\n\nUpdates the specified reversal by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\nThis request only accepts metadata and description as arguments.\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns the reversal object if the update succeeded. This call will raise [an error](#errors) if update parameters are invalid.\n\nPOST /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [Retrieve a reversal](https://docs.stripe.com/api/transfer_reversals/retrieve)\n\nBy default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the reversal object.\n\nGET /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [List all reversals](https://docs.stripe.com/api/transfer_reversals/list)\n\nYou can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the `limit` and `starting_after` parameters to page through additional reversals.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` reversals, starting after reversal `starting_after`. Each entry in the array is a separate reversal object. If no more reversals are available, the resulting array will be empty. If you provide a non-existent transfer ID, this call raises [an error](#errors).\n\nGET /v1/transfers/:id/reversals\n\n```\ncurl -G https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals\",  \"has_more\": false,  \"data\": [    {      \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",      \"object\": \"transfer_reversal\",      \"amount\": 400,      \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",      \"created\": 1678147568,      \"currency\": \"usd\",      \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",      \"metadata\": {},      \"source_refund\": null,      \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"    }    {...}    {...}  ],}\n```\n\n## [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments [here](https://docs.stripe.com/radar/reviews).\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update a reversal | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_list_items",
    "markdown": "# Value List Items | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fradar%2Fvalue_list_items)\n\n## [The Value List Item object](https://docs.stripe.com/api/radar/value_list_items/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   The value of the item.\n    \n*   The identifier of the value list this item belongs to.\n    \n\n### More attributes\n\nThe Value List Item object\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"created\": 1681760074,  \"created_by\": \"API\",  \"livemode\": false,  \"value\": \"1.2.3.4\",  \"value_list\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\"}\n```\n\n## [Create a value list item](https://docs.stripe.com/api/radar/value_list_items/create)\n\nCreates a new `ValueListItem` object, which is added to the specified parent value list.\n\n### Parameters\n\n*   The value of the item (whose type must match the type of the parent value list).\n    \n*   The identifier of the value list which the created item will be added to.\n    \n\n### Returns\n\nReturns a `ValueListItem` object if creation succeeds.\n\nPOST /v1/radar/value\\_list\\_items\n\n```\ncurl https://api.stripe.com/v1/radar/value_list_items \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj \\  -d value=\"1.2.3.4\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"created\": 1681760074,  \"created_by\": \"API\",  \"livemode\": false,  \"value\": \"1.2.3.4\",  \"value_list\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\"}\n```\n\n## [Retrieve a value list item](https://docs.stripe.com/api/radar/value_list_items/retrieve)\n\nRetrieves a `ValueListItem` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `ValueListItem` object if a valid identifier was provided.\n\nGET /v1/radar/value\\_list\\_items/:id\n\n```\ncurl https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"created\": 1681760074,  \"created_by\": \"API\",  \"livemode\": false,  \"value\": \"1.2.3.4\",  \"value_list\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\"}\n```\n\n## [List all value list items](https://docs.stripe.com/api/radar/value_list_items/list)\n\nReturns a list of `ValueListItem` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Identifier for the parent value list this item belongs to.\n    \n*   Return items belonging to the parent list whose value matches the specified value (using an “is like” match).\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` items, starting after item `starting_after`. Each entry in the array is a separate `ValueListItem` object. If no more items are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_list\\_items\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_list_items \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_list_items\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1681760074,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```",
    "title": "Value List Items | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/transfer_reversals/retrieve",
    "markdown": "# Retrieve a reversal | Stripe API Reference\n\nBy default, you can see the 10 most recent reversals stored directly on the transfer object, but you can also retrieve details about a specific reversal stored on the transfer.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the reversal object.\n\nGET /v1/transfers/:id/reversals/:id\n\n```\ncurl https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals/trr_1Mio2eLkdIwHu7ixN5LPJS4a \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",  \"object\": \"transfer_reversal\",  \"amount\": 400,  \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",  \"created\": 1678147568,  \"currency\": \"usd\",  \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",  \"metadata\": {},  \"source_refund\": null,  \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"}\n```\n\n## [List all reversals](https://docs.stripe.com/api/transfer_reversals/list)\n\nYou can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the `limit` and `starting_after` parameters to page through additional reversals.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` reversals, starting after reversal `starting_after`. Each entry in the array is a separate reversal object. If no more reversals are available, the resulting array will be empty. If you provide a non-existent transfer ID, this call raises [an error](#errors).\n\nGET /v1/transfers/:id/reversals\n\n```\ncurl -G https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals\",  \"has_more\": false,  \"data\": [    {      \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",      \"object\": \"transfer_reversal\",      \"amount\": 400,      \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",      \"created\": 1678147568,      \"currency\": \"usd\",      \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",      \"metadata\": {},      \"source_refund\": null,      \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"    }    {...}    {...}  ],}\n```\n\n## [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments [here](https://docs.stripe.com/radar/reviews).\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a reversal | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/cards/test_mode_fail",
    "markdown": "# Fail a testmode card | Stripe API Reference\n\n## [Fail a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_fail)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `failure`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"failed\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Return a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_return)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `returned`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"returned\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Ship a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_ship)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `shipped`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/ship\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"shipped\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Fail a testmode card | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/cards/test_mode_deliver",
    "markdown": "# Deliver a testmode card | Stripe API Reference\n\n## [Deliver a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `delivered`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/deliver\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/deliver \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"delivered\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Fail a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_fail)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `failure`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"failed\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Return a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_return)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `returned`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"returned\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Ship a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_ship)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `shipped`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/ship\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"shipped\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Deliver a testmode card | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_list_items/create",
    "markdown": "# Create a value list item\n\nCreates a new `ValueListItem` object, which is added to the specified parent value list.\n\n### Parameters\n\n*   The value of the item (whose type must match the type of the parent value list).\n    \n*   The identifier of the value list which the created item will be added to.\n    \n\n### Returns\n\nReturns a `ValueListItem` object if creation succeeds.\n\nPOST /v1/radar/value\\_list\\_items\n\n```\ncurl https://api.stripe.com/v1/radar/value_list_items \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj \\  -d value=\"1.2.3.4\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"created\": 1681760074,  \"created_by\": \"API\",  \"livemode\": false,  \"value\": \"1.2.3.4\",  \"value_list\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\"}\n```\n\n## [Retrieve a value list item](https://docs.stripe.com/api/radar/value_list_items/retrieve)\n\nRetrieves a `ValueListItem` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `ValueListItem` object if a valid identifier was provided.\n\nGET /v1/radar/value\\_list\\_items/:id\n\n```\ncurl https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"created\": 1681760074,  \"created_by\": \"API\",  \"livemode\": false,  \"value\": \"1.2.3.4\",  \"value_list\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\"}\n```\n\n## [List all value list items](https://docs.stripe.com/api/radar/value_list_items/list)\n\nReturns a list of `ValueListItem` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Identifier for the parent value list this item belongs to.\n    \n*   Return items belonging to the parent list whose value matches the specified value (using an “is like” match).\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` items, starting after item `starting_after`. Each entry in the array is a separate `ValueListItem` object. If no more items are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_list\\_items\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_list_items \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_list_items\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1681760074,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```\n\n## [Delete a value list item](https://docs.stripe.com/api/radar/value_list_items/delete)\n\nDeletes a `ValueListItem` object, removing it from its parent value list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueListItem` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_list\\_items/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Create a value list item | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/transfer_reversals/list",
    "markdown": "# List all reversals | Stripe API Reference\n\nYou can see a list of the reversals belonging to a specific transfer. Note that the 10 most recent reversals are always available by default on the transfer object. If you need more than those 10, you can use this API method and the `limit` and `starting_after` parameters to page through additional reversals.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` reversals, starting after reversal `starting_after`. Each entry in the array is a separate reversal object. If no more reversals are available, the resulting array will be empty. If you provide a non-existent transfer ID, this call raises [an error](#errors).\n\nGET /v1/transfers/:id/reversals\n\n```\ncurl -G https://api.stripe.com/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/transfers/tr_1Mio2dLkdIwHu7ixsUuCxJpu/reversals\",  \"has_more\": false,  \"data\": [    {      \"id\": \"trr_1Mio2eLkdIwHu7ixN5LPJS4a\",      \"object\": \"transfer_reversal\",      \"amount\": 400,      \"balance_transaction\": \"txn_1Mio2eLkdIwHu7ixosfrbjhW\",      \"created\": 1678147568,      \"currency\": \"usd\",      \"destination_payment_refund\": \"pyr_1Mio2eQ9PRzxEwkZYewpaIFB\",      \"metadata\": {},      \"source_refund\": null,      \"transfer\": \"tr_1Mio2dLkdIwHu7ixsUuCxJpu\"    }    {...}    {...}  ],}\n```\n\n## [Secrets](https://docs.stripe.com/api/secret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [Reviews](https://docs.stripe.com/api/radar/reviews)\n\nReviews can be used to supplement automated fraud detection with human expertise.\n\nLearn more about [Radar](https://docs.stripe.com/radar) and reviewing payments [here](https://docs.stripe.com/radar/reviews).\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all reversals | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_list_items/retrieve",
    "markdown": "# Retrieve a value list item\n\nRetrieves a `ValueListItem` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `ValueListItem` object if a valid identifier was provided.\n\nGET /v1/radar/value\\_list\\_items/:id\n\n```\ncurl https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"created\": 1681760074,  \"created_by\": \"API\",  \"livemode\": false,  \"value\": \"1.2.3.4\",  \"value_list\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\"}\n```\n\n## [List all value list items](https://docs.stripe.com/api/radar/value_list_items/list)\n\nReturns a list of `ValueListItem` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Identifier for the parent value list this item belongs to.\n    \n*   Return items belonging to the parent list whose value matches the specified value (using an “is like” match).\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` items, starting after item `starting_after`. Each entry in the array is a separate `ValueListItem` object. If no more items are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_list\\_items\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_list_items \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_list_items\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1681760074,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```\n\n## [Delete a value list item](https://docs.stripe.com/api/radar/value_list_items/delete)\n\nDeletes a `ValueListItem` object, removing it from its parent value list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueListItem` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_list\\_items/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a value list item | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/cards/test_mode_return",
    "markdown": "# Return a testmode card | Stripe API Reference\n\n## [Return a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_return)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `returned`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"returned\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Ship a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_ship)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `shipped`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/ship\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"shipped\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Return a testmode card | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_list_items/list",
    "markdown": "# List all value list items\n\nReturns a list of `ValueListItem` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Identifier for the parent value list this item belongs to.\n    \n*   Return items belonging to the parent list whose value matches the specified value (using an “is like” match).\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` items, starting after item `starting_after`. Each entry in the array is a separate `ValueListItem` object. If no more items are available, the resulting array will be empty.\n\nGET /v1/radar/value\\_list\\_items\n\n```\ncurl -G https://api.stripe.com/v1/radar/value_list_items \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/radar/value_list_items\",  \"has_more\": false,  \"data\": [    {      \"id\": \"rsl_1MxxosLkdIwHu7ixNiiD01Kj\",      \"object\": \"radar.value_list\",      \"alias\": \"custom_ip_blocklist\",      \"created\": 1681760074,      \"created_by\": \"API\",      \"item_type\": \"ip_address\",      \"list_items\": {        \"object\": \"list\",        \"data\": [],        \"has_more\": false,        \"total_count\": 0,        \"url\": \"/v1/radar/value_list_items?value_list=rsl_1MxxosLkdIwHu7ixNiiD01Kj\"      },      \"livemode\": false,      \"metadata\": {},      \"name\": \"Custom IP Blocklist\"    }    {...}    {...}  ],}\n```\n\n## [Delete a value list item](https://docs.stripe.com/api/radar/value_list_items/delete)\n\nDeletes a `ValueListItem` object, removing it from its parent value list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueListItem` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_list\\_items/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all value list items | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/cards/test_mode_ship",
    "markdown": "# Ship a testmode card | Stripe API Reference\n\n## [Ship a testmode card](https://docs.stripe.com/api/issuing/cards/test_mode_ship)Test helper\n\nUpdates the shipping status of the specified Issuing `Card` object to `shipped`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated Issuing `Card` object.\n\nPOST /v1/test\\_helpers/issuing/cards/:id/shipping/ship\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/cards/ic_1MvSieLkdIwHu7ixn6uuO0Xu/shipping/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ic_1MvSieLkdIwHu7ixn6uuO0Xu\",  \"object\": \"issuing.card\",  \"brand\": \"Visa\",  \"cancellation_reason\": null,  \"cardholder\": {    \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",    \"object\": \"issuing.cardholder\",    \"billing\": {      \"address\": {        \"city\": \"Anytown\",        \"country\": \"US\",        \"line1\": \"123 Main Street\",        \"line2\": null,        \"postal_code\": \"12345\",        \"state\": \"CA\"      }    },    \"company\": null,    \"created\": 1680415995,    \"email\": null,    \"individual\": null,    \"livemode\": false,    \"metadata\": {},    \"name\": \"John Doe\",    \"phone_number\": null,    \"requirements\": {      \"disabled_reason\": \"requirements.past_due\",      \"past_due\": [        \"individual.card_issuing.user_terms_acceptance.ip\",        \"individual.card_issuing.user_terms_acceptance.date\",        \"individual.first_name\",        \"individual.last_name\"      ]    },    \"spending_controls\": {      \"allowed_categories\": [],      \"blocked_categories\": [],      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"individual\"  },  \"created\": 1681163868,  \"currency\": \"usd\",  \"exp_month\": 8,  \"exp_year\": 2024,  \"last4\": \"4242\",  \"livemode\": false,  \"metadata\": {},  \"replaced_by\": null,  \"replacement_for\": null,  \"replacement_reason\": null,  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"carrier\": \"usps\",    \"eta\": 1655362799,    \"name\": \"Jenny Rosen\",    \"service\": \"standard\",    \"status\": \"shipped\",    \"type\": \"individual\"  },  \"spending_controls\": {    \"allowed_categories\": null,    \"blocked_categories\": null,    \"spending_limits\": [],    \"spending_limits_currency\": null  },  \"status\": \"active\",  \"type\": \"physical\",  \"wallets\": {    \"apple_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"google_pay\": {      \"eligible\": false,      \"ineligible_reason\": \"missing_cardholder_contact\"    },    \"primary_account_identifier\": null  }}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Ship a testmode card | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/radar/value_list_items/delete",
    "markdown": "# Delete a value list item\n\nDeletes a `ValueListItem` object, removing it from its parent value list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an object with the deleted `ValueListItem` object’s ID and a deleted parameter on success. Otherwise, this call raises [an error](#errors).\n\nDELETE /v1/radar/value\\_list\\_items/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/radar/value_list_items/rsli_1MxxosLkdIwHu7ixxvA1yKiZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"rsli_1MxxosLkdIwHu7ixxvA1yKiZ\",  \"object\": \"radar.value_list_item\",  \"deleted\": true}\n```\n\n## [Authorizations](https://docs.stripe.com/api/issuing/authorizations)\n\nEndpoints\n\n[POST/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/update)[GET/v1/issuing/authorizations/:id](https://docs.stripe.com/api/issuing/authorizations/retrieve)[GET/v1/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/list)[POST/v1/issuing/authorizations/:id/approve](https://docs.stripe.com/api/issuing/authorizations/approve)[POST/v1/issuing/authorizations/:id/decline](https://docs.stripe.com/api/issuing/authorizations/decline)[POST/v1/test\\_helpers/issuing/authorizations](https://docs.stripe.com/api/issuing/authorizations/test_mode_create)[POST/v1/test\\_helpers/issuing/authorizations/:id/capture](https://docs.stripe.com/api/issuing/authorizations/test_mode_capture)[POST/v1/test\\_helpers/issuing/authorizations/:id/expire](https://docs.stripe.com/api/issuing/authorizations/test_mode_expire)[POST/v1/test\\_helpers/issuing/authorizations/:id/finalize\\_amount](https://docs.stripe.com/api/issuing/authorizations/test_mode_finalize_amount)[POST/v1/test\\_helpers/issuing/authorizations/:id/increment](https://docs.stripe.com/api/issuing/authorizations/test_mode_increment)[POST/v1/test\\_helpers/issuing/authorizations/:id/fraud\\_challenges/respond](https://docs.stripe.com/api/issuing/authorizations/respond_to_fraud_challenges)[POST/v1/test\\_helpers/issuing/authorizations/:id/reverse](https://docs.stripe.com/api/issuing/authorizations/test_mode_reverse)\n\n## [Cards](https://docs.stripe.com/api/issuing/cards)\n\nEndpoints\n\n[POST/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/create)[POST/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/update)[GET/v1/issuing/cards/:id](https://docs.stripe.com/api/issuing/cards/retrieve)[GET/v1/issuing/cards](https://docs.stripe.com/api/issuing/cards/list)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/deliver](https://docs.stripe.com/api/issuing/cards/test_mode_deliver)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/fail](https://docs.stripe.com/api/issuing/cards/test_mode_fail)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/return](https://docs.stripe.com/api/issuing/cards/test_mode_return)[POST/v1/test\\_helpers/issuing/cards/:id/shipping/ship](https://docs.stripe.com/api/issuing/cards/test_mode_ship)\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Delete a value list item | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/transactions",
    "markdown": "# Transactions | Stripe API Reference\n\n## [The Transaction object](https://docs.stripe.com/api/issuing/transactions/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   The transaction amount, which will be reflected in your balance. This amount is in your currency and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   #### \n    \n    authorizationnullable stringExpandable\n    \n    The `Authorization` object that led to this transaction.\n    \n*   The card used to make this transaction.\n    \n*   #### \n    \n    cardholdernullable stringExpandable\n    \n    The cardholder to whom this transaction belongs.\n    \n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n*   The nature of the transaction.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `capture`<br><br>Funds were captured by the acquirer. `amount` will be negative as funds are moving out of your balance. Not all captures will be linked to an authorization, as acquirers [can force capture in some cases](https://stripe.com/docs/issuing/purchases/transactions). |\n    | `refund`<br><br>An acquirer initiated a refund. This transaction might not be linked to an original capture, for example credits are original transactions. `amount` will be positive for refunds and negative for refund reversals (very rare). |\n    \n\n### More attributes\n\n*   #### \n    \n    amount\\_detailsnullable object\n    \n*   #### \n    \n    balance\\_transactionnullable stringExpandable\n    \n\n*   #### \n    \n    disputenullable stringExpandable\n    \n\n*   #### \n    \n    network\\_datanullable object\n    \n*   #### \n    \n    purchase\\_detailsnullable objectExpandable\n    \n*   #### \n    \n    tokennullable stringPreview featureExpandable\n    \n\n```\n{  \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",  \"object\": \"issuing.transaction\",  \"amount\": -100,  \"amount_details\": {    \"atm_fee\": null  },  \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",  \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",  \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",  \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",  \"created\": 1682065867,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -100,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"WWWW.BROWSEBUG.BIZ\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {},  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Update a transaction](https://docs.stripe.com/api/issuing/transactions/update)\n\nUpdates the specified Issuing `Transaction` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated Issuing `Transaction` object if a valid identifier was provided.\n\nPOST /v1/issuing/transactions/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/transactions/ipi_1MzFN1K8F4fqH0lBmFq8CjbU \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",  \"object\": \"issuing.transaction\",  \"amount\": -100,  \"amount_details\": {    \"atm_fee\": null  },  \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",  \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",  \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",  \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",  \"created\": 1682065867,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -100,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"WWWW.BROWSEBUG.BIZ\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Retrieve a transaction](https://docs.stripe.com/api/issuing/transactions/retrieve)\n\nRetrieves an Issuing `Transaction` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Transaction` object if a valid identifier was provided.\n\nGET /v1/issuing/transactions/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/transactions/ipi_1MzFN1K8F4fqH0lBmFq8CjbU \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",  \"object\": \"issuing.transaction\",  \"amount\": -100,  \"amount_details\": {    \"atm_fee\": null  },  \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",  \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",  \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",  \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",  \"created\": 1682065867,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -100,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"WWWW.BROWSEBUG.BIZ\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {},  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [List all transactions](https://docs.stripe.com/api/issuing/transactions/list)\n\nReturns a list of Issuing `Transaction` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Only return transactions that belong to the given card.\n    \n*   Only return transactions that belong to the given cardholder.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` transactions, starting after transaction `starting_after`. Each entry in the array is a separate Issuing `Transaction` object. If no more transactions are available, the resulting array will be empty.\n\nGET /v1/issuing/transactions\n\n```\ncurl -G https://api.stripe.com/v1/issuing/transactions \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/transactions\",  \"has_more\": false,  \"data\": [    {      \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",      \"object\": \"issuing.transaction\",      \"amount\": -100,      \"amount_details\": {        \"atm_fee\": null      },      \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",      \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",      \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",      \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",      \"created\": 1682065867,      \"currency\": \"usd\",      \"dispute\": null,      \"livemode\": false,      \"merchant_amount\": -100,      \"merchant_currency\": \"usd\",      \"merchant_data\": {        \"category\": \"computer_software_stores\",        \"category_code\": \"5734\",        \"city\": \"SAN FRANCISCO\",        \"country\": \"US\",        \"name\": \"WWWW.BROWSEBUG.BIZ\",        \"network_id\": \"1234567890\",        \"postal_code\": \"94103\",        \"state\": \"CA\"      },      \"metadata\": {},      \"type\": \"capture\",      \"wallet\": null    }    {...}    {...}  ],}\n```",
    "title": "Transactions | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/authorizations/update",
    "markdown": "# Update an authorization | Stripe API Reference\n\nUpdates the specified Issuing `Authorization` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated Issuing `Authorization` object if a valid identifier was provided.\n\nPOST /v1/issuing/authorizations/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/authorizations/iauth_1JVXl82eZvKYlo2CPIiWlzrn \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"iauth_1JVXl82eZvKYlo2CPIiWlzrn\",  \"object\": \"issuing.authorization\",  \"amount\": 382,  \"amount_details\": {    \"atm_fee\": null  },  \"approved\": false,  \"authorization_method\": \"online\",  \"balance_transactions\": [],  \"card\": {    \"id\": \"ic_1JDmgz2eZvKYlo2CRXlTsXj6\",    \"object\": \"issuing.card\",    \"brand\": \"Visa\",    \"cancellation_reason\": null,    \"cardholder\": {      \"id\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",      \"object\": \"issuing.cardholder\",      \"billing\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"123 Main Street\",          \"line2\": null,          \"postal_code\": \"94111\",          \"state\": \"CA\"        }      },      \"company\": null,      \"created\": 1626425119,      \"email\": \"jenny.rosen@example.com\",      \"individual\": null,      \"livemode\": false,      \"metadata\": {},      \"name\": \"Jenny Rosen\",      \"phone_number\": \"+18008675309\",      \"redaction\": null,      \"requirements\": {        \"disabled_reason\": null,        \"past_due\": []      },      \"spending_controls\": {        \"allowed_categories\": [],        \"blocked_categories\": [],        \"spending_limits\": [],        \"spending_limits_currency\": null      },      \"status\": \"active\",      \"type\": \"individual\"    },    \"created\": 1626425206,    \"currency\": \"usd\",    \"exp_month\": 6,    \"exp_year\": 2024,    \"last4\": \"8693\",    \"livemode\": false,    \"metadata\": {},    \"redaction\": null,    \"replaced_by\": null,    \"replacement_for\": null,    \"replacement_reason\": null,    \"shipping\": null,    \"spending_controls\": {      \"allowed_categories\": null,      \"blocked_categories\": null,      \"spending_limits\": [        {          \"amount\": 50000,          \"categories\": [],          \"interval\": \"daily\"        }      ],      \"spending_limits_currency\": \"usd\"    },    \"status\": \"active\",    \"type\": \"virtual\",    \"wallets\": {      \"apple_pay\": {        \"eligible\": true,        \"ineligible_reason\": null      },      \"google_pay\": {        \"eligible\": true,        \"ineligible_reason\": null      },      \"primary_account_identifier\": null    }  },  \"cardholder\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",  \"created\": 1630657706,  \"currency\": \"usd\",  \"livemode\": false,  \"merchant_amount\": 382,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"network_data\": null,  \"pending_request\": null,  \"redaction\": null,  \"request_history\": [    {      \"amount\": 382,      \"amount_details\": {        \"atm_fee\": null      },      \"approved\": false,      \"created\": 1630657706,      \"currency\": \"usd\",      \"merchant_amount\": 382,      \"merchant_currency\": \"usd\",      \"reason\": \"verification_failed\",      \"reason_message\": null    }  ],  \"status\": \"closed\",  \"transactions\": [],  \"verification_data\": {    \"address_line1_check\": \"not_provided\",    \"address_postal_code_check\": \"not_provided\",    \"cvc_check\": \"mismatch\",    \"expiry_check\": \"match\"  },  \"wallet\": null}\n```\n\n## [Retrieve an authorization](https://docs.stripe.com/api/issuing/authorizations/retrieve)\n\nRetrieves an Issuing `Authorization` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Authorization` object if a valid identifier was provided.\n\nGET /v1/issuing/authorizations/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/authorizations/iauth_1JVXl82eZvKYlo2CPIiWlzrn \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"iauth_1JVXl82eZvKYlo2CPIiWlzrn\",  \"object\": \"issuing.authorization\",  \"amount\": 382,  \"amount_details\": {    \"atm_fee\": null  },  \"approved\": false,  \"authorization_method\": \"online\",  \"balance_transactions\": [],  \"card\": {    \"id\": \"ic_1JDmgz2eZvKYlo2CRXlTsXj6\",    \"object\": \"issuing.card\",    \"brand\": \"Visa\",    \"cancellation_reason\": null,    \"cardholder\": {      \"id\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",      \"object\": \"issuing.cardholder\",      \"billing\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"123 Main Street\",          \"line2\": null,          \"postal_code\": \"94111\",          \"state\": \"CA\"        }      },      \"company\": null,      \"created\": 1626425119,      \"email\": \"jenny.rosen@example.com\",      \"individual\": null,      \"livemode\": false,      \"metadata\": {},      \"name\": \"Jenny Rosen\",      \"phone_number\": \"+18008675309\",      \"redaction\": null,      \"requirements\": {        \"disabled_reason\": null,        \"past_due\": []      },      \"spending_controls\": {        \"allowed_categories\": [],        \"blocked_categories\": [],        \"spending_limits\": [],        \"spending_limits_currency\": null      },      \"status\": \"active\",      \"type\": \"individual\"    },    \"created\": 1626425206,    \"currency\": \"usd\",    \"exp_month\": 6,    \"exp_year\": 2024,    \"last4\": \"8693\",    \"livemode\": false,    \"metadata\": {},    \"redaction\": null,    \"replaced_by\": null,    \"replacement_for\": null,    \"replacement_reason\": null,    \"shipping\": null,    \"spending_controls\": {      \"allowed_categories\": null,      \"blocked_categories\": null,      \"spending_limits\": [        {          \"amount\": 50000,          \"categories\": [],          \"interval\": \"daily\"        }      ],      \"spending_limits_currency\": \"usd\"    },    \"status\": \"active\",    \"type\": \"virtual\",    \"wallets\": {      \"apple_pay\": {        \"eligible\": true,        \"ineligible_reason\": null      },      \"google_pay\": {        \"eligible\": true,        \"ineligible_reason\": null      },      \"primary_account_identifier\": null    }  },  \"cardholder\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",  \"created\": 1630657706,  \"currency\": \"usd\",  \"livemode\": false,  \"merchant_amount\": 382,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"network_data\": null,  \"pending_request\": null,  \"redaction\": null,  \"request_history\": [    {      \"amount\": 382,      \"amount_details\": {        \"atm_fee\": null      },      \"approved\": false,      \"created\": 1630657706,      \"currency\": \"usd\",      \"merchant_amount\": 382,      \"merchant_currency\": \"usd\",      \"reason\": \"verification_failed\",      \"reason_message\": null    }  ],  \"status\": \"closed\",  \"transactions\": [],  \"verification_data\": {    \"address_line1_check\": \"not_provided\",    \"address_postal_code_check\": \"not_provided\",    \"cvc_check\": \"mismatch\",    \"expiry_check\": \"match\"  },  \"wallet\": null}\n```\n\n## [List all authorizations](https://docs.stripe.com/api/issuing/authorizations/list)\n\nReturns a list of Issuing `Authorization` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Only return authorizations that belong to the given card.\n    \n*   Only return authorizations that belong to the given cardholder.\n    \n*   Only return authorizations with the given status. One of `pending`, `closed`, or `reversed`.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` authorizations, starting after authorization `starting_after`. Each entry in the array is a separate Issuing `Authorization` object. If no more authorizations are available, the resulting array will be empty.\n\nGET /v1/issuing/authorizations\n\n```\ncurl -G https://api.stripe.com/v1/issuing/authorizations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/authorizations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"iauth_1JVXl82eZvKYlo2CPIiWlzrn\",      \"object\": \"issuing.authorization\",      \"amount\": 382,      \"amount_details\": {        \"atm_fee\": null      },      \"approved\": false,      \"authorization_method\": \"online\",      \"balance_transactions\": [],      \"card\": {        \"id\": \"ic_1JDmgz2eZvKYlo2CRXlTsXj6\",        \"object\": \"issuing.card\",        \"brand\": \"Visa\",        \"cancellation_reason\": null,        \"cardholder\": {          \"id\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",          \"object\": \"issuing.cardholder\",          \"billing\": {            \"address\": {              \"city\": \"San Francisco\",              \"country\": \"US\",              \"line1\": \"123 Main Street\",              \"line2\": null,              \"postal_code\": \"94111\",              \"state\": \"CA\"            }          },          \"company\": null,          \"created\": 1626425119,          \"email\": \"jenny.rosen@example.com\",          \"individual\": null,          \"livemode\": false,          \"metadata\": {},          \"name\": \"Jenny Rosen\",          \"phone_number\": \"+18008675309\",          \"redaction\": null,          \"requirements\": {            \"disabled_reason\": null,            \"past_due\": []          },          \"spending_controls\": {            \"allowed_categories\": [],            \"blocked_categories\": [],            \"spending_limits\": [],            \"spending_limits_currency\": null          },          \"status\": \"active\",          \"type\": \"individual\"        },        \"created\": 1626425206,        \"currency\": \"usd\",        \"exp_month\": 6,        \"exp_year\": 2024,        \"last4\": \"8693\",        \"livemode\": false,        \"metadata\": {},        \"redaction\": null,        \"replaced_by\": null,        \"replacement_for\": null,        \"replacement_reason\": null,        \"shipping\": null,        \"spending_controls\": {          \"allowed_categories\": null,          \"blocked_categories\": null,          \"spending_limits\": [            {              \"amount\": 50000,              \"categories\": [],              \"interval\": \"daily\"            }          ],          \"spending_limits_currency\": \"usd\"        },        \"status\": \"active\",        \"type\": \"virtual\",        \"wallets\": {          \"apple_pay\": {            \"eligible\": true,            \"ineligible_reason\": null          },          \"google_pay\": {            \"eligible\": true,            \"ineligible_reason\": null          },          \"primary_account_identifier\": null        }      },      \"cardholder\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",      \"created\": 1630657706,      \"currency\": \"usd\",      \"livemode\": false,      \"merchant_amount\": 382,      \"merchant_currency\": \"usd\",      \"merchant_data\": {        \"category\": \"computer_software_stores\",        \"category_code\": \"5734\",        \"city\": \"SAN FRANCISCO\",        \"country\": \"US\",        \"name\": \"STRIPE\",        \"network_id\": \"1234567890\",        \"postal_code\": \"94103\",        \"state\": \"CA\"      },      \"metadata\": {        \"order_id\": \"6735\"      },      \"network_data\": null,      \"pending_request\": null,      \"redaction\": null,      \"request_history\": [        {          \"amount\": 382,          \"amount_details\": {            \"atm_fee\": null          },          \"approved\": false,          \"created\": 1630657706,          \"currency\": \"usd\",          \"merchant_amount\": 382,          \"merchant_currency\": \"usd\",          \"reason\": \"verification_failed\",          \"reason_message\": null        }      ],      \"status\": \"closed\",      \"transactions\": [],      \"verification_data\": {        \"address_line1_check\": \"not_provided\",        \"address_postal_code_check\": \"not_provided\",        \"cvc_check\": \"mismatch\",        \"expiry_check\": \"match\"      },      \"wallet\": null    }    {...}    {...}  ],}\n```\n\n## [Approve an authorization](https://docs.stripe.com/api/issuing/authorizations/approve)\n\n\\[Deprecated\\] Approves a pending Issuing `Authorization` object. This request should be made within the timeout window of the [real-time authorization](https://docs.stripe.com/issuing/controls/real-time-authorizations) flow. This method is deprecated. Instead, [respond directly to the webhook request to approve an authorization](https://docs.stripe.com/issuing/controls/real-time-authorizations#authorization-handling).\n\n### Parameters\n\n*   If the authorization’s `pending_request.is_amount_controllable` property is `true`, you may provide this value to control how much to hold for the authorization. Must be positive (use [`decline`](https://docs.stripe.com/api/issuing/authorizations/decline) to decline an authorization request).\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an approved Issuing `Authorization` object.\n\nPOST /v1/issuing/authorizations/:id/approve\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/authorizations/iauth_1MvSKeLkdIwHu7ixKr8rO1HV/approve \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"iauth_1MvSKeLkdIwHu7ixKr8rO1HV\",  \"object\": \"issuing.authorization\",  \"amount\": 0,  \"amount_details\": {    \"atm_fee\": null  },  \"approved\": true,  \"authorization_method\": \"keyed_in\",  \"balance_transactions\": [],  \"card\": {    \"id\": \"ic_1MvSKeLkdIwHu7ixFANTvxgn\",    \"object\": \"issuing.card\",    \"brand\": \"Visa\",    \"cancellation_reason\": null,    \"cardholder\": {      \"id\": \"ich_1MsKAB2eZvKYlo2C3eZ2BdvK\",      \"object\": \"issuing.cardholder\",      \"billing\": {        \"address\": {          \"city\": \"Anytown\",          \"country\": \"US\",          \"line1\": \"123 Main Street\",          \"line2\": null,          \"postal_code\": \"12345\",          \"state\": \"CA\"        }      },      \"company\": null,      \"created\": 1680415995,      \"email\": null,      \"individual\": null,      \"livemode\": false,      \"metadata\": {},      \"name\": \"John Doe\",      \"phone_number\": null,      \"requirements\": {        \"disabled_reason\": \"requirements.past_due\",        \"past_due\": [          \"individual.card_issuing.user_terms_acceptance.ip\",          \"individual.card_issuing.user_terms_acceptance.date\",          \"individual.first_name\",          \"individual.last_name\"        ]      },      \"spending_controls\": {        \"allowed_categories\": [],        \"blocked_categories\": [],        \"spending_limits\": [],        \"spending_limits_currency\": null      },      \"status\": \"active\",      \"type\": \"individual\"    },    \"created\": 1681162380,    \"currency\": \"usd\",    \"exp_month\": 8,    \"exp_year\": 2024,    \"last4\": \"4242\",    \"livemode\": false,    \"metadata\": {},    \"replaced_by\": null,    \"replacement_for\": null,    \"replacement_reason\": null,    \"shipping\": null,    \"spending_controls\": {      \"allowed_categories\": null,      \"blocked_categories\": null,      \"spending_limits\": [],      \"spending_limits_currency\": null    },    \"status\": \"active\",    \"type\": \"physical\",    \"wallets\": {      \"apple_pay\": {        \"eligible\": false,        \"ineligible_reason\": \"missing_cardholder_contact\"      },      \"google_pay\": {        \"eligible\": false,        \"ineligible_reason\": \"missing_cardholder_contact\"      },      \"primary_account_identifier\": null    }  },  \"cardholder\": null,  \"created\": 1681162380,  \"currency\": \"usd\",  \"livemode\": false,  \"merchant_amount\": 0,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"taxicabs_limousines\",    \"category_code\": \"4121\",    \"city\": \"San Francisco\",    \"country\": \"US\",    \"name\": \"Rocket Rides\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94107\",    \"state\": \"CA\"  },  \"metadata\": {},  \"network_data\": null,  \"pending_request\": {    \"amount\": 700,    \"amount_details\": {      \"atm_fee\": null    },    \"currency\": \"usd\",    \"is_amount_controllable\": false,    \"merchant_amount\": 700,    \"merchant_currency\": \"usd\"  },  \"request_history\": [],  \"status\": \"pending\",  \"transactions\": [],  \"verification_data\": {    \"address_line1_check\": \"not_provided\",    \"address_postal_code_check\": \"match\",    \"cvc_check\": \"match\",    \"expiry_check\": \"match\"  },  \"wallet\": null}\n```\n\n## [Decline an authorization](https://docs.stripe.com/api/issuing/authorizations/decline)\n\n\\[Deprecated\\] Declines a pending Issuing `Authorization` object. This request should be made within the timeout window of the [real time authorization](https://docs.stripe.com/issuing/controls/real-time-authorizations) flow. This method is deprecated. Instead, [respond directly to the webhook request to decline an authorization](https://docs.stripe.com/issuing/controls/real-time-authorizations#authorization-handling).\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns a declined Issuing `Authorization` object.\n\nPOST /v1/issuing/authorizations/:id/decline\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/authorizations/iauth_1JVXl82eZvKYlo2CPIiWlzrn/decline \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"iauth_1JVXl82eZvKYlo2CPIiWlzrn\",  \"object\": \"issuing.authorization\",  \"amount\": 382,  \"amount_details\": {    \"atm_fee\": null  },  \"approved\": false,  \"authorization_method\": \"online\",  \"balance_transactions\": [],  \"card\": {    \"id\": \"ic_1JDmgz2eZvKYlo2CRXlTsXj6\",    \"object\": \"issuing.card\",    \"brand\": \"Visa\",    \"cancellation_reason\": null,    \"cardholder\": {      \"id\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",      \"object\": \"issuing.cardholder\",      \"billing\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"123 Main Street\",          \"line2\": null,          \"postal_code\": \"94111\",          \"state\": \"CA\"        }      },      \"company\": null,      \"created\": 1626425119,      \"email\": \"jenny.rosen@example.com\",      \"individual\": null,      \"livemode\": false,      \"metadata\": {},      \"name\": \"Jenny Rosen\",      \"phone_number\": \"+18008675309\",      \"redaction\": null,      \"requirements\": {        \"disabled_reason\": null,        \"past_due\": []      },      \"spending_controls\": {        \"allowed_categories\": [],        \"blocked_categories\": [],        \"spending_limits\": [],        \"spending_limits_currency\": null      },      \"status\": \"active\",      \"type\": \"individual\"    },    \"created\": 1626425206,    \"currency\": \"usd\",    \"exp_month\": 6,    \"exp_year\": 2024,    \"last4\": \"8693\",    \"livemode\": false,    \"metadata\": {},    \"redaction\": null,    \"replaced_by\": null,    \"replacement_for\": null,    \"replacement_reason\": null,    \"shipping\": null,    \"spending_controls\": {      \"allowed_categories\": null,      \"blocked_categories\": null,      \"spending_limits\": [        {          \"amount\": 50000,          \"categories\": [],          \"interval\": \"daily\"        }      ],      \"spending_limits_currency\": \"usd\"    },    \"status\": \"active\",    \"type\": \"virtual\",    \"wallets\": {      \"apple_pay\": {        \"eligible\": true,        \"ineligible_reason\": null      },      \"google_pay\": {        \"eligible\": true,        \"ineligible_reason\": null      },      \"primary_account_identifier\": null    }  },  \"cardholder\": \"ich_1JDmfb2eZvKYlo2CwHUgaAxU\",  \"created\": 1630657706,  \"currency\": \"usd\",  \"livemode\": false,  \"merchant_amount\": 382,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"network_data\": null,  \"pending_request\": null,  \"redaction\": null,  \"request_history\": [    {      \"amount\": 382,      \"amount_details\": {        \"atm_fee\": null      },      \"approved\": false,      \"created\": 1630657706,      \"currency\": \"usd\",      \"merchant_amount\": 382,      \"merchant_currency\": \"usd\",      \"reason\": \"verification_failed\",      \"reason_message\": null    }  ],  \"status\": \"closed\",  \"transactions\": [],  \"verification_data\": {    \"address_line1_check\": \"not_provided\",    \"address_postal_code_check\": \"not_provided\",    \"cvc_check\": \"mismatch\",    \"expiry_check\": \"match\"  },  \"wallet\": null}\n```",
    "title": "Update an authorization | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/secret_management",
    "markdown": "# Secrets | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fsecret_management)\n\nSecret Store is an API that allows Stripe Apps developers to securely persist secrets for use by UI Extensions and app backends.\n\nThe primary resource in Secret Store is a `secret`. Other apps can’t view secrets created by an app. Additionally, secrets are scoped to provide further permission control.\n\nAll Dashboard users and the app backend share `account` scoped secrets. Use the `account` scope for secrets that don’t change per-user, like a third-party API key.\n\nA `user` scoped secret is accessible by the app backend and one specific Dashboard user. Use the `user` scope for per-user secrets like per-user OAuth tokens, where different users might have different permissions.\n\nRelated guide: [Store data between page reloads](https://docs.stripe.com/stripe-apps/store-auth-data-custom-objects)\n\nEndpoints\n\n[GET/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/list)[POST/v1/apps/secrets/delete](https://docs.stripe.com/api/apps/secret_store/delete)[GET/v1/apps/secrets/find](https://docs.stripe.com/api/apps/secret_store/find)[POST/v1/apps/secrets](https://docs.stripe.com/api/apps/secret_store/set)\n\n## [The Secret object](https://docs.stripe.com/api/apps/secret_store/secret_resource)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   String representing the object’s type. Objects of the same type share the same value.\n    \n*   Time at which the object was created. Measured in seconds since the Unix epoch.\n    \n*   If true, indicates that this secret has been deleted\n    \n*   #### \n    \n    expires\\_atnullable timestamp\n    \n    The Unix timestamp for the expiry time of the secret, after which the secret deletes.\n    \n*   Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.\n    \n*   A name for the secret that’s unique within the scope.\n    \n*   #### \n    \n    payloadnullable stringExpandable\n    \n    The plaintext secret value to be stored.\n    \n*   Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.\n    \n\n```\n{  \"id\": \"appsecret_5110hHS1707T6fjBnah1LkdIwHu7ix\",  \"object\": \"apps.secret\",  \"created\": 1680209063,  \"expires_at\": null,  \"livemode\": false,  \"name\": \"my-api-key\",  \"scope\": {    \"type\": \"account\"  }}\n```\n\n## [List secrets](https://docs.stripe.com/api/apps/secret_store/list)\n\nList all secrets stored on the given scope.\n\n### Parameters\n\n*   Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` Secrets, starting after Secret `starting_after`. Each entry in the array is a separate Secret object. If no more Secrets are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/apps/secrets \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"scope[type]\"=account\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/apps/secrets\",  \"has_more\": false,  \"data\": [    {      \"id\": \"appsecret_5110hHS1707T6fjBnah1LkdIwHu7ix\",      \"object\": \"apps.secret\",      \"created\": 1680209063,      \"expires_at\": null,      \"livemode\": false,      \"name\": \"my-api-key\",      \"scope\": {        \"type\": \"account\"      }    }    {...}    {...}  ],}\n```\n\n## [Delete a Secret](https://docs.stripe.com/api/apps/secret_store/delete)\n\nDeletes a secret from the secret store by name and scope.\n\n### Parameters\n\n*   A name for the secret that’s unique within the scope.\n    \n*   Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.\n    \n\n### Returns\n\nReturns the deleted secret object.\n\nPOST /v1/apps/secrets/delete\n\n```\ncurl https://api.stripe.com/v1/apps/secrets/delete \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d name=my-api-key \\  -d \"scope[type]\"=account\n```\n\n```\n{  \"id\": \"appsecret_5110hHS1707T6fjBnah1LkdIwHu7ix\",  \"object\": \"apps.secret\",  \"deleted\": true}\n```\n\n## [Find a Secret](https://docs.stripe.com/api/apps/secret_store/find)\n\nFinds a secret in the secret store by name and scope.\n\n### Parameters\n\n*   A name for the secret that’s unique within the scope.\n    \n*   Specifies the scoping of the secret. Requests originating from UI extensions can only access account-scoped secrets or secrets scoped to their own user.\n    \n\n### Returns\n\nReturns a secret object.\n\nGET /v1/apps/secrets/find\n\n```\ncurl -G https://api.stripe.com/v1/apps/secrets/find \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d name=my-api-key \\  -d \"scope[type]\"=account\n```\n\n```\n{  \"id\": \"appsecret_5110hHS1707T6fjBnah1LkdIwHu7ix\",  \"object\": \"apps.secret\",  \"created\": 1680209063,  \"expires_at\": null,  \"livemode\": false,  \"name\": \"my-api-key\",  \"scope\": {    \"type\": \"account\"  }}\n```",
    "title": "Secrets | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/transactions/update",
    "markdown": "# Update a transaction | Stripe API Reference\n\nUpdates the specified Issuing `Transaction` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated Issuing `Transaction` object if a valid identifier was provided.\n\nPOST /v1/issuing/transactions/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/transactions/ipi_1MzFN1K8F4fqH0lBmFq8CjbU \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",  \"object\": \"issuing.transaction\",  \"amount\": -100,  \"amount_details\": {    \"atm_fee\": null  },  \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",  \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",  \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",  \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",  \"created\": 1682065867,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -100,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"WWWW.BROWSEBUG.BIZ\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Retrieve a transaction](https://docs.stripe.com/api/issuing/transactions/retrieve)\n\nRetrieves an Issuing `Transaction` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Transaction` object if a valid identifier was provided.\n\nGET /v1/issuing/transactions/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/transactions/ipi_1MzFN1K8F4fqH0lBmFq8CjbU \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",  \"object\": \"issuing.transaction\",  \"amount\": -100,  \"amount_details\": {    \"atm_fee\": null  },  \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",  \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",  \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",  \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",  \"created\": 1682065867,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -100,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"WWWW.BROWSEBUG.BIZ\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {},  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [List all transactions](https://docs.stripe.com/api/issuing/transactions/list)\n\nReturns a list of Issuing `Transaction` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Only return transactions that belong to the given card.\n    \n*   Only return transactions that belong to the given cardholder.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` transactions, starting after transaction `starting_after`. Each entry in the array is a separate Issuing `Transaction` object. If no more transactions are available, the resulting array will be empty.\n\nGET /v1/issuing/transactions\n\n```\ncurl -G https://api.stripe.com/v1/issuing/transactions \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/transactions\",  \"has_more\": false,  \"data\": [    {      \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",      \"object\": \"issuing.transaction\",      \"amount\": -100,      \"amount_details\": {        \"atm_fee\": null      },      \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",      \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",      \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",      \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",      \"created\": 1682065867,      \"currency\": \"usd\",      \"dispute\": null,      \"livemode\": false,      \"merchant_amount\": -100,      \"merchant_currency\": \"usd\",      \"merchant_data\": {        \"category\": \"computer_software_stores\",        \"category_code\": \"5734\",        \"city\": \"SAN FRANCISCO\",        \"country\": \"US\",        \"name\": \"WWWW.BROWSEBUG.BIZ\",        \"network_id\": \"1234567890\",        \"postal_code\": \"94103\",        \"state\": \"CA\"      },      \"metadata\": {},      \"type\": \"capture\",      \"wallet\": null    }    {...}    {...}  ],}\n```\n\n## [Create a test-mode force capture](https://docs.stripe.com/api/issuing/transactions/test_mode_create_force_capture)Test helper\n\nAllows the user to capture an arbitrary amount, also known as a forced capture.\n\n### Parameters\n\n*   The total amount to attempt to capture. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   Card associated with this transaction.\n    \n*   The currency of the capture. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).\n    \n\n### More parameters\n\n### Returns\n\nA Transaction object\n\nPOST /v1/test\\_helpers/issuing/transactions/create\\_force\\_capture\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/create_force_capture \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=1000 \\  -d card=ic_1Gswa82eZvKYlo2CP2jveFil\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Create a test-mode unlinked refund](https://docs.stripe.com/api/issuing/transactions/test_mode_create_unlinked_refund)Test helper\n\nAllows the user to refund an arbitrary amount, also known as a unlinked refund.\n\n### Parameters\n\n*   The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   Card associated with this unlinked refund transaction.\n    \n*   The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).\n    \n\n### More parameters\n\n### Returns\n\nA Transaction object\n\nPOST /v1/test\\_helpers/issuing/transactions/create\\_unlinked\\_refund\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/create_unlinked_refund \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=1000 \\  -d card=ic_1Gswa82eZvKYlo2CP2jveFil\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```",
    "title": "Update a transaction | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/transactions/test_mode_create_force_capture",
    "markdown": "# Create a test-mode force capture\n\n## [Create a test-mode force capture](https://docs.stripe.com/api/issuing/transactions/test_mode_create_force_capture)Test helper\n\nAllows the user to capture an arbitrary amount, also known as a forced capture.\n\n### Parameters\n\n*   The total amount to attempt to capture. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   Card associated with this transaction.\n    \n*   The currency of the capture. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).\n    \n\n### More parameters\n\n### Returns\n\nA Transaction object\n\nPOST /v1/test\\_helpers/issuing/transactions/create\\_force\\_capture\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/create_force_capture \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=1000 \\  -d card=ic_1Gswa82eZvKYlo2CP2jveFil\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Create a test-mode unlinked refund](https://docs.stripe.com/api/issuing/transactions/test_mode_create_unlinked_refund)Test helper\n\nAllows the user to refund an arbitrary amount, also known as a unlinked refund.\n\n### Parameters\n\n*   The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   Card associated with this unlinked refund transaction.\n    \n*   The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).\n    \n\n### More parameters\n\n### Returns\n\nA Transaction object\n\nPOST /v1/test\\_helpers/issuing/transactions/create\\_unlinked\\_refund\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/create_unlinked_refund \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=1000 \\  -d card=ic_1Gswa82eZvKYlo2CP2jveFil\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Refund a test-mode transaction](https://docs.stripe.com/api/issuing/transactions/test_mode_refund)Test helper\n\nRefund a test-mode Transaction.\n\n### Parameters\n\n*   The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n\n### Returns\n\nA `Transaction` object. This will be the `Transaction` object of type `capture` referenced in the request’s URL, not the new `Transaction` object of type `refund` that will be created as a side-effect of this API call. To find the newly created `Transaction` object, you can use the [Retrieve an authorization](https://stripe.com/docs/api/issuing/authorizations/retrieve) API, whose response will contain a list of related `Transaction` IDs, including the newly created `Transaction` of type `refund`. You can also use the [List all transactions](https://stripe.com/docs/api/issuing/transactions/list) API, or listen for the `issuing_transaction.created` webhook event to retrieve the newly created `Transaction` of type `refund`.\n\nPOST /v1/test\\_helpers/issuing/transactions/:id/refund\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/ipi_1GswaK2eZvKYlo2Co7wmNJhD/refund \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d refund_amount=1000\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Create a test-mode force capture | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/transactions/retrieve",
    "markdown": "# Retrieve a transaction | Stripe API Reference\n\nRetrieves an Issuing `Transaction` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Transaction` object if a valid identifier was provided.\n\nGET /v1/issuing/transactions/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/transactions/ipi_1MzFN1K8F4fqH0lBmFq8CjbU \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",  \"object\": \"issuing.transaction\",  \"amount\": -100,  \"amount_details\": {    \"atm_fee\": null  },  \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",  \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",  \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",  \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",  \"created\": 1682065867,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -100,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"WWWW.BROWSEBUG.BIZ\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\"  },  \"metadata\": {},  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [List all transactions](https://docs.stripe.com/api/issuing/transactions/list)\n\nReturns a list of Issuing `Transaction` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Only return transactions that belong to the given card.\n    \n*   Only return transactions that belong to the given cardholder.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` transactions, starting after transaction `starting_after`. Each entry in the array is a separate Issuing `Transaction` object. If no more transactions are available, the resulting array will be empty.\n\nGET /v1/issuing/transactions\n\n```\ncurl -G https://api.stripe.com/v1/issuing/transactions \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/transactions\",  \"has_more\": false,  \"data\": [    {      \"id\": \"ipi_1MzFN1K8F4fqH0lBmFq8CjbU\",      \"object\": \"issuing.transaction\",      \"amount\": -100,      \"amount_details\": {        \"atm_fee\": null      },      \"authorization\": \"iauth_1MzFMzK8F4fqH0lBc9VdaZUp\",      \"balance_transaction\": \"txn_1MzFN1K8F4fqH0lBQPtqUmJN\",      \"card\": \"ic_1MzFMxK8F4fqH0lBjIUITRYi\",      \"cardholder\": \"ich_1MzFMxK8F4fqH0lBXnFW0ROG\",      \"created\": 1682065867,      \"currency\": \"usd\",      \"dispute\": null,      \"livemode\": false,      \"merchant_amount\": -100,      \"merchant_currency\": \"usd\",      \"merchant_data\": {        \"category\": \"computer_software_stores\",        \"category_code\": \"5734\",        \"city\": \"SAN FRANCISCO\",        \"country\": \"US\",        \"name\": \"WWWW.BROWSEBUG.BIZ\",        \"network_id\": \"1234567890\",        \"postal_code\": \"94103\",        \"state\": \"CA\"      },      \"metadata\": {},      \"type\": \"capture\",      \"wallet\": null    }    {...}    {...}  ],}\n```\n\n## [Create a test-mode force capture](https://docs.stripe.com/api/issuing/transactions/test_mode_create_force_capture)Test helper\n\nAllows the user to capture an arbitrary amount, also known as a forced capture.\n\n### Parameters\n\n*   The total amount to attempt to capture. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   Card associated with this transaction.\n    \n*   The currency of the capture. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).\n    \n\n### More parameters\n\n### Returns\n\nA Transaction object\n\nPOST /v1/test\\_helpers/issuing/transactions/create\\_force\\_capture\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/create_force_capture \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=1000 \\  -d card=ic_1Gswa82eZvKYlo2CP2jveFil\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Create a test-mode unlinked refund](https://docs.stripe.com/api/issuing/transactions/test_mode_create_unlinked_refund)Test helper\n\nAllows the user to refund an arbitrary amount, also known as a unlinked refund.\n\n### Parameters\n\n*   The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n*   Card associated with this unlinked refund transaction.\n    \n*   The currency of the unlinked refund. If not provided, defaults to the currency of the card. Three-letter [ISO currency code](https://www.iso.org/iso-4217-currency-codes.html), in lowercase. Must be a [supported currency](https://stripe.com/docs/currencies).\n    \n\n### More parameters\n\n### Returns\n\nA Transaction object\n\nPOST /v1/test\\_helpers/issuing/transactions/create\\_unlinked\\_refund\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/create_unlinked_refund \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=1000 \\  -d card=ic_1Gswa82eZvKYlo2CP2jveFil\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```\n\n## [Refund a test-mode transaction](https://docs.stripe.com/api/issuing/transactions/test_mode_refund)Test helper\n\nRefund a test-mode Transaction.\n\n### Parameters\n\n*   The total amount to attempt to refund. This amount is in the provided currency, or defaults to the cards currency, and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal).\n    \n\n### Returns\n\nA `Transaction` object. This will be the `Transaction` object of type `capture` referenced in the request’s URL, not the new `Transaction` object of type `refund` that will be created as a side-effect of this API call. To find the newly created `Transaction` object, you can use the [Retrieve an authorization](https://stripe.com/docs/api/issuing/authorizations/retrieve) API, whose response will contain a list of related `Transaction` IDs, including the newly created `Transaction` of type `refund`. You can also use the [List all transactions](https://stripe.com/docs/api/issuing/transactions/list) API, or listen for the `issuing_transaction.created` webhook event to retrieve the newly created `Transaction` of type `refund`.\n\nPOST /v1/test\\_helpers/issuing/transactions/:id/refund\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/transactions/ipi_1GswaK2eZvKYlo2Co7wmNJhD/refund \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d refund_amount=1000\n```\n\n```\n{  \"id\": \"ipi_1GswaK2eZvKYlo2Co7wmNJhD\",  \"object\": \"issuing.transaction\",  \"amount\": -1000,  \"amount_details\": {    \"atm_fee\": null,    \"cashback_amount\": null  },  \"authorization\": \"iauth_1GswaJ2eZvKYlo2Ct9mFMJ4S\",  \"balance_transaction\": \"txn_1GswaK2eZvKYlo2CJAFFIuHg\",  \"card\": \"ic_1Gswa82eZvKYlo2CP2jveFil\",  \"cardholder\": \"ich_1Gswa82eZvKYlo2CvobneLSo\",  \"created\": 1591905672,  \"currency\": \"usd\",  \"dispute\": null,  \"livemode\": false,  \"merchant_amount\": -1000,  \"merchant_currency\": \"usd\",  \"merchant_data\": {    \"category\": \"computer_software_stores\",    \"category_code\": \"5734\",    \"city\": \"SAN FRANCISCO\",    \"country\": \"US\",    \"name\": \"STRIPE.COM\",    \"network_id\": \"1234567890\",    \"postal_code\": \"94103\",    \"state\": \"CA\",    \"terminal_id\": null  },  \"metadata\": {    \"order_id\": \"6735\"  },  \"redaction\": null,  \"type\": \"capture\",  \"wallet\": null}\n```",
    "title": "Retrieve a transaction | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/disputes",
    "markdown": "# Disputes | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fissuing%2Fdisputes)\n\n## [The Dispute object](https://docs.stripe.com/api/issuing/disputes/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   Disputed amount in the card’s currency and in the [smallest currency unit](https://docs.stripe.com/currencies#zero-decimal). Usually the amount of the `transaction`, but can differ (usually because of currency fluctuation).\n    \n*   #### \n    \n    balance\\_transactionsnullable array of objectsExpandable\n    \n    List of balance transactions associated with the dispute.\n    \n*   The currency the `transaction` was made in.\n    \n*   Evidence for the dispute. Evidence contains exactly two non-null fields: the `reason` for the dispute and the associated evidence field for the selected `reason`.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n*   Current status of the dispute.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `expired`<br><br>The dispute has expired. |\n    | `lost`<br><br>The dispute is lost. |\n    | `submitted`<br><br>The dispute has been submitted to Stripe. |\n    | `unsubmitted`<br><br>The dispute is pending submission to Stripe. |\n    | `won`<br><br>The dispute is won. |\n    \n*   #### \n    \n    transactionstringExpandable\n    \n    The transaction being disputed.\n    \n\n### More attributes\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Create a dispute](https://docs.stripe.com/api/issuing/disputes/create)\n\nCreates an Issuing `Dispute` object. Individual pieces of evidence within the `evidence` object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence) for more details about evidence requirements.\n\n### Parameters\n\n*   Evidence provided for the dispute.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   The ID of the issuing transaction to create a dispute for. For transaction on Treasury FinancialAccounts, use `treasury.received_debit`.\n    \n\n### More parameters\n\n### Returns\n\nReturns an Issuing `Dispute` object in `unsubmitted` status if creation succeeds.\n\nPOST /v1/issuing/disputes\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d transaction=ipi_1MykXhFtDWhhyHE1UjsZZ3xQ \\  -d \"evidence[reason]\"=fraudulent \\  -d \"evidence[fraudulent][explanation]\"=\"This transaction is fraudulent.\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Update a dispute](https://docs.stripe.com/api/issuing/disputes/update)\n\nUpdates the specified Issuing `Dispute` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the `evidence` object can be unset by passing in an empty string.\n\n### Parameters\n\n*   Evidence provided for the dispute.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated Issuing `Dispute` object if a valid identifier was provided.\n\nPOST /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"evidence[reason]\"=not_received \\  -d \"evidence[not_received][expected_at]\"=1590000000 \\  -d \"evidence[not_received][explanation]\"= \\  -d \"evidence[not_received][product_description]\"=\"Baseball cap\" \\  -d \"evidence[not_received][product_type]\"=merchandise\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"reason\": \"not_received\",    \"not_received\": {      \"expected_at\": 1590000000,      \"explanation\": \"\",      \"product_description\": \"Baseball cap\",      \"product_type\": \"merchandise\"    }  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Retrieve a dispute](https://docs.stripe.com/api/issuing/disputes/retrieve)\n\nRetrieves an Issuing `Dispute` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Dispute` object if a valid identifier was provided.\n\nGET /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```",
    "title": "Disputes | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/connection_tokens",
    "markdown": "# Connection Token | Stripe API Reference\n\nA Connection Token is used by the Stripe Terminal SDK to connect to a reader.\n\nRelated guide: [Fleet management](https://docs.stripe.com/terminal/fleet/locations)\n\n## [The Connection Token object](https://docs.stripe.com/api/terminal/connection_tokens/object)\n\n### Attributes\n\n*   The id of the location that this connection token is scoped to. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).\n    \n*   Your application should pass this token to the Stripe Terminal SDK.\n    \n\n### More attributes\n\nThe Connection Token object\n\n```\n{  \"object\": \"terminal.connection_token\",  \"secret\": \"pst_test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LE81ZEdIalZ6NlVuMUdjM3c3WkRnN0ZYRHZxRURwTXo_00gNK2DWAV\"}\n```\n\n## [Create a Connection Token](https://docs.stripe.com/api/terminal/connection_tokens/create)\n\nTo connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.\n\n### Parameters\n\n*   The id of the location that this connection token is scoped to. If specified the connection token will only be usable with readers assigned to that location, otherwise the connection token will be usable with all readers. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).\n    \n\n### Returns\n\nReturns a Connection Token.\n\nPOST /v1/terminal/connection\\_tokens\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/connection_tokens \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"terminal.connection_token\",  \"secret\": \"pst_test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LE81ZEdIalZ6NlVuMUdjM3c3WkRnN0ZYRHZxRURwTXo_00gNK2DWAV\"}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Connection Token | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/terminal/fleet/locations",
    "markdown": "# Manage locations | Stripe DocumentationThe Stripe Docs logo\n\n## Group and manage your readers by physical location.\n\nYou can streamline the management of multiple readers across different physical sites by using locations and zones.\n\nLocations and zones help by associating each reader with specific operational sites and guarantee that the correct regional configurations are downloaded.\n\n*   **Locations**: Allows you to group readers, monitor their connectivity status, and modify your settings based on physical location. This functionality is beneficial for marketplaces with multiple connected accounts.\n    \n*   **Zones**: Offers an optional method to further categorize locations and readers. Zones enable you to represent broader groups of readers or locations, such as larger geographic regions (for example, countries) or organizational sub-brands. Multiple locations can belong to a single zone, and you can create a hierarchical structure by grouping multiple zones under a single zone.\n    \n\n#### Note\n\nZones provide an additional way to group locations. You must still assign readers to a location, and you can assign a location to only one zone.\n\n## Locations ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nYou can create a location for each physical place where your readers operate. You can [register](https://docs.stripe.com/terminal/fleet/register-readers) multiple readers to each location, and nest these locations within zones. Before you can use a reader, you must register it to a location.\n\nThe required [address properties](https://docs.stripe.com/api/terminal/locations/create#create_terminal_location-address) for a location vary by country:\n\n| Countries | Required Address Properties |\n| --- | --- |\n| Australia<br><br>Canada<br><br>Italy<br><br>Spain<br><br>United States | `line1`, `city`, `state`, `postal_code`, and `country` |\n| Austria+<br><br>Belgium<br><br>Czech Republic+<br><br>Denmark<br><br>Finland+<br><br>France<br><br>Germany<br><br>Luxembourg+<br><br>Malaysia+<br><br>Netherlands<br><br>New Zealand+<br><br>Norway+<br><br>Portugal+<br><br>Sweden<br><br>Switzerland+<br><br>United Kingdom | `line1`, `city`, `postal_code`, and `country` |\n| Ireland<br><br>Singapore | `line1`, `postal_code`, and `country` |\n\n+Terminal is currently in beta in this country.\n\n\\*\\*Compatibility for this mobile SDK also applies when used with React Native.\n\n#### Common mistake\n\nYou can use the Dashboard or API to update a `Location` object. If you do so, avoid changing the country associated with an existing location. Instead of changing the country, create a new location in a different country, and then re-register any readers associated with the old location.\n\n## Zones ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nZones are the top-level groups that can consist of either more zones or locations. You can add more zones nested under an existing one, creating additional hierarchy levels, such as “West coast.” However, organizing your locations into zones is optional.\n\n## Create locations and zones ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nFirst, you must [register your reader to a location](https://docs.stripe.com/terminal/fleet/register-readers?dashboard-or-api=dashboard) to accept payments. You can manage your locations and zones in the [Manage locations](https://dashboard.stripe.com/terminal/locations) page. To open this page from the Terminal reader page, click the **Manage locations** button on the Readers tab.\n\n### Create a location![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo create a location:\n\n1.  Click the overflow menu () on the **All locations** row, then click **Create location**.\n2.  Enter a name and a valid address. Providing an address ensures that the correct configuration and settings are applied based on the region where the reader(s) are operating.\n3.  Click **Done**.\n\nYou can also create a specific [configuration](https://docs.stripe.com/terminal/fleet/configurations-overview) for that location.\n\n### Create a zone![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo create a zone:\n\n1.  Click the overflow menu () on the **All locations** row, then click **Create zone**.\n2.  Enter a name.\n3.  Click **Done**.\n\n### Create a nested zone![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo create a nested zone:\n\n1.  Click the overflow menu () on the zone for which you want to create a nested zone, then click **Create zone**.\n2.  Enter a name.\n3.  Click **Done**.\n\n### Add or move a location to a zone ![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg) \n\nTo add or move a location to a zone:\n\n1.  Click the overflow menu () on the location, then click **Move location**.\n2.  Choose the zone or nested zone where you want to move the location.\n3.  Click **Done**.\n\n### Delete a location![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo delete a location, you must remove the reader(s) associate with it:\n\n1.  Remove all readers from the location in which you want to delete.\n2.  Click the overflow menu () on the location, then click **Delete location**.\n3.  Click **Yes, delete location**.\n\n### Delete a zone![](https://b.stripecdn.com/docs-statics-srv/assets/fcc3a1c24df6fcffface6110ca4963de.svg)\n\nTo delete a zone, you must remove the reader(s) associate with it:\n\n1.  Remove all readers from the location you want to delete, and remove all locations under the zones.\n    *   (Optional) Move the locations with readers to a different zone.\n2.  Click the overflow menu () on the zone, then click **Delete zone**.\n3.  Click **Yes, delete zone**.",
    "title": "Manage locations | Stripe Documentation",
    "description": "Group and manage your readers by physical location.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/disputes/create",
    "markdown": "# Create a dispute | Stripe API Reference\n\nCreates an Issuing `Dispute` object. Individual pieces of evidence within the `evidence` object are optional at this point. Stripe only validates that required evidence is present during submission. Refer to [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence) for more details about evidence requirements.\n\n### Parameters\n\n*   Evidence provided for the dispute.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   The ID of the issuing transaction to create a dispute for. For transaction on Treasury FinancialAccounts, use `treasury.received_debit`.\n    \n\n### More parameters\n\n### Returns\n\nReturns an Issuing `Dispute` object in `unsubmitted` status if creation succeeds.\n\nPOST /v1/issuing/disputes\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d transaction=ipi_1MykXhFtDWhhyHE1UjsZZ3xQ \\  -d \"evidence[reason]\"=fraudulent \\  -d \"evidence[fraudulent][explanation]\"=\"This transaction is fraudulent.\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Update a dispute](https://docs.stripe.com/api/issuing/disputes/update)\n\nUpdates the specified Issuing `Dispute` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the `evidence` object can be unset by passing in an empty string.\n\n### Parameters\n\n*   Evidence provided for the dispute.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated Issuing `Dispute` object if a valid identifier was provided.\n\nPOST /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"evidence[reason]\"=not_received \\  -d \"evidence[not_received][expected_at]\"=1590000000 \\  -d \"evidence[not_received][explanation]\"= \\  -d \"evidence[not_received][product_description]\"=\"Baseball cap\" \\  -d \"evidence[not_received][product_type]\"=merchandise\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"reason\": \"not_received\",    \"not_received\": {      \"expected_at\": 1590000000,      \"explanation\": \"\",      \"product_description\": \"Baseball cap\",      \"product_type\": \"merchandise\"    }  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Retrieve a dispute](https://docs.stripe.com/api/issuing/disputes/retrieve)\n\nRetrieves an Issuing `Dispute` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Dispute` object if a valid identifier was provided.\n\nGET /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [List all disputes](https://docs.stripe.com/api/issuing/disputes/list)\n\nReturns a list of Issuing `Dispute` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Select the Issuing dispute for the given transaction.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` disputes, starting after dispute `starting_after`. Each entry in the array is a separate Issuing `Dispute` object. If no more disputes are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/issuing/disputes \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/disputes\",  \"has_more\": false,  \"data\": [    {      \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",      \"object\": \"issuing.dispute\",      \"amount\": 100,      \"created\": 1681947753,      \"currency\": \"usd\",      \"evidence\": {        \"fraudulent\": {          \"additional_documentation\": null,          \"dispute_explanation\": null,          \"explanation\": \"This transaction is fraudulent.\",          \"uncategorized_file\": null        },        \"reason\": \"fraudulent\"      },      \"livemode\": false,      \"metadata\": {},      \"status\": \"unsubmitted\",      \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"    }    {...}    {...}  ],}\n```\n\n## [Submit a dispute](https://docs.stripe.com/api/issuing/dispute/submit)\n\nSubmits an Issuing `Dispute` to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence).\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an Issuing `Dispute` object in `submitted` status if submission succeeds.\n\nPOST /v1/issuing/disputes/:id/submit\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ/submit \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"submitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```",
    "title": "Create a dispute | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/connection_tokens/create",
    "markdown": "# Create a Connection Token | Stripe API Reference\n\nTo connect to a reader the Stripe Terminal SDK needs to retrieve a short-lived connection token from Stripe, proxied through your server. On your backend, add an endpoint that creates and returns a connection token.\n\n### Parameters\n\n*   The id of the location that this connection token is scoped to. If specified the connection token will only be usable with readers assigned to that location, otherwise the connection token will be usable with all readers. Note that location scoping only applies to internet-connected readers. For more details, see [the docs on scoping connection tokens](https://docs.stripe.com/terminal/fleet/locations-and-zones?dashboard-or-api=api#connection-tokens).\n    \n\n### Returns\n\nReturns a Connection Token.\n\nPOST /v1/terminal/connection\\_tokens\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/connection_tokens \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"terminal.connection_token\",  \"secret\": \"pst_test_YWNjdF8xTTJKVGtMa2RJd0h1N2l4LE81ZEdIalZ6NlVuMUdjM3c3WkRnN0ZYRHZxRURwTXo_00gNK2DWAV\"}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Create a Connection Token | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/disputes/retrieve",
    "markdown": "# Retrieve a dispute | Stripe API Reference\n\nRetrieves an Issuing `Dispute` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Dispute` object if a valid identifier was provided.\n\nGET /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [List all disputes](https://docs.stripe.com/api/issuing/disputes/list)\n\nReturns a list of Issuing `Dispute` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Select the Issuing dispute for the given transaction.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` disputes, starting after dispute `starting_after`. Each entry in the array is a separate Issuing `Dispute` object. If no more disputes are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/issuing/disputes \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/disputes\",  \"has_more\": false,  \"data\": [    {      \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",      \"object\": \"issuing.dispute\",      \"amount\": 100,      \"created\": 1681947753,      \"currency\": \"usd\",      \"evidence\": {        \"fraudulent\": {          \"additional_documentation\": null,          \"dispute_explanation\": null,          \"explanation\": \"This transaction is fraudulent.\",          \"uncategorized_file\": null        },        \"reason\": \"fraudulent\"      },      \"livemode\": false,      \"metadata\": {},      \"status\": \"unsubmitted\",      \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"    }    {...}    {...}  ],}\n```\n\n## [Submit a dispute](https://docs.stripe.com/api/issuing/dispute/submit)\n\nSubmits an Issuing `Dispute` to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence).\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an Issuing `Dispute` object in `submitted` status if submission succeeds.\n\nPOST /v1/issuing/disputes/:id/submit\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ/submit \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"submitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a dispute | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/disputes/update",
    "markdown": "# Update a dispute | Stripe API Reference\n\nUpdates the specified Issuing `Dispute` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged. Properties on the `evidence` object can be unset by passing in an empty string.\n\n### Parameters\n\n*   Evidence provided for the dispute.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated Issuing `Dispute` object if a valid identifier was provided.\n\nPOST /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"evidence[reason]\"=not_received \\  -d \"evidence[not_received][expected_at]\"=1590000000 \\  -d \"evidence[not_received][explanation]\"= \\  -d \"evidence[not_received][product_description]\"=\"Baseball cap\" \\  -d \"evidence[not_received][product_type]\"=merchandise\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"reason\": \"not_received\",    \"not_received\": {      \"expected_at\": 1590000000,      \"explanation\": \"\",      \"product_description\": \"Baseball cap\",      \"product_type\": \"merchandise\"    }  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Retrieve a dispute](https://docs.stripe.com/api/issuing/disputes/retrieve)\n\nRetrieves an Issuing `Dispute` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an Issuing `Dispute` object if a valid identifier was provided.\n\nGET /v1/issuing/disputes/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"unsubmitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [List all disputes](https://docs.stripe.com/api/issuing/disputes/list)\n\nReturns a list of Issuing `Dispute` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Select the Issuing dispute for the given transaction.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` disputes, starting after dispute `starting_after`. Each entry in the array is a separate Issuing `Dispute` object. If no more disputes are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/issuing/disputes \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/disputes\",  \"has_more\": false,  \"data\": [    {      \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",      \"object\": \"issuing.dispute\",      \"amount\": 100,      \"created\": 1681947753,      \"currency\": \"usd\",      \"evidence\": {        \"fraudulent\": {          \"additional_documentation\": null,          \"dispute_explanation\": null,          \"explanation\": \"This transaction is fraudulent.\",          \"uncategorized_file\": null        },        \"reason\": \"fraudulent\"      },      \"livemode\": false,      \"metadata\": {},      \"status\": \"unsubmitted\",      \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"    }    {...}    {...}  ],}\n```\n\n## [Submit a dispute](https://docs.stripe.com/api/issuing/dispute/submit)\n\nSubmits an Issuing `Dispute` to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence).\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an Issuing `Dispute` object in `submitted` status if submission succeeds.\n\nPOST /v1/issuing/disputes/:id/submit\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ/submit \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"submitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update a dispute | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/locations",
    "markdown": "# Location | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Flocations)\n\nEndpoints\n\n[POST/v1/terminal/locations](https://docs.stripe.com/api/terminal/locations/create)[POST/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/update)[GET/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/retrieve)[GET/v1/terminal/locations](https://docs.stripe.com/api/terminal/locations/list)[DELETE/v1/terminal/locations/:id](https://docs.stripe.com/api/terminal/locations/delete)\n\n## [The Location object](https://docs.stripe.com/api/terminal/locations/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   The full address of the location.\n    \n*   The display name of the location.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n\n### More attributes\n\n*   #### \n    \n    configuration\\_overridesnullable string\n    \n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [Create a Location](https://docs.stripe.com/api/terminal/locations/create)\n\nCreates a new `Location` object. For further details, including which address fields are required in each country, see the [Manage locations](https://docs.stripe.com/terminal/fleet/locations) guide.\n\n### Parameters\n\n*   The full address of the location.\n    \n*   #### \n    \n    display\\_namestringRequired\n    \n    A name for the location.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    configuration\\_overridesstring\n    \n\n### Returns\n\nReturns a `Location` object if creation succeeds.\n\nPOST /v1/terminal/locations\n\n```\ncurl https://api.stripe.com/v1/terminal/locations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d display_name=\"My First Store\" \\  -d \"address[line1]\"=\"1234 Main Street\" \\  -d \"address[city]\"=\"San Francisco\" \\  -d \"address[postal_code]\"=94111 \\  -d \"address[state]\"=CA \\  -d \"address[country]\"=US\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [Update a Location](https://docs.stripe.com/api/terminal/locations/update)\n\nUpdates a `Location` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   The full address of the location. If you’re updating the `address` field, avoid changing the `country`. If you need to modify the `country` field, create a new `Location` object and re-register any existing readers to that location.\n    \n*   A name for the location.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    configuration\\_overridesstring\n    \n\n### Returns\n\nReturns an updated `Location` object if a valid identifier was provided.\n\nPOST /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d display_name=\"Update Store Name\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"Update Store Name\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [Retrieve a Location](https://docs.stripe.com/api/terminal/locations/retrieve)\n\nRetrieves a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Location` object if a valid identifier was provided.\n\nGET /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```",
    "title": "Location | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/disputes/list",
    "markdown": "# List all disputes | Stripe API Reference\n\nReturns a list of Issuing `Dispute` objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Select the Issuing dispute for the given transaction.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` disputes, starting after dispute `starting_after`. Each entry in the array is a separate Issuing `Dispute` object. If no more disputes are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/issuing/disputes \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/disputes\",  \"has_more\": false,  \"data\": [    {      \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",      \"object\": \"issuing.dispute\",      \"amount\": 100,      \"created\": 1681947753,      \"currency\": \"usd\",      \"evidence\": {        \"fraudulent\": {          \"additional_documentation\": null,          \"dispute_explanation\": null,          \"explanation\": \"This transaction is fraudulent.\",          \"uncategorized_file\": null        },        \"reason\": \"fraudulent\"      },      \"livemode\": false,      \"metadata\": {},      \"status\": \"unsubmitted\",      \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"    }    {...}    {...}  ],}\n```\n\n## [Submit a dispute](https://docs.stripe.com/api/issuing/dispute/submit)\n\nSubmits an Issuing `Dispute` to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence).\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an Issuing `Dispute` object in `submitted` status if submission succeeds.\n\nPOST /v1/issuing/disputes/:id/submit\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ/submit \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"submitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all disputes | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/locations/create",
    "markdown": "# Create a Location | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Flocations%2Fcreate)\n\nCreates a new `Location` object. For further details, including which address fields are required in each country, see the [Manage locations](https://docs.stripe.com/terminal/fleet/locations) guide.\n\n### Parameters\n\n*   The full address of the location.\n    \n*   #### \n    \n    display\\_namestringRequired\n    \n    A name for the location.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    configuration\\_overridesstring\n    \n\n### Returns\n\nReturns a `Location` object if creation succeeds.\n\nPOST /v1/terminal/locations\n\n```\ncurl https://api.stripe.com/v1/terminal/locations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d display_name=\"My First Store\" \\  -d \"address[line1]\"=\"1234 Main Street\" \\  -d \"address[city]\"=\"San Francisco\" \\  -d \"address[postal_code]\"=94111 \\  -d \"address[state]\"=CA \\  -d \"address[country]\"=US\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [Update a Location](https://docs.stripe.com/api/terminal/locations/update)\n\nUpdates a `Location` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   The full address of the location. If you’re updating the `address` field, avoid changing the `country`. If you need to modify the `country` field, create a new `Location` object and re-register any existing readers to that location.\n    \n*   A name for the location.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    configuration\\_overridesstring\n    \n\n### Returns\n\nReturns an updated `Location` object if a valid identifier was provided.\n\nPOST /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d display_name=\"Update Store Name\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"Update Store Name\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [Retrieve a Location](https://docs.stripe.com/api/terminal/locations/retrieve)\n\nRetrieves a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Location` object if a valid identifier was provided.\n\nGET /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [List all Locations](https://docs.stripe.com/api/terminal/locations/list)\n\nReturns a list of `Location` objects.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` locations, starting after location `starting_after`. Each entry in the array is a separate Terminal `location` object. If no more locations are available, the resulting array will be empty.\n\nGET /v1/terminal/locations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/locations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/locations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tml_FBakXQG8bQk4Mm\",      \"object\": \"terminal.location\",      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Main Street\",        \"line2\": \"\",        \"postal_code\": \"94111\",        \"state\": \"CA\"      },      \"display_name\": \"My First Store\",      \"livemode\": false,      \"metadata\": {}    }    {...}    {...}  ],}\n```\n\n## [Delete a Location](https://docs.stripe.com/api/terminal/locations/delete)\n\nDeletes a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Location` object that was deleted.\n\nDELETE /v1/terminal/locations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"deleted\": true}\n```",
    "title": "Create a Location | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/locations/update",
    "markdown": "# Update a Location | Stripe API Reference\n\nUpdates a `Location` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   The full address of the location. If you’re updating the `address` field, avoid changing the `country`. If you need to modify the `country` field, create a new `Location` object and re-register any existing readers to that location.\n    \n*   A name for the location.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n*   #### \n    \n    configuration\\_overridesstring\n    \n\n### Returns\n\nReturns an updated `Location` object if a valid identifier was provided.\n\nPOST /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d display_name=\"Update Store Name\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"Update Store Name\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [Retrieve a Location](https://docs.stripe.com/api/terminal/locations/retrieve)\n\nRetrieves a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Location` object if a valid identifier was provided.\n\nGET /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [List all Locations](https://docs.stripe.com/api/terminal/locations/list)\n\nReturns a list of `Location` objects.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` locations, starting after location `starting_after`. Each entry in the array is a separate Terminal `location` object. If no more locations are available, the resulting array will be empty.\n\nGET /v1/terminal/locations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/locations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/locations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tml_FBakXQG8bQk4Mm\",      \"object\": \"terminal.location\",      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Main Street\",        \"line2\": \"\",        \"postal_code\": \"94111\",        \"state\": \"CA\"      },      \"display_name\": \"My First Store\",      \"livemode\": false,      \"metadata\": {}    }    {...}    {...}  ],}\n```\n\n## [Delete a Location](https://docs.stripe.com/api/terminal/locations/delete)\n\nDeletes a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Location` object that was deleted.\n\nDELETE /v1/terminal/locations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"deleted\": true}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update a Location | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/dispute/submit",
    "markdown": "# Submit a dispute | Stripe API Reference\n\nSubmits an Issuing `Dispute` to the card network. Stripe validates that all evidence fields required for the dispute’s reason are present. For more details, see [Dispute reasons and evidence](https://docs.stripe.com/issuing/purchases/disputes#dispute-reasons-and-evidence).\n\n### Parameters\n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an Issuing `Dispute` object in `submitted` status if submission succeeds.\n\nPOST /v1/issuing/disputes/:id/submit\n\n```\ncurl -X POST https://api.stripe.com/v1/issuing/disputes/idp_1MykdxFtDWhhyHE1BFAV3osZ/submit \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"idp_1MykdxFtDWhhyHE1BFAV3osZ\",  \"object\": \"issuing.dispute\",  \"amount\": 100,  \"created\": 1681947753,  \"currency\": \"usd\",  \"evidence\": {    \"fraudulent\": {      \"additional_documentation\": null,      \"dispute_explanation\": null,      \"explanation\": \"This transaction is fraudulent.\",      \"uncategorized_file\": null    },    \"reason\": \"fraudulent\"  },  \"livemode\": false,  \"metadata\": {},  \"status\": \"submitted\",  \"transaction\": \"ipi_1MykXhFtDWhhyHE1UjsZZ3xQ\"}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Submit a dispute | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/locations/retrieve",
    "markdown": "# Retrieve a Location | Stripe API Reference\n\nRetrieves a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Location` object if a valid identifier was provided.\n\nGET /v1/terminal/locations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"address\": {    \"city\": \"San Francisco\",    \"country\": \"US\",    \"line1\": \"1234 Main Street\",    \"line2\": \"\",    \"postal_code\": \"94111\",    \"state\": \"CA\"  },  \"display_name\": \"My First Store\",  \"livemode\": false,  \"metadata\": {}}\n```\n\n## [List all Locations](https://docs.stripe.com/api/terminal/locations/list)\n\nReturns a list of `Location` objects.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` locations, starting after location `starting_after`. Each entry in the array is a separate Terminal `location` object. If no more locations are available, the resulting array will be empty.\n\nGET /v1/terminal/locations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/locations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/locations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tml_FBakXQG8bQk4Mm\",      \"object\": \"terminal.location\",      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Main Street\",        \"line2\": \"\",        \"postal_code\": \"94111\",        \"state\": \"CA\"      },      \"display_name\": \"My First Store\",      \"livemode\": false,      \"metadata\": {}    }    {...}    {...}  ],}\n```\n\n## [Delete a Location](https://docs.stripe.com/api/terminal/locations/delete)\n\nDeletes a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Location` object that was deleted.\n\nDELETE /v1/terminal/locations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"deleted\": true}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a Location | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/locations/list",
    "markdown": "# List all Locations | Stripe API Reference\n\nReturns a list of `Location` objects.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` locations, starting after location `starting_after`. Each entry in the array is a separate Terminal `location` object. If no more locations are available, the resulting array will be empty.\n\nGET /v1/terminal/locations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/locations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/locations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tml_FBakXQG8bQk4Mm\",      \"object\": \"terminal.location\",      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Main Street\",        \"line2\": \"\",        \"postal_code\": \"94111\",        \"state\": \"CA\"      },      \"display_name\": \"My First Store\",      \"livemode\": false,      \"metadata\": {}    }    {...}    {...}  ],}\n```\n\n## [Delete a Location](https://docs.stripe.com/api/terminal/locations/delete)\n\nDeletes a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Location` object that was deleted.\n\nDELETE /v1/terminal/locations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"deleted\": true}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all Locations | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/funding_instructions/create",
    "markdown": "# Create funding instructions | Stripe API Reference\n\nCreate or retrieve funding instructions for an Issuing balance. If funding instructions don’t yet exist for the account, we’ll create new funding instructions. If we’ve already created funding instructions for the account, the same we’ll retrieve the same funding instructions. In other words, we’ll return the same funding instructions each time.\n\n### Parameters\n\n*   #### \n    \n    bank\\_transferobjectRequired\n    \n    Additional parameters for `bank_transfer` funding types\n    \n\n*   The `funding_type` to get the instructions for.\n    \n    Possible enum values\n    \n    `bank_transfer`\n    \n    Use a bank\\_transfer hash to define the bank transfer type\n    \n\n### Returns\n\nReturns funding instructions for an Issuing balance\n\nPOST /v1/issuing/funding\\_instructions\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/issuing/funding_instructions \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"bank_transfer[type]\"=eu_bank_transfer \\  -d currency=eur \\  -d funding_type=bank_transfer\n```\n\n```\n{  \"object\": \"funding_instructions\",  \"bank_transfer\": {    \"country\": \"DE\",    \"financial_addresses\": [      {        \"iban\": {          \"account_holder_name\": \"Stripe Technology Europe Limited\",          \"bic\": \"SXPYDEHH\",          \"country\": \"DE\",          \"iban\": \"DE00000000000000000001\"        },        \"supported_networks\": [          \"sepa\"        ],        \"type\": \"iban\"      }    ],    \"type\": \"eu_bank_transfer\"  },  \"currency\": \"eur\",  \"funding_type\": \"bank_transfer\",  \"livemode\": false}\n```\n\n## [List all funding instructions](https://docs.stripe.com/api/issuing/funding_instructions/list)\n\nRetrieve all applicable funding instructions for an Issuing balance.\n\n### Parameters\n\nNo parameters.\n\n### More parameters\n\n### Returns\n\nReturns all funding instructions for an Issuing balance\n\nGET /v1/issuing/funding\\_instructions\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/issuing/funding_instructions \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/funding_instructions\",  \"has_more\": false,  \"data\": [    {      \"object\": \"funding_instructions\",      \"bank_transfer\": {        \"country\": \"DE\",        \"financial_addresses\": [          {            \"iban\": {              \"account_holder_name\": \"Stripe Technology Europe Limited\",              \"bic\": \"SXPYDEHH\",              \"country\": \"DE\",              \"iban\": \"DE00000000000000000001\"            },            \"supported_networks\": [              \"sepa\"            ],            \"type\": \"iban\"          }        ],        \"type\": \"eu_bank_transfer\"      },      \"currency\": \"eur\",      \"funding_type\": \"bank_transfer\",      \"livemode\": false    }  ]}\n```\n\n## [Simulate a top up](https://docs.stripe.com/api/issuing/funding_instructions/fund)Test helper\n\nSimulates an external bank transfer and adds funds to an Issuing balance. This method can only be called in test mode.\n\n### Parameters\n\n*   The amount to top up\n    \n*   The currency to top up\n    \n\n### Returns\n\nReturns testmode funding instructions for an Issuing balance\n\nPOST /v1/test\\_helpers/issuing/fund\\_balance\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/fund_balance \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=4242 \\  -d currency=eur\n```\n\n```\n{  \"object\": \"funding_instructions\",  \"bank_transfer\": {    \"country\": \"DE\",    \"financial_addresses\": [      {        \"iban\": {          \"account_holder_name\": \"Stripe Technology Europe Limited\",          \"bic\": \"SXPYDEHH\",          \"country\": \"DE\",          \"iban\": \"DE00000000000000000001\"        },        \"supported_networks\": [          \"sepa\"        ],        \"type\": \"iban\"      }    ],    \"type\": \"eu_bank_transfer\"  },  \"currency\": \"eur\",  \"funding_type\": \"bank_transfer\",  \"livemode\": false}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Create funding instructions | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/locations/delete",
    "markdown": "# Delete a Location | Stripe API Reference\n\nDeletes a `Location` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Location` object that was deleted.\n\nDELETE /v1/terminal/locations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/locations/tml_FBakXQG8bQk4Mm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tml_FBakXQG8bQk4Mm\",  \"object\": \"terminal.location\",  \"deleted\": true}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Delete a Location | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers",
    "markdown": "# Reader | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Freaders)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [The Reader object](https://docs.stripe.com/api/terminal/readers/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   Type of reader, one of `bbpos_wisepad3`, `stripe_m2`, `bbpos_chipper2x`, `bbpos_wisepos_e`, `verifone_P400`, `simulated_wisepos_e`, or `mobile_phone_reader`.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `bbpos_chipper2x` |\n    | `bbpos_wisepad3` |\n    | `bbpos_wisepos_e` |\n    | `mobile_phone_reader` |\n    | `simulated_wisepos_e` |\n    | `stripe_m2` |\n    | `verifone_P400` |\n    \n*   Custom label given to the reader for easier identification.\n    \n*   #### \n    \n    locationnullable stringExpandable\n    \n    The location identifier of the reader.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n*   Serial number of the reader.\n    \n*   The networking status of the reader.\n    \n\n### More attributes\n\n*   #### \n    \n    device\\_sw\\_versionnullable string\n    \n*   #### \n    \n    ip\\_addressnullable string\n    \n*   #### \n    \n    last\\_seen\\_atnullable integerPreview feature\n    \n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Create a Reader](https://docs.stripe.com/api/terminal/readers/create)\n\nCreates a new `Reader` object.\n\n### Parameters\n\n*   #### \n    \n    registration\\_codestringRequired\n    \n    A code generated by the reader used for registering to an account.\n    \n*   Custom label given to the reader for easier identification. If no label is specified, the registration code will be used.\n    \n*   The location to assign the reader to.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns a `Reader` object if creation succeeds.\n\nPOST /v1/terminal/readers\n\n```\ncurl https://api.stripe.com/v1/terminal/readers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d label=\"Blue Rabbit\" \\  -d registration_code=simulated-wpe \\  -d location=tml_FDOtHwxAAdIJOh\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Update a Reader](https://docs.stripe.com/api/terminal/readers/update)\n\nUpdates a `Reader` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   The new label of the reader.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` object if a valid identifier was provided.\n\nPOST /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Retrieve a Reader](https://docs.stripe.com/api/terminal/readers/retrieve)\n\nRetrieves a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Reader` object if a valid identifier was provided.\n\nGET /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/funding_instructions/fund",
    "markdown": "# Simulate a top up | Stripe API Reference\n\n## [Simulate a top up](https://docs.stripe.com/api/issuing/funding_instructions/fund)Test helper\n\nSimulates an external bank transfer and adds funds to an Issuing balance. This method can only be called in test mode.\n\n### Parameters\n\n*   The amount to top up\n    \n*   The currency to top up\n    \n\n### Returns\n\nReturns testmode funding instructions for an Issuing balance\n\nPOST /v1/test\\_helpers/issuing/fund\\_balance\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/fund_balance \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d amount=4242 \\  -d currency=eur\n```\n\n```\n{  \"object\": \"funding_instructions\",  \"bank_transfer\": {    \"country\": \"DE\",    \"financial_addresses\": [      {        \"iban\": {          \"account_holder_name\": \"Stripe Technology Europe Limited\",          \"bic\": \"SXPYDEHH\",          \"country\": \"DE\",          \"iban\": \"DE00000000000000000001\"        },        \"supported_networks\": [          \"sepa\"        ],        \"type\": \"iban\"      }    ],    \"type\": \"eu_bank_transfer\"  },  \"currency\": \"eur\",  \"funding_type\": \"bank_transfer\",  \"livemode\": false}\n```\n\n## [Physical Bundles](https://docs.stripe.com/api/issuing/physical_bundles)\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Simulate a top up | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/personalization_designs",
    "markdown": "# Personalization Designs | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fissuing%2Fpersonalization_designs)\n\n## [The Personalization Design object](https://docs.stripe.com/api/issuing/personalization_designs/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   String representing the object’s type. Objects of the same type share the same value.\n    \n*   #### \n    \n    card\\_logonullable stringExpandable\n    \n    The file for the card logo to use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.\n    \n*   #### \n    \n    carrier\\_textnullable object\n    \n    Hash containing carrier text, for use with physical bundles that support carrier text.\n    \n*   Time at which the object was created. Measured in seconds since the Unix epoch.\n    \n*   Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.\n    \n*   #### \n    \n    lookup\\_keynullable string\n    \n    A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n*   Friendly display name.\n    \n*   #### \n    \n    physical\\_bundlestringExpandable\n    \n    The physical bundle object belonging to this personalization design.\n    \n*   Hash containing information on whether this personalization design is used to create cards when one is not specified.\n    \n*   Hash containing reasons why the personalization design was rejected.\n    \n*   Whether this personalization design can be used to create cards.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `active`<br><br>Personalization design can be used to create cards that fulfill immediately. |\n    | `inactive`<br><br>Personalization design cannot be used to create cards because it was deactivated. |\n    | `rejected`<br><br>Personalization design cannot be used to create cards because it was rejected by design review. |\n    | `review`<br><br>Personalization design can be used to create cards but cards will only be fulfilled once the personalization design is activated. |\n    \n\nThe Personalization Design object\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": true,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"review\"}\n```\n\n## [Create a personalization design](https://docs.stripe.com/api/issuing/personalization_designs/create)\n\nCreates a personalization design object.\n\n### Parameters\n\n*   #### \n    \n    physical\\_bundlestringRequired\n    \n    The physical bundle object belonging to this personalization design.\n    \n*   The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.\n    \n*   Hash containing carrier text, for use with physical bundles that support carrier text.\n    \n*   A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   Friendly display name.\n    \n*   Information on whether this personalization design is used to create cards when one is not specified.\n    \n*   #### \n    \n    transfer\\_lookup\\_keyboolean\n    \n    If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.\n    \n\n### Returns\n\nReturns the created personalization design object.\n\nPOST /v1/issuing/personalization\\_designs\n\n```\ncurl https://api.stripe.com/v1/issuing/personalization_designs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d name=\"My personalization design name\" \\  -d \"preferences[is_default]\"=false \\  -d card_logo=file_1LzR9L2eZvKYlo2CelTpcvKu \\  -d physical_bundle=ics_Oiw9ahglMfql0U\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": true,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"review\"}\n```\n\n## [Update a personalization design](https://docs.stripe.com/api/issuing/personalization_designs/update)\n\nUpdates a card personalization object.\n\n### Parameters\n\n*   The file for the card logo, for use with physical bundles that support card logos. Must have a `purpose` value of `issuing_logo`.\n    \n*   Hash containing carrier text, for use with physical bundles that support carrier text.\n    \n*   A lookup key used to retrieve personalization designs dynamically from a static string. This may be up to 200 characters.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   Friendly display name. Providing an empty string will set the field to null.\n    \n*   The physical bundle object belonging to this personalization design.\n    \n*   Information on whether this personalization design is used to create cards when one is not specified.\n    \n*   #### \n    \n    transfer\\_lookup\\_keyboolean\n    \n    If set to true, will atomically remove the lookup key from the existing personalization design, and assign it to this personalization design.\n    \n\n### Returns\n\nReturns the updated personalization design object.\n\nPOST /v1/issuing/personalization\\_designs/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/personalization_designs/ipcd_Oiw9GXcFRE81LZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": true,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"review\"}\n```\n\n## [Retrieve a personalization design](https://docs.stripe.com/api/issuing/personalization_designs/retrieve)\n\nRetrieves a personalization design object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the personalization design object.\n\nGET /v1/issuing/personalization\\_designs/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/personalization_designs/ipcd_Oiw9GXcFRE81LZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": true,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"review\"}\n```",
    "title": "Personalization Designs | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/update",
    "markdown": "# Update a Reader | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Freaders%2Fupdate)\n\nUpdates a `Reader` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   The new label of the reader.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` object if a valid identifier was provided.\n\nPOST /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Retrieve a Reader](https://docs.stripe.com/api/terminal/readers/retrieve)\n\nRetrieves a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Reader` object if a valid identifier was provided.\n\nGET /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [List all Readers](https://docs.stripe.com/api/terminal/readers/list)\n\nReturns a list of `Reader` objects.\n\n### Parameters\n\n*   Filters readers by device type\n    \n*   A location ID to filter the response list to only readers at the specific location\n    \n*   Filters readers by serial number\n    \n*   A status filter to filter readers to only offline or online readers\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` readers, starting after reader `starting_after`. Each entry in the array is a separate Terminal `Reader` object. If no more readers are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/terminal/readers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/readers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmr_FDOt2wlRZEdpd7\",      \"object\": \"terminal.reader\",      \"action\": null,      \"device_sw_version\": \"\",      \"device_type\": \"simulated_wisepos_e\",      \"ip_address\": \"0.0.0.0\",      \"label\": \"Blue Rabbit\",      \"last_seen_at\": 1681320543815,      \"livemode\": false,      \"location\": \"tml_FDOtHwxAAdIJOh\",      \"metadata\": {},      \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",      \"status\": \"online\"    }    {...}    {...}  ],}\n```\n\n## [Delete a Reader](https://docs.stripe.com/api/terminal/readers/delete)\n\nDeletes a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Reader` object that was deleted.\n\nDELETE /v1/terminal/readers/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"deleted\": true}\n```\n\n## [Cancel the current reader action](https://docs.stripe.com/api/terminal/readers/cancel_action)\n\nCancels the current reader action.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/cancel\\_action\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/cancel_action \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695402450407,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "Update a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/create",
    "markdown": "# Create a Reader | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Freaders%2Fcreate)\n\nCreates a new `Reader` object.\n\n### Parameters\n\n*   #### \n    \n    registration\\_codestringRequired\n    \n    A code generated by the reader used for registering to an account.\n    \n*   Custom label given to the reader for easier identification. If no label is specified, the registration code will be used.\n    \n*   The location to assign the reader to.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns a `Reader` object if creation succeeds.\n\nPOST /v1/terminal/readers\n\n```\ncurl https://api.stripe.com/v1/terminal/readers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d label=\"Blue Rabbit\" \\  -d registration_code=simulated-wpe \\  -d location=tml_FDOtHwxAAdIJOh\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Update a Reader](https://docs.stripe.com/api/terminal/readers/update)\n\nUpdates a `Reader` object by setting the values of the parameters passed. Any parameters not provided will be left unchanged.\n\n### Parameters\n\n*   The new label of the reader.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` object if a valid identifier was provided.\n\nPOST /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {    \"order_id\": \"6735\"  },  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Retrieve a Reader](https://docs.stripe.com/api/terminal/readers/retrieve)\n\nRetrieves a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Reader` object if a valid identifier was provided.\n\nGET /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [List all Readers](https://docs.stripe.com/api/terminal/readers/list)\n\nReturns a list of `Reader` objects.\n\n### Parameters\n\n*   Filters readers by device type\n    \n*   A location ID to filter the response list to only readers at the specific location\n    \n*   Filters readers by serial number\n    \n*   A status filter to filter readers to only offline or online readers\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` readers, starting after reader `starting_after`. Each entry in the array is a separate Terminal `Reader` object. If no more readers are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/terminal/readers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/readers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmr_FDOt2wlRZEdpd7\",      \"object\": \"terminal.reader\",      \"action\": null,      \"device_sw_version\": \"\",      \"device_type\": \"simulated_wisepos_e\",      \"ip_address\": \"0.0.0.0\",      \"label\": \"Blue Rabbit\",      \"last_seen_at\": 1681320543815,      \"livemode\": false,      \"location\": \"tml_FDOtHwxAAdIJOh\",      \"metadata\": {},      \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",      \"status\": \"online\"    }    {...}    {...}  ],}\n```\n\n## [Delete a Reader](https://docs.stripe.com/api/terminal/readers/delete)\n\nDeletes a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Reader` object that was deleted.\n\nDELETE /v1/terminal/readers/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"deleted\": true}\n```",
    "title": "Create a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/retrieve",
    "markdown": "# Retrieve a Reader | Stripe API Reference\n\nRetrieves a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Reader` object if a valid identifier was provided.\n\nGET /v1/terminal/readers/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [List all Readers](https://docs.stripe.com/api/terminal/readers/list)\n\nReturns a list of `Reader` objects.\n\n### Parameters\n\n*   Filters readers by device type\n    \n*   A location ID to filter the response list to only readers at the specific location\n    \n*   Filters readers by serial number\n    \n*   A status filter to filter readers to only offline or online readers\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` readers, starting after reader `starting_after`. Each entry in the array is a separate Terminal `Reader` object. If no more readers are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/terminal/readers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/readers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmr_FDOt2wlRZEdpd7\",      \"object\": \"terminal.reader\",      \"action\": null,      \"device_sw_version\": \"\",      \"device_type\": \"simulated_wisepos_e\",      \"ip_address\": \"0.0.0.0\",      \"label\": \"Blue Rabbit\",      \"last_seen_at\": 1681320543815,      \"livemode\": false,      \"location\": \"tml_FDOtHwxAAdIJOh\",      \"metadata\": {},      \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",      \"status\": \"online\"    }    {...}    {...}  ],}\n```\n\n## [Delete a Reader](https://docs.stripe.com/api/terminal/readers/delete)\n\nDeletes a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Reader` object that was deleted.\n\nDELETE /v1/terminal/readers/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"deleted\": true}\n```\n\n## [Cancel the current reader action](https://docs.stripe.com/api/terminal/readers/cancel_action)\n\nCancels the current reader action.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/cancel\\_action\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/cancel_action \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695402450407,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Collect inputs using a Reader](https://docs.stripe.com/api/terminal/readers/collect_inputs)Preview feature\n\nInitiates an input collection flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    inputsarray of objectsRequired\n    \n    List of inputs to be collected using the Reader\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_inputs\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_OXYJvwsea7PDiDHNciXRkytb/collect_inputs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"inputs[0][type]\"=signature \\  -d \"inputs[0][custom_text][title]\"=Signature \\  -d \"inputs[0][custom_text][description]\"=\"Please sign below\" \\  -d \"inputs[0][custom_text][submit_button]\"=Submit \\  -d \"inputs[0][custom_text][skip_button]\"=Skip \\  -d \"inputs[0][required]\"=false \\  -d \"inputs[1][type]\"=selection \\  -d \"inputs[1][custom_text][title]\"=Selection \\  -d \"inputs[1][custom_text][description]\"=\"Please select one\" \\  -d \"inputs[1][required]\"=true \\  -d \"inputs[1][selection][choices][0][style]\"=primary \\  -d \"inputs[1][selection][choices][0][value]\"=choice_1 \\  -d \"inputs[1][selection][choices][1][style]\"=secondary \\  -d \"inputs[1][selection][choices][1][value]\"=choice_2 \\  -d \"inputs[2][type]\"=email \\  -d \"inputs[2][custom_text][title]\"=\"Enter your email\" \\  --data-urlencode \"inputs[2][custom_text][description]\"=\"We'll send updates on your order and occasional deals\" \\  -d \"inputs[2][custom_text][submit_button]\"=Submit \\  -d \"inputs[2][custom_text][skip_button]\"=Skip \\  -d \"inputs[2][required]\"=false\n```\n\n```\n{  \"id\": \"tmr_OXYJvwsea7PDiDHNciXRkytb\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_inputs\": {      \"inputs\": [        {          \"type\": \"signature\",          \"custom_text\": {            \"title\": \"Signature\",            \"description\": \"Please sign below\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        },        {          \"type\": \"selection\",          \"custom_text\": {            \"title\": \"Selection\",            \"description\": \"Please select one\"          },          \"required\": true,          \"selection\": {            \"choices\": [              {                \"style\": \"primary\",                \"value\": \"choice_1\"              },              {                \"style\": \"secondary\",                \"value\": \"choice_2\"              }            ],            \"value\": null          }        },        {          \"type\": \"email\",          \"custom_text\": {            \"title\": \"Enter your email\",            \"description\": \"We'll send updates on your order and occasional deals\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        }      ]    },    \"status\": \"in_progress\",    \"type\": \"collect_inputs\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```",
    "title": "Retrieve a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/list",
    "markdown": "# List all Readers | Stripe API Reference\n\nReturns a list of `Reader` objects.\n\n### Parameters\n\n*   Filters readers by device type\n    \n*   A location ID to filter the response list to only readers at the specific location\n    \n*   Filters readers by serial number\n    \n*   A status filter to filter readers to only offline or online readers\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` readers, starting after reader `starting_after`. Each entry in the array is a separate Terminal `Reader` object. If no more readers are available, the resulting array will be empty.\n\n```\ncurl -G https://api.stripe.com/v1/terminal/readers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/readers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmr_FDOt2wlRZEdpd7\",      \"object\": \"terminal.reader\",      \"action\": null,      \"device_sw_version\": \"\",      \"device_type\": \"simulated_wisepos_e\",      \"ip_address\": \"0.0.0.0\",      \"label\": \"Blue Rabbit\",      \"last_seen_at\": 1681320543815,      \"livemode\": false,      \"location\": \"tml_FDOtHwxAAdIJOh\",      \"metadata\": {},      \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",      \"status\": \"online\"    }    {...}    {...}  ],}\n```\n\n## [Delete a Reader](https://docs.stripe.com/api/terminal/readers/delete)\n\nDeletes a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Reader` object that was deleted.\n\nDELETE /v1/terminal/readers/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"deleted\": true}\n```\n\n## [Cancel the current reader action](https://docs.stripe.com/api/terminal/readers/cancel_action)\n\nCancels the current reader action.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/cancel\\_action\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/cancel_action \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695402450407,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Collect inputs using a Reader](https://docs.stripe.com/api/terminal/readers/collect_inputs)Preview feature\n\nInitiates an input collection flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    inputsarray of objectsRequired\n    \n    List of inputs to be collected using the Reader\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_inputs\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_OXYJvwsea7PDiDHNciXRkytb/collect_inputs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"inputs[0][type]\"=signature \\  -d \"inputs[0][custom_text][title]\"=Signature \\  -d \"inputs[0][custom_text][description]\"=\"Please sign below\" \\  -d \"inputs[0][custom_text][submit_button]\"=Submit \\  -d \"inputs[0][custom_text][skip_button]\"=Skip \\  -d \"inputs[0][required]\"=false \\  -d \"inputs[1][type]\"=selection \\  -d \"inputs[1][custom_text][title]\"=Selection \\  -d \"inputs[1][custom_text][description]\"=\"Please select one\" \\  -d \"inputs[1][required]\"=true \\  -d \"inputs[1][selection][choices][0][style]\"=primary \\  -d \"inputs[1][selection][choices][0][value]\"=choice_1 \\  -d \"inputs[1][selection][choices][1][style]\"=secondary \\  -d \"inputs[1][selection][choices][1][value]\"=choice_2 \\  -d \"inputs[2][type]\"=email \\  -d \"inputs[2][custom_text][title]\"=\"Enter your email\" \\  --data-urlencode \"inputs[2][custom_text][description]\"=\"We'll send updates on your order and occasional deals\" \\  -d \"inputs[2][custom_text][submit_button]\"=Submit \\  -d \"inputs[2][custom_text][skip_button]\"=Skip \\  -d \"inputs[2][required]\"=false\n```\n\n```\n{  \"id\": \"tmr_OXYJvwsea7PDiDHNciXRkytb\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_inputs\": {      \"inputs\": [        {          \"type\": \"signature\",          \"custom_text\": {            \"title\": \"Signature\",            \"description\": \"Please sign below\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        },        {          \"type\": \"selection\",          \"custom_text\": {            \"title\": \"Selection\",            \"description\": \"Please select one\"          },          \"required\": true,          \"selection\": {            \"choices\": [              {                \"style\": \"primary\",                \"value\": \"choice_1\"              },              {                \"style\": \"secondary\",                \"value\": \"choice_2\"              }            ],            \"value\": null          }        },        {          \"type\": \"email\",          \"custom_text\": {            \"title\": \"Enter your email\",            \"description\": \"We'll send updates on your order and occasional deals\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        }      ]    },    \"status\": \"in_progress\",    \"type\": \"collect_inputs\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Confirm a PaymentIntent on the Reader](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)Preview feature\n\nFinalizes a payment on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/confirm\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/confirm_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"confirm_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "List all Readers | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/physical_bundles",
    "markdown": "# Physical Bundles | Stripe API Reference\n\nA Physical Bundle represents the bundle of physical items - card stock, carrier letter, and envelope - that is shipped to a cardholder when you create a physical card.\n\n## [The Physical Bundle object](https://docs.stripe.com/api/issuing/physical_bundles/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   String representing the object’s type. Objects of the same type share the same value.\n    \n*   Information about the features available for this physical bundle.\n    \n*   Has the value `true` if the object exists in live mode or the value `false` if the object exists in test mode.\n    \n*   Friendly display name.\n    \n*   Whether this physical bundle can be used to create cards.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `active`<br><br>Can be used to create cards that fulfill immediately. |\n    | `inactive`<br><br>Cannot be used to create cards. |\n    | `review`<br><br>Can be used to create cards but cards will only be fulfilled when this physical bundle is activated. |\n    \n*   Whether this physical bundle is a standard Stripe offering or custom-made for you.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `custom`<br><br>Available only to you, you manage design and inventory. |\n    | `standard`<br><br>Publicly available, Stripe manages design and inventory. |\n    \n\nThe Physical Bundle object\n\n```\n{  \"id\": \"ics_NLuXJPDYSTjFON\",  \"object\": \"issuing.physical_bundle\",  \"livemode\": false,  \"name\": \"US Visa Credit White\",  \"features\": {    \"card_logo\": \"required\",    \"carrier_text\": \"optional\"  },  \"status\": \"active\",  \"type\": \"standard\"}\n```\n\n## [Retrieve a physical bundle](https://docs.stripe.com/api/issuing/physical_bundles/retrieve)\n\nRetrieves a physical bundle object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the physical bundle object.\n\nGET /v1/issuing/physical\\_bundles/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/physical_bundles/ics_NLuXJPDYSTjFON \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ics_NLuXJPDYSTjFON\",  \"object\": \"issuing.physical_bundle\",  \"livemode\": false,  \"name\": \"US Visa Credit White\",  \"features\": {    \"card_logo\": \"required\",    \"carrier_text\": \"optional\"  },  \"status\": \"active\",  \"type\": \"standard\"}\n```\n\n## [List all physical bundles](https://docs.stripe.com/api/issuing/physical_bundles/list)\n\nReturns a list of physical bundle objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Only return physical bundles with the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `active`<br><br>Can be used to create cards that fulfill immediately. |\n    | `inactive`<br><br>Cannot be used to create cards. |\n    | `review`<br><br>Can be used to create cards but cards will only be fulfilled when this physical bundle is activated. |\n    \n*   Only return physical bundles with the given type.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `custom`<br><br>Available only to you, you manage design and inventory. |\n    | `standard`<br><br>Publicly available, Stripe manages design and inventory. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` cards, starting after card `starting_after`. Each entry in the array is a separate physical bundle object. If no more cards are available, the resulting array will be empty.\n\nGET /v1/issuing/physical\\_bundles\n\n```\ncurl -G https://api.stripe.com/v1/issuing/physical_bundles \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/physical_bundles\",  \"has_more\": false,  \"data\": [    {      \"id\": \"ics_NLuXJPDYSTjFON\",      \"object\": \"issuing.physical_bundle\",      \"livemode\": false,      \"name\": \"US Visa Credit White\",      \"features\": {        \"card_logo\": \"required\",        \"carrier_text\": \"optional\"      },      \"status\": \"active\",      \"type\": \"standard\"    }    {...}    {...}  ],}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Physical Bundles | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/personalization_designs/retrieve",
    "markdown": "# Retrieve a personalization design | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fissuing%2Fpersonalization_designs%2Fretrieve)\n\nRetrieves a personalization design object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the personalization design object.\n\nGET /v1/issuing/personalization\\_designs/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/personalization_designs/ipcd_Oiw9GXcFRE81LZ \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": true,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"review\"}\n```\n\n## [List all personalization designs](https://docs.stripe.com/api/issuing/personalization_designs/list)\n\nReturns a list of personalization design objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   #### \n    \n    lookup\\_keysarray of strings\n    \n    Only return personalization designs with the given lookup keys.\n    \n*   Only return personalization designs with the given preferences.\n    \n*   Only return personalization designs with the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `active`<br><br>Personalization design can be used to create cards that fulfill immediately. |\n    | `inactive`<br><br>Personalization design cannot be used to create cards because it was deactivated. |\n    | `rejected`<br><br>Personalization design cannot be used to create cards because it was rejected by design review. |\n    | `review`<br><br>Personalization design can be used to create cards but cards will only be fulfilled once the personalization design is activated. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` cards, starting after card `starting_after`. Each entry in the array is a separate personalization design object. If no more cards are available, the resulting array will be empty.\n\nGET /v1/issuing/personalization\\_designs\n\n```\ncurl -G https://api.stripe.com/v1/issuing/personalization_designs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/personalization_designs\",  \"has_more\": false,  \"data\": [    {      \"id\": \"ipcd_Oiw9GXcFRE81LZ\",      \"object\": \"issuing.personalization_design\",      \"livemode\": true,      \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",      \"carrier_text\": null,      \"lookup_key\": \"my_card_design_lookup_key\",      \"metadata\": {},      \"name\": \"My personalization design name\",      \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",      \"preferences\": {        \"is_default\": false      },      \"rejection_reasons\": {        \"card_logo\": [],        \"carrier_text\": []      },      \"status\": \"review\"    }    {...}    {...}  ],}\n```\n\n## [Activate a testmode personalization design](https://docs.stripe.com/api/issuing/personalization_designs/activate_testmode)Test helper\n\nUpdates the `status` of the specified testmode personalization design object to `active`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the updated personalization design object.\n\nPOST /v1/test\\_helpers/issuing/personalization\\_designs/:id/activate\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/personalization_designs/ipcd_Oiw9GXcFRE81LZ/activate \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": false,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"active\"}\n```\n\n## [Deactivate a testmode personalization design](https://docs.stripe.com/api/issuing/personalization_designs/deactivate_testmode)Test helper\n\nUpdates the `status` of the specified testmode personalization design object to `inactive`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the updated personalization design object.\n\nPOST /v1/test\\_helpers/issuing/personalization\\_designs/:id/deactivate\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/issuing/personalization_designs/ipcd_Oiw9GXcFRE81LZ/deactivate \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": false,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [],    \"carrier_text\": []  },  \"status\": \"inactive\"}\n```\n\n## [Reject a testmode personalization design](https://docs.stripe.com/api/issuing/personalization_designs/reject_testmode)Test helper\n\nUpdates the `status` of the specified testmode personalization design object to `rejected`.\n\n### Parameters\n\n*   #### \n    \n    rejection\\_reasonsobjectRequired\n    \n    The reason(s) the personalization design was rejected.\n    \n\n### Returns\n\nReturns the updated personalization design object.\n\nPOST /v1/test\\_helpers/issuing/personalization\\_designs/:id/reject\n\n```\ncurl https://api.stripe.com/v1/test_helpers/issuing/personalization_designs/ipcd_Oiw9GXcFRE81LZ/reject \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"rejection_reasons[card_logo][]\"=network_name \\  -d \"rejection_reasons[card_logo][]\"=inappropriate \\  -d \"rejection_reasons[carrier_text][]\"=other\n```\n\n```\n{  \"id\": \"ipcd_Oiw9GXcFRE81LZ\",  \"object\": \"issuing.personalization_design\",  \"livemode\": false,  \"card_logo\": \"file_1LzR9L2eZvKYlo2CelTpcvKu\",  \"carrier_text\": null,  \"lookup_key\": \"my_card_design_lookup_key\",  \"metadata\": {},  \"name\": \"My personalization design name\",  \"physical_bundle\": \"ics_Oiw9ahglMfql0U\",  \"preferences\": {    \"is_default\": false  },  \"rejection_reasons\": {    \"card_logo\": [      \"network_name\",      \"inappropriate\"    ],    \"carrier_text\": [      \"other\"    ]  },  \"status\": \"rejected\"}\n```",
    "title": "Retrieve a personalization design | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/issuing/physical_bundles/retrieve",
    "markdown": "# Retrieve a physical bundle | Stripe API Reference\n\nRetrieves a physical bundle object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the physical bundle object.\n\nGET /v1/issuing/physical\\_bundles/:id\n\n```\ncurl https://api.stripe.com/v1/issuing/physical_bundles/ics_NLuXJPDYSTjFON \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"ics_NLuXJPDYSTjFON\",  \"object\": \"issuing.physical_bundle\",  \"livemode\": false,  \"name\": \"US Visa Credit White\",  \"features\": {    \"card_logo\": \"required\",    \"carrier_text\": \"optional\"  },  \"status\": \"active\",  \"type\": \"standard\"}\n```\n\n## [List all physical bundles](https://docs.stripe.com/api/issuing/physical_bundles/list)\n\nReturns a list of physical bundle objects. The objects are sorted in descending order by creation date, with the most recently created object appearing first.\n\n### Parameters\n\n*   Only return physical bundles with the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `active`<br><br>Can be used to create cards that fulfill immediately. |\n    | `inactive`<br><br>Cannot be used to create cards. |\n    | `review`<br><br>Can be used to create cards but cards will only be fulfilled when this physical bundle is activated. |\n    \n*   Only return physical bundles with the given type.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `custom`<br><br>Available only to you, you manage design and inventory. |\n    | `standard`<br><br>Publicly available, Stripe manages design and inventory. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` cards, starting after card `starting_after`. Each entry in the array is a separate physical bundle object. If no more cards are available, the resulting array will be empty.\n\nGET /v1/issuing/physical\\_bundles\n\n```\ncurl -G https://api.stripe.com/v1/issuing/physical_bundles \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/issuing/physical_bundles\",  \"has_more\": false,  \"data\": [    {      \"id\": \"ics_NLuXJPDYSTjFON\",      \"object\": \"issuing.physical_bundle\",      \"livemode\": false,      \"name\": \"US Visa Credit White\",      \"features\": {        \"card_logo\": \"required\",        \"carrier_text\": \"optional\"      },      \"status\": \"active\",      \"type\": \"standard\"    }    {...}    {...}  ],}\n```\n\n## [Reader](https://docs.stripe.com/api/terminal/readers)\n\nEndpoints\n\n[POST/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/create)[POST/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/update)[GET/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/retrieve)[GET/v1/terminal/readers](https://docs.stripe.com/api/terminal/readers/list)[DELETE/v1/terminal/readers/:id](https://docs.stripe.com/api/terminal/readers/delete)[POST/v1/terminal/readers/:id/cancel\\_action](https://docs.stripe.com/api/terminal/readers/cancel_action)[POST/v1/terminal/readers/:id/collect\\_inputs](https://docs.stripe.com/api/terminal/readers/collect_inputs)[POST/v1/terminal/readers/:id/confirm\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)[POST/v1/terminal/readers/:id/collect\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/collect_payment_method)[POST/v1/terminal/readers/:id/process\\_payment\\_intent](https://docs.stripe.com/api/terminal/readers/process_payment_intent)[POST/v1/terminal/readers/:id/process\\_setup\\_intent](https://docs.stripe.com/api/terminal/readers/process_setup_intent)[POST/v1/terminal/readers/:id/refund\\_payment](https://docs.stripe.com/api/terminal/readers/refund_payment)[POST/v1/terminal/readers/:id/set\\_reader\\_display](https://docs.stripe.com/api/terminal/readers/set_reader_display)[POST/v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method](https://docs.stripe.com/api/terminal/readers/present_payment_method)\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a physical bundle | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/cancel_action",
    "markdown": "# Cancel the current reader action\n\nCancels the current reader action.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/cancel\\_action\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/cancel_action \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695402450407,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Collect inputs using a Reader](https://docs.stripe.com/api/terminal/readers/collect_inputs)Preview feature\n\nInitiates an input collection flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    inputsarray of objectsRequired\n    \n    List of inputs to be collected using the Reader\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_inputs\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_OXYJvwsea7PDiDHNciXRkytb/collect_inputs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"inputs[0][type]\"=signature \\  -d \"inputs[0][custom_text][title]\"=Signature \\  -d \"inputs[0][custom_text][description]\"=\"Please sign below\" \\  -d \"inputs[0][custom_text][submit_button]\"=Submit \\  -d \"inputs[0][custom_text][skip_button]\"=Skip \\  -d \"inputs[0][required]\"=false \\  -d \"inputs[1][type]\"=selection \\  -d \"inputs[1][custom_text][title]\"=Selection \\  -d \"inputs[1][custom_text][description]\"=\"Please select one\" \\  -d \"inputs[1][required]\"=true \\  -d \"inputs[1][selection][choices][0][style]\"=primary \\  -d \"inputs[1][selection][choices][0][value]\"=choice_1 \\  -d \"inputs[1][selection][choices][1][style]\"=secondary \\  -d \"inputs[1][selection][choices][1][value]\"=choice_2 \\  -d \"inputs[2][type]\"=email \\  -d \"inputs[2][custom_text][title]\"=\"Enter your email\" \\  --data-urlencode \"inputs[2][custom_text][description]\"=\"We'll send updates on your order and occasional deals\" \\  -d \"inputs[2][custom_text][submit_button]\"=Submit \\  -d \"inputs[2][custom_text][skip_button]\"=Skip \\  -d \"inputs[2][required]\"=false\n```\n\n```\n{  \"id\": \"tmr_OXYJvwsea7PDiDHNciXRkytb\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_inputs\": {      \"inputs\": [        {          \"type\": \"signature\",          \"custom_text\": {            \"title\": \"Signature\",            \"description\": \"Please sign below\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        },        {          \"type\": \"selection\",          \"custom_text\": {            \"title\": \"Selection\",            \"description\": \"Please select one\"          },          \"required\": true,          \"selection\": {            \"choices\": [              {                \"style\": \"primary\",                \"value\": \"choice_1\"              },              {                \"style\": \"secondary\",                \"value\": \"choice_2\"              }            ],            \"value\": null          }        },        {          \"type\": \"email\",          \"custom_text\": {            \"title\": \"Enter your email\",            \"description\": \"We'll send updates on your order and occasional deals\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        }      ]    },    \"status\": \"in_progress\",    \"type\": \"collect_inputs\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Confirm a PaymentIntent on the Reader](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)Preview feature\n\nFinalizes a payment on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/confirm\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/confirm_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"confirm_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader and collect card details](https://docs.stripe.com/api/terminal/readers/collect_payment_method)Preview feature\n\nInitiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_payment\\_method\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/collect_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"collect_payment_method\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_payment_intent)\n\nInitiates a payment flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_3NtEKRLkdIwHu7ix3crEirSx\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_3NtEKRLkdIwHu7ix3crEirSx\"    },    \"status\": \"in_progress\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695408232226,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "Cancel the current reader action | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/delete",
    "markdown": "# Delete a Reader | Stripe API Reference\n\nDeletes a `Reader` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Reader` object that was deleted.\n\nDELETE /v1/terminal/readers/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"deleted\": true}\n```\n\n## [Cancel the current reader action](https://docs.stripe.com/api/terminal/readers/cancel_action)\n\nCancels the current reader action.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/cancel\\_action\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/cancel_action \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": null,  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695402450407,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Collect inputs using a Reader](https://docs.stripe.com/api/terminal/readers/collect_inputs)Preview feature\n\nInitiates an input collection flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    inputsarray of objectsRequired\n    \n    List of inputs to be collected using the Reader\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_inputs\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_OXYJvwsea7PDiDHNciXRkytb/collect_inputs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"inputs[0][type]\"=signature \\  -d \"inputs[0][custom_text][title]\"=Signature \\  -d \"inputs[0][custom_text][description]\"=\"Please sign below\" \\  -d \"inputs[0][custom_text][submit_button]\"=Submit \\  -d \"inputs[0][custom_text][skip_button]\"=Skip \\  -d \"inputs[0][required]\"=false \\  -d \"inputs[1][type]\"=selection \\  -d \"inputs[1][custom_text][title]\"=Selection \\  -d \"inputs[1][custom_text][description]\"=\"Please select one\" \\  -d \"inputs[1][required]\"=true \\  -d \"inputs[1][selection][choices][0][style]\"=primary \\  -d \"inputs[1][selection][choices][0][value]\"=choice_1 \\  -d \"inputs[1][selection][choices][1][style]\"=secondary \\  -d \"inputs[1][selection][choices][1][value]\"=choice_2 \\  -d \"inputs[2][type]\"=email \\  -d \"inputs[2][custom_text][title]\"=\"Enter your email\" \\  --data-urlencode \"inputs[2][custom_text][description]\"=\"We'll send updates on your order and occasional deals\" \\  -d \"inputs[2][custom_text][submit_button]\"=Submit \\  -d \"inputs[2][custom_text][skip_button]\"=Skip \\  -d \"inputs[2][required]\"=false\n```\n\n```\n{  \"id\": \"tmr_OXYJvwsea7PDiDHNciXRkytb\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_inputs\": {      \"inputs\": [        {          \"type\": \"signature\",          \"custom_text\": {            \"title\": \"Signature\",            \"description\": \"Please sign below\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        },        {          \"type\": \"selection\",          \"custom_text\": {            \"title\": \"Selection\",            \"description\": \"Please select one\"          },          \"required\": true,          \"selection\": {            \"choices\": [              {                \"style\": \"primary\",                \"value\": \"choice_1\"              },              {                \"style\": \"secondary\",                \"value\": \"choice_2\"              }            ],            \"value\": null          }        },        {          \"type\": \"email\",          \"custom_text\": {            \"title\": \"Enter your email\",            \"description\": \"We'll send updates on your order and occasional deals\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        }      ]    },    \"status\": \"in_progress\",    \"type\": \"collect_inputs\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Confirm a PaymentIntent on the Reader](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)Preview feature\n\nFinalizes a payment on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/confirm\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/confirm_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"confirm_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader and collect card details](https://docs.stripe.com/api/terminal/readers/collect_payment_method)Preview feature\n\nInitiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_payment\\_method\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/collect_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"collect_payment_method\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "Delete a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/collect_inputs",
    "markdown": "# Collect inputs using a Reader\n\n## [Collect inputs using a Reader](https://docs.stripe.com/api/terminal/readers/collect_inputs)Preview feature\n\nInitiates an input collection flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    inputsarray of objectsRequired\n    \n    List of inputs to be collected using the Reader\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_inputs\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_OXYJvwsea7PDiDHNciXRkytb/collect_inputs \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"inputs[0][type]\"=signature \\  -d \"inputs[0][custom_text][title]\"=Signature \\  -d \"inputs[0][custom_text][description]\"=\"Please sign below\" \\  -d \"inputs[0][custom_text][submit_button]\"=Submit \\  -d \"inputs[0][custom_text][skip_button]\"=Skip \\  -d \"inputs[0][required]\"=false \\  -d \"inputs[1][type]\"=selection \\  -d \"inputs[1][custom_text][title]\"=Selection \\  -d \"inputs[1][custom_text][description]\"=\"Please select one\" \\  -d \"inputs[1][required]\"=true \\  -d \"inputs[1][selection][choices][0][style]\"=primary \\  -d \"inputs[1][selection][choices][0][value]\"=choice_1 \\  -d \"inputs[1][selection][choices][1][style]\"=secondary \\  -d \"inputs[1][selection][choices][1][value]\"=choice_2 \\  -d \"inputs[2][type]\"=email \\  -d \"inputs[2][custom_text][title]\"=\"Enter your email\" \\  --data-urlencode \"inputs[2][custom_text][description]\"=\"We'll send updates on your order and occasional deals\" \\  -d \"inputs[2][custom_text][submit_button]\"=Submit \\  -d \"inputs[2][custom_text][skip_button]\"=Skip \\  -d \"inputs[2][required]\"=false\n```\n\n```\n{  \"id\": \"tmr_OXYJvwsea7PDiDHNciXRkytb\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_inputs\": {      \"inputs\": [        {          \"type\": \"signature\",          \"custom_text\": {            \"title\": \"Signature\",            \"description\": \"Please sign below\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        },        {          \"type\": \"selection\",          \"custom_text\": {            \"title\": \"Selection\",            \"description\": \"Please select one\"          },          \"required\": true,          \"selection\": {            \"choices\": [              {                \"style\": \"primary\",                \"value\": \"choice_1\"              },              {                \"style\": \"secondary\",                \"value\": \"choice_2\"              }            ],            \"value\": null          }        },        {          \"type\": \"email\",          \"custom_text\": {            \"title\": \"Enter your email\",            \"description\": \"We'll send updates on your order and occasional deals\",            \"submit_button\": \"Submit\",            \"skip_button\": \"Skip\"          },          \"required\": false,          \"value\": null        }      ]    },    \"status\": \"in_progress\",    \"type\": \"collect_inputs\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Confirm a PaymentIntent on the Reader](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)Preview feature\n\nFinalizes a payment on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/confirm\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/confirm_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"confirm_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader and collect card details](https://docs.stripe.com/api/terminal/readers/collect_payment_method)Preview feature\n\nInitiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_payment\\_method\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/collect_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"collect_payment_method\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_payment_intent)\n\nInitiates a payment flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_3NtEKRLkdIwHu7ix3crEirSx\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_3NtEKRLkdIwHu7ix3crEirSx\"    },    \"status\": \"in_progress\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695408232226,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a SetupIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\n\nInitiates a setup intent flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    customer\\_consent\\_collectedbooleanRequired\n    \n    Customer Consent Collected\n    \n*   #### \n    \n    setup\\_intentstringRequired\n    \n    SetupIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_setup\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_setup_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d customer_consent_collected=true \\  -d setup_intent=seti_1NtEXHLkdIwHu7ixcBcUmqfe\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_setup_intent\": {      \"setup_intent\": \"seti_1NtEXHLkdIwHu7ixcBcUmqfe\"    },    \"status\": \"in_progress\",    \"type\": \"process_setup_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "Collect inputs using a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/confirm_payment_intent",
    "markdown": "# Confirm a PaymentIntent on the Reader\n\n## [Confirm a PaymentIntent on the Reader](https://docs.stripe.com/api/terminal/readers/confirm_payment_intent)Preview feature\n\nFinalizes a payment on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/confirm\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/confirm_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"confirm_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader and collect card details](https://docs.stripe.com/api/terminal/readers/collect_payment_method)Preview feature\n\nInitiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_payment\\_method\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/collect_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"collect_payment_method\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a PaymentIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_payment_intent)\n\nInitiates a payment flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_3NtEKRLkdIwHu7ix3crEirSx\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_3NtEKRLkdIwHu7ix3crEirSx\"    },    \"status\": \"in_progress\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695408232226,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a SetupIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\n\nInitiates a setup intent flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    customer\\_consent\\_collectedbooleanRequired\n    \n    Customer Consent Collected\n    \n*   #### \n    \n    setup\\_intentstringRequired\n    \n    SetupIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_setup\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_setup_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d customer_consent_collected=true \\  -d setup_intent=seti_1NtEXHLkdIwHu7ixcBcUmqfe\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_setup_intent\": {      \"setup_intent\": \"seti_1NtEXHLkdIwHu7ixcBcUmqfe\"    },    \"status\": \"in_progress\",    \"type\": \"process_setup_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Refund a Charge or a PaymentIntent in-person](https://docs.stripe.com/api/terminal/readers/refund_payment)\n\nInitiates a refund on a Reader\n\n### Parameters\n\n*   A positive integer in **cents** representing how much of this charge to refund.\n    \n*   ID of the Charge to refund.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   ID of the PaymentIntent to refund.\n    \n*   #### \n    \n    refund\\_application\\_feebooleanConnect only\n    \n    Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.\n    \n*   #### \n    \n    reverse\\_transferbooleanConnect only\n    \n    Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_payment\\_configobject\n    \n\n### Returns\n\nReturns an updated `Reader` resource\n\nPOST /v1/terminal/readers/:id/refund\\_payment\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_njDFG9Z5k7y7KeQI8RmZYDYT/refund_payment \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_njDFG9Z5k7y7KeQI8RmZYDYT\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"refund_payment\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\",      \"amount\": 1000    },    \"status\": \"in_progress\",    \"type\": \"refund_payment\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```",
    "title": "Confirm a PaymentIntent on the Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/collect_payment_method",
    "markdown": "# Hand-off a PaymentIntent to a Reader and collect card details\n\n## [Hand-off a PaymentIntent to a Reader and collect card details](https://docs.stripe.com/api/terminal/readers/collect_payment_method)Preview feature\n\nInitiates a payment flow on a Reader and updates the PaymentIntent with card details before manual confirmation.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/collect\\_payment\\_method\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/collect_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"collect_payment_method\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\"    },    \"status\": \"in_progress\",    \"type\": \"collect_payment_method\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\nInitiates a payment flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_3NtEKRLkdIwHu7ix3crEirSx\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_3NtEKRLkdIwHu7ix3crEirSx\"    },    \"status\": \"in_progress\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695408232226,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a SetupIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\n\nInitiates a setup intent flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    customer\\_consent\\_collectedbooleanRequired\n    \n    Customer Consent Collected\n    \n*   #### \n    \n    setup\\_intentstringRequired\n    \n    SetupIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_setup\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_setup_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d customer_consent_collected=true \\  -d setup_intent=seti_1NtEXHLkdIwHu7ixcBcUmqfe\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_setup_intent\": {      \"setup_intent\": \"seti_1NtEXHLkdIwHu7ixcBcUmqfe\"    },    \"status\": \"in_progress\",    \"type\": \"process_setup_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Refund a Charge or a PaymentIntent in-person](https://docs.stripe.com/api/terminal/readers/refund_payment)\n\nInitiates a refund on a Reader\n\n### Parameters\n\n*   A positive integer in **cents** representing how much of this charge to refund.\n    \n*   ID of the Charge to refund.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   ID of the PaymentIntent to refund.\n    \n*   #### \n    \n    refund\\_application\\_feebooleanConnect only\n    \n    Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.\n    \n*   #### \n    \n    reverse\\_transferbooleanConnect only\n    \n    Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_payment\\_configobject\n    \n\n### Returns\n\nReturns an updated `Reader` resource\n\nPOST /v1/terminal/readers/:id/refund\\_payment\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_njDFG9Z5k7y7KeQI8RmZYDYT/refund_payment \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_njDFG9Z5k7y7KeQI8RmZYDYT\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"refund_payment\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\",      \"amount\": 1000    },    \"status\": \"in_progress\",    \"type\": \"refund_payment\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Set reader display](https://docs.stripe.com/api/terminal/readers/set_reader_display)\n\nSets reader display to show cart details.\n\n### Parameters\n\n*   Type\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/set\\_reader\\_display\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/set_reader_display \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d type=cart \\  -d \"cart[currency]\"=usd \\  -d \"cart[line_items][0][amount]\"=5100 \\  -d \"cart[line_items][0][description]\"=\"Red t-shirt\" \\  -d \"cart[line_items][0][quantity]\"=1 \\  -d \"cart[tax]\"=100 \\  -d \"cart[total]\"=5200\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"set_reader_display\": {      \"cart\": {        \"currency\": \"usd\",        \"line_items\": [          {            \"amount\": 5100,            \"description\": \"Red t-shirt\",            \"quantity\": 1          }        ],        \"tax\": 100,        \"total\": 5200      },      \"type\": \"cart\"    },    \"status\": \"in_progress\",    \"type\": \"set_reader_display\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695166525506,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```",
    "title": "Hand-off a PaymentIntent to a Reader and collect card details | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/process_payment_intent",
    "markdown": "# Hand-off a PaymentIntent to a Reader\n\nInitiates a payment flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    payment\\_intentstringRequired\n    \n    PaymentIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_payment\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_payment_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_3NtEKRLkdIwHu7ix3crEirSx\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_3NtEKRLkdIwHu7ix3crEirSx\"    },    \"status\": \"in_progress\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695408232226,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Hand-off a SetupIntent to a Reader](https://docs.stripe.com/api/terminal/readers/process_setup_intent)\n\nInitiates a setup intent flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    customer\\_consent\\_collectedbooleanRequired\n    \n    Customer Consent Collected\n    \n*   #### \n    \n    setup\\_intentstringRequired\n    \n    SetupIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_setup\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_setup_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d customer_consent_collected=true \\  -d setup_intent=seti_1NtEXHLkdIwHu7ixcBcUmqfe\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_setup_intent\": {      \"setup_intent\": \"seti_1NtEXHLkdIwHu7ixcBcUmqfe\"    },    \"status\": \"in_progress\",    \"type\": \"process_setup_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Refund a Charge or a PaymentIntent in-person](https://docs.stripe.com/api/terminal/readers/refund_payment)\n\nInitiates a refund on a Reader\n\n### Parameters\n\n*   A positive integer in **cents** representing how much of this charge to refund.\n    \n*   ID of the Charge to refund.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   ID of the PaymentIntent to refund.\n    \n*   #### \n    \n    refund\\_application\\_feebooleanConnect only\n    \n    Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.\n    \n*   #### \n    \n    reverse\\_transferbooleanConnect only\n    \n    Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_payment\\_configobject\n    \n\n### Returns\n\nReturns an updated `Reader` resource\n\nPOST /v1/terminal/readers/:id/refund\\_payment\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_njDFG9Z5k7y7KeQI8RmZYDYT/refund_payment \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_njDFG9Z5k7y7KeQI8RmZYDYT\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"refund_payment\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\",      \"amount\": 1000    },    \"status\": \"in_progress\",    \"type\": \"refund_payment\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Set reader display](https://docs.stripe.com/api/terminal/readers/set_reader_display)\n\nSets reader display to show cart details.\n\n### Parameters\n\n*   Type\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/set\\_reader\\_display\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/set_reader_display \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d type=cart \\  -d \"cart[currency]\"=usd \\  -d \"cart[line_items][0][amount]\"=5100 \\  -d \"cart[line_items][0][description]\"=\"Red t-shirt\" \\  -d \"cart[line_items][0][quantity]\"=1 \\  -d \"cart[tax]\"=100 \\  -d \"cart[total]\"=5200\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"set_reader_display\": {      \"cart\": {        \"currency\": \"usd\",        \"line_items\": [          {            \"amount\": 5100,            \"description\": \"Red t-shirt\",            \"quantity\": 1          }        ],        \"tax\": 100,        \"total\": 5200      },      \"type\": \"cart\"    },    \"status\": \"in_progress\",    \"type\": \"set_reader_display\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695166525506,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Simulate presenting a payment method](https://docs.stripe.com/api/terminal/readers/present_payment_method)Test helper\n\nPresents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.\n\n### Parameters\n\n*   Simulated data for the card\\_present payment method.\n    \n*   Simulated payment type.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/readers/tmr_gLeqlF03xvlBympS9RfZqdpF/present_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_gLeqlF03xvlBympS9RfZqdpF\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_1Gt0582eZvKYlo2CGSidzWqK\"    },    \"status\": \"succeeded\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": null,  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"status\": \"online\"}\n```",
    "title": "Hand-off a PaymentIntent to a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_skus/list",
    "markdown": "# List all Terminal Hardware SKUs\n\n## [List all Terminal Hardware SKUs](https://docs.stripe.com/api/terminal/hardware_skus/list)Preview feature\n\nList all `TerminalHardwareSKU` objects.\n\n### Parameters\n\n*   The ISO 3166-1 alpha-2 country code representing the country associated with the SKUs to be retrieved. Available country codes can be listed with the [List Country Specs](https://docs.stripe.com/api#list_country_specs) endpoint.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware SKUs. Each entry in the array is a separate SKU object.\n\nGET /v1/terminal/hardware\\_skus\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_skus \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_skus\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thsku_L5fys7HZ5o02Nc\",      \"object\": \"terminal.hardware_sku\",      \"amount\": 450,      \"country\": \"AT\",      \"currency\": \"usd\",      \"orderable\": 100,      \"product\": \"thpr_MJfof7SLvdkG6T\",      \"status\": \"available\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all Terminal Hardware SKUs | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/process_setup_intent",
    "markdown": "# Hand-off a SetupIntent to a Reader\n\nInitiates a setup intent flow on a Reader.\n\n### Parameters\n\n*   #### \n    \n    customer\\_consent\\_collectedbooleanRequired\n    \n    Customer Consent Collected\n    \n*   #### \n    \n    setup\\_intentstringRequired\n    \n    SetupIntent ID\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/process\\_setup\\_intent\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/process_setup_intent \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d customer_consent_collected=true \\  -d setup_intent=seti_1NtEXHLkdIwHu7ixcBcUmqfe\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_setup_intent\": {      \"setup_intent\": \"seti_1NtEXHLkdIwHu7ixcBcUmqfe\"    },    \"status\": \"in_progress\",    \"type\": \"process_setup_intent\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1681320543815,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Refund a Charge or a PaymentIntent in-person](https://docs.stripe.com/api/terminal/readers/refund_payment)\n\nInitiates a refund on a Reader\n\n### Parameters\n\n*   A positive integer in **cents** representing how much of this charge to refund.\n    \n*   ID of the Charge to refund.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   ID of the PaymentIntent to refund.\n    \n*   #### \n    \n    refund\\_application\\_feebooleanConnect only\n    \n    Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.\n    \n*   #### \n    \n    reverse\\_transferbooleanConnect only\n    \n    Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_payment\\_configobject\n    \n\n### Returns\n\nReturns an updated `Reader` resource\n\nPOST /v1/terminal/readers/:id/refund\\_payment\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_njDFG9Z5k7y7KeQI8RmZYDYT/refund_payment \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_njDFG9Z5k7y7KeQI8RmZYDYT\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"refund_payment\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\",      \"amount\": 1000    },    \"status\": \"in_progress\",    \"type\": \"refund_payment\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Set reader display](https://docs.stripe.com/api/terminal/readers/set_reader_display)\n\nSets reader display to show cart details.\n\n### Parameters\n\n*   Type\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/set\\_reader\\_display\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/set_reader_display \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d type=cart \\  -d \"cart[currency]\"=usd \\  -d \"cart[line_items][0][amount]\"=5100 \\  -d \"cart[line_items][0][description]\"=\"Red t-shirt\" \\  -d \"cart[line_items][0][quantity]\"=1 \\  -d \"cart[tax]\"=100 \\  -d \"cart[total]\"=5200\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"set_reader_display\": {      \"cart\": {        \"currency\": \"usd\",        \"line_items\": [          {            \"amount\": 5100,            \"description\": \"Red t-shirt\",            \"quantity\": 1          }        ],        \"tax\": 100,        \"total\": 5200      },      \"type\": \"cart\"    },    \"status\": \"in_progress\",    \"type\": \"set_reader_display\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695166525506,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Simulate presenting a payment method](https://docs.stripe.com/api/terminal/readers/present_payment_method)Test helper\n\nPresents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.\n\n### Parameters\n\n*   Simulated data for the card\\_present payment method.\n    \n*   Simulated payment type.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/readers/tmr_gLeqlF03xvlBympS9RfZqdpF/present_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_gLeqlF03xvlBympS9RfZqdpF\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_1Gt0582eZvKYlo2CGSidzWqK\"    },    \"status\": \"succeeded\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": null,  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"status\": \"online\"}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Hand-off a SetupIntent to a Reader | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/refund_payment",
    "markdown": "# Refund a Charge or a PaymentIntent in-person\n\nInitiates a refund on a Reader\n\n### Parameters\n\n*   A positive integer in **cents** representing how much of this charge to refund.\n    \n*   ID of the Charge to refund.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   ID of the PaymentIntent to refund.\n    \n*   #### \n    \n    refund\\_application\\_feebooleanConnect only\n    \n    Boolean indicating whether the application fee should be refunded when refunding this charge. If a full charge refund is given, the full application fee will be refunded. Otherwise, the application fee will be refunded in an amount proportional to the amount of the charge refunded. An application fee can be refunded only by the application that created the charge.\n    \n*   #### \n    \n    reverse\\_transferbooleanConnect only\n    \n    Boolean indicating whether the transfer should be reversed when refunding this charge. The transfer will be reversed proportionally to the amount being refunded (either the entire or partial amount). A transfer can be reversed only by the application that created the charge.\n    \n\n### More parameters\n\n*   #### \n    \n    refund\\_payment\\_configobject\n    \n\n### Returns\n\nReturns an updated `Reader` resource\n\nPOST /v1/terminal/readers/:id/refund\\_payment\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_njDFG9Z5k7y7KeQI8RmZYDYT/refund_payment \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d payment_intent=pi_1NrpbFBHO5VeT9SUiCEDMdc8\n```\n\n```\n{  \"id\": \"tmr_njDFG9Z5k7y7KeQI8RmZYDYT\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"refund_payment\": {      \"payment_intent\": \"pi_1NrpbFBHO5VeT9SUiCEDMdc8\",      \"amount\": 1000    },    \"status\": \"in_progress\",    \"type\": \"refund_payment\"  },  \"device_deploy_group\": null,  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"software\": null,  \"status\": \"online\"}\n```\n\n## [Set reader display](https://docs.stripe.com/api/terminal/readers/set_reader_display)\n\nSets reader display to show cart details.\n\n### Parameters\n\n*   Type\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/set\\_reader\\_display\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/set_reader_display \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d type=cart \\  -d \"cart[currency]\"=usd \\  -d \"cart[line_items][0][amount]\"=5100 \\  -d \"cart[line_items][0][description]\"=\"Red t-shirt\" \\  -d \"cart[line_items][0][quantity]\"=1 \\  -d \"cart[tax]\"=100 \\  -d \"cart[total]\"=5200\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"set_reader_display\": {      \"cart\": {        \"currency\": \"usd\",        \"line_items\": [          {            \"amount\": 5100,            \"description\": \"Red t-shirt\",            \"quantity\": 1          }        ],        \"tax\": 100,        \"total\": 5200      },      \"type\": \"cart\"    },    \"status\": \"in_progress\",    \"type\": \"set_reader_display\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695166525506,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Simulate presenting a payment method](https://docs.stripe.com/api/terminal/readers/present_payment_method)Test helper\n\nPresents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.\n\n### Parameters\n\n*   Simulated data for the card\\_present payment method.\n    \n*   Simulated payment type.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/readers/tmr_gLeqlF03xvlBympS9RfZqdpF/present_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_gLeqlF03xvlBympS9RfZqdpF\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_1Gt0582eZvKYlo2CGSidzWqK\"    },    \"status\": \"succeeded\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": null,  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"status\": \"online\"}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Refund a Charge or a PaymentIntent in-person | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_shipping_methods",
    "markdown": "# Terminal Hardware Shipping Method | Stripe API Reference\n\n## [Terminal Hardware Shipping Method](https://docs.stripe.com/api/terminal/hardware_shipping_methods)Preview feature\n\n## [The Terminal Hardware Shipping Method object](https://docs.stripe.com/api/terminal/hardware_shipping_methods/object)Preview feature\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   The country in which this Shipping Method is available.\n    \n*   #### \n    \n    estimated\\_delivery\\_windowobject\n    \n    The estimated delivery period containing the estimated minimum and maximum delivery dates. These dates are not guaranteed.\n    \n*   The name of the Terminal Hardware Shipping Method.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `express`<br><br>Express |\n    | `priority`<br><br>Priority |\n    | `standard`<br><br>Standard |\n    \n\n### More attributes\n\n*   #### \n    \n    unavailable\\_afternullable integer\n    \n\nThe Terminal Hardware Shipping Method object\n\n```\n{  \"id\": \"thsm_MfuTjLaPEgXMa4\",  \"object\": \"terminal.hardware_shipping_method\",  \"country\": \"US\",  \"estimated_delivery_window\": {    \"maximum_date\": \"2023-10-03\",    \"minimum_date\": \"2023-10-03\"  },  \"name\": \"standard\",  \"status\": \"available\",  \"unavailable_after\": null}\n```\n\n## [Retrieve a Terminal Hardware Shipping Method](https://docs.stripe.com/api/terminal/hardware_shipping_methods/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareShippingMethod` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareShippingMethod` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_shipping\\_methods/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_shipping_methods/thsm_MfuTjLaPEgXMa4 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thsm_MfuTjLaPEgXMa4\",  \"object\": \"terminal.hardware_shipping_method\",  \"country\": \"US\",  \"estimated_delivery_window\": {    \"maximum_date\": \"2023-10-03\",    \"minimum_date\": \"2023-10-03\"  },  \"name\": \"standard\",  \"status\": \"available\",  \"unavailable_after\": null}\n```\n\n## [List all Terminal Hardware Shipping Methods](https://docs.stripe.com/api/terminal/hardware_shipping_methods/list)Preview feature\n\nList all `TerminalHardwareShippingMethod` objects.\n\n### Parameters\n\n*   Only return Shipping Methods that have the given country. If provided, country must be a two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n    \n*   Only return Shipping Methods that have the given name.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `express`<br><br>Express |\n    | `priority`<br><br>Priority |\n    | `standard`<br><br>Standard |\n    \n*   Only return Shipping Methods that have the given status. Defaults to Available.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware shipping methods. Each entry in the array is a separate ShippingMethod object.\n\nGET /v1/terminal/hardware\\_shipping\\_methods\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_shipping_methods \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_shipping_methods\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thsm_MfuTjLaPEgXMa4\",      \"object\": \"terminal.hardware_shipping_method\",      \"country\": \"US\",      \"estimated_delivery_window\": {        \"maximum_date\": \"2023-10-03\",        \"minimum_date\": \"2023-10-03\"      },      \"name\": \"standard\",      \"status\": \"available\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Terminal Hardware Shipping Method | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_shipping_methods/retrieve",
    "markdown": "# Retrieve a Terminal Hardware Shipping Method\n\n## [Retrieve a Terminal Hardware Shipping Method](https://docs.stripe.com/api/terminal/hardware_shipping_methods/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareShippingMethod` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareShippingMethod` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_shipping\\_methods/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_shipping_methods/thsm_MfuTjLaPEgXMa4 \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thsm_MfuTjLaPEgXMa4\",  \"object\": \"terminal.hardware_shipping_method\",  \"country\": \"US\",  \"estimated_delivery_window\": {    \"maximum_date\": \"2023-10-03\",    \"minimum_date\": \"2023-10-03\"  },  \"name\": \"standard\",  \"status\": \"available\",  \"unavailable_after\": null}\n```\n\n## [List all Terminal Hardware Shipping Methods](https://docs.stripe.com/api/terminal/hardware_shipping_methods/list)Preview feature\n\nList all `TerminalHardwareShippingMethod` objects.\n\n### Parameters\n\n*   Only return Shipping Methods that have the given country. If provided, country must be a two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n    \n*   Only return Shipping Methods that have the given name.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `express`<br><br>Express |\n    | `priority`<br><br>Priority |\n    | `standard`<br><br>Standard |\n    \n*   Only return Shipping Methods that have the given status. Defaults to Available.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware shipping methods. Each entry in the array is a separate ShippingMethod object.\n\nGET /v1/terminal/hardware\\_shipping\\_methods\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_shipping_methods \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_shipping_methods\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thsm_MfuTjLaPEgXMa4\",      \"object\": \"terminal.hardware_shipping_method\",      \"country\": \"US\",      \"estimated_delivery_window\": {        \"maximum_date\": \"2023-10-03\",        \"minimum_date\": \"2023-10-03\"      },      \"name\": \"standard\",      \"status\": \"available\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a Terminal Hardware Shipping Method | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/set_reader_display",
    "markdown": "# Set reader display | Stripe API Reference\n\nSets reader display to show cart details.\n\n### Parameters\n\n*   Type\n    \n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/terminal/readers/:id/set\\_reader\\_display\n\n```\ncurl https://api.stripe.com/v1/terminal/readers/tmr_FDOt2wlRZEdpd7/set_reader_display \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d type=cart \\  -d \"cart[currency]\"=usd \\  -d \"cart[line_items][0][amount]\"=5100 \\  -d \"cart[line_items][0][description]\"=\"Red t-shirt\" \\  -d \"cart[line_items][0][quantity]\"=1 \\  -d \"cart[tax]\"=100 \\  -d \"cart[total]\"=5200\n```\n\n```\n{  \"id\": \"tmr_FDOt2wlRZEdpd7\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"set_reader_display\": {      \"cart\": {        \"currency\": \"usd\",        \"line_items\": [          {            \"amount\": 5100,            \"description\": \"Red t-shirt\",            \"quantity\": 1          }        ],        \"tax\": 100,        \"total\": 5200      },      \"type\": \"cart\"    },    \"status\": \"in_progress\",    \"type\": \"set_reader_display\"  },  \"device_sw_version\": \"\",  \"device_type\": \"simulated_wisepos_e\",  \"ip_address\": \"0.0.0.0\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": 1695166525506,  \"livemode\": false,  \"location\": \"tml_FDOtHwxAAdIJOh\",  \"metadata\": {},  \"serial_number\": \"259cd19c-b902-4730-96a1-09183be6e7f7\",  \"status\": \"online\"}\n```\n\n## [Simulate presenting a payment method](https://docs.stripe.com/api/terminal/readers/present_payment_method)Test helper\n\nPresents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.\n\n### Parameters\n\n*   Simulated data for the card\\_present payment method.\n    \n*   Simulated payment type.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/readers/tmr_gLeqlF03xvlBympS9RfZqdpF/present_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_gLeqlF03xvlBympS9RfZqdpF\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_1Gt0582eZvKYlo2CGSidzWqK\"    },    \"status\": \"succeeded\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": null,  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"status\": \"online\"}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Set reader display | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_shipping_methods/list",
    "markdown": "# List all Terminal Hardware Shipping Methods\n\n## [List all Terminal Hardware Shipping Methods](https://docs.stripe.com/api/terminal/hardware_shipping_methods/list)Preview feature\n\nList all `TerminalHardwareShippingMethod` objects.\n\n### Parameters\n\n*   Only return Shipping Methods that have the given country. If provided, country must be a two-letter country code ([ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)).\n    \n*   Only return Shipping Methods that have the given name.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `express`<br><br>Express |\n    | `priority`<br><br>Priority |\n    | `standard`<br><br>Standard |\n    \n*   Only return Shipping Methods that have the given status. Defaults to Available.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware shipping methods. Each entry in the array is a separate ShippingMethod object.\n\nGET /v1/terminal/hardware\\_shipping\\_methods\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_shipping_methods \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_shipping_methods\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thsm_MfuTjLaPEgXMa4\",      \"object\": \"terminal.hardware_shipping_method\",      \"country\": \"US\",      \"estimated_delivery_window\": {        \"maximum_date\": \"2023-10-03\",        \"minimum_date\": \"2023-10-03\"      },      \"name\": \"standard\",      \"status\": \"available\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all Terminal Hardware Shipping Methods | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/readers/present_payment_method",
    "markdown": "# Simulate presenting a payment method\n\n## [Simulate presenting a payment method](https://docs.stripe.com/api/terminal/readers/present_payment_method)Test helper\n\nPresents a payment method on a simulated reader. Can be used to simulate accepting a payment, saving a card or refunding a transaction.\n\n### Parameters\n\n*   Simulated data for the card\\_present payment method.\n    \n*   Simulated payment type.\n    \n\n### More parameters\n\n### Returns\n\nReturns an updated `Reader` resource.\n\nPOST /v1/test\\_helpers/terminal/readers/:id/present\\_payment\\_method\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/readers/tmr_gLeqlF03xvlBympS9RfZqdpF/present_payment_method \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmr_gLeqlF03xvlBympS9RfZqdpF\",  \"object\": \"terminal.reader\",  \"action\": {    \"failure_code\": null,    \"failure_message\": null,    \"process_payment_intent\": {      \"payment_intent\": \"pi_1Gt0582eZvKYlo2CGSidzWqK\"    },    \"status\": \"succeeded\",    \"type\": \"process_payment_intent\"  },  \"device_sw_version\": null,  \"device_type\": \"bbpos_wisepos_e\",  \"ip_address\": \"192.168.2.2\",  \"label\": \"Blue Rabbit\",  \"last_seen_at\": null,  \"livemode\": false,  \"location\": null,  \"metadata\": {},  \"serial_number\": \"123-456-789\",  \"status\": \"online\"}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Simulate presenting a payment method | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/configuration/create",
    "markdown": "# Create a Configuration | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Fconfiguration%2Fcreate)\n\nCreates a new `Configuration` object.\n\n### Parameters\n\n*   An object containing device type specific settings for BBPOS WisePOS E readers\n    \n*   An object containing device type specific settings for Stripe S700 readers\n    \n*   Tipping configurations for readers supporting on-reader tips\n    \n*   An object containing device type specific settings for Verifone P400 readers\n    \n\n### More parameters\n\n*   #### \n    \n    reboot\\_windowobjectPreview feature\n    \n\n### Returns\n\nReturns a `Configuration` object if creation succeeds.\n\nPOST /v1/terminal/configurations\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/configurations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [Update a Configuration](https://docs.stripe.com/api/terminal/configuration/update)\n\nUpdates a new `Configuration` object.\n\n### Parameters\n\n*   An object containing device type specific settings for BBPOS WisePOS E readers\n    \n*   An object containing device type specific settings for Stripe S700 readers\n    \n*   Tipping configurations for readers supporting on-reader tips\n    \n*   An object containing device type specific settings for Verifone P400 readers\n    \n\n### More parameters\n\n*   #### \n    \n    reboot\\_windowobjectPreview feature\n    \n\n### Returns\n\nReturns a `Configuration` object if the update succeeds.\n\nPOST /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"bbpos_wisepos_e[splashscreen]\"=file_1NtDiHBHO5VeT9SUjuWGkEAN\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"bbpos_wisepos_e\": {    \"splashscreen\": \"file_1NtDiPBHO5VeT9SUvD7GHCi0\"  },  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [Retrieve a Configuration](https://docs.stripe.com/api/terminal/configuration/retrieve)\n\nRetrieves a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Configuration` object if a valid identifier was provided.\n\nGET /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [List all Configurations](https://docs.stripe.com/api/terminal/configuration/list)\n\nReturns a list of `Configuration` objects.\n\n### Parameters\n\n*   #### \n    \n    is\\_account\\_defaultboolean\n    \n    if present, only return the account default or non-default configurations.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` configurations, starting after configurations `configurations`. Each entry in the array is a separate Terminal `configurations` object. If no more configurations are available, the resulting array will be empty.\n\nGET /v1/terminal/configurations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/configurations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/configurations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmc_FQqbaQCiy0m1xc\",      \"object\": \"terminal.configuration\",      \"is_account_default\": false,      \"livemode\": false    }    {...}    {...}  ],}\n```\n\n## [Delete a Configuration](https://docs.stripe.com/api/terminal/configuration/delete)\n\nDeletes a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Configuration` object that was deleted.\n\nDELETE /v1/terminal/configurations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"deleted\": true}\n```",
    "title": "Create a Configuration | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/configuration",
    "markdown": "# Configuration | Stripe API Reference\n\n*   API Reference\n*   [Docs](https://docs.stripe.com/)\n*   [Support](https://support.stripe.com/)\n*   [Sign in →](https://dashboard.stripe.com/login?redirect=https%3A%2F%2Fdocs.stripe.com%2Fapi%2Fterminal%2Fconfiguration)\n\n## [The Configuration object](https://docs.stripe.com/api/terminal/configuration/object)\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   #### \n    \n    bbpos\\_wisepos\\_enullable object\n    \n    An object containing device type specific settings for BBPOS WisePOS E\n    \n*   #### \n    \n    is\\_account\\_defaultnullable boolean\n    \n    Whether this Configuration is the default for your account\n    \n*   #### \n    \n    stripe\\_s700nullable object\n    \n    An object containing device type specific settings for Stripe S700\n    \n*   On-reader tipping settings\n    \n*   #### \n    \n    verifone\\_p400nullable object\n    \n    An object containing device type specific settings for Verifone P400\n    \n\n### More attributes\n\n*   #### \n    \n    reboot\\_windownullable objectPreview feature\n    \n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [Create a Configuration](https://docs.stripe.com/api/terminal/configuration/create)\n\nCreates a new `Configuration` object.\n\n### Parameters\n\n*   An object containing device type specific settings for BBPOS WisePOS E readers\n    \n*   An object containing device type specific settings for Stripe S700 readers\n    \n*   Tipping configurations for readers supporting on-reader tips\n    \n*   An object containing device type specific settings for Verifone P400 readers\n    \n\n### More parameters\n\n*   #### \n    \n    reboot\\_windowobjectPreview feature\n    \n\n### Returns\n\nReturns a `Configuration` object if creation succeeds.\n\nPOST /v1/terminal/configurations\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/configurations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [Update a Configuration](https://docs.stripe.com/api/terminal/configuration/update)\n\nUpdates a new `Configuration` object.\n\n### Parameters\n\n*   An object containing device type specific settings for BBPOS WisePOS E readers\n    \n*   An object containing device type specific settings for Stripe S700 readers\n    \n*   Tipping configurations for readers supporting on-reader tips\n    \n*   An object containing device type specific settings for Verifone P400 readers\n    \n\n### More parameters\n\n*   #### \n    \n    reboot\\_windowobjectPreview feature\n    \n\n### Returns\n\nReturns a `Configuration` object if the update succeeds.\n\nPOST /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"bbpos_wisepos_e[splashscreen]\"=file_1NtDiHBHO5VeT9SUjuWGkEAN\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"bbpos_wisepos_e\": {    \"splashscreen\": \"file_1NtDiPBHO5VeT9SUvD7GHCi0\"  },  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [Retrieve a Configuration](https://docs.stripe.com/api/terminal/configuration/retrieve)\n\nRetrieves a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Configuration` object if a valid identifier was provided.\n\nGET /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```",
    "title": "Configuration | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders",
    "markdown": "# Terminal Hardware Order | Stripe API Reference\n\n## [Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders)Preview feature\n\n## [The TerminalHardwareOrder object](https://docs.stripe.com/api/terminal/hardware_orders/object)Preview feature\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   A positive integer in the [smallest currency unit](https://stripe.com/docs/currencies#zero-decimal). Represents the total cost for the order.\n    \n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objects\n    \n    An array of line items ordered.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n    \n*   One of `monthly_invoice`, `payment_intent`, or `none`.\n    \n*   Shipping address for the order.\n    \n\n*   The status of the terminal hardware order.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `canceled`<br><br>Order was canceled. Please create a new order to receive these items. |\n    | `delivered`<br><br>Order has been delivered! |\n    | `pending`<br><br>Order has been received and can still be canceled. |\n    | `ready_to_ship`<br><br>Order has been confirmed and is pending shipment. It cannot be canceled. |\n    | `shipped`<br><br>Order has been shipped, and can no longer be canceled. |\n    | `undeliverable`<br><br>One or more of the order’s items could not be delivered. |\n    \n\n### More attributes\n\n*   #### \n    \n    shipment\\_trackingarray of objects\n    \n\n*   #### \n    \n    total\\_tax\\_amountsarray of objects\n    \n*   #### \n    \n    updatednullable timestamp\n    \n\nThe TerminalHardwareOrder object\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Create a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/create)Preview feature\n\nCreates a new `TerminalHardwareOrder` object.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object if creation succeeds.\n\nPOST /v1/terminal/hardware\\_orders\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_orders \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2 \\  -d payment_type=monthly_invoice \\  -d \"shipping[address][line1]\"=\"1234 Main St.\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d \"shipping[name]\"=\"Jenny Rosen\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Retrieve a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareOrder` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_orders/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [List all Terminal Hardware Orders](https://docs.stripe.com/api/terminal/hardware_orders/list)Preview feature\n\nList all `TerminalHardwareOrder` objects.\n\n### Parameters\n\n*   Only return orders that have the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `canceled`<br><br>Order was canceled. Please create a new order to receive these items. |\n    | `delivered`<br><br>Order has been delivered! |\n    | `pending`<br><br>Order has been received and can still be canceled. |\n    | `ready_to_ship`<br><br>Order has been confirmed and is pending shipment. It cannot be canceled. |\n    | `shipped`<br><br>Order has been shipped, and can no longer be canceled. |\n    | `undeliverable`<br><br>One or more of the order’s items could not be delivered. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware orders. Each entry in the array is a separate order object.\n\nGET /v1/terminal/hardware\\_orders\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_orders\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",      \"object\": \"terminal.hardware_order\",      \"amount\": 13602,      \"created\": 1692995962,      \"currency\": \"usd\",      \"hardware_order_items\": [        {          \"amount\": 11800,          \"currency\": \"usd\",          \"quantity\": 2,          \"terminal_hardware_sku\": {            \"id\": \"thsku_L5fys7HZ5o02Nc\",            \"amount\": 450,            \"country\": \"AT\",            \"currency\": \"eur\",            \"product\": \"thpr_MJfof7SLvdkG6T\"          }        }      ],      \"livemode\": true,      \"metadata\": {},      \"payment_type\": \"monthly_invoice\",      \"po_number\": null,      \"shipment_tracking\": [],      \"shipping\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"1234 Main Street\",          \"line2\": \"\",          \"postal_code\": \"94111\",          \"state\": \"CA\"        },        \"amount\": 800,        \"company\": \"Rocket Rides\",        \"currency\": \"usd\",        \"email\": \"test@example.com\",        \"name\": \"Jenny Rosen\",        \"phone\": \"15555555555\"      },      \"shipping_method\": \"standard\",      \"status\": \"pending\",      \"tax\": 1002,      \"total_tax_amounts\": [        {          \"amount\": 1002,          \"inclusive\": false,          \"rate\": {            \"display_name\": \"Sales Tax\",            \"jurisdiction\": \"LOS ANGELES\",            \"percentage\": 8.25          }        }      ],      \"updated\": null    }    {...}    {...}  ],}\n```",
    "title": "Terminal Hardware Order | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/configuration/update",
    "markdown": "# Update a Configuration | Stripe API Reference\n\nUpdates a new `Configuration` object.\n\n### Parameters\n\n*   An object containing device type specific settings for BBPOS WisePOS E readers\n    \n*   An object containing device type specific settings for Stripe S700 readers\n    \n*   Tipping configurations for readers supporting on-reader tips\n    \n*   An object containing device type specific settings for Verifone P400 readers\n    \n\n### More parameters\n\n*   #### \n    \n    reboot\\_windowobjectPreview feature\n    \n\n### Returns\n\nReturns a `Configuration` object if the update succeeds.\n\nPOST /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"bbpos_wisepos_e[splashscreen]\"=file_1NtDiHBHO5VeT9SUjuWGkEAN\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"bbpos_wisepos_e\": {    \"splashscreen\": \"file_1NtDiPBHO5VeT9SUvD7GHCi0\"  },  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [Retrieve a Configuration](https://docs.stripe.com/api/terminal/configuration/retrieve)\n\nRetrieves a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Configuration` object if a valid identifier was provided.\n\nGET /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [List all Configurations](https://docs.stripe.com/api/terminal/configuration/list)\n\nReturns a list of `Configuration` objects.\n\n### Parameters\n\n*   #### \n    \n    is\\_account\\_defaultboolean\n    \n    if present, only return the account default or non-default configurations.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` configurations, starting after configurations `configurations`. Each entry in the array is a separate Terminal `configurations` object. If no more configurations are available, the resulting array will be empty.\n\nGET /v1/terminal/configurations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/configurations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/configurations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmc_FQqbaQCiy0m1xc\",      \"object\": \"terminal.configuration\",      \"is_account_default\": false,      \"livemode\": false    }    {...}    {...}  ],}\n```\n\n## [Delete a Configuration](https://docs.stripe.com/api/terminal/configuration/delete)\n\nDeletes a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Configuration` object that was deleted.\n\nDELETE /v1/terminal/configurations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"deleted\": true}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update a Configuration | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/create",
    "markdown": "# Create a Terminal Hardware Order\n\n## [Create a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/create)Preview feature\n\nCreates a new `TerminalHardwareOrder` object.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object if creation succeeds.\n\nPOST /v1/terminal/hardware\\_orders\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_orders \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2 \\  -d payment_type=monthly_invoice \\  -d \"shipping[address][line1]\"=\"1234 Main St.\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d \"shipping[name]\"=\"Jenny Rosen\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Retrieve a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareOrder` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_orders/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [List all Terminal Hardware Orders](https://docs.stripe.com/api/terminal/hardware_orders/list)Preview feature\n\nList all `TerminalHardwareOrder` objects.\n\n### Parameters\n\n*   Only return orders that have the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `canceled`<br><br>Order was canceled. Please create a new order to receive these items. |\n    | `delivered`<br><br>Order has been delivered! |\n    | `pending`<br><br>Order has been received and can still be canceled. |\n    | `ready_to_ship`<br><br>Order has been confirmed and is pending shipment. It cannot be canceled. |\n    | `shipped`<br><br>Order has been shipped, and can no longer be canceled. |\n    | `undeliverable`<br><br>One or more of the order’s items could not be delivered. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware orders. Each entry in the array is a separate order object.\n\nGET /v1/terminal/hardware\\_orders\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_orders\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",      \"object\": \"terminal.hardware_order\",      \"amount\": 13602,      \"created\": 1692995962,      \"currency\": \"usd\",      \"hardware_order_items\": [        {          \"amount\": 11800,          \"currency\": \"usd\",          \"quantity\": 2,          \"terminal_hardware_sku\": {            \"id\": \"thsku_L5fys7HZ5o02Nc\",            \"amount\": 450,            \"country\": \"AT\",            \"currency\": \"eur\",            \"product\": \"thpr_MJfof7SLvdkG6T\"          }        }      ],      \"livemode\": true,      \"metadata\": {},      \"payment_type\": \"monthly_invoice\",      \"po_number\": null,      \"shipment_tracking\": [],      \"shipping\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"1234 Main Street\",          \"line2\": \"\",          \"postal_code\": \"94111\",          \"state\": \"CA\"        },        \"amount\": 800,        \"company\": \"Rocket Rides\",        \"currency\": \"usd\",        \"email\": \"test@example.com\",        \"name\": \"Jenny Rosen\",        \"phone\": \"15555555555\"      },      \"shipping_method\": \"standard\",      \"status\": \"pending\",      \"tax\": 1002,      \"total_tax_amounts\": [        {          \"amount\": 1002,          \"inclusive\": false,          \"rate\": {            \"display_name\": \"Sales Tax\",            \"jurisdiction\": \"LOS ANGELES\",            \"percentage\": 8.25          }        }      ],      \"updated\": null    }    {...}    {...}  ],}\n```\n\n## [Cancel a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/cancel)Preview feature\n\nSets the status of a terminal hardware order from `pending` to `canceled`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `TerminalHardwareOrder` object.\n\nPOST /v1/terminal/hardware\\_orders/:id/cancel\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"canceled\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Preview a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/preview)Preview feature\n\nGet a preview of a TerminalHardwareOrder without creating it.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object (that has not been created) if the preview succeeds.\n\nGET /v1/terminal/hardware\\_orders/preview\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders/preview \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Main Street\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[company]\"=\"Rocket Rides\" \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d shipping_method=thsm_MfuTjLaPEgXMa4 \\  -d payment_type=monthly_invoice \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2\n```\n\n```\n{  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ]}\n```",
    "title": "Create a Terminal Hardware Order | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/retrieve",
    "markdown": "# Retrieve a Terminal Hardware Order\n\n## [Retrieve a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareOrder` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_orders/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [List all Terminal Hardware Orders](https://docs.stripe.com/api/terminal/hardware_orders/list)Preview feature\n\nList all `TerminalHardwareOrder` objects.\n\n### Parameters\n\n*   Only return orders that have the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `canceled`<br><br>Order was canceled. Please create a new order to receive these items. |\n    | `delivered`<br><br>Order has been delivered! |\n    | `pending`<br><br>Order has been received and can still be canceled. |\n    | `ready_to_ship`<br><br>Order has been confirmed and is pending shipment. It cannot be canceled. |\n    | `shipped`<br><br>Order has been shipped, and can no longer be canceled. |\n    | `undeliverable`<br><br>One or more of the order’s items could not be delivered. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware orders. Each entry in the array is a separate order object.\n\nGET /v1/terminal/hardware\\_orders\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_orders\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",      \"object\": \"terminal.hardware_order\",      \"amount\": 13602,      \"created\": 1692995962,      \"currency\": \"usd\",      \"hardware_order_items\": [        {          \"amount\": 11800,          \"currency\": \"usd\",          \"quantity\": 2,          \"terminal_hardware_sku\": {            \"id\": \"thsku_L5fys7HZ5o02Nc\",            \"amount\": 450,            \"country\": \"AT\",            \"currency\": \"eur\",            \"product\": \"thpr_MJfof7SLvdkG6T\"          }        }      ],      \"livemode\": true,      \"metadata\": {},      \"payment_type\": \"monthly_invoice\",      \"po_number\": null,      \"shipment_tracking\": [],      \"shipping\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"1234 Main Street\",          \"line2\": \"\",          \"postal_code\": \"94111\",          \"state\": \"CA\"        },        \"amount\": 800,        \"company\": \"Rocket Rides\",        \"currency\": \"usd\",        \"email\": \"test@example.com\",        \"name\": \"Jenny Rosen\",        \"phone\": \"15555555555\"      },      \"shipping_method\": \"standard\",      \"status\": \"pending\",      \"tax\": 1002,      \"total_tax_amounts\": [        {          \"amount\": 1002,          \"inclusive\": false,          \"rate\": {            \"display_name\": \"Sales Tax\",            \"jurisdiction\": \"LOS ANGELES\",            \"percentage\": 8.25          }        }      ],      \"updated\": null    }    {...}    {...}  ],}\n```\n\n## [Cancel a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/cancel)Preview feature\n\nSets the status of a terminal hardware order from `pending` to `canceled`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `TerminalHardwareOrder` object.\n\nPOST /v1/terminal/hardware\\_orders/:id/cancel\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"canceled\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Preview a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/preview)Preview feature\n\nGet a preview of a TerminalHardwareOrder without creating it.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object (that has not been created) if the preview succeeds.\n\nGET /v1/terminal/hardware\\_orders/preview\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders/preview \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Main Street\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[company]\"=\"Rocket Rides\" \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d shipping_method=thsm_MfuTjLaPEgXMa4 \\  -d payment_type=monthly_invoice \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2\n```\n\n```\n{  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ]}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Ready To Ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as ready\\_to\\_ship.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_ready\\_to\\_ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_ready_to_ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"ready_to_ship\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```",
    "title": "Retrieve a Terminal Hardware Order | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/configuration/retrieve",
    "markdown": "# Retrieve a Configuration | Stripe API Reference\n\nRetrieves a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `Configuration` object if a valid identifier was provided.\n\nGET /v1/terminal/configurations/:id\n\n```\ncurl https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"is_account_default\": false,  \"livemode\": false}\n```\n\n## [List all Configurations](https://docs.stripe.com/api/terminal/configuration/list)\n\nReturns a list of `Configuration` objects.\n\n### Parameters\n\n*   #### \n    \n    is\\_account\\_defaultboolean\n    \n    if present, only return the account default or non-default configurations.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` configurations, starting after configurations `configurations`. Each entry in the array is a separate Terminal `configurations` object. If no more configurations are available, the resulting array will be empty.\n\nGET /v1/terminal/configurations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/configurations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/configurations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmc_FQqbaQCiy0m1xc\",      \"object\": \"terminal.configuration\",      \"is_account_default\": false,      \"livemode\": false    }    {...}    {...}  ],}\n```\n\n## [Delete a Configuration](https://docs.stripe.com/api/terminal/configuration/delete)\n\nDeletes a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Configuration` object that was deleted.\n\nDELETE /v1/terminal/configurations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"deleted\": true}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a Configuration | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/configuration/list",
    "markdown": "# List all Configurations | Stripe API Reference\n\nReturns a list of `Configuration` objects.\n\n### Parameters\n\n*   #### \n    \n    is\\_account\\_defaultboolean\n    \n    if present, only return the account default or non-default configurations.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` configurations, starting after configurations `configurations`. Each entry in the array is a separate Terminal `configurations` object. If no more configurations are available, the resulting array will be empty.\n\nGET /v1/terminal/configurations\n\n```\ncurl -G https://api.stripe.com/v1/terminal/configurations \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/configurations\",  \"has_more\": false,  \"data\": [    {      \"id\": \"tmc_FQqbaQCiy0m1xc\",      \"object\": \"terminal.configuration\",      \"is_account_default\": false,      \"livemode\": false    }    {...}    {...}  ],}\n```\n\n## [Delete a Configuration](https://docs.stripe.com/api/terminal/configuration/delete)\n\nDeletes a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Configuration` object that was deleted.\n\nDELETE /v1/terminal/configurations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"deleted\": true}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all Configurations | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/retrieve",
    "markdown": "# Retrieve an OutboundTransfer | Stripe API Reference\n\nRetrieves the details of an existing OutboundTransfer by passing the unique OutboundTransfer ID from either the OutboundTransfer creation request or OutboundTransfer list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an OutboundTransfer object if a valid identifier was provided. Otherwise, returns an error.\n\nGET /v1/treasury/outbound\\_transfers/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 500,  \"cancelable\": true,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1234567890\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYCCwVOvUY6NpO8ArWrjrz6Hxk3d8tQ4d_RvOqMTOeq6js5eE94-f-7DwBzjjD1wxIUhOyub1KFYH8QKxj9oA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"processing\",  \"status_transitions\": {    \"canceled_at\": null,    \"failed_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [List all OutboundTransfers](https://docs.stripe.com/api/treasury/outbound_transfers/list)\n\nReturns a list of OutboundTransfers sent from the specified FinancialAccount.\n\n### Parameters\n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    Returns objects associated with this FinancialAccount.\n    \n*   Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` OutboundTransfers, starting after OutboundTransfer `starting_after`. Each entry in the array is a separate OutboundTransfer object. If no more OutboundTransfers are available, the resulting array is empty.\n\nGET /v1/treasury/outbound\\_transfers\n\n```\ncurl -G https://api.stripe.com/v1/treasury/outbound_transfers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3 \\  -d financial_account=fa_1Mtaaz2eZvKYlo2CUf56sIA1\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/outbound_transfers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",      \"object\": \"treasury.outbound_transfer\",      \"amount\": 500,      \"cancelable\": true,      \"created\": 1680717489,      \"currency\": \"usd\",      \"description\": \"OutboundTransfer to my external bank account\",      \"destination_payment_method\": \"pm_1234567890\",      \"destination_payment_method_details\": {        \"billing_details\": {          \"address\": {            \"city\": \"San Francisco\",            \"country\": \"US\",            \"line1\": \"1234 Fake Street\",            \"line2\": null,            \"postal_code\": \"94102\",            \"state\": \"CA\"          },          \"email\": null,          \"name\": \"Jane Austen\"        },        \"type\": \"us_bank_account\",        \"us_bank_account\": {          \"account_holder_type\": \"company\",          \"account_type\": \"checking\",          \"bank_name\": \"STRIPE TEST BANK\",          \"fingerprint\": \"AP24Iso0btGp4N10\",          \"last4\": \"6789\",          \"network\": \"ach\",          \"routing_number\": \"110000000\"        }      },      \"expected_arrival_date\": 1680825600,      \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",      \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYCCwVOvUY6NpO8ArWrjrz6Hxk3d8tQ4d_RvOqMTOeq6js5eE94-f-7DwBzjjD1wxIUhOyub1KFYH8QKxj9oA\",      \"livemode\": false,      \"metadata\": {},      \"returned_details\": null,      \"statement_descriptor\": \"transfer\",      \"status\": \"processing\",      \"status_transitions\": {        \"canceled_at\": null,        \"failed_at\": null,        \"posted_at\": null,        \"returned_at\": null      },      \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"    }    {...}    {...}  ],}\n```\n\n## [Cancel an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/cancel)\n\nAn OutboundTransfer can be canceled if the funds have not yet been paid out.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object if the cancellation succeeded. Returns an error if the object has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_transfers/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgbFx5vTNec6NpPKphE93zYcPDgqrHcZhLW_fmKqG9Mu9HUNa_164u93bqkgnPNnYtd3_5Rv_F3YISrR2qg3FQ\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680717489,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Fail an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundTransfer to the `failed` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the failed state. Returns an error if the OutboundTransfer has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYw-nE9MNI6NpOJppCfj7fBzxZ9vepfiOLlViIJsILsSUiUv3teC30OLgOpgL7B0UBbYYtz0t7gi1a1WHo4Ew\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680717489,    \"canceled_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Post an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)Test helper\n\nTransitions a test mode created OutboundTransfer to the `posted` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the posted state. Returns an error if the OutboundTransfer has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```",
    "title": "Retrieve an OutboundTransfer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/list",
    "markdown": "# List all Terminal Hardware Orders\n\n## [List all Terminal Hardware Orders](https://docs.stripe.com/api/terminal/hardware_orders/list)Preview feature\n\nList all `TerminalHardwareOrder` objects.\n\n### Parameters\n\n*   Only return orders that have the given status.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `canceled`<br><br>Order was canceled. Please create a new order to receive these items. |\n    | `delivered`<br><br>Order has been delivered! |\n    | `pending`<br><br>Order has been received and can still be canceled. |\n    | `ready_to_ship`<br><br>Order has been confirmed and is pending shipment. It cannot be canceled. |\n    | `shipped`<br><br>Order has been shipped, and can no longer be canceled. |\n    | `undeliverable`<br><br>One or more of the order’s items could not be delivered. |\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware orders. Each entry in the array is a separate order object.\n\nGET /v1/terminal/hardware\\_orders\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_orders\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",      \"object\": \"terminal.hardware_order\",      \"amount\": 13602,      \"created\": 1692995962,      \"currency\": \"usd\",      \"hardware_order_items\": [        {          \"amount\": 11800,          \"currency\": \"usd\",          \"quantity\": 2,          \"terminal_hardware_sku\": {            \"id\": \"thsku_L5fys7HZ5o02Nc\",            \"amount\": 450,            \"country\": \"AT\",            \"currency\": \"eur\",            \"product\": \"thpr_MJfof7SLvdkG6T\"          }        }      ],      \"livemode\": true,      \"metadata\": {},      \"payment_type\": \"monthly_invoice\",      \"po_number\": null,      \"shipment_tracking\": [],      \"shipping\": {        \"address\": {          \"city\": \"San Francisco\",          \"country\": \"US\",          \"line1\": \"1234 Main Street\",          \"line2\": \"\",          \"postal_code\": \"94111\",          \"state\": \"CA\"        },        \"amount\": 800,        \"company\": \"Rocket Rides\",        \"currency\": \"usd\",        \"email\": \"test@example.com\",        \"name\": \"Jenny Rosen\",        \"phone\": \"15555555555\"      },      \"shipping_method\": \"standard\",      \"status\": \"pending\",      \"tax\": 1002,      \"total_tax_amounts\": [        {          \"amount\": 1002,          \"inclusive\": false,          \"rate\": {            \"display_name\": \"Sales Tax\",            \"jurisdiction\": \"LOS ANGELES\",            \"percentage\": 8.25          }        }      ],      \"updated\": null    }    {...}    {...}  ],}\n```\n\n## [Cancel a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/cancel)Preview feature\n\nSets the status of a terminal hardware order from `pending` to `canceled`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `TerminalHardwareOrder` object.\n\nPOST /v1/terminal/hardware\\_orders/:id/cancel\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"canceled\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Preview a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/preview)Preview feature\n\nGet a preview of a TerminalHardwareOrder without creating it.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object (that has not been created) if the preview succeeds.\n\nGET /v1/terminal/hardware\\_orders/preview\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders/preview \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Main Street\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[company]\"=\"Rocket Rides\" \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d shipping_method=thsm_MfuTjLaPEgXMa4 \\  -d payment_type=monthly_invoice \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2\n```\n\n```\n{  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ]}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Ready To Ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as ready\\_to\\_ship.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_ready\\_to\\_ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_ready_to_ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"ready_to_ship\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Delivered](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as delivered.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/deliver\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/deliver \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"delivered\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```",
    "title": "List all Terminal Hardware Orders | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/configuration/delete",
    "markdown": "# Delete a Configuration | Stripe API Reference\n\nDeletes a `Configuration` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `Configuration` object that was deleted.\n\nDELETE /v1/terminal/configurations/:id\n\n```\ncurl -X DELETE https://api.stripe.com/v1/terminal/configurations/tmc_FQqbaQCiy0m1xc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"tmc_FQqbaQCiy0m1xc\",  \"object\": \"terminal.configuration\",  \"deleted\": true}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Delete a Configuration | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/list",
    "markdown": "# List all OutboundTransfers | Stripe API Reference\n\nReturns a list of OutboundTransfers sent from the specified FinancialAccount.\n\n### Parameters\n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    Returns objects associated with this FinancialAccount.\n    \n*   Only return OutboundTransfers that have the given status: `processing`, `canceled`, `failed`, `posted`, or `returned`.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` OutboundTransfers, starting after OutboundTransfer `starting_after`. Each entry in the array is a separate OutboundTransfer object. If no more OutboundTransfers are available, the resulting array is empty.\n\nGET /v1/treasury/outbound\\_transfers\n\n```\ncurl -G https://api.stripe.com/v1/treasury/outbound_transfers \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3 \\  -d financial_account=fa_1Mtaaz2eZvKYlo2CUf56sIA1\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/outbound_transfers\",  \"has_more\": false,  \"data\": [    {      \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",      \"object\": \"treasury.outbound_transfer\",      \"amount\": 500,      \"cancelable\": true,      \"created\": 1680717489,      \"currency\": \"usd\",      \"description\": \"OutboundTransfer to my external bank account\",      \"destination_payment_method\": \"pm_1234567890\",      \"destination_payment_method_details\": {        \"billing_details\": {          \"address\": {            \"city\": \"San Francisco\",            \"country\": \"US\",            \"line1\": \"1234 Fake Street\",            \"line2\": null,            \"postal_code\": \"94102\",            \"state\": \"CA\"          },          \"email\": null,          \"name\": \"Jane Austen\"        },        \"type\": \"us_bank_account\",        \"us_bank_account\": {          \"account_holder_type\": \"company\",          \"account_type\": \"checking\",          \"bank_name\": \"STRIPE TEST BANK\",          \"fingerprint\": \"AP24Iso0btGp4N10\",          \"last4\": \"6789\",          \"network\": \"ach\",          \"routing_number\": \"110000000\"        }      },      \"expected_arrival_date\": 1680825600,      \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",      \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYCCwVOvUY6NpO8ArWrjrz6Hxk3d8tQ4d_RvOqMTOeq6js5eE94-f-7DwBzjjD1wxIUhOyub1KFYH8QKxj9oA\",      \"livemode\": false,      \"metadata\": {},      \"returned_details\": null,      \"statement_descriptor\": \"transfer\",      \"status\": \"processing\",      \"status_transitions\": {        \"canceled_at\": null,        \"failed_at\": null,        \"posted_at\": null,        \"returned_at\": null      },      \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"    }    {...}    {...}  ],}\n```\n\n## [Cancel an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/cancel)\n\nAn OutboundTransfer can be canceled if the funds have not yet been paid out.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object if the cancellation succeeded. Returns an error if the object has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_transfers/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgbFx5vTNec6NpPKphE93zYcPDgqrHcZhLW_fmKqG9Mu9HUNa_164u93bqkgnPNnYtd3_5Rv_F3YISrR2qg3FQ\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680717489,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Fail an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundTransfer to the `failed` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the failed state. Returns an error if the OutboundTransfer has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYw-nE9MNI6NpOJppCfj7fBzxZ9vepfiOLlViIJsILsSUiUv3teC30OLgOpgL7B0UBbYYtz0t7gi1a1WHo4Ew\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680717489,    \"canceled_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Post an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)Test helper\n\nTransitions a test mode created OutboundTransfer to the `posted` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the posted state. Returns an error if the OutboundTransfer has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Return an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)Test helper\n\nTransitions a test mode created OutboundTransfer to the `returned` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\n*   Details about a returned OutboundTransfer.\n    \n\n### Returns\n\nReturns the OutboundTransfer object in the returned state. Returns an error if the OutboundTransfer has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYdpKbb3Ec6NpO9f9jLUpJTCJGYDld0WR6lbibijEBPoyU4abErSxnN1ZB_JwosN4Krvqn2WLglRwEeAIzg4g\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"declined\",    \"transaction\": \"trxn_1Mtaaz2eZvKYlo2CRvn5ac2X\"  },  \"statement_descriptor\": \"transfer\",  \"status\": \"returned\",  \"status_transitions\": {    \"returned_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"posted_at\": 1680717489  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```",
    "title": "List all OutboundTransfers | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/cancel",
    "markdown": "# Cancel a Terminal Hardware Order\n\n## [Cancel a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/cancel)Preview feature\n\nSets the status of a terminal hardware order from `pending` to `canceled`.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the `TerminalHardwareOrder` object.\n\nPOST /v1/terminal/hardware\\_orders/:id/cancel\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"canceled\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Preview a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/preview)Preview feature\n\nGet a preview of a TerminalHardwareOrder without creating it.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object (that has not been created) if the preview succeeds.\n\nGET /v1/terminal/hardware\\_orders/preview\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders/preview \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Main Street\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[company]\"=\"Rocket Rides\" \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d shipping_method=thsm_MfuTjLaPEgXMa4 \\  -d payment_type=monthly_invoice \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2\n```\n\n```\n{  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ]}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Ready To Ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as ready\\_to\\_ship.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_ready\\_to\\_ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_ready_to_ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"ready_to_ship\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Delivered](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as delivered.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/deliver\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/deliver \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"delivered\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Shipped](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as shipped.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"shipped\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```",
    "title": "Cancel a Terminal Hardware Order | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/cancel",
    "markdown": "# Cancel an OutboundTransfer | Stripe API Reference\n\nAn OutboundTransfer can be canceled if the funds have not yet been paid out.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object if the cancellation succeeded. Returns an error if the object has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_transfers/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgbFx5vTNec6NpPKphE93zYcPDgqrHcZhLW_fmKqG9Mu9HUNa_164u93bqkgnPNnYtd3_5Rv_F3YISrR2qg3FQ\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680717489,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Fail an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundTransfer to the `failed` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the failed state. Returns an error if the OutboundTransfer has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYw-nE9MNI6NpOJppCfj7fBzxZ9vepfiOLlViIJsILsSUiUv3teC30OLgOpgL7B0UBbYYtz0t7gi1a1WHo4Ew\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680717489,    \"canceled_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Post an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)Test helper\n\nTransitions a test mode created OutboundTransfer to the `posted` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the posted state. Returns an error if the OutboundTransfer has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Return an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)Test helper\n\nTransitions a test mode created OutboundTransfer to the `returned` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\n*   Details about a returned OutboundTransfer.\n    \n\n### Returns\n\nReturns the OutboundTransfer object in the returned state. Returns an error if the OutboundTransfer has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYdpKbb3Ec6NpO9f9jLUpJTCJGYDld0WR6lbibijEBPoyU4abErSxnN1ZB_JwosN4Krvqn2WLglRwEeAIzg4g\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"declined\",    \"transaction\": \"trxn_1Mtaaz2eZvKYlo2CRvn5ac2X\"  },  \"statement_descriptor\": \"transfer\",  \"status\": \"returned\",  \"status_transitions\": {    \"returned_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"posted_at\": 1680717489  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Update an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)Test helper\n\nUpdates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundTransfer object with the updated tracking details. Returns an error if the OutboundTransfer is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```",
    "title": "Cancel an OutboundTransfer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/preview",
    "markdown": "# Preview a Terminal Hardware Order\n\n## [Preview a Terminal Hardware Order](https://docs.stripe.com/api/terminal/hardware_orders/preview)Preview feature\n\nGet a preview of a TerminalHardwareOrder without creating it.\n\n### Parameters\n\n*   #### \n    \n    hardware\\_order\\_itemsarray of objectsRequired\n    \n    An array of line items to order.\n    \n*   The method of payment for this order.\n    \n*   Shipping address for the order.\n    \n*   #### \n    \n    shipping\\_methodstringRequired\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n\n### More parameters\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object (that has not been created) if the preview succeeds.\n\nGET /v1/terminal/hardware\\_orders/preview\n\ncURL\n\n```\ncurl -G https://api.stripe.com/v1/terminal/hardware_orders/preview \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"shipping[name]\"=\"Jenny Rosen\" \\  -d \"shipping[address][line1]\"=\"1234 Main Street\" \\  -d \"shipping[address][city]\"=\"San Francisco\" \\  -d \"shipping[address][state]\"=CA \\  -d \"shipping[address][country]\"=US \\  -d \"shipping[address][postal_code]\"=94111 \\  -d \"shipping[company]\"=\"Rocket Rides\" \\  -d \"shipping[phone]\"=15555555555 \\  --data-urlencode \"shipping[email]\"=\"test@example.com\" \\  -d shipping_method=thsm_MfuTjLaPEgXMa4 \\  -d payment_type=monthly_invoice \\  -d \"hardware_order_items[0][terminal_hardware_sku]\"=thsku_L5fys7HZ5o02Nc \\  -d \"hardware_order_items[0][quantity]\"=2\n```\n\n```\n{  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"pending\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ]}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Ready To Ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as ready\\_to\\_ship.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_ready\\_to\\_ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_ready_to_ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"ready_to_ship\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Delivered](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as delivered.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/deliver\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/deliver \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"delivered\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Shipped](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as shipped.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"shipped\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as undeliverable.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_undeliverable\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_undeliverable \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"undeliverable\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```",
    "title": "Preview a Terminal Hardware Order | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship",
    "markdown": "# Test mode: Mark a Terminal Hardware Order as Ready To Ship\n\n## [Test mode: Mark a Terminal Hardware Order as Ready To Ship](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_ready_to_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as ready\\_to\\_ship.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_ready\\_to\\_ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_ready_to_ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"ready_to_ship\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Delivered](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as delivered.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/deliver\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/deliver \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"delivered\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Shipped](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as shipped.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"shipped\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as undeliverable.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_undeliverable\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_undeliverable \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"undeliverable\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Mark a Terminal Hardware Order as Ready To Ship | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail",
    "markdown": "# Test mode: Fail an OutboundTransfer\n\n## [Test mode: Fail an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundTransfer to the `failed` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the failed state. Returns an error if the OutboundTransfer has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYw-nE9MNI6NpOJppCfj7fBzxZ9vepfiOLlViIJsILsSUiUv3teC30OLgOpgL7B0UBbYYtz0t7gi1a1WHo4Ew\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680717489,    \"canceled_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Post an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)Test helper\n\nTransitions a test mode created OutboundTransfer to the `posted` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the posted state. Returns an error if the OutboundTransfer has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Return an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)Test helper\n\nTransitions a test mode created OutboundTransfer to the `returned` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\n*   Details about a returned OutboundTransfer.\n    \n\n### Returns\n\nReturns the OutboundTransfer object in the returned state. Returns an error if the OutboundTransfer has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYdpKbb3Ec6NpO9f9jLUpJTCJGYDld0WR6lbibijEBPoyU4abErSxnN1ZB_JwosN4Krvqn2WLglRwEeAIzg4g\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"declined\",    \"transaction\": \"trxn_1Mtaaz2eZvKYlo2CRvn5ac2X\"  },  \"statement_descriptor\": \"transfer\",  \"status\": \"returned\",  \"status_transitions\": {    \"returned_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"posted_at\": 1680717489  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Update an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)Test helper\n\nUpdates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundTransfer object with the updated tracking details. Returns an error if the OutboundTransfer is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Fail an OutboundTransfer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/financial_accounts/update",
    "markdown": "# Update a FinancialAccount | Stripe API Reference\n\nUpdates the details of a FinancialAccount.\n\n### Parameters\n\n*   Encodes whether a FinancialAccount has access to a particular feature, with a status enum and associated `status_details`. Stripe or the platform may control features via the requested field.\n    \n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   #### \n    \n    platform\\_restrictionsobject\n    \n    The set of functionalities that the platform can restrict on the FinancialAccount.\n    \n\n### Returns\n\nReturns a FinancialAccount object.\n\nPOST /v1/treasury/financial\\_accounts/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts/fa_1MtZmL2eZvKYlo2Cer6cdwEC \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"metadata[order_id]\"=6735\n```\n\n```\n{  \"id\": \"fa_1MtZmL2eZvKYlo2Cer6cdwEC\",  \"object\": \"treasury.financial_account\",  \"active_features\": [    \"financial_addresses.aba\",    \"outbound_payments.ach\",    \"outbound_payments.us_domestic_wire\"  ],  \"balance\": {    \"cash\": {      \"usd\": 0    },    \"inbound_pending\": {      \"usd\": 0    },    \"outbound_pending\": {      \"usd\": 0    }  },  \"country\": \"US\",  \"created\": 1680714349,  \"financial_addresses\": [    {      \"aba\": {        \"account_holder_name\": \"Jenny Rosen\",        \"account_number_last4\": \"7890\",        \"bank_name\": \"STRIPE TEST BANK\",        \"routing_number\": \"0000000001\"      },      \"supported_networks\": [        \"ach\",        \"us_domestic_wire\"      ],      \"type\": \"aba\"    }  ],  \"livemode\": true,  \"metadata\": {    \"order_id\": \"6735\"  },  \"pending_features\": [],  \"restricted_features\": [],  \"status\": \"open\",  \"status_details\": {    \"closed\": null  },  \"supported_currencies\": [    \"usd\"  ],  \"features\": {}}\n```\n\n## [Retrieve a FinancialAccount](https://docs.stripe.com/api/treasury/financial_accounts/retrieve)\n\nRetrieves the details of a FinancialAccount.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturn a FinancialAccount object.\n\nGET /v1/treasury/financial\\_accounts/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts/fa_1MtZmL2eZvKYlo2Cer6cdwEC \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"fa_1MtZmL2eZvKYlo2Cer6cdwEC\",  \"object\": \"treasury.financial_account\",  \"active_features\": [    \"financial_addresses.aba\",    \"outbound_payments.ach\",    \"outbound_payments.us_domestic_wire\"  ],  \"balance\": {    \"cash\": {      \"usd\": 0    },    \"inbound_pending\": {      \"usd\": 0    },    \"outbound_pending\": {      \"usd\": 0    }  },  \"country\": \"US\",  \"created\": 1680714349,  \"financial_addresses\": [    {      \"aba\": {        \"account_holder_name\": \"Jenny Rosen\",        \"account_number_last4\": \"7890\",        \"bank_name\": \"STRIPE TEST BANK\",        \"routing_number\": \"0000000001\"      },      \"supported_networks\": [        \"ach\",        \"us_domestic_wire\"      ],      \"type\": \"aba\"    }  ],  \"livemode\": true,  \"metadata\": null,  \"pending_features\": [],  \"restricted_features\": [],  \"status\": \"open\",  \"status_details\": {    \"closed\": null  },  \"supported_currencies\": [    \"usd\"  ],  \"features\": {}}\n```\n\n## [List all FinancialAccounts](https://docs.stripe.com/api/treasury/financial_accounts/list)\n\nReturns a list of FinancialAccounts.\n\n### Parameters\n\n*   Only return FinancialAccounts that were created during the given date interval.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` FinancialAccounts, starting after FinancialAccount `starting_after`. Each entry in the array is a separate `FinancialAccount` object. If no more FinancialAccounts are available, the resulting array is empty.\n\nGET /v1/treasury/financial\\_accounts\n\n```\ncurl -G https://api.stripe.com/v1/treasury/financial_accounts \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/financial_accounts\",  \"has_more\": false,  \"data\": [    {      \"id\": \"fa_1MtZmL2eZvKYlo2Cer6cdwEC\",      \"object\": \"treasury.financial_account\",      \"active_features\": [        \"financial_addresses.aba\",        \"outbound_payments.ach\",        \"outbound_payments.us_domestic_wire\"      ],      \"balance\": {        \"cash\": {          \"usd\": 0        },        \"inbound_pending\": {          \"usd\": 0        },        \"outbound_pending\": {          \"usd\": 0        }      },      \"country\": \"US\",      \"created\": 1680714349,      \"financial_addresses\": [        {          \"aba\": {            \"account_holder_name\": \"Jenny Rosen\",            \"account_number_last4\": \"7890\",            \"bank_name\": \"STRIPE TEST BANK\",            \"routing_number\": \"0000000001\"          },          \"supported_networks\": [            \"ach\",            \"us_domestic_wire\"          ],          \"type\": \"aba\"        }      ],      \"livemode\": true,      \"metadata\": null,      \"pending_features\": [],      \"restricted_features\": [],      \"status\": \"open\",      \"status_details\": {        \"closed\": null      },      \"supported_currencies\": [        \"usd\"      ],      \"features\": {}    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update a FinancialAccount | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post",
    "markdown": "# Test mode: Post an OutboundTransfer\n\n## [Test mode: Post an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_post)Test helper\n\nTransitions a test mode created OutboundTransfer to the `posted` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundTransfer object in the posted state. Returns an error if the OutboundTransfer has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Return an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)Test helper\n\nTransitions a test mode created OutboundTransfer to the `returned` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\n*   Details about a returned OutboundTransfer.\n    \n\n### Returns\n\nReturns the OutboundTransfer object in the returned state. Returns an error if the OutboundTransfer has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYdpKbb3Ec6NpO9f9jLUpJTCJGYDld0WR6lbibijEBPoyU4abErSxnN1ZB_JwosN4Krvqn2WLglRwEeAIzg4g\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"declined\",    \"transaction\": \"trxn_1Mtaaz2eZvKYlo2CRvn5ac2X\"  },  \"statement_descriptor\": \"transfer\",  \"status\": \"returned\",  \"status_transitions\": {    \"returned_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"posted_at\": 1680717489  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Update an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)Test helper\n\nUpdates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundTransfer object with the updated tracking details. Returns an error if the OutboundTransfer is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Post an OutboundTransfer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/financial_accounts/retrieve",
    "markdown": "# Retrieve a FinancialAccount | Stripe API Reference\n\nRetrieves the details of a FinancialAccount.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturn a FinancialAccount object.\n\nGET /v1/treasury/financial\\_accounts/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts/fa_1MtZmL2eZvKYlo2Cer6cdwEC \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"fa_1MtZmL2eZvKYlo2Cer6cdwEC\",  \"object\": \"treasury.financial_account\",  \"active_features\": [    \"financial_addresses.aba\",    \"outbound_payments.ach\",    \"outbound_payments.us_domestic_wire\"  ],  \"balance\": {    \"cash\": {      \"usd\": 0    },    \"inbound_pending\": {      \"usd\": 0    },    \"outbound_pending\": {      \"usd\": 0    }  },  \"country\": \"US\",  \"created\": 1680714349,  \"financial_addresses\": [    {      \"aba\": {        \"account_holder_name\": \"Jenny Rosen\",        \"account_number_last4\": \"7890\",        \"bank_name\": \"STRIPE TEST BANK\",        \"routing_number\": \"0000000001\"      },      \"supported_networks\": [        \"ach\",        \"us_domestic_wire\"      ],      \"type\": \"aba\"    }  ],  \"livemode\": true,  \"metadata\": null,  \"pending_features\": [],  \"restricted_features\": [],  \"status\": \"open\",  \"status_details\": {    \"closed\": null  },  \"supported_currencies\": [    \"usd\"  ],  \"features\": {}}\n```\n\n## [List all FinancialAccounts](https://docs.stripe.com/api/treasury/financial_accounts/list)\n\nReturns a list of FinancialAccounts.\n\n### Parameters\n\n*   Only return FinancialAccounts that were created during the given date interval.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` FinancialAccounts, starting after FinancialAccount `starting_after`. Each entry in the array is a separate `FinancialAccount` object. If no more FinancialAccounts are available, the resulting array is empty.\n\nGET /v1/treasury/financial\\_accounts\n\n```\ncurl -G https://api.stripe.com/v1/treasury/financial_accounts \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/financial_accounts\",  \"has_more\": false,  \"data\": [    {      \"id\": \"fa_1MtZmL2eZvKYlo2Cer6cdwEC\",      \"object\": \"treasury.financial_account\",      \"active_features\": [        \"financial_addresses.aba\",        \"outbound_payments.ach\",        \"outbound_payments.us_domestic_wire\"      ],      \"balance\": {        \"cash\": {          \"usd\": 0        },        \"inbound_pending\": {          \"usd\": 0        },        \"outbound_pending\": {          \"usd\": 0        }      },      \"country\": \"US\",      \"created\": 1680714349,      \"financial_addresses\": [        {          \"aba\": {            \"account_holder_name\": \"Jenny Rosen\",            \"account_number_last4\": \"7890\",            \"bank_name\": \"STRIPE TEST BANK\",            \"routing_number\": \"0000000001\"          },          \"supported_networks\": [            \"ach\",            \"us_domestic_wire\"          ],          \"type\": \"aba\"        }      ],      \"livemode\": true,      \"metadata\": null,      \"pending_features\": [],      \"restricted_features\": [],      \"status\": \"open\",      \"status_details\": {        \"closed\": null      },      \"supported_currencies\": [        \"usd\"      ],      \"features\": {}    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a FinancialAccount | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver",
    "markdown": "# Test mode: Mark a Terminal Hardware Order as Delivered\n\n## [Test mode: Mark a Terminal Hardware Order as Delivered](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_deliver)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as delivered.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/deliver\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/deliver \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"delivered\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Shipped](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as shipped.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"shipped\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as undeliverable.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_undeliverable\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_undeliverable \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"undeliverable\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Mark a Terminal Hardware Order as Delivered | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship",
    "markdown": "# Test mode: Mark a Terminal Hardware Order as Shipped\n\n## [Test mode: Mark a Terminal Hardware Order as Shipped](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_ship)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as shipped.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/ship\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/ship \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"shipped\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Test mode: Mark a Terminal Hardware Order as Undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as undeliverable.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_undeliverable\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_undeliverable \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"undeliverable\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Mark a Terminal Hardware Order as Shipped | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/financial_accounts/list",
    "markdown": "# List all FinancialAccounts | Stripe API Reference\n\nReturns a list of FinancialAccounts.\n\n### Parameters\n\n*   Only return FinancialAccounts that were created during the given date interval.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` FinancialAccounts, starting after FinancialAccount `starting_after`. Each entry in the array is a separate `FinancialAccount` object. If no more FinancialAccounts are available, the resulting array is empty.\n\nGET /v1/treasury/financial\\_accounts\n\n```\ncurl -G https://api.stripe.com/v1/treasury/financial_accounts \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/financial_accounts\",  \"has_more\": false,  \"data\": [    {      \"id\": \"fa_1MtZmL2eZvKYlo2Cer6cdwEC\",      \"object\": \"treasury.financial_account\",      \"active_features\": [        \"financial_addresses.aba\",        \"outbound_payments.ach\",        \"outbound_payments.us_domestic_wire\"      ],      \"balance\": {        \"cash\": {          \"usd\": 0        },        \"inbound_pending\": {          \"usd\": 0        },        \"outbound_pending\": {          \"usd\": 0        }      },      \"country\": \"US\",      \"created\": 1680714349,      \"financial_addresses\": [        {          \"aba\": {            \"account_holder_name\": \"Jenny Rosen\",            \"account_number_last4\": \"7890\",            \"bank_name\": \"STRIPE TEST BANK\",            \"routing_number\": \"0000000001\"          },          \"supported_networks\": [            \"ach\",            \"us_domestic_wire\"          ],          \"type\": \"aba\"        }      ],      \"livemode\": true,      \"metadata\": null,      \"pending_features\": [],      \"restricted_features\": [],      \"status\": \"open\",      \"status_details\": {        \"closed\": null      },      \"supported_currencies\": [        \"usd\"      ],      \"features\": {}    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all FinancialAccounts | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return",
    "markdown": "# Test mode: Return an OutboundTransfer\n\n## [Test mode: Return an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_return)Test helper\n\nTransitions a test mode created OutboundTransfer to the `returned` status. The OutboundTransfer must already be in the `processing` state.\n\n### Parameters\n\n*   Details about a returned OutboundTransfer.\n    \n\n### Returns\n\nReturns the OutboundTransfer object in the returned state. Returns an error if the OutboundTransfer has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYdpKbb3Ec6NpO9f9jLUpJTCJGYDld0WR6lbibijEBPoyU4abErSxnN1ZB_JwosN4Krvqn2WLglRwEeAIzg4g\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"declined\",    \"transaction\": \"trxn_1Mtaaz2eZvKYlo2CRvn5ac2X\"  },  \"statement_descriptor\": \"transfer\",  \"status\": \"returned\",  \"status_transitions\": {    \"returned_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"posted_at\": 1680717489  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Test mode: Update an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)Test helper\n\nUpdates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundTransfer object with the updated tracking details. Returns an error if the OutboundTransfer is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Return an OutboundTransfer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update",
    "markdown": "# Test mode: Update an OutboundTransfer\n\n## [Test mode: Update an OutboundTransfer](https://docs.stripe.com/api/treasury/outbound_transfers/test_mode_update)Test helper\n\nUpdates a test mode created OutboundTransfer with tracking details. The OutboundTransfer must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundTransfer object with the updated tracking details. Returns an error if the OutboundTransfer is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_transfers/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_transfers/obt_1Mtaaz2eZvKYlo2CUu1tWGAl \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obt_1Mtaaz2eZvKYlo2CUu1tWGAl\",  \"object\": \"treasury.outbound_transfer\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680717489,  \"currency\": \"usd\",  \"description\": \"OutboundTransfer to my external bank account\",  \"destination_payment_method\": \"pm_1Mtaaz2eZvKYlo2C235TqrIn\",  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": \"San Francisco\",        \"country\": \"US\",        \"line1\": \"1234 Fake Street\",        \"line2\": null,        \"postal_code\": \"94102\",        \"state\": \"CA\"      },      \"email\": null,      \"name\": \"Jane Austen\"    },    \"type\": \"us_bank_account\",    \"us_bank_account\": {      \"account_holder_type\": \"company\",      \"account_type\": \"checking\",      \"bank_name\": \"STRIPE TEST BANK\",      \"fingerprint\": \"AP24Iso0btGp4N10\",      \"last4\": \"6789\",      \"network\": \"ach\",      \"routing_number\": \"110000000\"    }  },  \"expected_arrival_date\": 1680825600,  \"financial_account\": \"fa_1Mtaaz2eZvKYlo2CUf56sIA1\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKLHttqEGMgYkJOwRj5U6NpOg9L70S_mhPE92VvJUt_P7rrE938uIHfjCSY3Bjn9Dufo8Z1h9709Gm-LmCbzT7a6j9kFN9w\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"transfer\",  \"status\": \"posted\",  \"status_transitions\": {    \"posted_at\": 1680717489,    \"failed_at\": null,    \"canceled_at\": null,    \"returned_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1Mtaaz2eZvKYlo2Cn9D12psR\"}\n```\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Update an OutboundTransfer | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable",
    "markdown": "# Test mode: Mark a Terminal Hardware Order as Undeliverable\n\n## [Test mode: Mark a Terminal Hardware Order as Undeliverable](https://docs.stripe.com/api/terminal/hardware_orders/test_mode_mark_undeliverable)Test helperPreview feature\n\nUpdates a test mode `TerminalHardwareOrder` object’s status as undeliverable.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareOrder` object.\n\nPOST /v1/test\\_helpers/terminal/hardware\\_orders/:id/mark\\_undeliverable\n\ncURL\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/terminal/hardware_orders/thor_1Nj6mu2eZvKYlo2CRG74vB9n/mark_undeliverable \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thor_1Nj6mu2eZvKYlo2CRG74vB9n\",  \"object\": \"terminal.hardware_order\",  \"amount\": 13602,  \"created\": 1692995962,  \"currency\": \"usd\",  \"hardware_order_items\": [    {      \"amount\": 11800,      \"currency\": \"usd\",      \"quantity\": 2,      \"terminal_hardware_sku\": {        \"id\": \"thsku_L5fys7HZ5o02Nc\",        \"amount\": 450,        \"country\": \"AT\",        \"currency\": \"eur\",        \"product\": \"thpr_MJfof7SLvdkG6T\"      }    }  ],  \"livemode\": true,  \"metadata\": {},  \"payment_type\": \"monthly_invoice\",  \"po_number\": null,  \"shipment_tracking\": [],  \"shipping\": {    \"address\": {      \"city\": \"San Francisco\",      \"country\": \"US\",      \"line1\": \"1234 Main Street\",      \"line2\": \"\",      \"postal_code\": \"94111\",      \"state\": \"CA\"    },    \"amount\": 800,    \"company\": \"Rocket Rides\",    \"currency\": \"usd\",    \"email\": \"test@example.com\",    \"name\": \"Jenny Rosen\",    \"phone\": \"15555555555\"  },  \"shipping_method\": \"standard\",  \"status\": \"undeliverable\",  \"tax\": 1002,  \"total_tax_amounts\": [    {      \"amount\": 1002,      \"inclusive\": false,      \"rate\": {        \"display_name\": \"Sales Tax\",        \"jurisdiction\": \"LOS ANGELES\",        \"percentage\": 8.25      }    }  ],  \"updated\": null}\n```\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Mark a Terminal Hardware Order as Undeliverable | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_products/retrieve",
    "markdown": "# Retrieve a Terminal Hardware Product\n\n## [Retrieve a Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareProduct` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareProduct` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_products/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_products/thpr_MJfotcxYT5Hwsm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thpr_MJfotcxYT5Hwsm\",  \"object\": \"terminal.hardware_product\",  \"status\": \"available\",  \"type\": \"bbpos_wisepos_e\",  \"unavailable_after\": null}\n```\n\n## [List all Terminal Hardware Products](https://docs.stripe.com/api/terminal/hardware_products/list)Preview feature\n\nList all `TerminalHardwareProduct` objects.\n\n### Parameters\n\n*   Only return products that have the given status. Defaults to available.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware products. Each entry in the array is a separate Product object.\n\nGET /v1/terminal/hardware\\_products\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_products \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_products\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thpr_MJfotcxYT5Hwsm\",      \"object\": \"terminal.hardware_product\",      \"status\": \"available\",      \"type\": \"bbpos_wisepos_e\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a Terminal Hardware Product | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/financial_account_features/update",
    "markdown": "# Update FinancialAccount Features | Stripe API Reference\n\nUpdates the Features associated with a FinancialAccount.\n\n### Parameters\n\n*   Encodes the FinancialAccount’s ability to be used with the Issuing product, including attaching cards to and drawing funds from the FinancialAccount.\n    \n*   Represents whether this FinancialAccount is eligible for deposit insurance. Various factors determine the insurance amount.\n    \n*   #### \n    \n    financial\\_addressesobject\n    \n    Contains Features that add FinancialAddresses to the FinancialAccount.\n    \n*   Contains settings related to adding funds to a FinancialAccount from another Account with the same owner.\n    \n*   Represents the ability for the FinancialAccount to send money to, or receive money from other FinancialAccounts (for example, via OutboundPayment).\n    \n*   Includes Features related to initiating money movement out of the FinancialAccount to someone else’s bucket of money.\n    \n*   Contains a Feature and settings related to moving money out of the FinancialAccount into another Account with the same owner.\n    \n\n### Returns\n\nA dictionary of Features associated with the given FinancialAccount. Each entry in the dictionary is a Feature object, which may contain child Features.\n\nPOST /v1/treasury/financial\\_accounts/:id/features\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts/fa_1Mta0C2eZvKYlo2CaEtaPPFz/features \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"card_issuing[requested]\"=false\n```\n\n```\n{  \"object\": \"treasury.financial_account_features\",  \"deposit_insurance\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"financial_addresses\": {    \"aba\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"inbound_transfers\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"intra_stripe_flows\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"outbound_payments\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    },    \"us_domestic_wire\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"outbound_transfers\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    },    \"us_domestic_wire\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  }}\n```\n\n## [Retrieve FinancialAccount Features](https://docs.stripe.com/api/treasury/financial_account_features/retrieve)\n\nRetrieves Features information associated with the FinancialAccount.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nA dictionary of Features associated with the given FinancialAccount. Each entry in the dictionary is a Feature object, which might contain child Features.\n\nGET /v1/treasury/financial\\_accounts/:id/features\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts/fa_1Mta0C2eZvKYlo2CaEtaPPFz/features \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"treasury.financial_account_features\",  \"card_issuing\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"deposit_insurance\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"financial_addresses\": {    \"aba\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"inbound_transfers\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"intra_stripe_flows\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"outbound_payments\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    },    \"us_domestic_wire\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"outbound_transfers\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    },    \"us_domestic_wire\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  }}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Update FinancialAccount Features | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_products",
    "markdown": "# Terminal Hardware Product | Stripe API Reference\n\n## [Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products)Preview feature\n\nA TerminalHardwareProduct is a category of hardware devices that are generally similar, but may have variations depending on the country it’s shipped to.\n\nTerminalHardwareSKUs represent variations within the same Product (for example, a country specific device). For example, WisePOS E is a TerminalHardwareProduct and a WisePOS E - US and WisePOS E - UK are TerminalHardwareSKUs.\n\n## [The TerminalHardwareProduct object](https://docs.stripe.com/api/terminal/hardware_products/object)Preview feature\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   String representing the object’s type. Objects of the same type share the same value.\n    \n*   The status of the terminal hardware product.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n*   The type of product.\n    \n*   #### \n    \n    unavailable\\_afternullable integer\n    \n    If all the SKUs for this product have an unavailable\\_after then this is the max unavailable\\_after in UNIX timestamp. Otherwise, null.\n    \n\nThe TerminalHardwareProduct object\n\n```\n{  \"id\": \"thpr_MJfotcxYT5Hwsm\",  \"object\": \"terminal.hardware_product\",  \"status\": \"available\",  \"type\": \"bbpos_wisepos_e\",  \"unavailable_after\": null}\n```\n\n## [Retrieve a Terminal Hardware Product](https://docs.stripe.com/api/terminal/hardware_products/retrieve)Preview feature\n\nRetrieves a `TerminalHardwareProduct` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a `TerminalHardwareProduct` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_products/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_products/thpr_MJfotcxYT5Hwsm \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thpr_MJfotcxYT5Hwsm\",  \"object\": \"terminal.hardware_product\",  \"status\": \"available\",  \"type\": \"bbpos_wisepos_e\",  \"unavailable_after\": null}\n```\n\n## [List all Terminal Hardware Products](https://docs.stripe.com/api/terminal/hardware_products/list)Preview feature\n\nList all `TerminalHardwareProduct` objects.\n\n### Parameters\n\n*   Only return products that have the given status. Defaults to available.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware products. Each entry in the array is a separate Product object.\n\nGET /v1/terminal/hardware\\_products\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_products \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_products\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thpr_MJfotcxYT5Hwsm\",      \"object\": \"terminal.hardware_product\",      \"status\": \"available\",      \"type\": \"bbpos_wisepos_e\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Terminal Hardware Product | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_payments/create",
    "markdown": "# Create an OutboundPayment | Stripe API Reference\n\nCreates an OutboundPayment.\n\n### Parameters\n\n*   Amount (in cents) to be transferred.\n    \n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    The FinancialAccount to pull funds from.\n    \n*   ID of the customer to whom the OutboundPayment is sent. Must match the Customer attached to the `destination_payment_method` passed in.\n    \n*   An arbitrary string attached to the object. Often useful for displaying to users.\n    \n*   #### \n    \n    destination\\_payment\\_methodstring\n    \n    The PaymentMethod to use as the payment instrument for the OutboundPayment. Exclusive with `destination_payment_method_data`.\n    \n*   #### \n    \n    destination\\_payment\\_method\\_dataobject\n    \n    Hash used to generate the PaymentMethod to be used for this OutboundPayment. Exclusive with `destination_payment_method`.\n    \n*   #### \n    \n    destination\\_payment\\_method\\_optionsobject\n    \n    Payment method-specific configuration for this OutboundPayment.\n    \n\n*   Set of [key-value pairs](https://docs.stripe.com/api/metadata) that you can attach to an object. This can be useful for storing additional information about the object in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by posting an empty value to `metadata`.\n    \n*   #### \n    \n    statement\\_descriptorstring\n    \n    The description that appears on the receiving end for this OutboundPayment (for example, bank statement for external bank transfer). Maximum 10 characters for `ach` payments, 140 characters for `us_domestic_wire` payments, or 500 characters for `stripe` network transfers. The default value is “payment”.\n    \n\n### Returns\n\nReturns an OutboundPayment object if there were no issues with OutboundPayment creation.\n\nPOST /v1/treasury/outbound\\_payments\n\n```\ncurl https://api.stripe.com/v1/treasury/outbound_payments \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d financial_account=fa_1MtaD72eZvKYlo2CYKM3DnUI \\  -d amount=10000 \\  -d currency=usd \\  -d customer=cus_4QFOF3xrvBT2nU \\  -d destination_payment_method=pm_1MtaD82eZvKYlo2Cn1XtS23o \\  -d description=\"OutboundPayment to a 3rd party\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": \"cus_4QFOF3xrvBT2nU\",  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": \"pm_1MtaD82eZvKYlo2CtGr4OxTt\",  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYgdA-GrKk6NZNsf-FXPEqqbHm44fwJ57pNybbkweviYUDJGYFOw4f9cAqpfvPKQZ6y0S2C5DYyRwmDs_36\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"processing\",  \"status_transitions\": {    \"canceled_at\": null,    \"failed_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Retrieve an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/retrieve)\n\nRetrieves the details of an existing OutboundPayment by passing the unique OutboundPayment ID from either the OutboundPayment creation request or OutboundPayment list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an OutboundPayment object if a valid identifier was provided. Otherwise, returns an error.\n\nGET /v1/treasury/outbound\\_payments/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/outbound_payments/obp_1MtaD72eZvKYlo2Cu5d5S1kX \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": \"cus_4QFOF3xrvBT2nU\",  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": \"pm_1MtaD82eZvKYlo2CtGr4OxTt\",  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYgdA-GrKk6NZNsf-FXPEqqbHm44fwJ57pNybbkweviYUDJGYFOw4f9cAqpfvPKQZ6y0S2C5DYyRwmDs_36\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"processing\",  \"status_transitions\": {    \"canceled_at\": null,    \"failed_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [List all OutboundPayments](https://docs.stripe.com/api/treasury/outbound_payments/list)\n\nReturns a list of OutboundPayments sent from the specified FinancialAccount.\n\n### Parameters\n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    Returns objects associated with this FinancialAccount.\n    \n*   Only return OutboundPayments that were created during the given date interval.\n    \n*   Only return OutboundPayments sent to this customer.\n    \n*   Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` OutboundPayments, starting after OutboundPayments `starting_after`. Each entry in the array is a separate OutboundPayments object. If no more OutboundPayments are available, the resulting array is empty.\n\nGET /v1/treasury/outbound\\_payments\n\n```\ncurl -G https://api.stripe.com/v1/treasury/outbound_payments \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d financial_account=fa_1MtaD72eZvKYlo2CYKM3DnUI \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/outbound_payments\",  \"has_more\": false,  \"data\": [    {      \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",      \"object\": \"treasury.outbound_payment\",      \"amount\": 10000,      \"cancelable\": false,      \"created\": 1680716009,      \"currency\": \"usd\",      \"customer\": \"cus_4QFOF3xrvBT2nU\",      \"description\": \"OutboundPayment to a 3rd party\",      \"destination_payment_method\": \"pm_1MtaD82eZvKYlo2CtGr4OxTt\",      \"destination_payment_method_details\": {        \"type\": \"us_bank_account\",        \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"      },      \"end_user_details\": {        \"ip_address\": null,        \"present\": false      },      \"expected_arrival_date\": 1680716009,      \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",      \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYgdA-GrKk6NZNsf-FXPEqqbHm44fwJ57pNybbkweviYUDJGYFOw4f9cAqpfvPKQZ6y0S2C5DYyRwmDs_36\",      \"livemode\": false,      \"metadata\": {},      \"returned_details\": null,      \"statement_descriptor\": \"payment\",      \"status\": \"processing\",      \"status_transitions\": {        \"canceled_at\": null,        \"failed_at\": null,        \"posted_at\": null,        \"returned_at\": null      },      \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"    }    {...}    {...}  ],}\n```\n\n## [Cancel an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/cancel)\n\nCancel an OutboundPayment.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object if the cancellation succeeded. Returns an error if the OutboundPayment has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_payments/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_payments/obp_1MtaD72eZvKYlo2Cu5d5S1kX/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": null,        \"country\": null,        \"line1\": null,        \"line2\": null,        \"postal_code\": null,        \"state\": null      },      \"email\": null,      \"name\": null    },    \"financial_account\": {      \"id\": \"fa_1LpyM72eZvKYlo2CiUmr2kuV\",      \"network\": \"stripe\"    },    \"type\": \"financial_account\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgakyczTzCY6NZMi6lMnZXTYms--WBYQzUXzaEJ_JwErEK5FXXW8F9Qy7fEzKvsHEOzyjS9AtIuK8sUjgWdU\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680716010,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Fail an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundPayment to the `failed` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the failed state. Returns an error if the OutboundPayment has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgbuLATJtPw6NZOxERTeGKynM40SUCL6A1sqeZF9vkrX4q4M0rI4eY7EhfkOVvyileEuRReLgXE2crXLg7sd\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680716010,    \"posted_at\": null,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```",
    "title": "Create an OutboundPayment | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/financial_account_features/retrieve",
    "markdown": "# Retrieve FinancialAccount Features | Stripe API Reference\n\nRetrieves Features information associated with the FinancialAccount.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nA dictionary of Features associated with the given FinancialAccount. Each entry in the dictionary is a Feature object, which might contain child Features.\n\nGET /v1/treasury/financial\\_accounts/:id/features\n\n```\ncurl https://api.stripe.com/v1/treasury/financial_accounts/fa_1Mta0C2eZvKYlo2CaEtaPPFz/features \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"treasury.financial_account_features\",  \"card_issuing\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"deposit_insurance\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"financial_addresses\": {    \"aba\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"inbound_transfers\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"intra_stripe_flows\": {    \"requested\": true,    \"status\": \"active\",    \"status_details\": []  },  \"outbound_payments\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    },    \"us_domestic_wire\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  },  \"outbound_transfers\": {    \"ach\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    },    \"us_domestic_wire\": {      \"requested\": true,      \"status\": \"active\",      \"status_details\": []    }  }}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve FinancialAccount Features | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_products/list",
    "markdown": "# List all Terminal Hardware Products\n\n## [List all Terminal Hardware Products](https://docs.stripe.com/api/terminal/hardware_products/list)Preview feature\n\nList all `TerminalHardwareProduct` objects.\n\n### Parameters\n\n*   Only return products that have the given status. Defaults to available.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `available`<br><br>Available for new orders. |\n    | `unavailable`<br><br>Can no longer be used for order creation. |\n    \n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware products. Each entry in the array is a separate Product object.\n\nGET /v1/terminal/hardware\\_products\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_products \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_products\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thpr_MJfotcxYT5Hwsm\",      \"object\": \"terminal.hardware_product\",      \"status\": \"available\",      \"type\": \"bbpos_wisepos_e\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "List all Terminal Hardware Products | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_skus",
    "markdown": "# Terminal Hardware SKU | Stripe API Reference\n\n## [Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus)Preview feature\n\nA TerminalHardwareSKU represents a SKU for Terminal hardware. A SKU is a representation of a product available for purchase, containing information such as the name, price, and images.\n\n## [The TerminalHardwareSKU object](https://docs.stripe.com/api/terminal/hardware_skus/object)Preview feature\n\n### Attributes\n\n*   Unique identifier for the object.\n    \n*   The price of this SKU.\n    \n\n### More attributes\n\n*   #### \n    \n    unavailable\\_afternullable integer\n    \n\nThe TerminalHardwareSKU object\n\n```\n{  \"id\": \"thsku_L5fys7HZ5o02Nc\",  \"object\": \"terminal.hardware_sku\",  \"amount\": 450,  \"country\": \"AT\",  \"currency\": \"usd\",  \"orderable\": 100,  \"product\": \"thpr_MJfof7SLvdkG6T\",  \"status\": \"available\",  \"unavailable_after\": null}\n```\n\n## [Retrieve an available Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus/retrieve)Preview feature\n\nRetrieves an available `TerminalHardwareSKU` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an available `TerminalHardwareSKU` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_skus/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_skus/thsku_L5fys7HZ5o02Nc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thsku_L5fys7HZ5o02Nc\",  \"object\": \"terminal.hardware_sku\",  \"amount\": 450,  \"country\": \"AT\",  \"currency\": \"usd\",  \"orderable\": 100,  \"product\": \"thpr_MJfof7SLvdkG6T\",  \"status\": \"available\",  \"unavailable_after\": null}\n```\n\n## [List all Terminal Hardware SKUs](https://docs.stripe.com/api/terminal/hardware_skus/list)Preview feature\n\nList all `TerminalHardwareSKU` objects.\n\n### Parameters\n\n*   The ISO 3166-1 alpha-2 country code representing the country associated with the SKUs to be retrieved. Available country codes can be listed with the [List Country Specs](https://docs.stripe.com/api#list_country_specs) endpoint.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware SKUs. Each entry in the array is a separate SKU object.\n\nGET /v1/terminal/hardware\\_skus\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_skus \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_skus\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thsku_L5fys7HZ5o02Nc\",      \"object\": \"terminal.hardware_sku\",      \"amount\": 450,      \"country\": \"AT\",      \"currency\": \"usd\",      \"orderable\": 100,      \"product\": \"thpr_MJfof7SLvdkG6T\",      \"status\": \"available\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Terminal Hardware SKU | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/transactions/retrieve",
    "markdown": "# Retrieve a Transaction | Stripe API Reference\n\nRetrieves the details of an existing Transaction.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns a Transaction object if a valid identifier was provided. Otherwise, returns an error.\n\nGET /v1/treasury/transactions/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/transactions/trxn_1MtkYw2eZvKYlo2ClMGIO54z \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"trxn_1MtkYw2eZvKYlo2ClMGIO54z\",  \"object\": \"treasury.transaction\",  \"amount\": -100,  \"balance_impact\": {    \"cash\": -100,    \"inbound_pending\": 0,    \"outbound_pending\": 100  },  \"created\": 1680755802,  \"currency\": \"usd\",  \"description\": \"Jane Austen (6789) | Outbound transfer | transfer\",  \"financial_account\": \"fa_1MtkYw2eZvKYlo2CrqmzUo3O\",  \"flow\": \"obt_1MtkYw2eZvKYlo2CqsyBpQts\",  \"flow_type\": \"outbound_transfer\",  \"livemode\": false,  \"status\": \"open\",  \"status_transitions\": {    \"posted_at\": null,    \"void_at\": null  }}\n```\n\n## [List all Transactions](https://docs.stripe.com/api/treasury/transactions/list)\n\nRetrieves a list of Transaction objects.\n\n### Parameters\n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    Returns objects associated with this FinancialAccount.\n    \n*   Only return Transactions that were created during the given date interval.\n    \n*   The results are in reverse chronological order by `created` or `posted_at`. The default is `created`.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `created`<br><br>Timestamp describing when the Transaction was created. |\n    | `posted_at`<br><br>Timestamp describing when the Transaction was posted. |\n    \n*   Only return Transactions that have the given status: `open`, `posted`, or `void`.\n    \n    Possible enum values\n    \n    |     |\n    | --- |\n    | `open`<br><br>The initial state for all Transactions. The Transaction results in updates to the sub-balance amounts, but the current balance is not affected until the Transaction posts. |\n    | `posted`<br><br>Funds have successfully entered or left the account. The current balance was affected. |\n    | `void`<br><br>The Transaction never impacted the balance. For example, a Transaction would enter this state if an OutboundPayment was initiated but then canceled before the funds left the account. |\n    \n*   A filter for the `status_transitions.posted_at` timestamp. When using this filter, `status=posted` and `order_by=posted_at` must also be specified.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` Transactions, starting after Transaction `starting_after`. Each entry in the array is a separate Transaction object. If no more Transactions are available, the resulting array will be empty.\n\nGET /v1/treasury/transactions\n\n```\ncurl -G https://api.stripe.com/v1/treasury/transactions \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d financial_account=fa_1MtkYw2eZvKYlo2CrqmzUo3O \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/transactions\",  \"has_more\": false,  \"data\": [    {      \"id\": \"trxn_1MtkYw2eZvKYlo2ClMGIO54z\",      \"object\": \"treasury.transaction\",      \"amount\": -100,      \"balance_impact\": {        \"cash\": -100,        \"inbound_pending\": 0,        \"outbound_pending\": 100      },      \"created\": 1680755802,      \"currency\": \"usd\",      \"description\": \"Jane Austen (6789) | Outbound transfer | transfer\",      \"financial_account\": \"fa_1MtkYw2eZvKYlo2CrqmzUo3O\",      \"flow\": \"obt_1MtkYw2eZvKYlo2CqsyBpQts\",      \"flow_type\": \"outbound_transfer\",      \"livemode\": false,      \"status\": \"open\",      \"status_transitions\": {        \"posted_at\": null,        \"void_at\": null      }    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve a Transaction | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_payments/retrieve",
    "markdown": "# Retrieve an OutboundPayment | Stripe API Reference\n\nRetrieves the details of an existing OutboundPayment by passing the unique OutboundPayment ID from either the OutboundPayment creation request or OutboundPayment list.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an OutboundPayment object if a valid identifier was provided. Otherwise, returns an error.\n\nGET /v1/treasury/outbound\\_payments/:id\n\n```\ncurl https://api.stripe.com/v1/treasury/outbound_payments/obp_1MtaD72eZvKYlo2Cu5d5S1kX \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": \"cus_4QFOF3xrvBT2nU\",  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": \"pm_1MtaD82eZvKYlo2CtGr4OxTt\",  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYgdA-GrKk6NZNsf-FXPEqqbHm44fwJ57pNybbkweviYUDJGYFOw4f9cAqpfvPKQZ6y0S2C5DYyRwmDs_36\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"processing\",  \"status_transitions\": {    \"canceled_at\": null,    \"failed_at\": null,    \"posted_at\": null,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [List all OutboundPayments](https://docs.stripe.com/api/treasury/outbound_payments/list)\n\nReturns a list of OutboundPayments sent from the specified FinancialAccount.\n\n### Parameters\n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    Returns objects associated with this FinancialAccount.\n    \n*   Only return OutboundPayments that were created during the given date interval.\n    \n*   Only return OutboundPayments sent to this customer.\n    \n*   Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` OutboundPayments, starting after OutboundPayments `starting_after`. Each entry in the array is a separate OutboundPayments object. If no more OutboundPayments are available, the resulting array is empty.\n\nGET /v1/treasury/outbound\\_payments\n\n```\ncurl -G https://api.stripe.com/v1/treasury/outbound_payments \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d financial_account=fa_1MtaD72eZvKYlo2CYKM3DnUI \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/outbound_payments\",  \"has_more\": false,  \"data\": [    {      \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",      \"object\": \"treasury.outbound_payment\",      \"amount\": 10000,      \"cancelable\": false,      \"created\": 1680716009,      \"currency\": \"usd\",      \"customer\": \"cus_4QFOF3xrvBT2nU\",      \"description\": \"OutboundPayment to a 3rd party\",      \"destination_payment_method\": \"pm_1MtaD82eZvKYlo2CtGr4OxTt\",      \"destination_payment_method_details\": {        \"type\": \"us_bank_account\",        \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"      },      \"end_user_details\": {        \"ip_address\": null,        \"present\": false      },      \"expected_arrival_date\": 1680716009,      \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",      \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYgdA-GrKk6NZNsf-FXPEqqbHm44fwJ57pNybbkweviYUDJGYFOw4f9cAqpfvPKQZ6y0S2C5DYyRwmDs_36\",      \"livemode\": false,      \"metadata\": {},      \"returned_details\": null,      \"statement_descriptor\": \"payment\",      \"status\": \"processing\",      \"status_transitions\": {        \"canceled_at\": null,        \"failed_at\": null,        \"posted_at\": null,        \"returned_at\": null      },      \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"    }    {...}    {...}  ],}\n```\n\n## [Cancel an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/cancel)\n\nCancel an OutboundPayment.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object if the cancellation succeeded. Returns an error if the OutboundPayment has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_payments/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_payments/obp_1MtaD72eZvKYlo2Cu5d5S1kX/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": null,        \"country\": null,        \"line1\": null,        \"line2\": null,        \"postal_code\": null,        \"state\": null      },      \"email\": null,      \"name\": null    },    \"financial_account\": {      \"id\": \"fa_1LpyM72eZvKYlo2CiUmr2kuV\",      \"network\": \"stripe\"    },    \"type\": \"financial_account\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgakyczTzCY6NZMi6lMnZXTYms--WBYQzUXzaEJ_JwErEK5FXXW8F9Qy7fEzKvsHEOzyjS9AtIuK8sUjgWdU\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680716010,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Fail an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundPayment to the `failed` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the failed state. Returns an error if the OutboundPayment has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgbuLATJtPw6NZOxERTeGKynM40SUCL6A1sqeZF9vkrX4q4M0rI4eY7EhfkOVvyileEuRReLgXE2crXLg7sd\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680716010,    \"posted_at\": null,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Post an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_post)Test helper\n\nTransitions a test mode created OutboundPayment to the `posted` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the posted state. Returns an error if the OutboundPayment has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgawWNwbI_w6NZNOI4y6vNpfIP-oQAT5mkBRbOHJN1f08r7jF-UumeywdupuJr7P2cxF8L5JRSVPMmttq_kA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"posted\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```",
    "title": "Retrieve an OutboundPayment | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_payments/list",
    "markdown": "# List all OutboundPayments | Stripe API Reference\n\nReturns a list of OutboundPayments sent from the specified FinancialAccount.\n\n### Parameters\n\n*   #### \n    \n    financial\\_accountstringRequired\n    \n    Returns objects associated with this FinancialAccount.\n    \n*   Only return OutboundPayments that were created during the given date interval.\n    \n*   Only return OutboundPayments sent to this customer.\n    \n*   Only return OutboundPayments that have the given status: `processing`, `failed`, `posted`, `returned`, or `canceled`.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of up to `limit` OutboundPayments, starting after OutboundPayments `starting_after`. Each entry in the array is a separate OutboundPayments object. If no more OutboundPayments are available, the resulting array is empty.\n\nGET /v1/treasury/outbound\\_payments\n\n```\ncurl -G https://api.stripe.com/v1/treasury/outbound_payments \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d financial_account=fa_1MtaD72eZvKYlo2CYKM3DnUI \\  -d limit=3\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/treasury/outbound_payments\",  \"has_more\": false,  \"data\": [    {      \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",      \"object\": \"treasury.outbound_payment\",      \"amount\": 10000,      \"cancelable\": false,      \"created\": 1680716009,      \"currency\": \"usd\",      \"customer\": \"cus_4QFOF3xrvBT2nU\",      \"description\": \"OutboundPayment to a 3rd party\",      \"destination_payment_method\": \"pm_1MtaD82eZvKYlo2CtGr4OxTt\",      \"destination_payment_method_details\": {        \"type\": \"us_bank_account\",        \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"      },      \"end_user_details\": {        \"ip_address\": null,        \"present\": false      },      \"expected_arrival_date\": 1680716009,      \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",      \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYgdA-GrKk6NZNsf-FXPEqqbHm44fwJ57pNybbkweviYUDJGYFOw4f9cAqpfvPKQZ6y0S2C5DYyRwmDs_36\",      \"livemode\": false,      \"metadata\": {},      \"returned_details\": null,      \"statement_descriptor\": \"payment\",      \"status\": \"processing\",      \"status_transitions\": {        \"canceled_at\": null,        \"failed_at\": null,        \"posted_at\": null,        \"returned_at\": null      },      \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"    }    {...}    {...}  ],}\n```\n\n## [Cancel an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/cancel)\n\nCancel an OutboundPayment.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object if the cancellation succeeded. Returns an error if the OutboundPayment has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_payments/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_payments/obp_1MtaD72eZvKYlo2Cu5d5S1kX/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": null,        \"country\": null,        \"line1\": null,        \"line2\": null,        \"postal_code\": null,        \"state\": null      },      \"email\": null,      \"name\": null    },    \"financial_account\": {      \"id\": \"fa_1LpyM72eZvKYlo2CiUmr2kuV\",      \"network\": \"stripe\"    },    \"type\": \"financial_account\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgakyczTzCY6NZMi6lMnZXTYms--WBYQzUXzaEJ_JwErEK5FXXW8F9Qy7fEzKvsHEOzyjS9AtIuK8sUjgWdU\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680716010,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Fail an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundPayment to the `failed` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the failed state. Returns an error if the OutboundPayment has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgbuLATJtPw6NZOxERTeGKynM40SUCL6A1sqeZF9vkrX4q4M0rI4eY7EhfkOVvyileEuRReLgXE2crXLg7sd\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680716010,    \"posted_at\": null,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Post an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_post)Test helper\n\nTransitions a test mode created OutboundPayment to the `posted` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the posted state. Returns an error if the OutboundPayment has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgawWNwbI_w6NZNOI4y6vNpfIP-oQAT5mkBRbOHJN1f08r7jF-UumeywdupuJr7P2cxF8L5JRSVPMmttq_kA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"posted\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Return an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_return)Test helper\n\nTransitions a test mode created OutboundPayment to the `returned` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\n*   Optional hash to set the return code.\n    \n\n### Returns\n\nReturns the OutboundPayment object in the returned state. Returns an error if the OutboundPayment has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYhogtESYQ6NZMO6Vt0EC3mum1Ote762Q9ymvgfrijWXRfgVjJ5BoXVxeND-NunsJmjcHhb2F_4bmtHHWur\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"account_closed\",    \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"  },  \"statement_descriptor\": \"payment\",  \"status\": \"returned\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": 1680716011,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```",
    "title": "List all OutboundPayments | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/terminal/hardware_skus/retrieve",
    "markdown": "# Retrieve an available Terminal Hardware SKU\n\n## [Retrieve an available Terminal Hardware SKU](https://docs.stripe.com/api/terminal/hardware_skus/retrieve)Preview feature\n\nRetrieves an available `TerminalHardwareSKU` object.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns an available `TerminalHardwareSKU` object if a valid identifier was provided.\n\nGET /v1/terminal/hardware\\_skus/:id\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_skus/thsku_L5fys7HZ5o02Nc \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"thsku_L5fys7HZ5o02Nc\",  \"object\": \"terminal.hardware_sku\",  \"amount\": 450,  \"country\": \"AT\",  \"currency\": \"usd\",  \"orderable\": 100,  \"product\": \"thpr_MJfof7SLvdkG6T\",  \"status\": \"available\",  \"unavailable_after\": null}\n```\n\n## [List all Terminal Hardware SKUs](https://docs.stripe.com/api/terminal/hardware_skus/list)Preview feature\n\nList all `TerminalHardwareSKU` objects.\n\n### Parameters\n\n*   The ISO 3166-1 alpha-2 country code representing the country associated with the SKUs to be retrieved. Available country codes can be listed with the [List Country Specs](https://docs.stripe.com/api#list_country_specs) endpoint.\n    \n\n### More parameters\n\n### Returns\n\nA dictionary with a `data` property that contains an array of terminal hardware SKUs. Each entry in the array is a separate SKU object.\n\nGET /v1/terminal/hardware\\_skus\n\ncURL\n\n```\ncurl https://api.stripe.com/v1/terminal/hardware_skus \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"object\": \"list\",  \"url\": \"/v1/terminal/hardware_skus\",  \"has_more\": false,  \"data\": [    {      \"id\": \"thsku_L5fys7HZ5o02Nc\",      \"object\": \"terminal.hardware_sku\",      \"amount\": 450,      \"country\": \"AT\",      \"currency\": \"usd\",      \"orderable\": 100,      \"product\": \"thpr_MJfof7SLvdkG6T\",      \"status\": \"available\",      \"unavailable_after\": null    }    {...}    {...}  ],}\n```\n\n## [Transaction Entries](https://docs.stripe.com/api/treasury/transaction_entries)\n\nTransactionEntries represent individual units of money movements within a single [Transaction](#transactions).\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Retrieve an available Terminal Hardware SKU | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_payments/cancel",
    "markdown": "# Cancel an OutboundPayment | Stripe API Reference\n\nCancel an OutboundPayment.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object if the cancellation succeeded. Returns an error if the OutboundPayment has already been canceled or cannot be canceled.\n\nPOST /v1/treasury/outbound\\_payments/:id/cancel\n\n```\ncurl -X POST https://api.stripe.com/v1/treasury/outbound_payments/obp_1MtaD72eZvKYlo2Cu5d5S1kX/cancel \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2Cu5d5S1kX\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"billing_details\": {      \"address\": {        \"city\": null,        \"country\": null,        \"line1\": null,        \"line2\": null,        \"postal_code\": null,        \"state\": null      },      \"email\": null,      \"name\": null    },    \"financial_account\": {      \"id\": \"fa_1LpyM72eZvKYlo2CiUmr2kuV\",      \"network\": \"stripe\"    },    \"type\": \"financial_account\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgakyczTzCY6NZMi6lMnZXTYms--WBYQzUXzaEJ_JwErEK5FXXW8F9Qy7fEzKvsHEOzyjS9AtIuK8sUjgWdU\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"canceled\",  \"status_transitions\": {    \"posted_at\": null,    \"failed_at\": null,    \"canceled_at\": 1680716010,    \"returned_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Fail an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundPayment to the `failed` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the failed state. Returns an error if the OutboundPayment has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgbuLATJtPw6NZOxERTeGKynM40SUCL6A1sqeZF9vkrX4q4M0rI4eY7EhfkOVvyileEuRReLgXE2crXLg7sd\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680716010,    \"posted_at\": null,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Post an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_post)Test helper\n\nTransitions a test mode created OutboundPayment to the `posted` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the posted state. Returns an error if the OutboundPayment has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgawWNwbI_w6NZNOI4y6vNpfIP-oQAT5mkBRbOHJN1f08r7jF-UumeywdupuJr7P2cxF8L5JRSVPMmttq_kA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"posted\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Return an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_return)Test helper\n\nTransitions a test mode created OutboundPayment to the `returned` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\n*   Optional hash to set the return code.\n    \n\n### Returns\n\nReturns the OutboundPayment object in the returned state. Returns an error if the OutboundPayment has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYhogtESYQ6NZMO6Vt0EC3mum1Ote762Q9ymvgfrijWXRfgVjJ5BoXVxeND-NunsJmjcHhb2F_4bmtHHWur\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"account_closed\",    \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"  },  \"statement_descriptor\": \"payment\",  \"status\": \"returned\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": 1680716011,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Update an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_update)Test helper\n\nUpdates a test mode created OutboundPayment with tracking details. The OutboundPayment must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundPayment object with the updated tracking details. Returns an error if the OutboundPayment is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgawWNwbI_w6NZNOI4y6vNpfIP-oQAT5mkBRbOHJN1f08r7jF-UumeywdupuJr7P2cxF8L5JRSVPMmttq_kA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"posted\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": null,    \"canceled_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```",
    "title": "Cancel an OutboundPayment | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  },
  {
    "url": "https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail",
    "markdown": "# Test mode: Fail an OutboundPayment\n\n## [Test mode: Fail an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_fail)Test helper\n\nTransitions a test mode created OutboundPayment to the `failed` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the failed state. Returns an error if the OutboundPayment has already been failed or cannot be failed.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/fail\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/fail \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgbuLATJtPw6NZOxERTeGKynM40SUCL6A1sqeZF9vkrX4q4M0rI4eY7EhfkOVvyileEuRReLgXE2crXLg7sd\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"failed\",  \"status_transitions\": {    \"failed_at\": 1680716010,    \"posted_at\": null,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Post an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_post)Test helper\n\nTransitions a test mode created OutboundPayment to the `posted` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\nNo parameters.\n\n### Returns\n\nReturns the OutboundPayment object in the posted state. Returns an error if the OutboundPayment has already been posted or cannot be posted.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/post\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/post \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgawWNwbI_w6NZNOI4y6vNpfIP-oQAT5mkBRbOHJN1f08r7jF-UumeywdupuJr7P2cxF8L5JRSVPMmttq_kA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"posted\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": null,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Return an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_return)Test helper\n\nTransitions a test mode created OutboundPayment to the `returned` status. The OutboundPayment must already be in the `processing` state.\n\n### Parameters\n\n*   Optional hash to set the return code.\n    \n\n### Returns\n\nReturns the OutboundPayment object in the returned state. Returns an error if the OutboundPayment has already been returned or cannot be returned.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id/return\n\n```\ncurl -X POST https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y/return \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\"\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgYhogtESYQ6NZMO6Vt0EC3mum1Ote762Q9ymvgfrijWXRfgVjJ5BoXVxeND-NunsJmjcHhb2F_4bmtHHWur\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": {    \"code\": \"account_closed\",    \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"  },  \"statement_descriptor\": \"payment\",  \"status\": \"returned\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": 1680716011,    \"canceled_at\": null  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Test mode: Update an OutboundPayment](https://docs.stripe.com/api/treasury/outbound_payments/test_mode_update)Test helper\n\nUpdates a test mode created OutboundPayment with tracking details. The OutboundPayment must not be cancelable, and cannot be in the `canceled` or `failed` states.\n\n### Parameters\n\n*   #### \n    \n    tracking\\_detailsobjectRequired\n    \n    Details about network-specific tracking information.\n    \n\n### Returns\n\nReturns the OutboundPayment object with the updated tracking details. Returns an error if the OutboundPayment is in an invalid state or if `tracking_details` has already been set.\n\nPOST /v1/test\\_helpers/treasury/outbound\\_payments/:id\n\n```\ncurl https://api.stripe.com/v1/test_helpers/treasury/outbound_payments/obp_1MtaD72eZvKYlo2C36lgqC6Y \\  -u \"sk_test_4eC39Hq...arjtT1zdp7dcsk_test_4eC39HqLyjWDarjtT1zdp7dc:\" \\  -d \"tracking_details[type]\"=ach \\  -d \"tracking_details[ach][trace_id]\"=841042400123450\n```\n\n```\n{  \"id\": \"obp_1MtaD72eZvKYlo2C36lgqC6Y\",  \"object\": \"treasury.outbound_payment\",  \"amount\": 10000,  \"cancelable\": false,  \"created\": 1680716009,  \"currency\": \"usd\",  \"customer\": null,  \"description\": \"OutboundPayment to a 3rd party\",  \"destination_payment_method\": null,  \"destination_payment_method_details\": {    \"type\": \"us_bank_account\",    \"destination\": \"ba_1MtaD62eZvKYlo2C8vwjm7bc\"  },  \"end_user_details\": {    \"ip_address\": null,    \"present\": false  },  \"expected_arrival_date\": 1680716009,  \"financial_account\": \"fa_1MtaD72eZvKYlo2CYKM3DnUI\",  \"hosted_regulatory_receipt_url\": \"https://payments.stripe.com/regulatory-receipt/CBQaFwoVYWNjdF8xMDMyRDgyZVp2S1lsbzJDKOrhtqEGMgawWNwbI_w6NZNOI4y6vNpfIP-oQAT5mkBRbOHJN1f08r7jF-UumeywdupuJr7P2cxF8L5JRSVPMmttq_kA\",  \"livemode\": false,  \"metadata\": {},  \"returned_details\": null,  \"statement_descriptor\": \"payment\",  \"status\": \"posted\",  \"status_transitions\": {    \"failed_at\": null,    \"posted_at\": 1680716010,    \"returned_at\": null,    \"canceled_at\": null  },  \"tracking_details\": {    \"type\": \"ach\",    \"ach\": {      \"trace_id\": \"841042400123450\"    }  },  \"transaction\": \"trxn_1MtaD72eZvKYlo2CmUu4Vs5c\"}\n```\n\n## [Scheduled Queries](https://docs.stripe.com/api/sigma/scheduled_queries)\n\nIf you have [scheduled a Sigma query](https://docs.stripe.com/sigma/scheduled-queries), you’ll receive a `sigma.scheduled_query_run.created` webhook each time the query runs. The webhook contains a `ScheduledQueryRun` object, which you can use to retrieve the query results.\n\n## [Report Types](https://docs.stripe.com/api/reporting/report_type)\n\nThe Report Type resource corresponds to a particular type of report, such as the “Activity summary” or “Itemized payouts” reports. These objects are identified by an ID belonging to a set of enumerated values. See [API Access to Reports documentation](https://docs.stripe.com/reporting/statements/api) for those Report Type IDs, along with required and optional parameters.\n\nNote that certain report types can only be run based on your live-mode data (not test-mode data), and will error when queried without a [live-mode API key](https://docs.stripe.com/keys#test-live-modes).\n\n## [Session](https://docs.stripe.com/api/financial_connections/sessions)\n\nA Financial Connections Session is the secure way to programmatically launch the client-side Stripe.js modal that lets your users link their accounts.\n\n## [Verification Report](https://docs.stripe.com/api/identity/verification_reports)\n\nA VerificationReport is the result of an attempt to collect and verify data from a user. The collection of verification checks performed is determined from the `type` and `options` parameters used. You can find the result of each verification check performed in the appropriate sub-resource: `document`, `id_number`, `selfie`.\n\nEach VerificationReport contains a copy of any data collected by the user as well as reference IDs which can be used to access collected images through the [FileUpload](https://docs.stripe.com/api/files) API. To configure and create VerificationReports, use the [VerificationSession](https://docs.stripe.com/api/identity/verification_sessions) API.\n\nRelated guide: [Accessing verification results](https://docs.stripe.com/identity/verification-sessions#results).\n\n## [Crypto Onramp Quotes](https://docs.stripe.com/api/crypto/onramp_quotes)\n\nCrypto Onramp Quotes are estimated quotes for onramp conversions into all the different cryptocurrencies on different networks. The Quotes API allows you to display quotes in your product UI before directing the user to the onramp widget.\n\nRelated guide: [Quotes API](https://docs.stripe.com/crypto/quotes-api)\n\n## [Climate Product](https://docs.stripe.com/api/climate/product)\n\nA Climate product represents a type of carbon removal unit available for reservation. You can retrieve it to see the current price and availability.\n\n## [Forwarding Request](https://docs.stripe.com/api/forwarding/request)\n\nInstructs Stripe to make a request on your behalf using the destination URL. The destination URL is activated by Stripe at the time of onboarding. Stripe verifies requests with your credentials provided during onboarding, and injects card details from the payment\\_method into the request.\n\nStripe redacts all sensitive fields and headers, including authentication credentials and card numbers, before storing the request and response data in the forwarding Request object, which are subject to a 30-day retention period.\n\nYou can provide a Stripe idempotency key to make sure that requests with the same key result in only one outbound request. The Stripe idempotency key provided should be unique and different from any idempotency keys provided on the underlying third-party request.\n\nForwarding Requests are synchronous requests that return a response or time out according to Stripe’s limits.\n\nRelated guide: [Forward card details to third-party API endpoints](https://docs.stripe.com/payments/forwarding).\n\nEndpoints\n\n[POST/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/create)[GET/v1/forwarding/requests/:id](https://docs.stripe.com/api/forwarding/forwarding_requests/retrieve)[GET/v1/forwarding/requests](https://docs.stripe.com/api/forwarding/forwarding_requests/list)",
    "title": "Test mode: Fail an OutboundPayment | Stripe API Reference",
    "description": "Complete reference documentation for the Stripe API. Includes code snippets and examples for our Python, Java, PHP, Node.js, Go, Ruby, and .NET libraries.",
    "languageCode": "en-US"
  }
]