[{
  "url": "https://vercel.com/docs",
  "markdown": "# Vercel Documentation\n\nVercel's Frontend Cloud provides the developer experience and infrastructure to **build**, **scale**, and **secure** a faster, more personalized web.\n\n## Deploy a Template\n\n* * *\n\nOur ecosystem\n\n## Explore Vercel's open source frameworks\n\n* * *\n\nFind a solution\n\n## The Vercel Guides\n\n* * *\n\nWhat's new\n\n## Stay in sync with Vercel updates\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Vercel Documentation",
  "description": "Vercel's Frontend Cloud gives developers frameworks, workflows, and infrastructure to build a faster, more personalized web",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection",
  "markdown": "# Deployment Protection on Vercel\n\nDeployment Protection safeguards both your preview and production URLs across various environments. Configured at the project level through your settings, Deployment Protection provides detailed access control for different deployment types.\n\nVercel offers the following Deployment Protection features:\n\n*   [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication): Restricts access to your deployments to only Vercel users with suitable access rights. Vercel Authentication is available on all plans\n*   [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection): Restricts access to your deployments to only users with the correct password. Password Protection is available on the Enterprise plan, or as a paid add-on for Pro plans\n*   [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips): Restricts access to your deployments to only users with the correct IP address. Trusted IPs is available on the Enterprise plan\n\nDeployment Protection is managed through your project settings. To configure Deployment Protection:\n\n1.  From the [dashboard](https://vercel.com/dashboard), select the project you wish to set Deployment Protection on\n2.  Once selected, navigate to the Settings tab\n3.  From the list, select the Deployment Protection tab\n\nYou can configure the type of Deployment Protection for each environment in your project depending on your projects security needs. When choosing your protection method, you can select from three options:\n\n*   [Standard Protection](#protecting-preview-and-generated-urls-with-standard-protection): Protects all preview URLs and [production deployment URLs](https://vercel.com/docs/deployments/generated-urls). All [up to date production URLs](https://vercel.com/docs/deployments/generated-urls) are unprotected. Standard Protection is available on all plans\n*   [Only Preview Deployments](#protecting-only-preview-deployments): Protects only preview URLs. Protecting preview deployments is available on all plans\n*   [All Deployments](#protect-all-deployments): Protects all URLs. Protecting all deployments is available on Pro and Enterprise plans\n\nTo protect [only production URLs](#protecting-only-production-deployments), you can use [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips). Note that this option is only available on the Enterprise plan.\n\nThe Standard Protection option is the recommended way to secure all your domains, including both preview and [production deployment URLs](https://vercel.com/docs/deployments/generated-urls), to limit public access.\n\nWith Standard Protection selected, `example.com` serves as your publicly-accessible production domain, while all other generated URLs would be protected.\n\nWhile generated deployment URLs are protected, up-to-date production domains remain accessible, including the branch domain\n\n![Selecting Standard Protection in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698411837%2Ffront%2Fdocs%2Fsecurity%2Fstandard-protection-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting Standard Protection in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698411830%2Ffront%2Fdocs%2Fsecurity%2Fstandard-protection-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting Standard Protection in the Vercel Dashboard.\n\nStandard Protection can be configured with the following Deployment Protection features:\n\nEnabling Standard Protection restricts public access to the production [generated deployment URL](https://vercel.com/docs/deployments/generated-urls). This affects `VERCEL_URL` from [System Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables#system-environment-variables) and `VERCEL_URL` from [Framework Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables#framework-environment-variables), making them unsuitable for fetch requests.\n\nIf you are using `VERCEL_URL` to make fetch requests, you will need to update your requests to target the same domain the user has requested.\n\nThe Framework Environment Variable `VERCEL_URL` is prefixed with the name of the framework. For example, `VERCEL_URL` for Next.js is `NEXT_PUBLIC_VERCEL_URL`, and `VERCEL_URL` for Nuxt.js is `NUXT_ENV_VERCEL_URL`. See the [Framework Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables#framework-environment-variables) documentation for more information.\n\nFor client-side requests, use relative paths in the fetch call to target the current domain, automatically including the user's authentication cookie for protected URLs.\n\n```\n// Before\nfetch(`${process.env.VERCEL_URL}/some/path`);\n \n// After\nfetch('/some/path');\n// Note: For operations requiring fully qualified URLs, such as generating OG images,\n// replace '/some/path' with the actual domain (e.g. 'https://yourdomain.com/some/path').\n```\n\nFor server-side requests, use the origin from the incoming request and manually add request cookies to pass the user's authentication cookie.\n\n```\nconst headers = { cookie: <incoming request header cookies> };\nfetch('<incoming request origin>/some/path', { headers });\n```\n\nBypassing protection using [Protection Bypass for Automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation) is an option but not required for requests targeting the same domain.\n\nWhen Only Preview Deployments is selected, preview URLs are protected, while the production environment remains publicly accessible. This allows for secure testing and review.\n\nFor example, Vercel generates a preview URL such as `my-preview-5678.vercel.app`, which will be protected. In contrast, all production URLs, including `example.com` and any past or current generated production branch URLs like `*-main.vercel.app`, remain accessible.\n\n![Selecting Only Preview Deployments in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698413303%2Ffront%2Fdocs%2Fsecurity%2Fonly-preview-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting Only Preview Deployments in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698413299%2Ffront%2Fdocs%2Fsecurity%2Fonly-preview-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting Only Preview Deployments in the Vercel Dashboard.\n\nProtecting only preview deployments can be configured with the following Deployment Protection features:\n\nWhen Production Deployments is selected, only your production domain, and all production deployments are secured. This is useful for restricting access to trusted IPs.\n\nFor example, if `example.com` is your production domain, it becomes secure under this setting, while preview URLs remain publicly accessible.\n\nTo protect only production deployments, use [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips).\n\n![Selecting All Deployments in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698745795%2Ffront%2Fdocs%2Fsecurity%2Fprod-deployments-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting All Deployments in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698745793%2Ffront%2Fdocs%2Fsecurity%2Fprod-deployments-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting All Deployments in the Vercel Dashboard.\n\nSelecting All Deployments secures all deployments, both preview and production, restricting public access entirely.\n\nWith this configuration, all URLs, including your production domain `example.com` and [generated URLs](https://vercel.com/docs/deployments/generated-urls) like `my-project-1234.vercel.app`, are protected.\n\n![Selecting All Deployments in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698412972%2Ffront%2Fdocs%2Fsecurity%2Fall-deployments-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting All Deployments in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698412976%2Ffront%2Fdocs%2Fsecurity%2Fall-deployments-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting All Deployments in the Vercel Dashboard.\n\nProtecting all deployments can be configured with the following Deployment Protection features:\n\nAdvanced Deployment Protection features are available to Enterprise customers by default. Customers on the Pro plan can access these features for an additional $150 per month, including:\n\nTo opt-into Advanced Deployment Protection while on a Pro plan:\n\n1.  Navigate to your Project Settings and select the Deployment Protection tab\n2.  Then choose one of the above protection features\n3.  You will then be prompted to upgrade to the Advanced Deployment Protection add-on through an Enable and Pay button before you can use the feature\n\nWhen you enable Advanced Deployment Protection, you will be charged $150 per month for the add-on, and will have access to _all_ Advanced Deployment Protection features.\n\nTo opt out of Advanced Deployment Protection:\n\n1.  Navigate to your Team Settings, then the Billing page\n2.  Press Edit on the feature you want to disable and follow the instructions to disable the add-on\n\nIn order to disable Advanced Deployment Protection, you must have been using the feature for a minimum of thirty days. After this time, once cancelled, all Advanced Deployment Protection features will be disabled.",
  "title": "Deployment Protection on Vercel",
  "description": "Learn how to secure your Vercel project's preview and production URLs with Deployment Protection. Configure fine-grained access control at the project level for different deployment environments.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/secure-backend-access",
  "markdown": "# Secure Backend Access\n\nWith Secure Compute, you can create private connections between [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and your backend cloud, such as databases and other private infrastructure.\n\n​With Vercel's OIDC federation, you can connect to your backend with auto-generated, short-lived, and non-persistent tokens that you then configure your backend to trust.",
  "title": "Secure Backend Access",
  "description": "Secure the access to your backend services using Secure Compute and OpenID Connect (OIDC) Federation.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/audit-log",
  "markdown": "# Audit Logs\n\nAudit logs help you track and analyze your [team members'](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) activity. They can be accessed by team members with the [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role, and are available to customers on [enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans.\n\nTo export and download audit logs:\n\n*   Go to Team Settings > Security > Audit Log\n*   Select a timeframe to export a Comma Separated Value ([CSV](#audit-logs-csv-file-structure)) file containing all events occurred during that time period\n*   Click the Export CSV button to download the file\n\nThe team owner requesting an export will then receive an email with a link containing the report. This link is used to access the report and is valid for 24 hours.\n\nNote that reports can be generated for the last 90 days (three months) and will not impact your billing.\n\n![Select a timeframe to export audit logs for your team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Faudit-logs-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Select a timeframe to export audit logs for your team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Faudit-logs-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelect a timeframe to export audit logs for your team.\n\nThe CSV file can be opened using any spreadsheet-compatible software, and includes the following fields:\n\n| Property | Description |\n| --- | --- |\n| timestamp | Time and date at which the event occurred |\n| action | Name for the specific event. E.g, `project.created`, `team.member.left`, `project.transfer_out.completed`, `auditlog.export.downloaded`, `auditlog.export.requested`, etc. [Learn more about it here](#actions). |\n| actor\\_vercel\\_id | User ID of the team member responsible for an event |\n| actor\\_name | Account responsible for the action. For example, username of the team member |\n| actor\\_email | Email address of the team member responsible for a specific event |\n| location | IP address from where the action was performed |\n| user\\_agent | Details about the application, operating system, vendor, and/or browser version used by the team member |\n| previous | Custom metadata (JSON object) showing the object's previous state |\n| next | Custom metadata (JSON object) showing the object's updated state |\n\nVercel logs the following list of `actions` performed by team members.\n\nMaps a custom domain or subdomain to a specific deployment or URL of a project. To learn more, see the `vercel alias` [docs](https://vercel.com/docs/cli/alias).\n\n| Action Name | Description |\n| --- | --- |\n| `alias.created` | Indicates that a new alias was created |\n| `alias.deleted` | Indicates that an alias was deleted |\n\nRefers to the audit logs of your Vercel team account.\n\n| Action Name | Description |\n| --- | --- |\n| `auditlog.export.downloaded` | Indicates that an export of the audit logs was downloaded |\n| `auditlog.export.requested` | Indicates that an export of the audit logs was requested |\n\nA digital certificate to manage SSL/TLS certificates for your custom domains through the [vercel certs](https://vercel.com/docs/cli/certs) command. It is used to authenticate the identity of a server and establish a secure connection.\n\n| Action Name | Description |\n| --- | --- |\n| `cert.created` | Indicates that a new certificate was created |\n| `cert.deleted` | Indicates that a new certificate was deleted |\n| `cert.renewed` | Indicates that a new certificate was renewed |\n\nCreate URLs that accept HTTP POST requests to trigger deployments and rerun the build step. To learn more, see the [Deploy Hooks](https://vercel.com/docs/deployments/deploy-hooks) docs.\n\n| Action Name | Description |\n| --- | --- |\n| `deploy_hook.deduped` | A deploy hook is de-duplicated which means that multiple instances of the same hook have been combined into one |\n\nRefers to a successful build of your application. To learn more, see the [deployment](https://vercel.com/docs/deployments/overview) docs.\n\n| Action Name | Description |\n| --- | --- |\n| `deployment.deleted` | Indicates that a deployment was deleted |\n| `deployment.job.errored` | Indicates that a job in a deployment has failed with an error |\n\nA unique name that identifies your website. To learn more, see the [domains](https://vercel.com/docs/projects/domains) docs.\n\n| Action Name | Description |\n| --- | --- |\n| `domain.auto_renew.changed` | Indicates that the auto-renew setting for a domain was changed |\n| `domain.buy` | Indicates that a domain was purchased |\n| `domain.created` | Indicates that a new domain was created |\n| `domain.delegated` | Indicates that a domain was delegated to another account |\n| `domain.deleted` | Indicates that a domain was deleted |\n| `domain.move_out.requested` | Indicates that a request was made to move a domain out of the current account |\n| `domain.moved_in` | Indicates that a domain was moved into the current account |\n| `domain.moved_out` | Indicates that a domain was moved out of the current account |\n| `domain.record.created` | Indicates that a new domain record was created |\n| `domain.record.deleted` | Indicates that a new domain record was deleted |\n| `domain.record.updated` | Indicates that a new domain record was updated |\n| `domain.transfer_in` | Indicates that a request was made to transfer a domain into the current account |\n| `domain.transfer_in.canceled` | Indicates that a request to transfer a domain into the current account was canceled |\n| `domain.transfer_in.completed` | Indicates that a domain was transferred into the current account |\n\nA key-value data store associated with your Vercel account that enables you to read data at the edge without querying an external database. To learn more, see the [Edge Config docs](https://vercel.com/docs/storage/edge-config).\n\n| Action Name | Description |\n| --- | --- |\n| `edge_config.created` | Indicates that a new edge configuration was created |\n| `edge_config.deleted` | Indicates that a new edge configuration was deleted |\n| `edge_config.updated` | Indicates that a new edge configuration was updated |\n\nHelps you pair Vercel's functionality with a third-party service to streamline installation, reduce configuration, and increase productivity. To learn more, see the [integrations docs](https://vercel.com/docs/integrations).\n\n| Action Name | Description |\n| --- | --- |\n| `integration.deleted` | Indicates that an integration was deleted |\n| `integration.installed` | Indicates that an integration was installed |\n| `integration.updated` | Indicates that an integration was updated |\n\n[Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) allows visitors to access preview deployments with a password to manage team-wide access.\n\n| Action Name | Description |\n| --- | --- |\n| `password_protection.disabled` | Indicates that password protection was disabled |\n| `password_protection.enabled` | Indicates that password protection was enabled |\n\nCustomize the appearance of your preview deployment URLs by adding a valid suffix. To learn more, see the [preview deployment suffix](https://vercel.com/docs/deployments/generated-urls#preview-deployment-suffix) docs.\n\n| Action Name | Description |\n| --- | --- |\n| `preview_deployment_suffix.disabled` | Indicates that the preview deployment suffix was disabled |\n| `preview_deployment_suffix.enabled` | Indicates that the preview deployment suffix was enabled |\n| `preview_deployment_suffix.updated` | Indicates that the preview deployment suffix was updated |\n\nRefers to actions performed on your Vercel [projects](https://vercel.com/docs/projects/overview).\n\n| Action Name | Description |\n| --- | --- |\n| `project.analytics.disabled` | Indicates that analytics were disabled for the project |\n| `project.analytics.enabled` | Indicates that analytics were enabled for the project |\n| `project.deleted` | Indicates that a project was deleted |\n| `project.env_variable` | This field refers to an environment variable within a project |\n| `project.env_variable.created` | Indicates that a new environment variable was created for the project |\n| `project.env_variable.deleted` | Indicates that a new environment variable was deleted for the project |\n| `project.env_variable.updated` | Indicates that a new environment variable was updated for the project |\n\nRefers to the password protection settings for a project.\n\n| Action Name | Description |\n| --- | --- |\n| `project.password_protection.disabled` | Indicates that password protection was disabled for the project |\n| `project.password_protection.enabled` | Indicates that password protection was enabled for the project |\n| `project.password_protection.updated` | Indicates that password protection was updated for the project |\n\nRefers to the [Single Sign-On (SSO)](https://vercel.com/docs/security/saml) protection settings for a project.\n\n| Action Name | Description |\n| --- | --- |\n| `project.sso_protection.disabled` | Indicates that SSO protection was disabled for the project |\n| `project.sso_protection.enabled` | Indicates that SSO protection was enabled for the project |\n| `project.sso_protection.updated` | Indicates that SSO protection was updated for the project |\n\nRefers to the transfer of a project between Vercel accounts.\n\n| Action Name | Description |\n| --- | --- |\n| `project.transfer_in.completed` | Indicates that a project transfer into the current account was completed successfully |\n| `project.transfer_in.failed` | Indicates that a project transfer into the current account was failed |\n| `project.transfer_out.completed` | Indicates that a project transfer out of the current account was completed successfully |\n| `project.transfer_out.failed` | Indicates that a project transfer out of the current account was |\n| `project.transfer.started` | Indicates that a project transfer was initiated |\n\nRefers to the generation of web [analytics](https://vercel.com/docs/analytics) for a Vercel project.\n\n| Action Name | Description |\n| --- | --- |\n| `project.web-analytics.disabled` | Indicates that web analytics were disabled for the project |\n| `project.web-analytics.enabled` | Indicates that web analytics were enabled for the project |\n\nHelps you list, add, remove, and manage `vercel secrets` used in environment variables from the command line. To learn more see the [`secrets` docs](https://vercel.com/docs/cli/secrets).\n\n| Action Name | Description |\n| --- | --- |\n| `secret.created` | Indicates that a new secret was created |\n| `secret.deleted` | Indicates that a new secret was deleted |\n| `secret.name.updated` | Indicates that the name of a secret was updated |\n\nRefers to environment variables defined at the team level. To learn more, see the [shared environment variables](https://vercel.com/docs/projects/environment-variables/shared-environment-variables) docs.\n\n| Action Name | Description |\n| --- | --- |\n| `shared_env_variable.created` | Indicates that a new shared environment variable was created |\n| `shared_env_variable.decrypted` | Indicates that a new shared environment variable was decrypted |\n| `shared_env_variable.deleted` | Indicates that a new shared environment variable was deleted |\n| `shared_env_variable.updated` | Indicates that a new shared environment variable was updated |\n\nRefers to actions performed by members of a Vercel [team](https://vercel.com/docs/accounts/create-a-team).\n\n| Action Name | Description |\n| --- | --- |\n| `team.avatar.updated` | Indicates that the avatar (profile picture) associated with the team was updated |\n| `team.created` | Indicates that a new team was created |\n| `team.deleted` | Indicates that a new team was deleted |\n| `team.name.updated` | Indicates that the name of the team was updated |\n| `team.slug.updated` | Indicates that the team's unique identifier, or \"slug,\" was updated |\n\nRefers to actions performed by any [team member](https://vercel.com/docs/accounts/team-members-and-roles).\n\n| Action Name | Description |\n| --- | --- |\n| `team.member.access_request.confirmed` | Indicates that an access request by a team member was confirmed |\n| `team.member.access_request.declined` | Indicates that an access request by a team member was declined |\n| `team.member.access_request.requested` | Indicates that a team member has requested access to the team |\n| `team.member.added` | Indicates that a new member was added to the team |\n| `team.member.deleted` | Indicates that a member was removed from the team |\n| `team.member.joined` | Indicates that a member has joined the team |\n| `team.member.left` | Indicates that a new member has left the team |\n| `team.member.role.updated` | Indicates that the role of a team member was updated |",
  "title": "Audit Logs",
  "description": "Learn how to track and analyze your team members' activities.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/ddos-mitigation",
  "markdown": "# DDoS Mitigation\n\nVercel provides automatic DDoS mitigation for all deployments, regardless of the plan that you are on. We block incoming traffic if we identify abnormal or suspicious levels of incoming requests. It works by:\n\n*   Monitoring traffic: Vercel Firewall continuously analyzes incoming traffic to detect signs of DDoS attacks. This helps to identify and mitigate threats in real-time\n*   Blocking traffic: Vercel Firewall filters out malicious traffic while allowing legitimate requests to pass through\n*   Scaling resources: During a DDoS attack, Vercel Firewall dynamically scales resources to absorb the increased traffic, preventing your applications or sites from being overwhelmed\n\nIf you need further control over incoming traffic, you can temporarily enable [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode) to challenge all visitors to your site.\n\n**Note:** If you need dedicated DDoS support, contact us to discuss Enterprise.\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nA Denial of Service (DoS) attack happens when one device attempts to exhaust the resources of a system by sending a large amount of data to a server or network. These attacks can often be mitigated by finding and closing off the connection to the source of the attack.\n\nA Distributed Denial of Service (DDoS) attack happens when multiple connected devices are used to simultaneously overwhelm a site with targeted, fake traffic. The goal of DoS and DDoS attacks is to disrupt access to the servers hosting the site.\n\nThe OSI model is a concept that outlines the different communication steps of a networking system. Different attack types can target different layers of the [OSI model](https://en.wikipedia.org/wiki/OSI_model).\n\nDDoS attacks often target the [network](#layer-3-ddos) (layer 3), [transport](#layer-4-ddos) (layer 4), and [application](#layer-7-ddos) (layer 7) layers of the OSI model. Vercel mitigates against these attacks, and protects the entire platform and all customers from attacks that would otherwise affect reliability.\n\nThe goal of a layer 3 (L3) DDoS attack is to slow down and ultimately crash applications, servers, and entire networks. These attacks are often used to target specific IP addresses, but can also target entire networks.\n\nThe goal of a layer 4 (L4) DDoS attack is to crash and slow down applications. They target the 3-way-handshake performed on TCP connections. This is often called a SYN flood. Layer 4 DDoS attacks are used to target specific ports, but can also target entire protocols.\n\nThe goal of a Layer 7 (L7) DDoS attack is to crash and slow down software at the application layer by targeting protocols such as HTTP, GET, and POST requests. They are often silent and look to leverage vulnerabilities by sending many innocuous requests to a single page. Vercel provides sophisticated proprietary L7 mitigation and is constantly tuning and adjusting attack detection techniques.\n\nVercel mitigates against L3, L4, and L7 DDoS attacks regardless of the plan you are on. The Vercel Firewall uses hundreds of signals and detection factors to fingerprint request patterns, determining if they appear to be an attack, and challenging or blocking requests if they appear illegitimate.\n\nHowever, there are other steps you can take to protect your site during DDoS attacks:\n\n*   Enable [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode) to challenge all visitors to your site. This is a temporary measure and provides another layer of security to ensure all traffic to your site is legitimate\n*   You can set up [IP Blocking](https://vercel.com/docs/security/vercel-waf/ip-blocking) to block specific IP addresses from accessing your projects. Enterprise teams can also receive dedicated DDoS support\n*   You can add [Custom Rules](https://vercel.com/docs/security/vercel-waf/custom-rules) to deny or challenge specific traffic to your site based on the conditions of the rules\n*   You can also use Edge Middleware to [block requests](https://github.com/vercel/examples/tree/main/edge-middleware/geolocation-country-block) based on specific criteria or to implement [rate limiting](https://vercel.com/guides/rate-limiting-edge-middleware-vercel-kv).\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\n[Vercel automatically mitigates against L3, L4, and L7 DDoS attacks](https://vercel.com/docs/security/ddos-mitigation) at the platform level for all plans. Vercel does not charge customers for traffic that gets blocked by the Firewall.\n\nUsage will be incurred for requests that are successfully served prior to us automatically mitigating the event. Usage will also be incurred for requests that are not recognized as a DDoS event, which may include bot and crawler traffic.\n\nFor an additional layer of security, we recommend that you enable [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode) when you are under attack, which is available for free on all plans. While some malicious traffic is automatically challenged, enabling Attack Challenge Mode will challenge all traffic, including legitimate traffic to ensure that only real users can access your site.\n\nYou can monitor usage in the [Vercel Dashboard](https://vercel.com/dashboard) under the Usage tab, although you will [receive notifications](https://vercel.com/docs/dashboard-features/notifications#on-demand-usage-notifications) when nearing your usage limits.",
  "title": "DDoS Mitigation",
  "description": "Learn how the Vercel Firewall mitigates against DoS and DDoS attacks",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli",
  "markdown": "# Vercel CLI Overview\n\nVercel gives you multiple ways to interact with and configure your Vercel Projects. With the command-line interface (CLI) you can interact with the Vercel platform using a terminal, or through an automated system, enabling you to [retrieve logs](https://vercel.com/docs/cli/logs), manage [certificates](https://vercel.com/docs/cli/certs), replicate your deployment environment [locally](https://vercel.com/docs/cli/dev), manage Domain Name System (DNS) [records](https://vercel.com/docs/cli/dns), and more.\n\nIf you'd like to interface with the platform programmatically, check out the [REST API documentation](https://vercel.com/docs/rest-api).\n\nTo download and install Vercel CLI, run the following command:\n\nWhen there is a new release of Vercel CLI, running any command will show you a message letting you know that an update is available.\n\nIf you have installed our command-line interface through [npm](http://npmjs.org/) or [Yarn](https://yarnpkg.com/), the easiest way to update it is by running the installation command yet again.\n\nIf you see permission errors, please read npm's [official guide](https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally). Yarn depends on the same configuration as npm.\n\nThe `--version` option can be used to verify the version of Vercel CLI currently being used.\n\nUsing the `vercel` command with the `--version` option.\n\nVercel CLI requires you to log in and authenticate before accessing resources or performing administrative tasks. In a terminal environment, you can use [`vercel login`](https://vercel.com/docs/cli/login), which requires manual input. In a CI/CD environment where manual input is not possible, you can create a token on your [tokens page](https://vercel.com/account/tokens) and then use the [`--token` option](https://vercel.com/docs/cli/global-options#token) to authenticate.",
  "title": "Vercel CLI Overview",
  "description": "Learn how to use the Vercel command-line interface (CLI) to manage and configure your Vercel Projects from the command line.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/getting-started-with-vercel",
  "markdown": "# Get started with Vercel\n\nVercel is a platform for developers that provides the tools, workflows, and infrastructure you need to build and deploy your web apps faster, without the need for additional configuration.\n\nVercel supports [popular frontend frameworks](https://vercel.com/docs/frameworks) out-of-the-box, and its scalable, secure infrastructure is globally distributed to serve content from data centers near your users for optimal speeds.\n\nDuring development, Vercel provides tools for real-time collaboration on your projects such as automatic preview and production environments, and comments on preview deployments.\n\nTo get started, create an account with Vercel. You can [select the plan](https://vercel.com/docs/accounts/plans) that's right for you.\n\nOnce you create an account, you can choose to authenticate either with a Git provider or by using an email. When using email authentication, you may need to confirm both your email address and a phone number.\n\nThis tutorial is framework agnostic but Vercel supports many frontend [frameworks](https://vercel.com/docs/frameworks/more-frameworks). As you go through the docs, the quickstarts will provide specific instructions for your framework. If you don't find what you need, give us feedback and we'll update them!\n\nWhile many of our instructions use the dashboard, you can also use [Vercel CLI](https://vercel.com/docs/cli) to carry out most tasks on Vercel. In this tutorial, look for the \"Using CLI?\" section for the CLI steps. To use the CLI, you'll need to install it:",
  "title": "Get started with Vercel",
  "description": "This step-by-step tutorial will help you get started with Vercel, an end-to-end platform for developers that allows you to create and deploy your web application.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/incremental-migration",
  "markdown": "# Incremental Migration to Vercel\n\nWhen migrating to Vercel you should use an incremental migration strategy. This allows your current site and your new site to operate simultaneously, enabling you to move different sections of your site at a pace that suits you.\n\nIn this guide, we'll explore incremental migration benefits and different [strategies](#incremental-migration-strategies).\n\nIncremental migrations offer several advantages:\n\n*   Reduced risk due to smaller migration steps\n*   A smoother rollback path in case of unexpected issues\n*   Earlier technical implementation and business value validation\n*   Downtime-free migration without maintenance windows\n\nOne-time migration involves developing the new site separately before switching traffic over. This approach has certain drawbacks:\n\n*   Late discovery of expensive product issues\n*   Difficulty in assessing migration success upfront\n*   Potential for reaching a point of no-return, even with major problem detection\n*   Possible business loss due to legacy system downtime during migration\n\nDespite requiring more effort to make the new and legacy sites work concurrently, incremental migration is beneficial if:\n\n*   Risk reduction and time-saving benefits outweigh the effort\n*   The extra effort needed for specific increments to interact with legacy data doesn't exceed the time saved\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fincremental-migration%2Fincremental-migration-steps-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fincremental-migration%2Fincremental-migration-steps-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nIncremental migration process\n\nWith incremental migration, legacy and new systems operate simultaneously. Depending on your strategy, you'll select a system aspect, like a feature or user group, to migrate incrementally.\n\nThis strategy targets system features with the following process:\n\n1.  Identify all legacy system features\n2.  Choose key features for the initial migration\n3.  Repeat until all features have been migrated\n\nThroughout, both systems operate in parallel with migrated features routed to the new system.\n\nThis strategy focuses on system users with the following process:\n\n1.  Identify all user groups\n2.  Select a user group for initial migration to the new system\n3.  Repeat until all users have been migrated\n\nDuring migration, a subset of users accesses the new system while others continue using the legacy system.\n\nA blend of vertical and horizontal strategies. For each feature subset, migrate by user group before moving to the next feature subset.",
  "title": "Incremental Migration to Vercel",
  "description": "Learn how to migrate your app or website to Vercel with minimal risk and high impact.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/rest-api",
  "markdown": "# Vercel REST API\n\nVercel REST API allows developers to interact programmatically with their Vercel account and services using HTTP requests.\n\nWith the API, developers can deploy new versions of web applications, manage custom domains, retrieve information about deployments, and manage secrets and environment variables for projects.\n\nThe API supports any programming language or framework that can send HTTP requests.\n\nYou can use the commands listed below with `curl` by providing your [token](https://vercel.com/account/tokens).\n\nOur API is exposed as an HTTP/1 and HTTP/2 service over SSL. All endpoints live under the URL `https://api.vercel.com` and then generally follow the REST architecture.\n\nThe API supports HTTP versions 1, 1.1, and 2, although HTTP/2 is preferred.\n\nTLS versions 1.2 and 1.3 are supported, with resumption.\n\nFor more information on TLS support, refer to the [SSL Labs report](https://www.ssllabs.com/ssltest/analyze.html?d=api.vercel.com&hideResults=on&latest).\n\nAll requests must be encoded as JSON with the `Content-Type: application/json` header. If not otherwise specified, responses from the Vercel API, including errors, are encoded exclusively as JSON as well.\n\nVercel Access Tokens are required to authenticate and use the Vercel API.\n\n```\n  Authorization: Bearer <TOKEN>\n```\n\nThe `Authorization` header with an access token.\n\nAccess Tokens can be created and managed from inside your [account settings](https://vercel.com/account/tokens).\n\n![Create a new Access Token.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701697368%2Fdocs-assets%2Fstatic%2Fdocs%2Frest-api%2Fcreate-token-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Create a new Access Token.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701697369%2Fdocs-assets%2Fstatic%2Fdocs%2Frest-api%2Fcreate-token-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nCreate a new Access Token.\n\n1.  In the upper-right corner of your [dashboard](https://vercel.com/dashboard), click your profile picture, then select Settings\n2.  Select Tokens from the sidebar\n3.  Enter a descriptive name for the token\n4.  Choose the scope from the list of Teams in the drop-down menu. The scope ensures that only your specified Team(s) can use an Access Token\n5.  From the drop-down, select an expiration date for the Token\n6.  Click Create Token\n7.  Once you've created an Access Token, securely store the value as it will not be shown again.\n\nSetting an expiration date on an Access Token is highly recommended and is considered one of the standard security practices that helps keep your information secure. You can select from a default list of expiration dates ranging from 1 day to 1 year. You can view the expiration date of your Access Tokens on the [tokens page.](https://vercel.com/account/tokens)\n\nBy default, you can access resources contained within your own user account (personal).\n\nTo access resources owned by a team, or create a project for a _specific_ team, you must first find the [Team ID](https://vercel.com/docs/teams-and-accounts/create-or-join-a-team#find-your-team-id).\n\nAfter you obtained the Team ID, append it as a query string at the end of the API endpoint URL:\n\n```\nhttps://api.vercel.com/v6/deployments?teamId=[teamID]\n```\n\nReplace `[teamID]` with the Team ID you obtained.\n\nYou still need to provide an API token through the `Authorization` header.\n\nIf authentication is unsuccessful for a request, the [error status code](#errors) 403 is returned.\n\nWhen the API response includes an array of records, a pagination object is returned when the total number of records present is greater than the limit per request. The default value of this limit is 20 but it can be changed by passing a value to the query parameter `limit` when the request is made. The maximum possible value of `limit` is 100.\n\nYou can then use the pagination object to make additional requests and obtain all the records.\n\nThe pagination object is structured as shown in the example below:\n\n```\n{\n  \"pagination\": {\n    \"count\": 20, //Amount of items in the current page.\n    \"next\": 1555072968396, //Timestamp that must be used to request the next page.\n    \"prev\": 1555413045188 //Timestamp that must be used to request the previous page.\n  }\n}\n```\n\nPagination object returned with response\n\nIn order to obtain the records for the next batch, perform the following actions:\n\n1.  Send a request to the same API endpoint\n2.  Include the query parameter `until` with a value equal to the timestamp value of `next` returned in the previous request\n3.  Repeat this sequence until the pagination object has a `next` value of `null`\n\nThis is an example of applying this sequence with `Node.js` to save all the projects in your personal account to a `json` file:\n\n```\nconst axios = require('axios');\nconst fs = require('fs');\nconst vercelToken = 'yourtokenvalue'; //Replace with your token\nconst apiEndPt = 'https://api.vercel.com/v9/projects';\n \nlet config = {\n  method: 'get',\n  url: apiEndPt,\n  headers: {\n    Authorization: 'Bearer ' + vercelToken,\n  },\n};\nlet results = [];\n \n(function loop() {\n  axios(config)\n    .then(function (response) {\n      results.push(...response.data.projects);\n      if (response.data.pagination.next !== null) {\n        config.url = `${apiEndPt}?until=${response.data.pagination.next}`;\n        loop();\n      } else {\n        //you can use the final results object and for example save it to a json file\n        fs.writeFileSync('projects.json', JSON.stringify(results));\n      }\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n})();\n```\n\nSave all the Projects in your Vercel personal account to `projects.json`\n\nAll API endpoints contain a `code` and `message` within the error responses, though some API endpoints extend the `error` object to contain other information. Each endpoint that does this will be documented in their appropriate section.\n\nWhile we recommend that you write error messages that fit your needs and provide your users with the best experience, our `message` fields are designed to be neutral, not contain sensitive information, and can be safely passed down to user interfaces.\n\n```\n{\n  \"error\": {\n    \"code\": \"forbidden\",\n    \"message\": \"Not authorized\"\n  }\n}\n```\n\nAn example of an unauthorized request error.\n\nWe limit the number of calls you can make over a certain period of time. Rate limits vary and are specified by the following header in all responses:\n\n| Header | Description |\n| --- | --- |\n| `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |\n\nWhen the rate limit is exceeded, an error is returned with the status \"429 Too Many Requests\":\n\n```\n{\n  \"error\": {\n    \"code\": \"too_many_requests\",\n    \"message\": \"Rate limit exceeded\"\n  }\n}\n```\n\nAn example of a rate limit exceeded error.\n\nAll endpoints and examples are designated with a specific version. Versions vary per endpoint and are not global.\n\nThe response shape of a certain endpoint is not guaranteed to be fixed over time. In particular, we might add new keys to responses without bumping a version endpoint, which will be noted in the changelog.\n\nTo ensure the security and correctness of your application, make sure to only read the keys from the response that your application needs. Don't proxy entire responses to third-parties without validation.\n\nOld versions of each endpoint are supported for as long as possible. When we intend to deprecate, we will notify users in the changelog section.\n\nEndpoint versions follow the base URL and come before the endpoint. For example:\n\n```\nhttps://api.vercel.com/v6/deployments`\n```\n\nUsing version `6` of the [deployments endpoint](#endpoints/deployments).\n\nThe following is a list of the types of data used within the Vercel API:\n\n| Name | Definition | Example |\n| --- | --- | --- |\n| ID  | A unique value used to identify resources. | `\"V0fra8eEgQwEpFhYG2vTzC3K\"` |\n| String | A string is a sequence of characters used to represent text. | `\"value\"` |\n| Integer | An integer is a number without decimals. | `1234` |\n| Float | A float is a number with decimals. | `12.34` |\n| Map | A data structure with a list of values assigned to a unique key. | `{ \"key\": \"value\" }` |\n| List | A data structure with only a list of values separated by a comma. | `[\"value\", 1234, 12.34]` |\n| Enum | An Enum is a String with only a few possible valid values. | `A \\| B` |\n| Date | An Integer representing a date in milliseconds since the UNIX epoch. | `1540095775941` |\n| Boolean | A Boolean is a type of two possible values representing true or false. | `true` |\n\nChecks are tests and assertions that run after each deployment has been built. They are powered by [Integrations](https://vercel.com/docs/integrations), which allow you to connect any third-party service of your choice with Vercel. Learn more about [Checks](https://vercel.com/docs/deployments/checks) for deployments.\n\nPlease update the Check `status` to `running` once you have begun performing the respective action within your service. Updating the Check with a `conclusion` will automatically set the Check `status` to `completed`.\n\nBased on the `conclusion`, a deployment may fail:\n\n| Conclusion | `blocking` equals to true |\n| --- | --- |\n| cancelled | Yes |\n| failed | Yes |\n| neutral | No  |\n| succeeded | No  |\n| skipped | No  |\n\nThe output of a check can contain arbitrary data, or can contain Web Vitals and a Virtual Experience Score.\n\nTo include Web Vitals and a Virtual Experience Score, the following can be passed to `output` under a `metrics` field:\n\nEach of these has the following properties:\n\n| Key | [Type](#api-basics/types) | Description |\n| --- | --- | --- |\n| value | [Float](#api-basics/types) | The value measured for the particular metric, in milliseconds. For virtualExperienceScore this value is the percentage between 0 and 1 |\n| previousValue | [Float](#api-basics/types) | A previous value for comparison purposes. |\n| source | [Enum](#api-basics/types) | `web-vitals` |\n\nLog Drains allow you to collect logs from your deployments. To enable Log Drains, you must provide a destination URL to send the logs to.\n\nWe send logs to destination URLs over `HTTPS`, `HTTP`, `TLS`, or `TCP` every time logs are generated.\n\nWe support 3 types of Log Drains:\n\n*   JSON\n*   NDJSON\n*   Syslog\n\nFor more information, review [Format and Transport](https://vercel.com/docs/log-drains#format-and-transport).\n\nWhen you choose the `json` type, the URL receives a HTTPS or HTTP POST request with a JSON array on the `POST` body.\n\nIf the response of the request returns an HTTP `statusCode` with a value of `-1`, that means there was no response returned and the lambda crashed. In the same response, if the value of `proxy.statusCode` is returned with `-1`, that means the revalidation occurred in the background.\n\nThe logs are buffered and submitted as batches with the following formats:\n\n```\n[\n  {\n    \"id\": <identifier>,\n    \"message\": <text>,\n    \"timestamp\": <timestamp>,\n    \"type\": <\"stdout\" or \"stderr\">,\n    \"source\": <\"build\", \"static\", \"external\", or \"lambda\">,\n    \"projectId\": <identifier of project>,\n    \"deploymentId\": <identifier of deployment>,\n    \"buildId\": <identifier of build>,\n    \"host\": <hostname>,\n    \"entrypoint\": <entrypoint>\n  },\n  {\n    \"id\": <identifier>,\n    \"message\": <text>,\n    \"timestamp\": <timestamp>,\n    \"requestId\": <identifier of request>,\n    \"statusCode\": <HTTP status code of request>,\n    \"source\": <\"build\", \"static\", \"external\", or \"lambda\">,\n    \"projectId\": <identifier of project>,\n    \"deploymentId\": <identifier of deployment>,\n    \"executionRegion\": <region where the request is executed>,\n    \"buildId\": <identifier of build only on build logs>,\n    \"destination\": <origin of external content only on external logs>,\n    \"host\": <hostname>,\n    \"path\": <path>,\n    \"level\": <\"error\", \"warning\", or \"info\">,\n    \"proxy\": {\n      \"timestamp\": <timestamp of proxy request>,\n      \"method\": <method of request>,\n      \"scheme\": <protocol of request>,\n      \"host\": <hostname>,\n      \"path\": <path of proxy request>,\n      \"userAgent\": <user agent>,\n      \"referer\": <referer>,\n      \"statusCode\": <HTTP status code of proxy request>,\n      \"clientIp\": <client IP>,\n      \"region\": <region request is processed>,\n      \"cacheId\": <original request id when request is served from cache>,\n      \"errorCode\": <error code happened on proxy request>,\n    }\n  }\n]\n```\n\nThe requests are posted with an [`x-vercel-signature`](https://vercel.com/docs/edge-network/headers#x-vercel-signature) header which contains a hash signature you can use to validate the request body. See the [Securing your Log Drains](https://vercel.com/docs/rest-api#introduction/api-basics/securing-your-log-drains) section to learn how to verify requests.\n\nWhen you choose the `ndjson` type, the URL receives a HTTPS or HTTP POST request with JSON objects delimited by newline (`\\\\n`) on the `POST` body. See [ndjson.org](http://ndjson.org/) for more information on the structure.\n\nEach request receives HTTP headers including [`x-vercel-signature`](https://vercel.com/docs/edge-network/headers#x-vercel-signature).\n\nThe following are two example `POST` bodies:\n\n```\n{\n  \"id\": \"1573817187330377061717300000\",\n  \"message\": \"done\",\n  \"timestamp\": 1573817187330,\n  \"type\": \"stdout\",\n  \"source\": \"build\",\n  \"projectId\": \"abcdefgdufoJxB6b9b1fEqr1jUtFkyavUURbnDCFCnZxgs\",\n  \"deploymentId\": \"dpl_233NRGRjVZX1caZrXWtz5g1TAksD\",\n  \"buildId\": \"bld_cotnkcr76\",\n  \"host\": \"*.vercel.app\",\n  \"entrypoint\": \"api/index.js\"\n}\n```\n\n```\n{\n  \"id\": \"1573817250283254651097202070\",\n  \"message\": \"START RequestId: 643af4e3-975a-4cc7-9e7a-1eda11539d90 Version: $LATEST\\\\n2019-11-15T11:27:30.721Z\\\\t643af4e3-975a-4cc7-9e7a-1eda11539d90\\\\tINFO\\\\thello\\\\nEND RequestId: 643af4e3-975a-4cc7-9e7a-1eda11539d90\\\\nREPORT RequestId: 643af4e3-975a-4cc7-9e7a-1eda11539d90\\\\tDuration: 16.76 ms\\\\tBilled Duration: 100 ms\\\\tMemory Size: 1024 MB\\\\tMax Memory Used: 78 MB\\\\tInit Duration: 186.49 ms\\\\t\\\\n\",\n  \"timestamp\": 1573817250283,\n  \"source\": \"lambda\",\n  \"requestId\": \"894xj-1573817250172-7847d20a4939\",\n  \"statusCode\": 200,\n  \"proxy\": {\n    \"timestamp\": 1573817250172,\n    \"path\": \"/api\",\n    \"userAgent\": [\n      \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36\"\n    ],\n    \"referer\": \"*.vercel.app\",\n    \"method\": \"GET\",\n    \"scheme\": \"https\",\n    \"host\": \"*.vercel.app\",\n    \"statusCode\": 200,\n    \"clientIp\": \"120.75.16.101\",\n    \"region\": \"sfo1\"\n  },\n  \"projectId\": \"abcdefgdufoJxB6b9b1fEqr1jUtFkyavUURbnDCFCnZxgs\",\n  \"deploymentId\": \"dpl_233NRGRjVZX1caZrXWtz5g1TAksD\",\n  \"host\": \"*.vercel.app\",\n  \"path\": \"api/index.js\"\n}\n```\n\nWhen you choose the `syslog` type, the URL is connected with TLS or TCP. Log Drain messages are formatted according to [RFC5424](https://tools.ietf.org/html/rfc5424) framed using octet counting defined in [RFC6587](https://tools.ietf.org/html/rfc6587#section-3.4.1).\n\nSyslog messages resemble the following:\n\n```\n425 <142>1 2019-11-15T11:42:22.562Z *.vercel.app now proxy - [proxy@54735 requestId=\"q8k4w-1573818142562-9adfb40ce9d4\" statusCode=\"200\" method=\"GET\" path=\"/api\" userAgent=\"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36\" referer=\"*.vercel.app\" clientIp=\"120.75.16.101\" region=\"sfo1\" signature=\"b847f4dd531d0b41094fb4b38fd62bde0b0e29a5\"]587 <150>1 2019-11-15T11:42:22.833Z *.vercel.app now lambda - [lambda@54735 requestId=\"q8k4w-1573818142562-9adfb40ce9d4\" statusCode=\"200\" path=\"api/index.js\" signature=\"0900101157dac2a2e555524c2f8d61229b15307d\"] BOMSTART RequestId: ec00309f-4514-4128-8b8a-9a0e74900283 Version: $LATEST\n2019-11-15T11:42:23.176Z\\\\tec00309f-4514-4128-8b8a-9a0e74900283\\\\tINFO\\\\thello\nEND RequestId: ec00309f-4514-4128-8b8a-9a0e74900283\nREPORT RequestId: ec00309f-4514-4128-8b8a-9a0e74900283\\\\tDuration: 20.08 ms\\\\tBilled Duration: 100 ms Memory Size: 1024 MB\\\\tMax Memory Used: 77 MB\\\\tInit Duration: 157.97 ms\n```\n\nSimilar to JSON and NDJSON drains, a syslog message contains a hash signature for verifying messages on the `signature` key of structured data. On syslog drains, the signature is computed using an OAuth2 secret and the `MSG` section of the syslog format.\n\nAll drains support transport-level encryption using `HTTPS` or `TLS` protocols, and we strongly recommend using them on production and use others only for development and testing.\n\nWhen your server starts receiving payloads, it could be a third party sending log messages to your server if they know the URL. Therefore, it is recommended to use HTTP Basic Authentication, or verify messages are sent from Vercel using an OAuth2 secret and hash signature.\n\nFor example, if you have a basic HTTP server subscribing to Log Drains, the payload can be validated like so:\n\n```\nconst http = require('http');\nconst crypto = require('crypto');\nhttp\n  .createServer((req, res) => {\n    var body = '';\n    req.on('data', function (chunk) {\n      body += chunk;\n    });\n    req.on('end', function () {\n      if (!verifySignature(req, body)) {\n        res.statusCode = 403;\n        res.end(\"signature didn't match\");\n        return;\n      }\n      res.end('ok');\n    });\n  })\n  .listen(3000);\nfunction verifySignature(req, body) {\n  const signature = crypto\n    .createHmac('sha1', process.env.OAUTH2_SECRET)\n    .update(body)\n    .digest('hex');\n  return signature === req.headers['x-vercel-signature'];\n}\n```\n\nYou can compute the signature using an HMAC hexdigest from the `secret` token of the OAuth2 app and request body, then compare it with the value of the `x-vercel-signature` header to validate the payload.",
  "title": "Vercel REST API",
  "description": "The Vercel REST API is a REST-styled API that gives full control over the entire Vercel platform.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks",
  "markdown": "# Frameworks on Vercel\n\nVercel has first-class support for [a wide range of the most popular frontend frameworks](https://vercel.com/docs/frameworks/more-frameworks). You can build your web applications with anything from Astro to SvelteKit, and in many cases deploy them without having to do any upfront configuration. Learn how to [get started with Vercel](https://vercel.com/docs/getting-started-with-vercel) or clone one of our example repos to your favorite git provider and deploy it on Vercel using one of the templates below:\n\n## Deploy a Template\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your project.\n\nDeploying on Vercel with one of our [supported frameworks](https://vercel.com/docs/frameworks/more-frameworks) gives you access to many features, such as:\n\n*   [Serverless Functions](https://vercel.com/docs/functions) enable developers to write functions that scale based on traffic demands, preventing failures during peak hours and reducing costs during low activity.\n*   [Edge Functions](https://vercel.com/docs/functions) are a fast, scalable solution for delivering dynamic content quickly and globally. By default, Edge Functions are deployed near your site's visitors in one of Vercel's Edge regions.\n*   [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) is code that executes before a request is processed on a site, enabling you to modify the response. Because it runs before the cache, Edge Middleware is an effective way to personalize statically generated content.\n*   [Multi-runtime Support](https://vercel.com/docs/functions/runtimes) allows the use of various runtimes for your functions, each with unique libraries, APIs, and features tailored to different technical requirements.\n*   [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration) enables content updates without redeployment. Vercel caches the page to serve it statically and rebuilds it on a specified interval.\n*   [Speed Insights](https://vercel.com/docs/speed-insights) provide data on your project's Core Web Vitals performance in the Vercel dashboard, helping you improve loading speed, responsiveness, and visual stability.\n*   [Analytics](https://vercel.com/docs/analytics) offer detailed insights into your website's performance over time, including metrics like top pages, top referrers, and user demographics.\n*   [Skew Protection](https://vercel.com/deployments/skew-protection) uses version locking to ensure that the client and server use the same version of your application, preventing version skew and related errors.\n\nThe following table shows which features are supported by each framework on Vercel. The framework list represents the most popular frameworks deployed on Vercel.\n\nSupported\n\nNot Supported\n\nNot Applicable\n\nThe [Build Output API](https://vercel.com/docs/build-output-api/v3) is a file-system-based specification for a directory structure that produces a Vercel deployment. It is primarily targeted at framework authors who want to integrate their frameworks with Vercel's platform features. By implementing this directory structure as the output of their build command, framework authors can utilize all Vercel platform features, such as Serverless Functions, Edge Functions, Routing, and Caching.\n\nIf you are not using a framework, you can still use these features by manually creating and populating the `.vercel/output` directory according to this specification. Complete examples of Build Output API directories can be found in [vercel/examples](https://github.com/vercel/examples/tree/main/build-output-api), and you can read our [blog post](https://vercel.com/blog/build-your-own-web-framework) on using the Build Output API to build your own framework with Vercel.\n\nLearn more about deploying your preferred framework on Vercel with the following resources:",
  "title": "Frameworks on Vercel",
  "description": "Vercel supports a wide range of the most popular frontend frameworks, optimizing how your site builds and runs no matter what tool you use.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/build-output-api/v3",
  "markdown": "# Build Output API (v3)\n\nThe Build Output API is a file-system-based specification for a directory structure that can produce a Vercel deployment.\n\nFramework authors can take advantage of [framework-defined infrastructure](https://vercel.com/blog/framework-defined-infrastructure) by implementing this directory structure as the output of their build command. This allows the framework to define and use all of the Vercel platform features.\n\nThe Build Output API closely maps to the Vercel product features in a logical and understandable format.\n\nIt is primarily targeted toward authors of web frameworks who would like to utilize all of the Vercel platform features, such as Serverless Functions, Edge Functions, Routing, Caching, etc.\n\nIf you are a framework author looking to integrate with Vercel, you can use this reference as a way to understand which files the framework should emit to the `.vercel/output` directory.\n\nIf you are not using a framework and would like to still take advantage of any of the features that those frameworks provide, you can create the `.vercel/output` directory and populate it according to this specification yourself.\n\nYou can find complete examples of Build Output API directories in [vercel/examples](https://github.com/vercel/examples/tree/main/build-output-api).\n\nCheck out our blog post on using the [Build Output API to build your own framework](https://vercel.com/blog/build-your-own-web-framework) with Vercel.\n\nNative Dependencies: Please keep in mind that when building locally, your build tools will compile native dependencies targeting your machine’s architecture. This will not necessarily match what runs in production on Vercel.\n\nFor projects that depend on native binaries, you should build on a host machine running Linux with a `x64` CPU architecture, ideally the same as the platform [Build Image](https://vercel.com/docs/deployments/build-image).\n\nVersions one and two of the Build Output API (formally named File System API) are deprecated and should not be used for new projects. Their documentation is still available for reference purposes:",
  "title": "Build Output API (v3)",
  "description": "The Build Output API is a file-system-based specification for a directory structure that can produce a Vercel deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/overview",
  "markdown": "# Projects Overview\n\nTo deploy on Vercel, you need to create a Project. A Project groups [deployments](https://vercel.com/docs/deployments/overview) and [custom domains](https://vercel.com/docs/projects/domains/add-a-domain). Each project can receive deployments from [GitHub](https://vercel.com/docs/deployments/git/vercel-for-github), [GitLab](https://vercel.com/docs/deployments/git/vercel-for-gitlab), [Bitbucket](https://vercel.com/docs/deployments/git/vercel-for-bitbucket), or [Vercel CLI](https://vercel.com/docs/cli).\n\nTo learn more about limits on the number of projects you can have, see [Limits](https://vercel.com/docs/limits/overview#general-limits).\n\nTo create a [new](https://vercel.com/new) project:\n\n1.  On the Vercel [dashboard](https://vercel.com/dashboard), ensure you have selected the correct team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Click the Add New… drop-down button and select Project:\n\n![ Creating a new project from the Vercel dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fadd-new-project-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![ Creating a new project from the Vercel dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fadd-new-project-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nCreating a new project from the Vercel dashboard.\n\n3.  You can either [import from an existing Git repository](https://vercel.com/docs/deployments/git) or use one of our [templates](https://vercel.com/templates)\n\nYou can manage your project on Vercel in your project's dashboard. See [our project dashboard docs](https://vercel.com/docs/projects/project-dashboard) to learn more.\n\nIn Project Settings, you can make changes about all areas relating to your project, including domains, log drains, integrations, Git, caching, environment variables, deployment protection, and security.\n\nTo edit project settings:\n\n1.  Ensure you have selected your Team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Choose a project from the [dashboard](https://vercel.com/dashboard)\n3.  Select the Settings tab\n4.  Find the settings you need and make changes\n\nProject names can be up to 100 characters long and must be lowercase. They can include letters, digits, and the following characters: '.', '\\_', '-'. However, they cannot contain the sequence '---'.\n\nYou can edit settings regarding the build and development settings, root directory, and the [install command](https://vercel.com/docs/deployments/configure-a-build#install-command). See the [Configure a build documentation](https://vercel.com/docs/deployments/configure-a-build) to learn more.\n\nThe changes you make to these settings will only be applied starting from your next deployment.\n\nNone of your existing deployments will be affected when you toggle this setting. If you’d like to make the source code or logs private on your existing deployments, the only option is to delete these deployments.\n\nLearn more about how to customize the Node.js version of your project in the [Runtimes](https://vercel.com/docs/functions/serverless-functions/runtimes/node-js#node.js-version) documentation.\n\nTo locate your Project ID:\n\n1.  Ensure you have selected your Team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Choose your project from the [dashboard](https://vercel.com/dashboard)\n3.  Select the Settings tab\n4.  Under General, scroll down until you find Project ID. The ID should start `prj_`\n5.  Copy the Project ID to use as needed\n\nLearn more about using Comments on preview deployments in the [Comments](https://vercel.com/docs/workflow-collaboration/comments) docs.\n\nYou can configure Environment Variables directly from Project Settings. Check out [the Environment Variables documentation](https://vercel.com/docs/projects/environment-variables) to learn more.\n\nYou can [add custom domains](https://vercel.com/docs/projects/domains/add-a-domain) for each project. See the [Domains documentation](https://vercel.com/docs/projects/domains) to learn more.\n\nOnce you have [connected a Git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository), select the Git menu item from your project settings page to edit your project’s Git settings. These settings include:\n\n*   Specifying the production branch name\n*   Managing Git Large File Storage (LFS)\n*   Creating Deploy Hooks\n*   Ignoring the build step when a commit is pushed to the Git repository\n\nTo disconnect your Git repository from your Vercel project:\n\n1.  Choose a project from the [dashboard](https://vercel.com/dashboard)\n2.  Select the Settings tab and then select the Git menu item\n3.  Under Connected Git Repository, select the Disconnect button.\n\nIf you have [LFS objects](https://git-lfs.com/) in your repository, you can enable or disable support for them from the [project settings](https://vercel.com/docs/projects/project-dashboard#settings). When support is enabled, Vercel will pull the LFS objects that are used in your repository.\n\nBy default, Vercel creates a new [deployment](https://vercel.com/docs/deployments/overview) and build (unless the Build Step is [skipped](https://vercel.com/docs/deployments/configure-a-build#skip-build-step)) for every commit pushed to your connected Git repository.\n\nEach commit in Git is assigned a unique hash value commonly referred to as SHA. If the SHA of the commit was already deployed in the past, no new Deployment is created. In that case, the last Deployment matching that SHA is returned instead.\n\nTo ignore the build step:\n\n1.  Choose a project from the [dashboard](https://vercel.com/dashboard)\n2.  Select the Settings tab and then select the Git menu item\n3.  In the Ignored Build Step section, select the behavior you would like. This behavior provides a command that outputs a code, which tells Vercel whether to issue a new build or not. The command is executed within the [Root Directory](https://vercel.com/docs/deployments/configure-a-build#root-directory) and can access all [System Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables):\n    *   Automatic: Each commit will issue a new build\n    *   Only build production: When the `VERCEL_ENV` is production, a new build will be issued\n    *   Only build preview: When the `VERCEL_ENV` is preview, a new build will be issued\n    *   Only build if there are changes: A new build will be issued only when the Git diff contains changes\n    *   Only build if there are changes in a folder: A new build will be issued only when the Git diff contains changes in a folder that you specify\n    *   Only build Turborepo app if there are changes: automatically detect if your project or one of its dependencies has changed and needs to be built and deployed. See the [`turbo-ignore` docs](https://vercel.com/docs/monorepos/turborepo#using-turbo-ignore) to learn more.\n    *   Don't build anything: A new build will never be issued\n    *   Run my Bash script: [Run a Bash script](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel#with-a-script) from a location that you specify\n    *   Run my Node script: [Run a Node script](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel#with-a-script) from a location that you specify\n    *   Custom: You can enter any other command here, for example, only building an Nx app ([`npx nx-ignore <project-name>`](https://github.com/nrwl/nx-labs/tree/main/packages/nx-ignore#usage))\n4.  When your deployment enters the `BUILDING` state, the command you've entered in the Ignored Build Step section will be run. The command will always exit with either code `1` or `0`:\n    *   If the command exits with code `1`, the build continues as normal\n    *   If the command exits with code `0`, the build is immediately aborted, and the deployment state is set to `CANCELED`\n\nCanceled builds are counted as full deployments as they execute a build command in the build step. This means that any canceled builds initiated using the ignore build step will still count towards your deployment quota.\n\nTo learn about more advanced usage see the [\"How do I use the Ignored Build Step field on Vercel?\"](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel) guide.\n\nIf you have set an ignore build step command or [script](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel), you can also skip the build step when redeploying your app:\n\n1.  From the Vercel dashboard, select your project\n2.  Select the Deployments tab and find your deployment\n3.  Click the ellipses (...) and from the context menu, select Redeploy\n4.  Uncheck the Use project's Ignore Build Step checkbox\n\nVercel supports deploy hooks, which are unique URLs that accept HTTP POST requests and trigger deployments. Check out [our Deploy Hooks documentation](https://vercel.com/docs/deployments/deploy-hooks) to learn more.\n\nProtect your project deployments with [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication) and [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection). See [Deployment Protection](https://vercel.com/docs/security/deployment-protection) to learn more.\n\nTo adjust your project's security settings:\n\n1.  Select your project from your [dashboard](https://vercel.com/dashboard)\n2.  Select the Settings tab\n3.  Choose the Security menu item\n\nFrom here you can enable or disable [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode), [Logs and Source Protection](https://vercel.com/docs/projects/overview#logs-and-source-protection), and [Git Fork Protection](https://vercel.com/docs/projects/overview#git-fork-protection).\n\nBy default, the following paths mentioned below can only be accessed by you and authenticated members of your Vercel team:\n\n*   `/_src`: Displays the source code and build output.\n*   `/_logs`: Displays the build logs.\n\nDisabling Logs and Source Protection will make your source code and logs publicly accessible. Do not edit this setting if you don't want them to be publicly accessible.\n\nThis setting is overwritten when a deployment is created using Vercel CLI with the [`--public` option](https://vercel.com/docs/cli/deploy#public) or the [`public` property](https://vercel.com/docs/projects/project-configuration#public) is used in `vercel.json`.\n\nFor deployments created before July 9th, 2020 at 7:05 AM (UTC), only the Project Settings is considered for determining whether the deployment's Logs and Source are publicly accessible or not. It doesn't matter if the `--public` flag was passed when creating those Deployments.\n\nIf you receive a pull request from a fork of your repository that includes a change to the [`vercel.json`](https://vercel.com/docs/cli) file or the Project has [Environment Variables](https://vercel.com/docs/projects/environment-variables), Vercel will require authorization from you or a [Team Member](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) to deploy the pull request.\n\nThis behavior protects you from leaking sensitive Project information.\n\nYou can disable this protection in the Security section of your Project Settings.\n\nDo not disable this setting until you review Environment Variables in your Project as well as `vercel.json` in your source code.\n\nYou can choose to temporarily pause a project to ensure that you do not incur usage from [metered resources](https://vercel.com/docs/limits/overview#additional-resources) on your production deployment.\n\nTo [pause your project when you reach your spend amount](https://vercel.com/docs/accounts/spend-management#pausing-projects), select the Pause all production deployments in the Spend Management section of your team's settings. To pause a project manually or with a webhook you can use the [REST API](https://vercel.com/docs/rest-api/endpoints#pause-a-project):\n\n1.  Ensure you have [access token](https://vercel.com/docs/rest-api#creating-an-access-token) scoped to your team to authenticate the API\n2.  Create a webhook that calls the pause project [endpoint](https://vercel.com/docs/rest-api/endpoints#pause-a-project):\n    *   You'll need to pass a path parameter of the [Project ID](https://vercel.com/docs/projects/overview#project-id) and query string of [Team ID](https://vercel.com/docs/accounts/create-a-team#find-your-team-id):\n        \n        ```\n        https://api.vercel.com/v1/projects/<prj_ID>/pause?teamId=<team_ID>\n        ```\n        \n    *   Use your access token as the bearer token, to enable you to carry out actions through the API on behalf of your team\n    *   Ensure that your `Content-Type` header is set to `application/json`\n\nWhen you pause your project, any users accessing your production deployment will see a [503 DEPLOYMENT\\_PAUSED error](https://vercel.com/docs/errors/DEPLOYMENT_PAUSED).\n\nResuming a project can either be done through the [REST API](https://vercel.com/docs/rest-api/endpoints/projects#unpause-a-project) or your project settings:\n\n1.  Go to your team's [dashboard](https://vercel.com/dashboard) and select your project. When you select it, you should notice it has a paused icon in the scope selector\n2.  Select the Settings tab\n3.  You'll be presented with a banner notifying you that your project is paused and your production deployment is unavailable\n4.  Select the Resume Service button\n5.  In the dialog that appears, confirm that you want to resume service of your project's production deployment by selecting the Resume button\n\nYour production deployment will resume service within a few minutes. You do not need to redeploy it.\n\nDeleting your project will also delete the deployments and domains within it. If you have any deployments that are assigned to a custom domain and do not want them to be removed, make sure to deploy and assign them to the custom domain under a different project first.\n\nTo delete a project, choose a project from the [dashboard](https://vercel.com/dashboard), then select the Settings tab.\n\nAt the bottom of the General page, you’ll see the Delete Project section. Confirm that you'd like to delete the project and click the Delete button.\n\n![The Delete Project section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fdelete-project-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Delete Project section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fdelete-project-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Delete Project section.\n\nYou can transfer projects between your Vercel accounts with zero downtime and no workflow interruptions.\n\nProjects can be transferred between plans as long as the project owner is a member of both the source and destinations of the transfer. For example, a project can be transferred from a personal account (Hobby) to an Enterprise account, and vice versa.\n\nYou must be an [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) of the team you're transferring from, and a member of the team you're transferring to. For example, you can transfer a project from your Hobby account to an Enterprise team account, and vice versa if you're an owner on the Enterprise team.\n\nDuring the transfer, all of the project’s dependencies will be moved or copied over to the new Vercel Team namespace with absolutely no downtime.\n\n1.  To begin transferring a Project, choose a project from the Vercel [dashboard](https://vercel.com/dashboard).\n    \n2.  Then, go to the project Settings tab from the top menu.\n    \n3.  From the left sidebar, click General and scroll down to the bottom of the page, where you'll see the **Transfer Project** section. Click Transfer to begin the Transferring flow.\n    \n    ![The Transfer Project section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Ftransfer-project-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Transfer Project section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Ftransfer-project-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    The Transfer Project section.\n    \n4.  Select the Vercel account or team you wish to transfer the Project to. You can also choose to create a new Team.\n    \n    ![Choosing an account to transfer the Project to.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Ftransfer-project-model-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Choosing an account to transfer the Project to.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Ftransfer-project-model-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Choosing an account to transfer the Project to.\n    \n    If the target Vercel Team does not have a valid payment method, you must add one before transferring your Project to avoid any interruption in service. If a valid payment method is added to a Team on a Pro Trial Plan, the trial will be upgraded to the Pro Plan immediately.\n    \n5.  This final step lists all the Project Domains, Aliases, and Secrets that will be transferred. You can also choose a new name for your Project. By default, the existing name is re-used. You must provide a new name if the target Vercel Account already has a project with the same name.\n    \n    The original Project **will be hidden** when initiating the transfer, but you will not experience any downtime.\n    \n    ![Reviewing the Project data that will be transferred to the target Vercel Account, and choosing a new Project name.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-transfer-confirm-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Reviewing the Project data that will be transferred to the target Vercel Account, and choosing a new Project name.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-transfer-confirm-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Reviewing the Project data that will be transferred to the target Vercel Account, and choosing a new Project name.\n    \n    After reviewing, click Transfer to initiate the Project transfer.\n    \n6.  You will be redirected to the newly created Project on the target Vercel Account with in-progress indicators.\n    \n    When a transfer is in progress, you may not create new deployments, edit project settings or delete that project.\n    \n7.  Transferring a Project may take between 10 seconds and 10 minutes, depending on the amount of associated data.\n    \n    When the transfer completes, the transfer's initiator and the target Team's owners are notified by email. You can now use your Project as normal!\n    \n\n*   [Deployments](https://vercel.com/docs/deployments/overview)\n*   [Environment Variables](https://vercel.com/docs/projects/environment-variables) are copied to the target team, except for those defined in the [`env`](https://vercel.com/docs/projects/project-configuration#env) and [`build.env`](https://vercel.com/docs/configuration#project/build-env) configurations of `vercel.json`. If an Environment Variable is associated to a [Secret](https://vercel.com/docs/cli/secrets) that exists on the target team, that Secret will be renamed\n*   The Project's configuration details\n*   [Domains and Aliases](#transferring-domains)\n*   Administrators\n*   Project name\n*   Builds\n*   Git repository link\n*   Security settings\n*   [Cron Jobs](https://vercel.com/docs/cron-jobs)\n*   [Preview Comments](https://vercel.com/docs/workflow-collaboration/comments)\n*   [Web Analytics](https://vercel.com/docs/analytics)\n*   [Speed Insights](https://vercel.com/docs/speed-insights)\n*   [Function Region](https://vercel.com/docs/edge-network/regions#compute-defaults)\n*   [Directory listing setting](https://vercel.com/docs/edge-network/directory-listing)\n\nOnce you transfer a project from a Hobby account to a Vercel team, you may choose to enable additional paid features on the target team to match the features of the origin account. These include:\n\n*   [Integrations](https://vercel.com/docs/integrations): Those associated with your Project must be added again after the transfer is complete\n*   [Edge Configs](https://vercel.com/docs/storage/edge-config)\n*   Usage is reset on transfer\n*   The Active Branches section under Project will be empty\n*   Environment Variables: Those defined in the [`env`](https://vercel.com/docs/projects/project-configuration#env) and [`build.env`](https://vercel.com/docs/configuration#project/build-env) configurations of `vercel.json` must be [migrated to Environment Variables](https://vercel.com/guides/how-do-i-migrate-away-from-vercel-json-env-and-build-env) in the Project Settings or configured again on the target team after the transfer is complete\n*   [Monitoring](https://vercel.com/docs/observability/monitoring) data is not transferred\n*   Log data ([Runtime](https://vercel.com/docs/observability/runtime-logs) + [build](https://vercel.com/docs/deployments/logs) time)\n*   [Generic Log Drains](https://vercel.com/docs/observability/log-drains) are not transferred\n*   [Vercel KV](https://vercel.com/docs/storage/vercel-kv), [Vercel Postgres](https://vercel.com/docs/storage/vercel-postgres) and [Vercel Blob](https://vercel.com/docs/storage/vercel-blob) have [a separate transfer mechanism](https://vercel.com/docs/storage#transferring-your-database)\n\nProject [Domains](https://vercel.com/docs/projects/domains) will automatically be transferred to the target team by delegating access to Domains.\n\nFor example, if your Project uses the Domain `example.com`, the Domain will be [moved](https://vercel.com/docs/projects/custom-domains#moving-domains) to the target team. The target team will be billed as the primary owner of the Domain if it was purchased through Vercel.\n\nIf your Project uses the Domain `blog.example.com`, the Domain `blog.example.com` will be delegated to the target team, but the root Domain `example.com` will remain on the origin Vercel scope. The origin Vercel scope will remain the primary owner of the Domain, and will be billed as usual if the Domain was purchased through Vercel.\n\nIf your Project uses a [Wildcard Domain](https://vercel.com/docs/projects/domains/working-with-domains#wildcard-domain) like `*.example.com`, the Wildcard Domain will be delegated to the target team, but the root Domain `example.com` will remain on the origin Vercel scope.\n\nThis only applies when transferring away from a Team.\n\nWhen transferring between Teams, you may be asked whether you want to add additional features to the target Team to match the origin Team's features. This ensures an uninterrupted workflow and a consistent experience between Teams. Adding these features is optional.",
  "title": "Projects Overview",
  "description": "To deploy on Vercel, you need to create a Project, which groups deployments and custom domains. Learn how to set up and configure projects with this guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/builds",
  "markdown": "# Builds\n\nWhen you create a new project or push a new commit to a project on Vercel, you initiate a deployment. A deployment is made up of a few steps:\n\nThis guide is focused on the build step, where Vercel validates and builds your source code, outputting all assets into storage.\n\nFor any of the [supported frameworks](https://vercel.com/docs/frameworks/more-frameworks), Vercel will [automatically configure](https://vercel.com/docs/deployments/configure-a-build#framework-preset) the build settings with the most common configurations for the framework. If you have specific settings, you can [configure](https://vercel.com/docs/deployments/configure-a-build) the [build](https://vercel.com/docs/deployments/configure-a-build#build-command), [output](https://vercel.com/docs/deployments/configure-a-build#output-directory), and environment variables when you create a new Vercel project or within your project's settings.\n\nIf your project does not require building, for example, a website with only static source files, you can choose to [skip the build step](https://vercel.com/docs/deployments/configure-a-build#skip-build-step).\n\nYou can initiate a Vercel deployment in two ways: with [Vercel CLI](https://vercel.com/docs/cli) or by pushing changes to a connected [Git repository](https://vercel.com/docs/deployments/git) on GitHub, GitLab, or Bitbucket. It's also possible for deployments to be initiated through an integration using [Vercel REST API](https://vercel.com/docs/rest-api).\n\nDepending on how you initiate the build, Vercel may put it in a queue to ensure we build things in the right order and only build the most recent deployment.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Finfra-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Finfra-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA deployment from CLI triggers a build in the build container which provisions resources and updates the deployment's status\n\n1.  Once you trigger a deployment, the build container will receive a request that there is a job available. The build container is a [Docker container](https://www.docker.com/resources/what-container/) that uses an Amazon Linux based image and includes some [pre-installed packages](https://vercel.com/docs/deployments/build-image#pre-installed-packages). The build container runs in a few [regions](https://vercel.com/docs/edge-network/regions) on our Edge Network⁠—you can determine which one by viewing your build logs.\n    \n2.  Vercel first authenticates and inspects the request to confirm its authenticity and your permission to create the deployment to protect against unauthorized access and loss of integrity. At this point, Vercel also validates the Vercel configuration in the [vercel.json](https://vercel.com/docs/projects/project-configuration) file.\n    \n3.  Depending on whether your [plan](https://vercel.com/pricing) allows for [concurrent builds](https://vercel.com/docs/deployments/concurrent-builds#usage-and-limits), Vercel may queue your build until other builds from your team have been completed.\n    \n4.  If you use Git to initiate your deployment, Vercel performs a shallow clone on your Git repository to fetch the most recent Git commit history. CLI deployments won't do this step—they'll follow the flow in the next step.\n    \n5.  If you use Vercel CLI to initiate your deployment, the following flow will happen. Git deployments won't go through this flow:\n    \n    *   A POST request is made containing the project’s files to be uploaded (without [these ignored files](https://vercel.com/docs/deployments/build-features#ignored-files-and-folders)) to a scalable, secure, and highly durable data storage service\n    *   Once the source files have been uploaded, another POST request is made to start the build and deployment process.\n6.  Vercel will check for an existing build cache key. If it finds one, it will restore the previous build cache. For more information on the build cache, see the \"[Caching process](https://vercel.com/docs/deployments/troubleshoot-a-build#caching-process)\" docs.\n    \n7.  Now that the build container has your source files, it [installs any necessary tools](https://vercel.com/docs/deployments/configure-a-build#install-command) and then will do the actual build by [running the build command](https://vercel.com/docs/deployments/configure-a-build#build-command).\n    \n    During this phase, the build step transforms the project into a Vercel deployment by executing a builder (or multiple builders, depending on the frameworks) on the source code. The builder can be an internal one provided by Vercel (for example, [Next.js builder](https://github.com/vercel/vercel/tree/main/packages/next)) or a [custom builder](https://vercel.com/docs/projects/project-configuration#functions) that requires installation from an npm registry. If this npm registry is private, see \"[Private npm packages](https://vercel.com/docs/deployments/build-features#private-npm-packages)\".\n    \n8.  Concurrently, while the build container processes the file, it pings an API endpoint that keeps track of the deployment’s status. Vercel will then use this endpoint to update you on the dashboard, in the CLI, or in your pull request about the live status of the build.\n    \n9.  The build container creates a [build output](https://vercel.com/docs/build-output-api/v3) that runs on one of Vercel's [supported runtimes](https://vercel.com/docs/functions/serverless-functions/runtimes) and provisions resources such as:\n    \n    *   [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) for handling API routes and server-side rendered pages\n    *   [Edge Functions](https://vercel.com/docs/functions/edge-functions) for Middleware and other functions using the edge runtime\n    *   [Optimized Images](https://vercel.com/docs/image-optimization)\n    *   Static output\n    \n    You can check the detailed output from your build on the [deployment summary](https://vercel.com/docs/deployments/overview#deployment-summary).\n    \n10.  Finally, once the resources have been created and provisioned, Vercel uploads them to a dedicated static storage, along with metadata that is used to route the user to the correct location on the network. To learn more about what happens when a user requests these resources, see \"[Behind the scenes of Vercel's infrastructure - Request phase](https://vercel.com/blog/behind-the-scenes-of-vercels-infrastructure#request-phase)\".\n    \n\nThe maximum duration of the build is 45 minutes. When the limit is reached, the build will be interrupted and the deployment will fail. For more information, see \"[Cancelled Builds due to limits](https://vercel.com/docs/deployments/troubleshoot-a-build#cancelled-builds-due-to-limits)\".\n\nThe build container is created with a specific amount of [resources](https://vercel.com/docs/deployments/troubleshoot-a-build#build-container-resources) that cannot be increased.\n\nEach build's cache can be a maximum of 1 GB and applies at the level of each [build cache key](https://vercel.com/docs/deployments/troubleshoot-a-build#caching-process). The build cache is retained for one month and currently you cannot configure [which files are cached](https://vercel.com/docs/deployments/troubleshoot-a-build#what-is-cached).\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.",
  "title": "Builds",
  "description": "Understand how the build step works when creating a Vercel Deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/overview",
  "markdown": "# Deploying to Vercel\n\nA Vercel Deployment results from a successful build of your [Project](https://vercel.com/docs/projects/overview).\n\nWhen you create a deployment, Vercel automatically adds a new and unique [Generated URL](https://vercel.com/docs/deployments/generated-urls). You can visit this URL to preview your changes in a live environment.\n\nYou can also enable visitors to leave feedback on your Deployments with by adding [the Vercel Toolbar package](https://vercel.com/docs/workflow-collaboration/comments/in-production-and-localhost) to your projects. Learn more about the Vercel Toolbar below.\n\nYou can deploy your projects to Vercel in four different ways:\n\n*   [Git](#git)\n*   [Vercel CLI](#vercel-cli)\n*   [Deploy Hooks](#deploy-hooks)\n*   [Vercel REST API](#vercel-rest-api)\n\nThe most common way to create a Deployment on Vercel is through pushing code to [Git](https://vercel.com/docs/deployments/git) repositories.\n\nCreating an automatic Deployment begins by [importing a Git repository on Vercel](https://vercel.com/docs/deployments/git#deploying-a-git-repository). This repository can either be private or public. To setup a Git repository, click the [New Project](https://vercel.com/new) button from the Vercel dashboard and select one of the following Git providers:\n\nDeploying your application using Vercel's Git integration gives you:\n\n*   Simplified collaboration through pull requests or merge requests\n*   The ability to test new features and changes using [Preview Deployments](https://vercel.com/docs/deployments/preview-deployments) before merging to the `main` branch to automatically create a [Production Deployment](https://vercel.com/docs/deployments/environments#production)\n*   The ability to [receive live feedback in preview environments with the Comments feature](https://vercel.com/docs/workflow-collaboration/comments) (on supported Git providers).\n\nYou can also [create deployments from a Git reference](https://vercel.com/docs/deployments/git#creating-a-deployment-from-a-git-reference) directly from the Vercel Dashboard. This is useful when you need to deploy specific commits or the latest changes from a branch, especially during times when automatic deployments might be disrupted.\n\nLearn more with our [Deploying a Git repository guide](https://vercel.com/docs/deployments/git#deploying-a-git-repository).\n\nIf you want to initiate Deployments based on external events in your Git repo, you can use [Deploy Hooks](#deploy-hooks).\n\n[Vercel CLI](https://vercel.com/docs/cli) allows you to deploy your [Projects](https://vercel.com/docs/projects/overview) directly from the Command Line Interface (CLI). You can use this deployment method whether your project is connected to a Git repository or not.\n\nFor a new Project, the first deploy will ask to [link](https://vercel.com/docs/cli/project-linking) your local directory to the Vercel Project. This is done by running the `vercel` command in your local project directory.\n\nMaking an initial deployment with the `vercel` command.\n\nUpon creating the first Deployment for a Project, the `vercel` command creates a [Production Deployment](https://vercel.com/docs/deployments/environments#production).\n\nAfter running this command, a `.vercel` directory is added at the root of your project folder. It contains both the organization and project `ID`. Vercel CLI automatically [detects the framework](https://vercel.com/docs/cli/project-linking#framework-detection) your project is using.\n\nAfter the initial step, you can run the `vercel` command again to create a [Preview Deployment](https://vercel.com/docs/deployments/preview-deployments). To create a Production Deployment, use the `vercel --prod` command.\n\nMaking a Production Deployment with the `vercel` command.\n\nYou can use the Vercel CLI to create [custom CI/CD workflows](https://vercel.com/guides/how-can-i-use-github-actions-with-vercel) and integrate into your existing pipelines.\n\nFurther, when using `vercel build` and `vercel deploy --prebuilt`, you can prevent giving access to source code by only uploading the generated build outputs to Vercel.\n\nSee the [Vercel CLI](https://vercel.com/docs/cli) documentation for other configuration options and more information.\n\n[Deploy Hooks](https://vercel.com/docs/deployments/deploy-hooks) are another way of creating Deployments on Vercel. However, a connection to a [Git](#git) repository is still necessary in order to use Deploy Hooks.\n\nThe Deploy Hooks method is useful when the changes in an application depend on external events. If these changes are related to content and are made directly in a [Headless Content Management System (CMS)](https://vercel.com/guides/using-a-headless-cms-with-vercel) or database, you may want to trigger Deployments without touching code. For example, you may want to trigger a deployment when a new blog post is published or when an existing blog post is updated.\n\nTo use this deployment method, you have to generate a URL that accepts HTTP `GET` or `POST` requests to trigger Deployments and re-run the Build Step without needing to push a new git commit. The URL generated is unique for every project.\n\nSee the [Deploy Hooks documentation](https://vercel.com/docs/deployments/deploy-hooks) for more information.\n\nThe Vercel REST API is used to create Deployments by making an HTTP `POST` request to the relevant endpoint. The request's body will include all the files you want to deploy. You will have to [generate a `SHA` for each file](https://vercel.com/guides/how-do-i-generate-an-sha-for-uploading-a-file-to-the-vercel-api) and upload using the Vercel REST API.\n\nThis deployment method is helpful for projects that use a custom workflow and add custom domains to a [multi-tenant application](https://vercel.com/guides/nextjs-multi-tenant-application#6.-add-custom-domains-with-the-vercel-api) or integrate a third-party service that is not currently supported by the Vercel platform.\n\nFind more information about the Vercel REST API endpoint in the [API reference](https://vercel.com/docs/rest-api/endpoints#create-a-new-deployment).\n\nWhen you deploy your website to Vercel, the platform generates multiple outputs as a result of your [build](https://vercel.com/docs/deployments/builds#build-process). Those outputs could be:\n\n*   [Edge Middleware](https://vercel.com/docs/functions/edge-middleware)\n*   Static Assets (e.g. HTML, CSS, JavaScript files)\n*   Functions ([Serverless Functions](https://vercel.com/docs/functions/serverless-functions) or [Edge Functions](https://vercel.com/docs/functions/edge-functions))\n*   [ISR Functions](https://vercel.com/docs/incremental-static-regeneration)\n\nThe deployment summary provides a detailed overview of all these outputs, organized by the type. You can use this summary to understand the output of your build and determine what's being deployed.\n\nTo access the deployment summary, select your deployment from your project's Deployment tab. Under Deployment Status, expand the Deployment Summary tab.\n\n![Example of an open deployment summary.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fdeploy-outputs-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Example of an open deployment summary.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fdeploy-outputs-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nExample of an open deployment summary.\n\nIn the deployment summary, you can see a list of all the artifacts generated from your build and specific information about them.\n\n*   Edge Middleware: [matcher](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-custom-matcher-config)\n*   Static Assets: name and size\n*   Functions: type, name, runtime, size and region\n*   ISR Functions: name, runtime, size and region. ISR functions are grouped by related path\n\nYou can also see the time it takes to deploy your application, and the framework when available.",
  "title": "Deploying to Vercel",
  "description": "Learn how to create Deployments on Vercel using Git, Vercel CLI, Deploy Hooks, and Vercel REST API.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/dashboard-features",
  "markdown": "# Dashboard Overview\n\nYou can use the [Vercel dashboard](https://vercel.com/dashboard) to view and manage all aspects of the Vercel platform, including your [Projects](https://vercel.com/docs/projects/overview) and [Deployments](https://vercel.com/docs/deployments/overview). What you see in each tab is dependant on the _scope_ that is selected.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fdash-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fdash-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn overview of the header in the Vercel dashboard.\n\nWhat you see in each tab is dependant on the _scope_ that is selected.\n\nThe scope selector allows you to switch between your Hobby account and any teams that you may be part of. To switch between accounts and teams, select the arrows next to the name:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fscope-selector-light.png&w=640&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fscope-selector-dark.png&w=640&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nScope selector to switch between personal and other team accounts.\n\nTo go back to your Team dashboard at any time, click the Vercel logo or the scope selector.\n\nWhen you first create an account and log on to Vercel, you'll be greeted by your dashboard overview. This shows information on all projects that you have on Vercel, regardless of status.\n\nDepending on the scope that has been selected, you'll be able to view all projects belonging to either your Personal Account or a Team account.\n\nIntegrations allow you to extend the capabilities of Vercel and connect with third-party platforms or services. Users and Teams on all plans can use or create Integrations.\n\nThrough the Integrations section on the dashboard, you can [view and manage a list of all integrations](https://vercel.com/docs/integrations/install-an-integration#manage-integrations) on your account, browse the marketplace to [install integrations](https://vercel.com/docs/integrations/create-integration), or go to the [Integrations Console](https://vercel.com/dashboard/integrations/console) to [create your own Integration](https://vercel.com/docs/integrations/create-integration).\n\nThe Activity Log provides a list of all events on a Hobby account or Team, chronologically organized since its creation. The [events](https://vercel.com/docs/observability/activity-log#events-logged) that you will see are dependant on the type of account and [role within a Team](https://vercel.com/docs/accounts/team-members-and-roles).\n\nThe recent previews panel gives you a quick way to access recently deployed and viewed previews within your teams. It's scoped to the team you are actively viewing.\n\nEach listed preview shows the latest deployment ID and status. Any associated pull request to your git provider is also shown or the relevant git branch.\n\nSelecting a preview from the list will navigate to the live preview.\n\nYou can also navigate to related items for a preview deployment:\n\n*   The associated pull request or code repository page by clicking the label that will have the word \"Code\" or the pull request ID\n*   The deployment details by clicking the label with the deployment ID and status icon\n\nEach preview deployment item also has a context menu where you can see further details and also remove the listing.\n\nBy default, all deployments are assigned a domain with the suffix: `.vercel.app`. This domain can be replaced with a Custom Domain of your choice.\n\nThe Domains section of the dashboard lets you view all domains related to your account or Team, and allows you to Buy, Add, or Transfer In a custom domain.\n\nThe Usage tab on the Dashboard provides detailed insight into the actual resource usage of all projects relating to your account or Team.\n\nFrom the dashboard, you can filter the usage by billing cycle, date, project, or function.\n\nThere are two different types of settings pages:\n\n*   Personal Account / Team Settings - These settings allow you to manage account details, billing, invoicing, membership, security, and tokens. The options you see will depend on the your scope and permissions.\n*   Project Settings - You can view this by selecting a project in the dashboard and then selecting its settings. From there you can manage project details, domains, integrations, Git, functions, environment variables, and security.\n\nVercel provides a Command Menu that enables you to navigate through the dashboard and perform common actions using only the keyboard.\n\nYou can access the menu using by pressing ⌘ + K on macOS or Ctrl + K on Windows and Linux. Note that you must be logged in to access the Command Menu.",
  "title": "Dashboard Overview",
  "description": "Learn how to use the Vercel dashboard to view and manage all aspects of the Vercel platform, including your Projects and Deployments.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts",
  "markdown": "# Accounts on Vercel\n\nIn this section, you'll learn everything you need to manage your Vercel accounts effectively, and understand our billing process.\n\n*   [Create an Account](https://vercel.com/docs/accounts/create-an-account): Learn how to register with Vercel\n*   [Manage Emails](https://vercel.com/docs/accounts/manage-emails): Learn how to manage your email addresses in your Vercel account\n*   [Create a Team](https://vercel.com/docs/accounts/create-a-team): Learn how to set up a team, invite members, and manage access\n*   [Team Roles and Permissions](https://vercel.com/docs/accounts/team-members-and-roles): Learn how to manage your team by assigning roles and setting permissions\n*   [Plans and Billing](https://vercel.com/docs/accounts/plans): Understand the features available at each plan level, as well as our billing process\n    *   [Hobby](https://vercel.com/docs/accounts/plans/hobby): The ideal plan for personal projects and hobbyists\n    *   [Pro](https://vercel.com/docs/accounts/plans/pro): Designed for professional developers and small teams\n    *   [Enterprise](https://vercel.com/docs/accounts/plans/enterprise): Tailored to businesses with larger teams or complex needs",
  "title": "Accounts on Vercel",
  "description": "Learn how to manage your Vercel account and team members.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/production-checklist",
  "markdown": "# Production checklist for launch\n\nEnsure your application is ready for launch with this comprehensive production checklist by the Vercel engineering team. Covering operational excellence, security, reliability, performance efficiency, and cost optimization.\n\nWhen launching your application on Vercel, it is important to ensure that it's ready for production. This checklist is prepared by the Vercel engineering team and designed to help you prepare your application for launch by running through a series of questions to ensure [operational excellence](#operational-excellence), [security](#security), [reliability](#reliability), [performance efficiency](#performance), and [cost optimization](#cost-optimization).\n\n*   Define an incident response plan for your team, including [escalation paths](https://vercel.com/help#issues), [communication channels](https://www.vercel-status.com/), and [rollback strategies](https://vercel.com/docs/deployments/instant-rollback) for deployments\n    \n*   Enable [Monitoring](https://vercel.com/docs/observability/monitoring) to debug and optimize performance, investigate errors and traffic, and more\n    \n*   Familiarize yourself with the ability to [promote](https://vercel.com/docs/deployments/managing-deployments#manually-promoting-to-production) and [rollback](https://vercel.com/docs/deployments/instant-rollback)\n    \n*   Ensure [caching](https://vercel.com/docs/monorepos/turborepo) is configured if deploying using a monorepo to prevent unnecessary builds\n    \n*   Perform a zero downtime migration to [Vercel DNS](https://vercel.com/guides/zero-downtime-migration-for-dns)\n    \n*   Add a `www` subdomain and [redirect your apex domain](https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-www-domains)\n    \n*   Consider using [v0](https://v0.dev/) to quickly generate and iterate on React and Tailwind CSS components\n    \n*   Configure [enhanced build hardware](https://vercel.com/changelog/improved-build-compute-performance-for-enterprise-customers) with larger memory and storage _([Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans only)_\n    \n*   Enable [Conformance](https://vercel.com/docs/workflow-collaboration/conformance) to run automated checks on your code for product critical issues, such as performance, security, and code health _([Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans only)_\n    \n\n*   Implement a [Content Security Policy](https://vercel.com/guides/content-security-policy) (CSP) and proper [security headers](https://vercel.com/docs/workflow-collaboration/conformance/rules/NEXTJS_MISSING_SECURITY_HEADERS)\n    \n*   Enable [Deployment Protection](https://vercel.com/docs/security/deployment-protection) to prevent unauthorized access to your deployments\n    \n*   Configure the [Vercel Web Application Firewall (WAF)](https://vercel.com/docs/security/vercel-waf) to monitor, block, and challenge incoming traffic. This includes setting up [custom rules](https://vercel.com/docs/security/vercel-waf/custom-rules), [IP blocking](https://vercel.com/docs/security/vercel-waf/ip-blocking), and enabling [managed rulesets](https://vercel.com/docs/security/vercel-waf/managed-rulesets) for enhanced security\n    \n*   Enable [Log Drains](https://vercel.com/docs/observability/log-drains-overview/log-drains) to persist logs from your deployments\n    \n*   Review common [SSL certificate issues](https://vercel.com/docs/projects/domains/troubleshooting#common-ssl-certificate-issues)\n    \n*   Enable a [Preview Deployment Suffix](https://vercel.com/docs/deployments/generated-urls#preview-deployment-suffix) to use a [custom domain](https://vercel.com/docs/projects/domains/add-a-domain) for Preview Deployments\n    \n*   Commit your [lockfiles](https://vercel.com/docs/deployments/builds/package-managers) to pin dependencies and speed up builds through caching\n    \n*   Consider implementing [rate limiting](https://vercel.com/guides/rate-limiting-edge-middleware-vercel-kv) to prevent abuse\n    \n*   Consider allowing [multi-tenant user applications](https://vercel.com/templates/next.js/platforms-starter-kit) to report abuse\n    \n*   Review and implement [access roles](https://vercel.com/docs/accounts/team-members-and-roles/access-roles) to ensure the correct permissions are set for your team members\n    \n*   Enable [SAML SSO](https://vercel.com/docs/security/saml) and [SCIM](https://vercel.com/docs/security/saml#de-provisioning-team-members) _([Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans with [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role only)_\n    \n*   Enable [Audit Logs](https://vercel.com/docs/observability/audit-log) to track and analyze team member activity _([Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans with [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role only)_\n    \n*   Ensure that cookies comply with the [allowed cookie policy](https://vercel.com/docs/workflow-collaboration/conformance/rules/SET_COOKIE_VALIDATION) to enhance security. _([Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans with [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role only)_\n    \n\n*   Enable [Monitoring](https://vercel.com/docs/observability/monitoring) to debug and optimize performance, investigate errors and traffic, and more\n    \n*   Enable [automatic Function failover](https://vercel.com/docs/functions/configuring-functions/region#automatic-failover) to add multi-region redundancy and protect against regional outages\n    \n*   Implement [caching headers](https://vercel.com/docs/edge-network/caching) for static assets or Function responses to reduce usage or origin requests\n    \n*   Understand the differences between [caching headers and Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration)\n    \n*   Consider using [OpenTelemetry](https://vercel.com/docs/observability/otel-overview/quickstart) to instrument your application for distributed tracing\n    \n*   Consider running a [load test](https://vercel.com/guides/what-s-vercel-s-policy-regarding-load-testing-deployments) on your application to stress your upstream services _([Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans only)_\n    \n\n*   Enable [Speed Insights](https://vercel.com/docs/speed-insights) for instant access to field performance data and [Core Web Vitals](https://vercel.com/blog/how-core-web-vitals-affect-seo)\n    \n*   Review your [Time To First Byte (TTFB)](https://vercel.com/docs/speed-insights/metrics#time-to-first-byte-ttfb) to ensure your application is responding quickly\n    \n*   Ensure you are using [Image Optimization](https://vercel.com/docs/image-optimization) to reduce the size of your images\n    \n*   Ensure you are using [Script Optimization](https://nextjs.org/docs/app/building-your-application/optimizing/scripts) to optimize script loading performance\n    \n*   Ensure you are using [Font Optimization](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) to remove external network requests for improved privacy and performance\n    \n*   Ensure your [Vercel Function](https://vercel.com/docs/functions/configuring-functions/region) region is the same as your origin API or database\n    \n*   Consider the limitations of placing a [third-party proxy](https://vercel.com/docs/integrations/cloudflare) in front of Vercel\n    \n\n*   Follow our [manage and optimize usage guides](https://vercel.com/docs/pricing/manage-and-optimize-usage) to understand how to optimize your usage, and manage your costs\n    \n*   Configure [Spend Management](https://vercel.com/docs/accounts/spend-management) to manage your usage and [trigger alerts](https://vercel.com/docs/accounts/spend-management#managing-alert-threshold-notifications) on usage changes\n    \n*   Review or adjust the [maximum duration](https://vercel.com/docs/functions/configuring-functions/duration) for your Vercel Functions\n    \n*   Ensure [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration) (ISR) revalidation times are set appropriately to match content changes or move to [on-demand revalidation](https://vercel.com/docs/incremental-static-regeneration/quickstart#on-demand-revalidation)\n    \n*   Ensure optimized images are using a [consistent value for source images](https://vercel.com/docs/image-optimization/limits-and-pricing#source-images)\n    \n*   Move large media files such as GIFs and videos to [blob storage](https://vercel.com/docs/storage/vercel-blob)",
  "title": "Production checklist for launch",
  "description": "Ensure your application is ready for launch with this comprehensive production checklist by the Vercel engineering team. Covering operational excellence, security, reliability, performance efficiency, and cost optimization.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains",
  "markdown": "# Domains Overview\n\nA domain is a user-friendly way of referring to the address access a website on the internet. For example, the domain you're reading this on is `vercel.com`. Domains can be analogous to the address where your house is. When someone sends a letter to your house, they don't need to know exactly _where_ it is, they just need the address and the relevant post office handles routing the letter.\n\nThe system that manages the details about where a site is located on the internet, is known as DNS or the Domain Name System. At its most basic, DNS maps human-readable domain names to computer-friendly IP addresses. When you request a site in your browser, the first step is converting the domain address to an IP address. That process is handled by DNS and called DNS Resolution. Understanding how DNS works is important to ensure that you are configuring your domain correctly.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fdns-request.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDiagram showing the a basic DNS query.\n\n1.  You enter `vercel.com` in your browser. Your browser will first check its local DNS cache to see if it knows the IP address of `vercel.com`. If it does, it will request the site from that address.\n    \n2.  Your browser initiates a DNS query through a server known as a recursive resolver, usually provided by your ISP or a third-party. The recursive resolver acts as a middleman between the browser and DNS server and is used to increase the speed and efficiency of the resolution process. The resolver will check its cache first to see if it already has the IP address. If it doesn't, it'll request the IP address from a DNS server.\n    \n3.  There is a network of DNS servers, in a hierarchy, located all around the world. The recursive resolver will query in the following pattern:\n    \n    *   At the entrance to the network are 13 root nameservers. These are the servers that will be contacted first. The root server will look at the domain name, and based on the TLD or top-level domain (.com, .co.uk, etc.), will direct the resolver to the correct TLD server.\n    *   The TLD nameservers store information about domain names that belong to the same TLD. For example, when searching for `vercel.com`, once the recursive resolver receives a response from the root nameserver, it will query the `.com` TLD nameserver.\n    *   This TLD server will then respond resolver with details about the authoritative nameserver that has the IP address mapping for `vercel.com` stored in an A record. The authoritative nameserver returns this record to the recursive resolver, which will cache the result and return it to your browser.\n4.  Once your browser has the IP address, an HTTP request is made by the browser to the web server located at that IP address.\n    \n\nThis list is just a general overview and doesn't happen every time. Most of us tend to visit the same sites over and over. Therefore, the request will first check the cache from your browser and then from the recursive resolver, allowing for quicker load times. In addition, this example describes a basic unicast DNS network. In reality, when using Vercel, you're using anycast servers on the Edge Network.\n\nThis overview shows a point of view of a user visiting your site. But what does this look like when you're the developer creating a site?\n\nWhen you've created a Project and deployed it on Vercel, your site lives on Vercel's web servers, which we know to be at the IP address `76.76.21.21`. However, your user's browser doesn't know that. For this reason, the browser will perform a DNS Lookup to retrieve the correct IP mapping to `yoursiteaddress.com` from a DNS server.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fvercel-dns-request.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDiagram showing the Vercel-hosted query.\n\nThis is where, as a developer, you may have to configure the DNS settings to tell the authoritative server exactly where your site lives. Vercel [guides you through](https://vercel.com/docs/projects/domains/add-a-domain) exactly what information you need to set, within your Dashboard. There are a number of different settings that you should be aware of:\n\n*   DNS records: DNS records are an entry in a database that maps the domain with the IP address, which is then stored on the authoritative server. Some of the most common record types are: CNAME (Canonical name), A (Address), NS (nameserver), and MX (mail exchange). These are all described in more detail in [Working with DNS](https://vercel.com/docs/projects/domains/working-with-dns).\n*   Nameserver: Nameservers are an important part of the DNS. They refer to the _actual_ server that maintains and manages the DNS records. There are three types of nameservers: root nameserver, TLD nameserver, and the authoritative server. You can learn more about using a nameserver with Vercel in [Working with nameservers](https://vercel.com/docs/projects/domains/working-with-nameservers).\n*   SSL Certificates: SSL Certificates are a way to show that there is a secure connection from your domain to your website. These are described in more detail in [Working with SSL certificates](https://vercel.com/docs/projects/domains/working-with-ssl).\n\n### Interested in the Enterprise plan?\n\nContact our sales team to learn more about the Enterprise plan and how it can benefit your team.",
  "title": "Domains Overview",
  "description": "Learn the fundamentals of how domains, DNS, and nameservers work on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/limits/overview",
  "markdown": "# Limits\n\nTo prevent abuse of our platform, we apply the following limits to all accounts.\n\n|     | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Projects | 200 | Unlimited | Unlimited |\n| Deployments Created per Day | 100 | 6000 | Custom |\n| Serverless Functions Created per Deployment | [Framework-dependent\\*](https://vercel.com/docs/functions/serverless-functions/runtimes#functions-created-per-deployment) | ∞   | ∞   |\n| [Proxied Request Timeout](#proxied-request-timeout) (Seconds) | 30  | 30  | 30  |\n| Deployments Created from CLI per Week | 2000 | 2000 | Custom |\n| [Vercel Projects Connected per Git Repository](#connecting-a-project-to-a-git-repository) | 3   | 60  | Custom |\n| [Routes created per Deployment](#routes-created-per-deployment) | 1024 | 1024 | Custom |\n| [Build Time per Deployment](#build-time-per-deployment)(Minutes) | 45  | 45  | 45  |\n| [Concurrent Builds](https://vercel.com/docs/deployments/concurrent-builds) | 1   | 12  | Custom |\n| Disk Size (GB) | 23  | 23  | Custom |\n| Cron Jobs | [2\\*](https://vercel.com/docs/cron-jobs/usage-and-pricing) | 40  | 100 |\n\nFor Teams on the Pro plan, you can pay for [additional usage](https://vercel.com/docs/limits/overview#additional-resources) as you go.\n\nIf your project will exceed these limits on Pro and you need advanced security and privacy features, contact [Vercel Sales](https://vercel.com/contact/sales) to discuss Enterprise.\n\nFor members of our Pro plan, we offer a pay-as-you-go model for additional usage, giving you greater flexibility and control over your usage. The typical monthly usage guidelines above are still applicable, while extra usage will be automatically charged at the following rates:\n\nTo learn more about Managed Infrastructure on the Pro plan, and how to understand your invoices, see [understanding my invoice.](https://vercel.com/docs/pricing/understanding-my-invoice)\n\nSee the [Pro trial limitations](https://vercel.com/docs/accounts/plans/pro/trials#trial-limitations) section for information on the limits that apply to Pro trials.\n\nThe limit of \"Routes created per Deployment\" encapsulates several options that can be configured on Vercel:\n\n*   If you are using a `vercel.json` configuration file, each [rewrite](https://vercel.com/docs/projects/project-configuration#rewrites), [redirect](https://vercel.com/docs/projects/project-configuration#redirects), or [header](https://vercel.com/docs/projects/project-configuration#headers) is counted as a Route\n*   If you are using the [Build Output API](https://vercel.com/docs/build-output-api/v3), you might configure [routes](https://vercel.com/docs/build-output-api/v3/configuration#routes) for your deployments\n\nNote that most frameworks will create Routes automatically for you. For example, Next.js will create a set of Routes corresponding to your use of [dynamic routes](https://nextjs.org/docs/routing/dynamic-routes), [redirects](https://nextjs.org/docs/api-reference/next.config.js/redirects), [rewrites](https://nextjs.org/docs/api-reference/next.config.js/rewrites) and [custom headers](https://nextjs.org/docs/api-reference/next.config.js/headers).\n\nThe maximum duration of the [Build Step](https://vercel.com/docs/deployments/configure-a-build) is 45 minutes. When the limit is reached, the Build Step will be interrupted and the Deployment will fail.\n\nEvery Build is provided with the following resources:\n\n|     | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Memory | 8192 MB | 8192 MB | Custom |\n| Disk space | 23 GB | 23 GB | Custom |\n| CPUs | 2   | 4   | Custom |\n\nEnterprise customers can purchase enhanced builds with larger memory and storage.\n\nFor more information on troubleshooting these, see [Build container resources](https://vercel.com/docs/deployments/troubleshoot-a-build#build-container-resources).\n\nThe maximum size of the Build's cache is 1 GB. It is retained for one month and it applies at the level of each [Build cache key](https://vercel.com/docs/deployments/troubleshoot-a-build#caching-process).\n\nCheck out [the limits and pricing section](https://vercel.com/docs/observability/monitoring/limits-and-pricing) for more details about the limits of the [Monitoring](https://vercel.com/docs/observability/monitoring) feature on Vercel.\n\nThere are two types of logs: build logs and runtime logs. Both have different behaviors when storing logs.\n\n[Build logs](https://vercel.com/docs/deployments/logs) are stored indefinitely for each deployment.\n\n[Runtime logs](https://vercel.com/docs/observability/runtime-logs) are stored for 1 hour on Hobby, 1 day on Pro, and for 3 days on Enterprise accounts. To learn more about these log limits, [read here](https://vercel.com/docs/observability/runtime-logs#limits).\n\nThe maximum number of [Environment Variables](https://vercel.com/docs/projects/environment-variables) per environment per [Project](https://vercel.com/docs/projects/overview) is `1000`. For example, you cannot have more than `1000` Production Environment Variables.\n\nThe total size of your Environment Variables, names and values, is limited to 64KB for projects using Node.js, Python, Ruby, Go, Java, and .NET runtimes. This limit is the total allowed for each deployment, and is also the maximum size of any single Environment Variable. For more information, see the [Environment Variables](https://vercel.com/docs/projects/environment-variables#environment-variable-size) documentation.\n\nIf you are using [System Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables), the framework-specific ones (i.e. those prefixed by the framework name) are exposed only during the Build Step, but not at runtime. However, the non-framework-specific ones are exposed at runtime. Only the Environment Variables that are exposed at runtime are counted towards the size limit.\n\n|     | Hobby | Pro |\n| --- | --- | --- |\n| Domains per Project | 50  | Unlimited |\n\nThe maximum number of files that can be uploaded when creating a CLI [Deployment](https://vercel.com/docs/deployments/overview) is `15,000` for source files. Deployments that contain more files than the limit will fail at the [build step](https://vercel.com/docs/deployments/configure-a-build).\n\nAlthough there is no upper limit for output files created during a build, you can expect longer build times as a result of having many thousands of output files (100,000 or more, for example). If the build time exceeds 45 minutes then the build will fail.\n\nWe recommend using [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration) (ISR) to help reduce build time. Using ISR will allow you pre-render a subset of the total number of pages at build time, giving you faster builds and the ability to generate pages on-demand.\n\nThe amount of time (in seconds) that a proxied request (`rewrites` or `routes` with an external destination) is allowed to process an HTTP request. The maximum timeout is 30 seconds. If the external server does not reply until the maximum timeout is reached, an error with the message `ROUTER_EXTERNAL_TARGET_ERROR` will be returned.\n\n[Edge Functions](https://vercel.com/docs/functions/serverless-functions) and [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) do not support acting as a WebSocket server.\n\nWe recommend third-party [solutions](https://vercel.com/guides/publish-and-subscribe-to-realtime-data-on-vercel#providers) to enable realtime communication for [Deployments](https://vercel.com/docs/deployments/overview).\n\nCheck out the [Limits and Pricing section](https://vercel.com/docs/analytics/limits-and-pricing) for more details about the limits of Vercel Web Analytics.\n\nCheck out the [Limits and Pricing](https://vercel.com/docs/speed-insights/limits-and-pricing) doc for more details about the limits of the Speed Insights feature on Vercel.\n\nCheck out the Cron Jobs [limits](https://vercel.com/docs/cron-jobs/usage-and-pricing) section for more information about the limits of Cron Jobs on Vercel.\n\nThe limits of Vercel functions are based on the [runtime](https://vercel.com/docs/functions/serverless-functions/runtimes) that you use.\n\nFor example, different runtimes allow for different [bundle sizes](https://vercel.com/docs/functions/serverless-functions/runtimes#bundle-size-limits), [maximum duration](https://vercel.com/docs/functions/serverless-functions/runtimes#max-execution-time), and [memory](https://vercel.com/docs/functions/serverless-functions/runtimes#memory-size-limits).\n\n​Vercel does not support connecting your Personal Account's Projects to Git repositories owned by Git organizations. You can either switch to an existing Team or create a new one.\n\nThe same limitation applies in the Project creation flow when importing an existing Git repository or when cloning a Vercel template to a new Git repository as part of your Git organization.\n\nSee the [Reserved Environment Variables](https://vercel.com/docs/projects/environment-variables/reserved-environment-variables) docs for more information.\n\nRate limits are hard limits that apply to the platform when performing actions that require a response from our [API](https://vercel.com/docs/rest-api#api-basics).\n\nThe rate limits table consists of the following four columns:\n\n*   Description - A brief summary of the limit which, where relevant, will advise what type of plan it applies to.\n*   Limit - The amount of actions permitted within the amount of time (Duration) specified.\n*   Duration - The amount of time (seconds) in which you can perform the specified amount of actions. Once a rate limit is hit, it will be reset after the Duration has expired.\n*   Scope - Who the limit applies to: `owner` refers to the [Personal Account](https://vercel.com/docs/accounts/create-an-account#creating-a-hobby-account) Owner or [Team](https://vercel.com/docs/accounts/create-a-team) Owner, `user` refers to a [Team Member](https://vercel.com/docs/accounts/team-members-and-roles).\n\nBelow are five examples that provide further information on how rate limits work.\n\nYou are able to delete up to `60` domains every `60` seconds (1 minute). Should you hit the rate limit, you will need to wait another minute before you can delete another domain.\n\nYou are able to delete up to `20` teams every `3600` seconds (1 hour). Should you hit the rate limit, you will need to wait another hour before you can delete another team.\n\nYou are able to change your username up to `6` times every `604800` seconds (1 week). Should you hit the rate limit, you will need to wait another week before you can change your username again.\n\nYou are able to build `32` [Deployments](https://vercel.com/docs/deployments/overview) every `3600` seconds (1 hour). Should you hit the rate limit, you will need to wait another hour before you can build a deployment again.\n\nUsing Next.js or any similar framework to build your deployment is classed as a build. Each Serverless Function is also classed as a build. Hosting static files such as an index.html file is not classed as a build.\n\nYou are able to deploy `100` times every `86400` seconds (1 day). Should you hit the rate limit, you will need to wait another day before you can deploy again.\n\n* * *",
  "title": "Limits",
  "description": "This reference covers a list of all the limits and limitations that apply on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing",
  "markdown": "# Pricing on Vercel\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThis page provides an overview of Vercel's pricing model and outlines all billable metrics and their pricing models.\n\nFor a full breakdown of Vercel's pricing by plan, see the [pricing page](https://vercel.com/pricing/coming-soon).\n\nTo learn how resources are triggered through a real-world app scenario, see the [calculating resource usage](https://vercel.com/docs/pricing/how-does-vercel-calculate-usage-of-resources) guide.\n\nVercel provides [Managed Infrastructure](https://vercel.com/products/managed-infrastructure) to deploy, scale, and secure your applications.\n\nThis includes our [Edge Network](https://vercel.com/docs/edge-network/overview), [Vercel Functions](https://vercel.com/docs/functions/introduction), and more. These resources are usage based, and billed based on the amount of data transferred, the number of requests made, and the duration of compute resources used.\n\nEach product's usage breaks down into resources, with each one billed based on the usage of a specific metric. For example, within the Edge Network, [Fast Data Transfer](https://vercel.com/docs/pricing/networking#fast-data-transfer) incurs charges based on the data transferred between the user's device and the Vercel Edge Network.\n\nSimilarly, [Function Duration](https://vercel.com/docs/functions/configuring-functions/duration) generates bills based on the total execution time of a Serverless Function.\n\nThe below table lists the billable Managed Infrastructure resources for the following products:\n\nPricing begins at the stated rate for [Pro](https://vercel.com/docs/accounts/plans/pro). The Pro plan add-on badge indicates resources available at an extra cost. For [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) pricing, contact our [sales team](https://vercel.com/contact/sales).\n\nTo learn more about Managed Infrastructure on the Pro plan, and how to understand your invoices, see [understanding my invoice.](https://vercel.com/docs/pricing/understanding-my-invoice)\n\nThe following table lists the pricing for each resource in Managed Infrastructure. Resources that depend on the region of your Vercel project are priced differently based on the cost of resources in that region.\n\nUse the dropdown to select the regional prices.\n\nVercel's Developer Experience Platform [(DX Platform)](https://vercel.com/products/dx-platform) offers a monthly billed suite of tools and services focused on building, deploying, and optimizing web applications.\n\nThe below table lists the billable DX Platform resources for the following products and services:\n\nPricing begins at the stated rate for [Pro](https://vercel.com/docs/accounts/plans/pro). For Pro plan add-ons, a badge indicates which resources can be purchased at additional cost. For [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) pricing, contact our [sales team](https://vercel.com/contact/sales).\n\n### Interested in the Enterprise plan?\n\nContact our sales team to learn more about the Enterprise plan and how it can benefit your team.\n\nFor more information on Vercel's pricing, guidance on optimizing consumption, and invoices, see the following resources:",
  "title": "Pricing on Vercel",
  "description": "Learn about Vercel's pricing model, including the resources and services that are billed, and how they are priced.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/error-list",
  "markdown": "# Error List\n\nThe [build step](https://vercel.com/docs/deployments/configure-a-build) will result in an error if the output directory is missing, empty, or invalid (for example, it is not a directory). To resolve this error, you can try the following steps:\n\n*   Make sure the [output directory](https://vercel.com/docs/deployments/configure-a-build#output-directory) is specified correctly in project settings\n*   If the output directory is correct, check the build command ([documentation](https://vercel.com/docs/deployments/configure-a-build#build-command)) or the [root directory](https://vercel.com/docs/deployments/configure-a-build#root-directory))\n*   Try running the build command locally and make sure that the files are correctly generated in the specified output directory\n\nThis is only relevant if you’re using Vercel CLI 16.7.3 or older.\n\nSuppose your project contains a `package.json` file, no `api` directory, and no `vercel.json` configuration. In that case, it is expected to provide a `build` [script](https://docs.npmjs.com/misc/scripts) that performs a static build of your frontend and outputs it to a `public` directory at the root of your project.\n\nWhen properly configured, your `package.json` file would look similar to this:\n\n```\n{\n  \"scripts\": {\n    \"build\": \"[my-framework] build --output public\"\n  }\n}\n```\n\nAn example `build` script in a `package.json` file that specifies the output directory.\n\nOnce you have defined the `build` [script](https://docs.npmjs.com/misc/scripts), this error will disappear. Furthermore, it will not be displayed if you are using `package.json` purely to provide dependencies for your Serverless Functions located inside the `api` directory.\n\nThe maximum amount of open requests to join a team is 10. In order to allow for more requests, the existing requests need to be approved or declined by a [Team Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role).\n\nThis ensures the list always remains manageable and protected against spam.\n\nIf a user has already requested access to a team, it's impossible to invite them. Instead, their request must be approved by a [Team Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) for the user to gain access.\n\nThis ensures no team invites are accidentally accepted.\n\nWhen the deployment for a commit fails with the message \"Team access required to deploy.\", the Git account of the commit author is not connected to a Hobby account that is a member of the team.\n\nThe link attached to the error allows someone to connect their Hobby account to the Git account of the commit author. If the Hobby account is connected to a different Git account, it will fail stating that a different Git account must be used to request access to the team.\n\nOnce the Git account is connected to the Hobby account on Vercel, it is possible to request access to the team. A [Team Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) can then approve or decline this access request. If the request was approved, the failed commit would be retried, and the following commits would not fail due to missing team access.\n\nA Hobby or team on Vercel can be blocked if it violates our [fair use guidelines](https://vercel.com/docs/limits/fair-use-guidelines) or [Terms of Service](https://vercel.com/legal/terms).\n\nBlocked Hobby accounts or teams cannot create new deployments, or be invited to new teams. Please [contact Vercel Support](https://vercel.com/help#issues) if you need help.\n\nA [Project](https://vercel.com/docs/projects/overview) has several settings that can be found in the dashboard. One of those sections, Build & Development Settings, is used to change the way a Project is built.\n\nHowever, the Build & Development Settings are only applied to [zero-configuration](https://vercel.com/guides/upgrade-to-zero-configuration) deployments.\n\nIf a deployment defines the [`builds`](https://vercel.com/docs/cli#project-configuration/builds) configuration property, the Build & Development Settings are ignored.\n\nA [Project](https://vercel.com/docs/projects/overview) has several settings that can be found in the dashboard. One of those settings, Serverless Function Region, is used to select the [region](https://vercel.com/docs/edge-network/regions) where your Serverless Functions execute.\n\nIf a deployment defines the [`regions`](https://vercel.com/docs/cli#project-configuration/regions) configuration property in `vercel.json`, the Serverless Function Region setting is ignored.\n\nIf a CLI Deployment defines the [`--regions`](https://vercel.com/docs/cli/deploy#regions) option, the Serverless Function Region setting is ignored.\n\nThe `source` property follows the syntax from [path-to-regexp](https://github.com/pillarjs/path-to-regexp/tree/v6.1.0), not the `RegExp` syntax.\n\nFor example, negative lookaheads must be wrapped in a group.\n\nBefore\n\n```\n{\n  \"source\": \"/feedback/(?!general)\",\n  \"destination\": \"/api/feedback/general\"\n}\n```\n\nAfter\n\n```\n{\n  \"source\": \"/feedback/((?!general).*)\",\n  \"destination\": \"/api/feedback/general\"\n}\n```\n\nThe `source` property follows the syntax from [path-to-regexp](https://github.com/pillarjs/path-to-regexp/tree/v6.1.0).\n\nA colon (`:`) defines the start of a [named segment parameter](https://github.com/pillarjs/path-to-regexp/tree/v6.1.0#named-parameters).\n\nA named segment parameter defined in the `destination` property must also be defined in the `source` property.\n\nBefore\n\n```\n{\n  \"source\": \"/feedback/:type\",\n  \"destination\": \"/api/feedback/:id\"\n}\n```\n\nAfter\n\n```\n{\n  \"source\": \"/feedback/:id\",\n  \"destination\": \"/api/feedback/:id\"\n}\n```\n\nWhen running the `vercel build` or `vercel dev` commands, `npm install` errors can be encountered if `npm` was invoked to install Builders that are defined in your `vercel.json` file.\n\n`npm install` may fail if:\n\n*   [`npm`](https://www.npmjs.com/get-npm) is not installed\n*   Your internet connection is unavailable\n*   The Builder that is defined in your configuration is not published to the npm registry\n\nDouble-check that the name and version of the Builder you are requesting is correct.\n\nIf you have [`rewrites`](https://vercel.com/docs/cli#project-configuration/rewrites), [`redirects`](https://vercel.com/docs/cli#project-configuration/redirects), [`headers`](https://vercel.com/docs/cli#project-configuration/headers), [`cleanUrls`](https://vercel.com/docs/cli#project-configuration/clean-urls) or [`trailingSlash`](https://vercel.com/docs/cli#project-configuration/trailing-slash) defined in your [configuration](https://vercel.com/docs/project-configuration) file, then [`routes`](https://vercel.com/docs/cli#project-configuration/routes) cannot be defined.\n\nThis is a necessary limitation because `routes` is a lower-level primitive that contains all of the other types. Therefore, it cannot be merged safely with the new properties.\n\nSee the [Upgrading Routes](https://vercel.com/docs/projects/project-configuration#upgrading-legacy-routes) section for examples of `routes` compared to the new properties.\n\nFor backward compatibility purposes, there are two naming conventions for configuration files used by Vercel CLI (for example `vercel.json` and `now.json`). Both naming conventions are supported, however only _one_ may be defined at a time. Vercel CLI will output an error message if both naming conventions are used at the same time.\n\nThese conflicting configuration errors occur if:\n\n*   Both `vercel.json` and `now.json` exist in your project.  \n    Solution: Delete the `now.json` file\n*   Both `.vercel` and `.now` directories exist in your project.  \n    Solution: Delete the `.now` directory\n*   Both `.vercelignore` and `.nowignore` files exist in your project.  \n    Solution: Delete the `.nowignore` file\n*   Environment Variables that begin with `VERCEL_` have a conflicting Environment Variable that begins with `NOW_`.  \n    Solution: Only define the `VERCEL_` prefixed Environment Variable\n\nThere are two ways to configure Serverless Functions in your project: [functions](https://vercel.com/docs/projects/project-configuration#functions) _or_ [`builds`](https://vercel.com/docs/cli#project-configuration/builds). However, only one of them may be used at a time - they cannot be used in conjunction.\n\nFor most cases, it is recommended to use the `functions` property because it supports more features, such as:\n\n*   Allows configuration of the amount of memory that the Serverless Function is provided with\n*   More reliable because it requires a specific npm package version for the `runtime` property\n*   Supports \"clean URLs\" by default, which means that the Serverless Functions are automatically accessible without their file extension in the URL\n\nHowever, the [`builds`](https://vercel.com/docs/cli#project-configuration/builds) property will remain supported for backward compatibility purposes.\n\nWhen using Next.js, only `memory` and `maxDuration` can be configured within the [functions](https://vercel.com/docs/projects/project-configuration#functions) property. Next.js automatically handles the other configuration values for you.\n\nIt's possible to deploy Serverless Functions to multiple regions. This functionality is only available to [Enterprise teams](https://vercel.com/docs/accounts/plans/enterprise).\n\nOn the [Pro plan](https://vercel.com/docs/accounts/plans/pro), the limitation has existed since the [launch](https://vercel.com/blog/simpler-pricing) of the current pricing model but was applied on July 10, 2020. For Projects created on or after the date, it's no longer possible to deploy to multiple regions.\n\nTo select the region closest to you, read our [guide](https://vercel.com/guides/choosing-deployment-regions) on choosing deployment regions for Serverless Functions.\n\nThe [functions](https://vercel.com/docs/projects/project-configuration#functions) property uses a glob pattern for each key. This pattern must match Serverless Function source files within the `api` directory.\n\nIf you are using Next.js, Serverless Functions source files can be created in the following:\n\n*   `pages/api` directory\n*   `src/pages/api` directory\n*   `pages` directory when the module exports [getServerSideProps](https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props)\n*   `src/pages` directory when the module exports [getServerSideProps](https://nextjs.org/docs/basic-features/data-fetching/get-server-side-props)\n\nAdditionally, if you'd like to use a Serverless Function that isn't written with Node.js, and in combination with Next.js, you can place it in the `api` directory (provided by the platform), since `pages/api` (provided by Next.js) only supports JavaScript.\n\nNot Allowed\n\n```\n{\n  \"functions\": {\n    \"users/**/*.js\": {\n      \"maxDuration\": 30\n    }\n  }\n}\n```\n\nAllowed\n\n```\n{\n  \"functions\": {\n    \"api/users/**/*.js\": {\n      \"maxDuration\": 30\n    }\n  }\n}\n```\n\nAllowed (Next.js)\n\n```\n{\n  \"functions\": {\n    \"pages/api/users/**/*.js\": {\n      \"maxDuration\": 30\n    }\n  }\n}\n```\n\nIf the Project configuration in `.vercel` belongs to a team you are not a member of, attempting to deploy the project will result in an error.\n\nThis can occur if you clone a Git repository that includes the `.vercel` directory, or you are logged in to the wrong Vercel account.\n\nTo fix, remove the `.vercel` directory and redeploy to link the project again by running these commands.\n\nOn macOS and Linux:\n\nOn Windows:\n\nrmdir /s /q .vercel\n\nvercel\n\nProject names can only consist of up to one hundred alphanumeric lowercase characters. Hyphens can be used in between words in the name, but never at the start or end.\n\nThe amount of Vercel Projects that can be connected with the same Git repository is [limited depending on your plan](https://vercel.com/docs/limits/overview#general-limits).\n\nIf you have reached the limitation and would like to connect a new project to the repository, you will need to disconnect an existing project from the same Git repository.\n\nTo increase this limit, please [contact our Sales Team](https://vercel.com/contact/sales).\n\nTo verify your domain, point the domain to Vercel by configuring our nameservers or a DNS Record. You can learn more about what to do for your Domain by running `vercel domains inspect <domain>`, where `<domain>` is the domain you're interested in.\n\nAlternatively, if you already added the domain to a project, read [the configuring a domain section](https://vercel.com/docs/projects/custom-domains#step-4:-configuring-the-domain) of the custom domain documentation.\n\nYou cannot leave a team if you are the last remaining [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) or the last confirmed [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role). In order to leave the Team, first designate a different confirmed [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) to be an [Team Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role).\n\nIf you are the only remaining [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role), you should instead delete the Team.\n\nDeployments created using Vercel CLI will automatically [ignore several files](https://vercel.com/docs/deployments/build-features#ignored-files-and-folders) for security and performance reasons.\n\nHowever, these files are _not_ ignored for deployments created using [Git](https://vercel.com/docs/deployments/git) and a warning is printed instead. This is because `.gitignore` determines which files should be ignored.\n\nIf the file was intentionally committed to Git, you can ignore the warning.\n\nIf the file was accidentally committed to Git, you can remove it using the following commands:\n\n```\ngit rm file.txt                   # remove the file\necho 'file.txt' >> .gitignore     # append file to .gitignore\ngit add .gitignore                # stage the change\ngit commit -m \"Removed file.txt\"  # commit the change\ngit push                          # deploy the change\n```\n\nIn some cases, signing up with GitHub fails due to GitHub's database inconsistencies.\n\nWhen you connected your Hobby account with your GitHub account, the [Vercel GitHub App](https://github.com/apps/vercel) was installed on your GitHub account and then GitHub notified Vercel that the app was successfully installed.\n\nHowever, Vercel was unable to retrieve the app installation from GitHub, which made it appear as if the [Vercel GitHub App](https://github.com/apps/vercel) was never installed.\n\nIn order to solve this issue, wait a couple of minutes and try connecting to GitHub again. If you are still unable to connect, please contact [GitHub Support](https://support.github.com/contact) to determine why the [Vercel GitHub App](https://github.com/apps/vercel) was not able to be installed.\n\nIf you have configured a custom Git branch for a domain or an environment variable, it is considered a preview domain and a preview environment variable. Because of this, the Git branch configured for it is considered a [preview branch](https://vercel.com/docs/deployments/git#preview-branches).\n\nWhen configuring the production branch in the project settings, it is not possible to use a preview branch.\n\nIf you still want to use this particular Git branch as a production branch, please follow these steps:\n\n1.  Assign your affected domains to the production environment (clear out the Git branch you've defined for them)\n2.  Assign your affected environment variables to the production environment (clear out the Git branch you've defined for them)\n\nAfterwards, you can use the Git branch you originally wanted to use as a production branch.\n\nIn order for Vercel to be able to deploy commits to your Git repository, a Project on Vercel has to be connected to it.\n\nThis connection is interrupted if the Git repository is deleted, archived, or if the Vercel App was uninstalled from the corresponding Git account or Git organization. Make sure none of these things apply.\n\nAdditionally, when using GitHub, the connection is also interrupted if you or a [Team Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) modifies the access permissions of the Vercel GitHub App installed on the respective personal GitHub account or GitHub organization.\n\nTo verify the access permissions of the Vercel GitHub App installed on your personal GitHub account, navigate to the [Applications page](https://github.com/settings/installations) and select Vercel under Installed GitHub Apps. You will see a list of Git repositories that the GitHub App has access to. Make sure that the Git repository you're looking to connect to a Vercel Project is listed there.\n\nTo verify the access permissions of the Vercel GitHub App installed on your GitHub organization, select Vercel under Installed GitHub Apps in the organization settings. You will see a list of Git repositories that the GitHub App has access to. Make sure that the Git repository you're looking to connect to a Vercel Project is listed there.\n\nYou cannot redeploy a production deployment if a more recent one exists.\n\nThe reason is that redeploying an old production deployment would result in overwriting the most recent source code you have deployed to production.\n\nTo force an explicit overwrite of the current production deployment, select Promote instead.\n\nCertain SSL Certificates associated with your Hobby account or team (i.e. Wildcard SSL Certificates for your Vercel Project's staging domains) are automatically generated by the Vercel platform.\n\nBecause these SSL Certificates are managed by the Vercel platform, they cannot be manually deleted on the Vercel Dashboard – nor through Vercel CLI.\n\nCustom SSL Certificates may be uploaded to teams on the [Enteprise plan](https://vercel.com/docs/accounts/plans/enterprise), which are allowed to be manually deleted.\n\nThe Git branch that is configured using the [production branch](https://vercel.com/docs/deployments/git#production-branch) field in the project settings, is considered the branch that contains the code served to your visitors.\n\nIf you'd like to assign a domain or environment variable to that particular Git branch, there's no need to manually fill it in.\n\nBy default, if no custom Git branch is defined for them, domains are already assigned to the production branch. The same is true for environment variables: If no custom Git branch is defined for them and Production is selected as an environment, they're already assigned to the production branch.\n\nIf you still want to enter a specific Git branch for a domain or an environment variable, it has to be a [preview branch](https://vercel.com/docs/deployments/git#preview-branches).\n\nThe _\"Command not found\"_ error message happens when a sub-process that `vercel dev` is attempting to create is not installed on your local machine. You need to install the particular program onto your operating system before `vercel dev` will work correctly.\n\nFor example, you may see the error _\"Command not found: go\"_ if you are writing a Serverless Function in Go, but do not have the `go` binary installed. In this case you need to [install `go`](https://golang.org/doc/install) first, and then try invoking your Serverless Function again.\n\nYou have configured one of the following for your Project:\n\n*   The [Build Command](https://vercel.com/docs/deployments/configure-a-build#build-command) defined in the Project Settings invokes `vercel build`\n*   The [Development Command](https://vercel.com/docs/deployments/configure-a-build#development-command) defined in the Project Settings invokes `vercel dev`\n\nBecause the Build Command is invoked by `vercel build` when deploying, it cannot invoke `vercel build` itself, as that would cause an infinite recursion.\n\nThe same applies to the Development Command: When developing locally, `vercel dev` invokes the Development Command, so it cannot invoke `vercel dev` itself.\n\nAdjust the Build and Development Commands defined for your Project to not invoke `vercel build` or `vercel dev`.\n\nInstead, they should invoke the Build Command provided by your framework.\n\nIf you are unsure about which value to provide, disable the Override option in order to default to the preferred settings for the [Framework Preset](https://vercel.com/docs/deployments/configure-a-build#framework-preset) you have selected.\n\n`ERR_PNPM_UNSUPPORTED_ENGINE` occurs when `package.json#engines.pnpm` does not match the currently running version of `pnpm`.\n\nTo fix, do one of the following:\n\n*   [Set the env var `ENABLE_EXPERIMENTAL_COREPACK` to 1](https://vercel.com/docs/deployments/configure-a-build#corepack), and make sure the `packageManager` value is set correctly in your `package.json`\n\n```\n{\n  \"engines\": {\n    \"pnpm\": \"^7.5.1\"\n  },\n  \"packageManager\": \"pnpm@7.5.1\"\n}\n```\n\n*   Remove the [`engines.pnpm`](https://pnpm.io/package_json#engines) value from your `package.json`\n\nYou cannot use [`engine-strict`](https://pnpm.io/npmrc#engine-strict) to solve this error. `engine-strict` only handles dependencies.\n\nThis error occurs when attempting to create a deployment where at least one of its environment variables contains an outdated Edge Config connection string. A connection string can be outdated if either the Edge Config itself was deleted or if the token used in the connection string is invalid or has been deleted.\n\nTo resolve this error, delete or update the environment variable that contains the connection string. In most cases, the environment variable is named `EDGE_CONFIG`.\n\nYou must reference `@vercel/speed-insights` or `@vercel/analytics` packages in your application's `package.json` file. This error occurs when you deploy your application with these packages globally available, but not referenced in your `package.json` file, like in a monorepo.\n\nTo fix this error, add the packages to your `package.json` file as a dependency.",
  "title": "Error List",
  "description": "You may encounter a variety of errors when you interact with the Vercel platform. This section focuses on errors that can happen when you interact with the Vercel Dashboard.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/resources",
  "markdown": "# Platform Resources\n\nLearn about the resources available to you on the Vercel platform, including the Dashboard, Account Management, Limits, and more.\n\nLearn how to use the Vercel Dashboard to view and manage all aspects of the Vercel platform, including your Projects and Deployments.\n\nLearn how to manage your Vercel accounts effectively, and understand our billing process.\n\nReview all the limits and limitations of the Vercel platform, such as the maximum number of deployments and serverless functions per account plan.\n\nReview a list of possible errors you may face when interacting with the Vercel platform and possible reasons why they may occur.\n\nLearn about the different error codes you may encounter when using the Vercel platform.\n\nLearn about the different phases of the Vercel Product release cycle.\n\nLearn how to set up Vercel's private registry for use locally, in Vercel, and in your CI.\n\nLearn about the terms and concepts used in Vercel's products and documentation.",
  "title": "Platform Resources",
  "description": "Learn about the resources available to you on the Vercel platform, including the Dashboard, Account Management, Limits, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/overview",
  "markdown": "# Edge Network\n\nVercel's Edge Network enables you to store content close to your customers and run compute in regions close to your data, reducing latency and improving end-user performance.\n\nOur Edge Network is both a Content Delivery Network (CDN) and a globally distributed platform for running compute in regions around the globe.\n\nIf you're deploying an app on Vercel, you're already using our Edge Network. These docs will teach how to optimize your apps and deployment configuration to get the best performance for your use-case.\n\n![An overview of how items relate to the Edge Network](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712323807%2Ffront%2Fdocs%2Fpricing%2Fpricing-blog-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![An overview of how items relate to the Edge Network](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712323806%2Ffront%2Fdocs%2Fpricing%2Fpricing-infradark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn overview of how items relate to the Edge Network\n\nVercel's Edge Network uses routing rules to determine how to handle incoming requests, set headers, and cache responses. The following can be configured through [Vercel Functions](https://vercel.com/docs/functions) or the [`vercel.json`](https://vercel.com/docs/projects/project-configuration) configuration file:\n\n*   [Redirects](https://vercel.com/docs/edge-network/redirects): Redirects are used to tell the client to make a new request to a different URL, useful for enforcing HTTPS, redirecting users, and directing traffic\n*   [Rewrites](https://vercel.com/docs/edge-network/rewrites): Rewrites internally change the URL the server uses to fetch the requested resource, allowing for dynamic content and improved routing\n*   [Headers](https://vercel.com/docs/edge-network/headers): Headers are used to modify the request and response headers, allowing for improved security, performance, and functionality\n\nVercel's Edge Network stores content and runs compute in many regions around the world for optimal performance.\n\nVercel's Edge Network caches your content at the edge in order to serve data to your users as fast as possible.\n\nVercel's Edge Network supports streaming API responses with Edge and Serverless Functions. Streaming data enables you to improve your users' perception of your app's speed and performance.\n\nAside from routing your requests to the correct destination, the Edge Network also takes care of a few other important aspects of a working Deployment:\n\nAll of these actions are performed automatically with careful attention to performance (ensured by our choices of technology). In turn, we highly recommend not implementing SSL termination or compression in your own code, as it would be unnecessary.\n\nThe Edge Network supports the following protocols (negotiated with [ALPN](https://tools.ietf.org/html/rfc7301)):\n\nVercel supports of 35 [frontend frameworks](https://vercel.com/docs/frameworks). These frameworks provide a local development environment used to test your app before deploying to Vercel.\n\nThrough [framework-defined infrastructure](https://vercel.com/blog/framework-defined-infrastructure), Vercel then transforms your framework build outputs into globally [managed infrastructure](https://vercel.com/products/managed-infrastructure) for production.\n\nIf you are using [Vercel Functions](https://vercel.com/docs/functions/serverless-functions) or other compute on Vercel _without_ a framework, you can use the [Vercel CLI](https://vercel.com/docs/cli) to test your code locally with [`vercel dev`](https://vercel.com/docs/cli/dev).\n\nWhile sometimes necessary, proceed with caution when you place another CDN in front of Vercel:\n\n*   Vercel's Edge Network is designed to deploy new releases of your site without downtime by purging the Edge Network cache globally and replacing the current deployment\n*   If you use an additional CDN in front of Vercel, it can cause issues because Vercel has no control over the other provider, leading to the serving of stale content or returning 404 errors\n*   To avoid these problems while still using another CDN, we recommend you either configure a short cache time or disabling the cache entirely. Check the documentation for your preferred CDN to learn how to do either option\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.",
  "title": "Edge Network",
  "description": "Vercel's Edge Network enables you to store content close to your customers and run compute in regions close to your data, reducing latency and improving end-user performance.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors",
  "markdown": "# Error Codes\n\nUse this guide to find specific solutions and insights for common Vercel errors.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Error Codes",
  "description": "Use this guide to find specific solutions and insights for common Vercel errors.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/all-products",
  "markdown": "# Explore all products\n\nPlatform\n\n*   [\n    \n    Get Started\n    \n    Build for the web and learn to use our platform\n    \n    ](https://vercel.com/docs/getting-started-with-vercel)[\n    \n    Incremental Migration\n    \n    Migrate your site to Vercel with minimum risk\n    \n    ](https://vercel.com/docs/incremental-migration)[\n    \n    Frameworks\n    \n    Deploy with the framework of your choice on our platform\n    \n    ](https://vercel.com/docs/frameworks)[\n    \n    Projects\n    \n    A Project groups deployments and custom domains\n    \n    ](https://vercel.com/docs/projects/overview)[\n    \n    Builds\n    \n    Learn how your projects are built and configured\n    \n    ](https://vercel.com/docs/deployments/builds)[\n    \n    Deployments\n    \n    How your sites are generated and configured\n    \n    ](https://vercel.com/docs/deployments/overview)[\n    \n    Going Live Checklist\n    \n    Pre-launch checklist for your project\n    \n    ](https://vercel.com/docs/production-checklist)[\n    \n    Pricing\n    \n    Pricing, plans, and spend management\n    \n    ](https://vercel.com/docs/pricing)[\n    \n    Resources\n    \n    Learn about account management, error handling, and more\n    \n    ](https://vercel.com/docs/resources)[\n    \n    Edit Mode\n    \n    Edit your content directly on your site\n    \n    ](https://vercel.com/docs/workflow-collaboration/edit-mode)[\n    \n    Draft Mode\n    \n    Preview changes before publishing\n    \n    ](https://vercel.com/docs/workflow-collaboration/draft-mode)[\n    \n    Ecommerce\n    \n    Integrate with Ecommerce platforms\n    \n    ](https://vercel.com/docs/integrations/ecommerce)\n\nInfrastructure\n\n*   [\n    \n    Edge Network\n    \n    Configurable CDN with caching, compute, and routing rules\n    \n    ](https://vercel.com/docs/edge-network/overview)[\n    \n    Vercel Functions\n    \n    Code on-demand without managing your own infrastructure\n    \n    ](https://vercel.com/docs/functions)[\n    \n    Edge Middleware\n    \n    Code that executes before a request is processed on a site\n    \n    ](https://vercel.com/docs/functions/edge-middleware)[\n    \n    Image Optimization\n    \n    Serve high-quality images with minimal impact on page load times\n    \n    ](https://vercel.com/docs/image-optimization)[\n    \n    Incremental Static Regeneration\n    \n    Create or update content without redeploying your site\n    \n    ](https://vercel.com/docs/incremental-static-regeneration)[\n    \n    Edge Cache\n    \n    Content caching at the edge for fast responses\n    \n    ](https://vercel.com/docs/edge-network/caching)[\n    \n    Data Cache\n    \n    Specialized cache for storing responses from fetches\n    \n    ](https://vercel.com/docs/infrastructure/data-cache)[\n    \n    Cron Jobs\n    \n    Time-based scheduling to automate repetitive tasks\n    \n    ](https://vercel.com/docs/cron-jobs)\n\nWorkflow\n\n*   [\n    \n    Vercel Toolbar\n    \n    Manage your Vercel projects from your browser\n    \n    ](https://vercel.com/docs/workflow-collaboration/vercel-toolbar)[\n    \n    Feature Flags\n    \n    View and override your application's feature flags\n    \n    ](https://vercel.com/docs/workflow-collaboration/feature-flags)[\n    \n    Comments\n    \n    Allow collaborators to give direct feedback on preview deployments\n    \n    ](https://vercel.com/docs/workflow-collaboration/comments)[\n    \n    Conformance\n    \n    Improve collaboration, productivity, and software quality at scale\n    \n    ](https://vercel.com/docs/workflow-collaboration/conformance)[\n    \n    Code Owners\n    \n    Define users or teams that are responsible for your codebase\n    \n    ](https://vercel.com/docs/workflow-collaboration/code-owners)\n\nStorage\n\n*   [\n    \n    Storage on Vercel\n    \n    Learn about Vercel’s storage solutions\n    \n    ](https://vercel.com/docs/storage)[\n    \n    Vercel KV\n    \n    Durable Redis database to store and retrieve JSON data\n    \n    ](https://vercel.com/docs/storage/vercel-kv)[\n    \n    Vercel Postgres\n    \n    Serverless SQL database integrated with Vercel Functions\n    \n    ](https://vercel.com/docs/storage/vercel-postgres)[\n    \n    Vercel Blob\n    \n    File serving and uploading via a global network with unique URLs\n    \n    ](https://vercel.com/docs/storage/vercel-blob)[\n    \n    Edge Config\n    \n    Global data store designed for experimentation\n    \n    ](https://vercel.com/docs/storage/edge-config)\n\nObservability\n\n*   [\n    \n    Frontend Observability\n    \n    Monitor and analyze your frontend performance\n    \n    ](https://vercel.com/docs/observability)[\n    \n    Web Analytics\n    \n    First-party, privacy-friendly analytics about website visitors\n    \n    ](https://vercel.com/docs/analytics)[\n    \n    Speed Insights\n    \n    Explore and improve your website performance\n    \n    ](https://vercel.com/docs/speed-insights)[\n    \n    Monitoring\n    \n    Query and visualize your Vercel usage, traffic, and more\n    \n    ](https://vercel.com/docs/observability/monitoring)[\n    \n    Logs\n    \n    Search, inspect, and share your runtime logs\n    \n    ](https://vercel.com/docs/observability/logs)[\n    \n    OpenTelemetry Collector\n    \n    Send OTEL traces from Functions to APM vendors\n    \n    ](https://vercel.com/docs/observability/otel-overview)[\n    \n    Checks\n    \n    Checks API assesses your deployments quality and reliability\n    \n    ](https://vercel.com/docs/observability/checks-overview)\n\nIntegrations\n\n*   [\n    \n    Integration Overview\n    \n    Learn how to extend Vercel's capabilities by integrating with your preferred providers\n    \n    ](https://vercel.com/docs/integrations)[\n    \n    Extend Vercel\n    \n    Install an integration to extend Vercel\n    \n    ](https://vercel.com/docs/integrations/install-an-integration)[\n    \n    Integrate with Vercel\n    \n    Create an integration to integrate with Vercel\n    \n    ](https://vercel.com/docs/integrations/create-integration)[\n    \n    AI\n    \n    Extend your projects with AI services and models\n    \n    ](https://vercel.com/docs/integrations/ai)[\n    \n    CMS\n    \n    Integrate with Content Management Systems\n    \n    ](https://vercel.com/docs/integrations/cms)\n\nSecurity\n\n*   [\n    \n    Compliance Measures\n    \n    Compliance to standards such as SOC2, ISO 27001 & GDPR\n    \n    ](https://vercel.com/docs/security)[\n    \n    Shared Responsibility\n    \n    The shared responsibility model splits security tasks between Vercel and the user\n    \n    ](https://vercel.com/docs/security/shared-responsibility)[\n    \n    Firewall\n    \n    Protects websites from unauthorized access\n    \n    ](https://vercel.com/docs/security/vercel-firewall)[\n    \n    DDoS Mitigation\n    \n    Protection against DDoS attacks\n    \n    ](https://vercel.com/docs/security/ddos-mitigation)[\n    \n    Access Control\n    \n    Deployment protection with password and SSO\n    \n    ](https://vercel.com/docs/security/access-control)[\n    \n    SAML SSO\n    \n    Manage team members with third-party identity providers\n    \n    ](https://vercel.com/docs/security/saml)[\n    \n    HTTPS/SSL\n    \n    Default serving over HTTPS connections\n    \n    ](https://vercel.com/docs/security/encryption)[\n    \n    Directory Sync\n    \n    Manage your teams with third-party identity providers\n    \n    ](https://vercel.com/docs/security/directory-sync)[\n    \n    Secure Backend Access\n    \n    Securely access your backend with private connections and OIDC federation\n    \n    ](https://vercel.com/docs/security/secure-backend-access)[\n    \n    Deployment Protection\n    \n    Secure your deployments, and manage their access\n    \n    ](https://vercel.com/docs/security/deployment-protection)[\n    \n    Audit Logs\n    \n    Track and analyze your team members activities\n    \n    ](https://vercel.com/docs/observability/audit-log)\n\nReference\n\n*   [\n    \n    Vercel CLI\n    \n    Manage your Projects from the command line\n    \n    ](https://vercel.com/docs/cli)[\n    \n    Vercel REST API\n    \n    Use HTTP requests to interact with your account\n    \n    ](https://vercel.com/docs/rest-api)[\n    \n    Build Output API\n    \n    File-system-based specification of a Deployment\n    \n    ](https://vercel.com/docs/build-output-api/v3)\n\n* * *",
  "title": "Explore all products",
  "description": "Vercel's frontend cloud gives developers frameworks, workflows, and infrastructure to build a faster, more personalized web",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/vercel-platform/private-registry",
  "markdown": "# Working with Vercel's private registry\n\nVercel distributes packages with the `@vercel-private` scope through our private npm registry, requiring authentication through a Vercel account for each user.\n\nAccess to `@vercel-private` packages is linked to access to products. If you have trouble accessing a package, please check that you have access to the corresponding Vercel product.\n\n1.  If you're the first person on your team to use Vercel's private registry, you'll need to set up your workspace to fetch packages from the private registry.\n    \n    Execute the following command to configure your package manager to fetch packages with the `@vercel-private` scope from the private registry. Note that you can run this command with any package manager, such as `npm`, `yarn`, or `pnpm`. If you're using modern Yarn (v2 or newer) see the [Using modern versions of Yarn](#setting-registry-server-using-modern-versions-of-yarn) section below.\n    \n    ```\n    npm config set --location=project @vercel-private:registry \"https://vercel-private-registry.vercel.sh/registry\"\n    ```\n    \n    This command creates an `.npmrc` file (or updates one if it exists) at the root of your workspace. We recommend committing this file to your repository, as it will help other engineers get on board faster.\n    \n    Yarn version 2 or newer ignores the `.npmrc` config file so you will need to use this command instead to add the registry to your project's `.yarnrc.yml` file:\n    \n    ```\n    yarn config set npmScopes.vercel-private.npmRegistryServer \"https://vercel-private-registry.vercel.sh/registry\"\n    ```\n    \n2.  Each team member will need to complete this step. It may be helpful to summarize this step in your team's onboarding documentation.\n    \n    To log in, use the following command and follow the prompts:\n    \n    ```\n    npm login --scope=@vercel-private\n    ```\n    \n    The minimum required version of npm to log into the registry is 8.14.0\n    \n    During this process, you will be asked to log in to your Vercel account. Ensure that the account that you log in to has access to the Vercel product(s) that you're trying to install.\n    \n    You should now have a `.npmrc` file in your home directory that contains the authentication token for the private registry.\n    \n    Yarn version 2 or newer requires the authentication token to be saved in a `.yarnrc.yml` file. After running the above command, you can copy the token from the `.npmrc` file with:\n    \n    ```\n    auth_token=$(awk -F'=' '/vercel-private-registry.vercel.sh\\/:_authToken/ {print $2}' $(npm config get userconfig)) \\\n    && yarn config set --home 'npmRegistries[\"https://vercel-private-registry.vercel.sh/registry\"].npmAuthToken' $auth_token\n    ```\n    \n    Note the `--home` flag, which ensures the token is saved in the global `.yarnrc.yml` rather then in your project so that it isn't committed.\n    \n3.  Verify your login status by executing:\n    \n    The Yarn command only works with Yarn version 2 or newer, use the npm command if using Yarn v1.\n    \n    You should see your Vercel username returned if everything is set up correctly.\n    \n4.  When a user tries to install a package from the private registry without first logging in, the error message might be unclear. To help, we suggest adding a pre-install message that provides instructions to those unauthenticated users.\n    \n    Create a `preinstall.mjs` file with your error message:\n    \n    ```\n    import { exec } from 'node:child_process';\n    import { promisify } from 'node:util';\n     \n    const execPromise = promisify(exec);\n     \n    try {\n      await execPromise(\n        `npm whoami --registry=https://vercel-private-registry.vercel.sh/registry`,\n      );\n    } catch (error) {\n      throw new Error(\n        `Please log in to the Vercel private registry to install \\`@vercel-private\\`-scoped packages:\\n\\`npm login --scope=@vercel-private\\``,\n      );\n    }\n    ```\n    \n    Then add the following script to the `scripts` field in your `package.json`:\n    \n    ```\n    {\n      \"scripts\": {\n        \"pnpm:devPreinstall\": \"node preinstall.mjs\"\n      }\n    }\n    ```\n    \n\nNow that your local environment is set up, you can configure Vercel to use the private registry.\n\n1.  Create a [Vercel authentication token](https://vercel.com/docs/rest-api#creating-an-access-token) on the [Tokens](https://vercel.com/account/tokens) page\n2.  To set the newly created token in Vercel, navigate to the [Environment Variables](https://vercel.com/docs/projects/environment-variables) settings for your Project\n3.  Add a new environment variable with the name `VERCEL_TOKEN`, and set the value to the token you created above. We recommend using a [Sensitive Environmental Variable](https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables) for storing this token\n4.  Add a new environment variable with the name `NPM_RC`, and set the value to the following:\n\n```\n@vercel-private:registry=https://vercel-private-registry.vercel.sh/registry\n//vercel-private-registry.vercel.sh/:_authToken=${VERCEL_TOKEN}\n```\n\nIf you already have an `NPM_RC` environment variable, you can append the above to that existing value.\n\nVercel should now be able to install packages from the private registry when building your Project.\n\nThe instructions below are for [GitHub Actions](https://github.com/features/actions), but configuring other CI providers should be similar:\n\n1.  Create a [Vercel authentication token](https://vercel.com/docs/rest-api#creating-an-access-token) on the [Tokens](https://vercel.com/account/tokens) page. For security reasons, you should use a different token from the one you created for Vercel in the previous step\n2.  Once you have a new token, add it as a secret named `VERCEL_TOKEN` to your GitHub repository or organization. To learn more about how to add secrets, [Using secrets in GitHub Actions](https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions)\n3.  Finally, create a [workflow](https://docs.github.com/en/actions/using-workflows) for the product you're setting up. The example workflow below is for [Conformance](https://vercel.com/docs/workflow-collaboration/conformance) and assumes that you're using [pnpm](https://pnpm.io/) as your package manager. In this example we also pass the token to the Conformance CLI, as the same token can be used for CLI authentication\n\n```\nname: Conformance\n \non:\n  pull_request:\n    branches:\n      - main\n \njobs:\n  conformance:\n    name: 'Run Conformance'\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v3\n \n      - name: Set up Node.js\n        uses: actions/setup-node@v4\n        with:\n          node-version-file: '.node-version'\n \n      - name: Set up pnpm\n        uses: pnpm/action-setup@v3\n \n      - name: Set up Vercel private registry\n        run: npm config set //vercel-private-registry.vercel.sh/:_authToken $VERCEL_TOKEN\n        env:\n          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}\n \n      - name: Install dependencies\n        run: pnpm install\n \n      - name: Run Conformance\n        run: pnpm conformance\n        env:\n          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}\n```\n\nBy default, GitHub workflows are not required. To require the workflow in your repository, [create a branch protection rule on GitHub](https://docs.github.com/en/repositories/configuring-branches-and-merges-in-your-repository/managing-protected-branches/managing-a-branch-protection-rule#creating-a-branch-protection-rule) to Require status checks to pass before merging.",
  "title": "Working with Vercel's private registry",
  "description": "Learn how to set up Vercel's private registry for use locally, in Vercel, and in your CI.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/release-phases",
  "markdown": "# Release Phases for Vercel\n\nThis page outlines the different phases of the Vercel product release cycle. Each phase has a different set of requirements that a product must meet before being assigned to a phase.\n\nAlthough a product doesn't have to pass through each stage in sequential order, there is a default flow to how products are released:\n\n*   Alpha\n*   Beta\n*   General Availability (GA).\n\nThe Alpha phase is the first phase of the release cycle. A product in the Alpha phase lacks the essential features that are required to be ready for GA. The product is considered to still be under development, and is being built to be ready for Beta phase.\n\nThe product is under development.\n\nA Beta state generally means that the feature does not yet meet our quality standards for GA or limited availability. An example of this is when there is a need for more information or feedback from external customers to validate that this feature solves a specific pain point.\n\nReleases in the Beta state have a committed timeline for getting to GA and are actively worked on.\n\nProducts in a Beta state, are **not** covered under the [Service Level Agreement](https://vercel.com/legal/sla) (SLA) for Enterprise plans. Vercel **does not** recommend using Beta products in a full production environment.\n\nWhen a product is in Private Beta, it is still considered to be under development. While some customers may have access, this access sometimes includes a Non-disclosure agreement (NDA)\n\nThe product is under active development with limited customer access - may include an NDA.\n\nA Limited Beta is still under active development, but has been publicly announced, and is potentially available to a limited number of customers.\n\nThis phase is generally used when there is a need to control adoption of a feature. For example, when underlying capacity is limited, if there are known severe caveats then additional guidance may be required.\n\nThe product is under active development, and has been publicly announced. Limited customer access - may include an NDA.\n\nOnce a product has been publicly announced, optionally tested in the field by selected customers, and meets Vercel's quality standards, it is considered to be in the Public Beta phase.\n\nPublic Beta is the final phase of the release cycle before a product goes GA. At this stage the product can be used by a wider audience for load testing, and onboarding.\n\nFor a product to move from Public Beta to GA, the following requirements must be met. Note that these are general requirements, and that each feature may have it's own set of requirements to meet:\n\n*   Fully load tested\n*   All bugs resolved\n*   Security analysis completed\n*   At least 10 customers have been on-boarded\n\nThe product is under active development, and has been publicly announced. Available to the public without special invitation.\n\nWhen the product reaches the General Availability (GA) phase, it is considered to be battle tested, and ready for use by the community.\n\nPublicly available with full support and guaranteed uptime.\n\nA Deprecated state means that the product team is in the process of removing a product or feature. Deprecated states are accompanied by documentation instructing existing users of remediation next steps, and information on when to expect the feature to be in a Sunset state.\n\nThe ultimate state after Deprecation is Sunset. Sunset implies that there should be no customers using the Product and any artifacts within, but not limited to, code, documentation, and marketing have been removed.",
  "title": "Release Phases for Vercel",
  "description": "Learn about the different phases of the Vercel Product release cycle and the requirements that a Product must meet before being assigned to a specific phase.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions",
  "markdown": "# Vercel Functions\n\nVercel Functions enable server-side code execution on Vercel's [Managed Infrastructure](https://vercel.com/blog/behind-the-scenes-of-vercels-infrastructure), removing the need for server management or resource provisioning. These functions scale automatically with user demand and can interact with APIs, databases, and other resources as part of your project's deployment.\n\nWhen deployed, Vercel's [Framework defined infrastructure](https://vercel.com/blog/framework-defined-infrastructure), automatically sets up the necessary environment, tools, and patterns as required by your chosen framework. This ensures optimal configuration for your functions, whether they run on the [edge](https://vercel.com/docs/edge-network/overview) for reduced latency or in a specific [region](https://vercel.com/docs/functions/configuring-functions/region).\n\nVercel Functions can be written with, or without, a [framework](https://vercel.com/docs/frameworks), and handle tasks such as:\n\n*   Streaming data: Process data in real-time, such as chat messages, AI data, or financial transactions\n*   Authentication: Implement authentication and authorization logic\n*   Data Processing: Manage intensive tasks, such as image/video manipulation, without impeding client-side performance\n\n![Functions location within Vercel's managed infrastructure](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706106025%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Ffunctions-overview-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Functions location within Vercel's managed infrastructure](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706106025%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Ffunctions-overview-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nFunctions location within Vercel's managed infrastructure\n\nThe infrastructure and abilities of your Vercel Function is determined by the runtime you choose:\n\n*   [Node.js runtime](https://vercel.com/docs/functions/runtimes#node.js) (Serverless Functions): Gives you access to all the Node.js APIs that you would expect for writing on the web, with the ability to configure machine resources and dependencies\n*   [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) (Edge Functions): Opt for this cost-effective choice when you need lightweight JavaScript functions that execute close to the user\n\nTo learn more, see [choosing a runtime](https://vercel.com/docs/functions/runtimes).\n\nTo get started with creating your first function, copy the code below:\n\n```\nexport const dynamic = 'force-dynamic'; // static by default, unless reading the request\n \nexport function GET(request: Request) {\n  return new Response(`Hello from ${process.env.VERCEL_REGION}`);\n}\n```\n\nTo learn more, see the [quickstart](https://vercel.com/docs/functions/quickstart) or deploy a template from the options below:\n\n## Deploy a Vercel Function Template\n\nTo learn more about the limitations for Vercel Functions, see the [Runtimes](https://vercel.com/docs/functions/runtimes) reference. This highlights common limits such as size, memory, [concurrency](https://vercel.com/docs/functions/runtimes#automatic-concurrency-scaling), payload size limit, duration, and pricing.\n\nFunctions have full support for the [`console`](https://developer.mozilla.org/docs/Web/API/Console) API, including `time`, `debug`, `timeEnd`, etc.\n\n[Runtime logs](https://vercel.com/docs/observability/runtime-logs#what-are-runtime-logs) for all functions can be found in [the Logs tab](https://vercel.com/docs/observability/runtime-logs#view-runtime-logs). You can use the various filters and options to find specific log information. These logs are held for an [amount of time based on your plan](https://vercel.com/docs/observability/runtime-logs#limits).\n\nWhen a Function on a specific path receives a user request, you _may_ see more than one log when the application renders or regenerates the page.\n\nThis can occur in the following situations:\n\n1.  When a new page is rendered\n2.  When you are using [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration)\n\nIn the case of ISR, multiple logs are the result of:\n\n*   A [stale](https://vercel.com/docs/edge-network/caching#cache-invalidation) page having to be regenerated. For stale pages, both HTML (for direct browser navigation) and JSON (for Single Page App (SPA) transitions) are rendered simultaneously to maintain consistency\n*   On-demand ISR happening with `fallback` set as [`blocking`](https://vercel.com/docs/incremental-static-regeneration/quickstart). During on-demand ISR, the page synchronously renders (e.g., HTML) upon request, followed by a background revalidation of both HTML and JSON versions\n\nIn Next.js projects, logged functions include API Routes (those defined in `pages/api/**/*.ts` or `app/**/route.ts`).\n\nPages that use SSR, such as those that call `getServerSideProps` or export [`revalidate`](https://nextjs.org/docs/app/building-your-application/data-fetching/revalidating), will also be available both in the filter dropdown and the real time logs.\n\nFor more information on what to do next, we recommend the following articles:",
  "title": "Vercel Functions",
  "description": "Functions enable running compute on-demand without needing to manage your own infrastructure, provision servers, or upgrade hardware.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-middleware",
  "markdown": "# Edge Middleware Overview\n\nLearn how you can use Edge Middleware, code that executes before a request is processed on a site, to provide speed and personalization to your users.\n\nEdge Middleware is code that executes _before_ a request is processed on a site. Based on the request, you can modify the response. Because it runs before the cache, using Middleware is an effective way of [providing personalization](https://vercel.com/resources/edge-middleware-experiments-personalization-performance) to statically generated content. Depending on the incoming request, you can execute custom logic, rewrite, redirect, add headers and more, before returning a response.\n\n![Edge Middleware location within Vercel infrastructure.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Fedge-middleware-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Edge Middleware location within Vercel infrastructure.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Fedge-middleware-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEdge Middleware location within Vercel infrastructure.\n\nMiddleware uses the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime), which exposes and extends a subset of Web Standard APIs such `FetchEvent`, `Response`, and `Request`. To learn more about writing Middleware, see the [Middleware API](https://vercel.com/docs/functions/edge-middleware/middleware-api) docs.\n\nYou can use Edge Middleware with any framework. To add Middleware to your app, you need to create a `middleware.ts` file at your project's root directory.\n\nThe `middleware.ts` file should be at the same level as your `app` or `pages` directory (even if you're using a `src` directory). See the [Quickstart](https://vercel.com/docs/functions/edge-middleware/quickstart) guide for more information.\n\n## Deploy an Edge Middleware Template\n\nEdge Middleware has full support for the [`console`](https://developer.mozilla.org/docs/Web/API/Console) API, including `time`, `debug`, `timeEnd`, etc. Logs will appear inside your Vercel project by clicking View Functions Logs next to the deployment.\n\nIf your Edge Middleware depends on a database far away from one of [our Edge regions](https://vercel.com/docs/edge-network/regions), the overall latency of API requests could be slower than expected. To avoid this issue, use a global database. Vercel has multiple global storage products, including [Edge Config](https://vercel.com/docs/storage/edge-config), [Vercel KV](https://vercel.com/docs/storage/vercel-kv), and [Vercel Blob](https://vercel.com/docs/storage/vercel-blob). See [our storage docs](https://vercel.com/docs/storage) to learn which option is best for you.\n\nLearn more about Edge Middleware by exploring the following resources:",
  "title": "Edge Middleware Overview",
  "description": "Learn how you can use Edge Middleware, code that executes before a request is processed on a site, to provide speed and personalization to your users.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/vercel-platform/glossary",
  "markdown": "# Glossary\n\nRecognizing that terminology can vary across different organizations and contexts, we've created this glossary to provide clear and consistent definitions for the terms and concepts we use in our products and documentation at Vercel.\n\nA directory, also known as a folder in some operating systems, is a file system structure used to organize and store files on a computer. It helps to manage files by grouping them into a hierarchical structure of directories and subdirectories.\n\nIn programming and scripting, \"directory\" is often abbreviated to \"dir\".\n\nIn version control systems like Git, a repository is a location where files, including source code, are stored and managed. It not only houses the current version of every file but also maintains a history of all changes made to these files over time. This history is crucial for tracking modifications, collaborating on code, and reverting to previous versions if necessary.\n\nA monorepo, short for \"monolithic repository\", is a version control strategy in which many packages or modules are stored in a single repository. This approach stands in contrast to a [multi-repo](#multi-repo) approach, where each package or module has its own separate repository.\n\nMonorepos facilitate easier code sharing and collaboration across the different parts of a codebase, and are not limited to a specific package manager or programming language.\n\nA multi-repo, short for \"multi-repository\" and also known as \"polyrepo\", is a version control strategy where each package or module has its own separate repository. This approach stands in contrast to a [monorepo](#monorepo) approach, where multiple packages or modules are stored in a single repository.\n\nIn JavaScript, a workspace refers to a specific entity in a repository that can be either be a [single package](#single-package-workspace) or a [collection of packages](#multi-package-workspace).\n\nThe package manager's root lockfile (i.e. `pnpm-lock.yaml`) is located at the workspace root, along with any additional configuration, such as the paths where packages are located when working in a [multi-package workspace](#multi-package-workspace).\n\nA workspace is often located at the root of a [repository](#repository), but this is not a requirement. For example, some [monorepos](#monorepo) may have multiple workspaces, each located in a subdirectory of the repository.\n\nA workspace that represents a standalone package with a single `package.json` file at the workspace root.\n\nA workspace that contains multiple packages.\n\nA multi-package workspace contains multiple `package.json` files, including one at the workspace root for global configuration, and one in each package directory.\n\nThe configuration for these packages is stored at the root of the workspace. For pnpm, this configuration is in `pnpm-workspace.yaml`. npm and Yarn use the `workspaces` key in `package.json`.\n\nThis type of workspace is often associated with a [monorepo](#monorepo).\n\nA package is a collection of files and directories that are grouped together based on a common purpose. Types of packages include libraries, applications, services, and development tools.\n\nPackages enable complex code bases to be decomposed into smaller, manageable, and independent components. This modular approach is essential to [monorepos](#monorepo), a repository structure that houses multiple interconnected packages, facilitating streamlined management and development of large-scale projects.\n\nIn JavaScript, each package has a `package.json` file at its root, which contains metadata about the package, including its name, version, and any dependencies. Versioning of JavaScript packages generally follows [semantic versioning](https://semver.org/), and JavaScript packages are often managed and distributed through npm.\n\nSome package managers, including npm, refer to packages as \"workspaces\" in the context of a [multi-package workspace](#multi-package-workspace).",
  "title": "Glossary",
  "description": "Learn about the terms and concepts used in Vercel's products and documentation.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/secure-compute",
  "markdown": "# Vercel Secure Compute\n\nWith Secure Compute, you can create private connections between [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and your backend cloud, such as databases and other private infrastructure.\n\nCurrently, you need to [allow all IP addresses](https://vercel.com/guides/how-to-allowlist-deployment-ip-address#allow-all-ip-addresses) on your backend cloud for your [Vercel deployment](https://vercel.com/docs/deployments/overview) to be able to connect to it. For security and compliance reasons, you may not be permitted to publicly expose your backend cloud. Even if authentication is required, exposing data sources to the world can be unsafe.\n\nBy enabling Secure Compute on your [Project](https://vercel.com/docs/projects/overview), your deployments and build container will be placed in a private network with dedicated IP addresses in a [region](#specific-region) of your choice and logically separated from other containers.\n\n**Note:** If you would like to use Secure Compute to increase your level of security, compliance, and privacy, contact us to discuss upgrading to Enterprise.\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nWhen you enable Secure Compute on a Project, Vercel places your project's [build container](https://vercel.com/docs/deployments/builds#build-process) and subsequent deployment inside a private network with a specific IP address pair (dedicated IP). You can choose to [exclude the build container](#exclude-the-build-container) from the private network.\n\nSecure Compute is managed through the Dashboard as private networks with automatic IP pair assignment. When you [request access](https://vercel.com/contact/sales) to Secure Compute, one private network is created in a [Serverless Function region](https://vercel.com/docs/functions/serverless-functions/regions) of your choice. You can have multiple private networks in the same Team by requesting it from the Dashboard.\n\nTo learn how to attach your Project to your private network, see the [Add a Project to your private network](#add-a-project-to-your-private-network) section.\n\nVercel Secure Compute is applied to [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) only. Edge services like Edge Middleware and Edge Functions will **not** use the provided dedicated IP addresses.\n\nEach private network is deployed in a [Serverless Function region](https://vercel.com/docs/functions/serverless-functions/regions). For the best performance, we recommend that the private network's region is in the same [region](https://vercel.com/docs/functions/serverless-functions/regions) as your backend cloud.\n\nWhen using Secure Compute, you can specify a failover region using the [`functionFailoverRegions`](https://vercel.com/docs/projects/project-configuration#functionfailoverregions) property in your project's `vercel.json`.\n\nFor your failover region to use Secure Compute, you need to [contact sales](https://vercel.com/contact/sales) to create an additional private network in that region. Once created, you can [set that region as your failover region](https://vercel.com/docs/functions/configuring-functions/region#serverless-functions-failover).\n\nOnce the IP pair is ready, you can use it to create an access control list to your backend. In addition to using the IP addresses to authenticate your requests, it is required to use a user/password combination or an authentication key.\n\nUnder a specific Team, you can connect a private network with your Project's [deployment's environment](https://vercel.com/docs/deployments/environments), namely [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration).\n\nYou can use one private network with multiple Projects in the same Team. In this case, the same IP pair is shared across multiple Projects.\n\nIf you require additional security or have a large team, you can have one private network for each Project so that each Project will have its own dedicated IP pair.\n\nIf your Serverless Functions are deployed in [multiple regions](https://vercel.com/docs/functions/serverless-functions/regions#set-multiple-serverless-regions), you can use multiple private networks to have different IP pairs in each region.\n\nIn this case, you can allocate different IP addresses to test projects, internal tools and public facing platforms for improved manageability and security.\n\nIf your current security and compliance obligations require more than dedicated IP addresses, contact us for guidance related to your specific needs.\n\n**Note:** If you require support for VPC peering or VPN connections\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nYou can add multiple [Projects](https://vercel.com/docs/projects/overview) to one private network from the Team Settings page of your Vercel Dashboard. Once this is done, you can use the associated dedicated IP pair of the private network with your data sources.\n\n![Secure Compute Section in the Team Settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689789355%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fsecure-compute-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Secure Compute Section in the Team Settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689789354%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fsecure-compute-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSecure Compute Section in the Team Settings.\n\n1.  Navigate to your Team's Settings page\n2.  Select the Secure Compute link\n3.  Under the existing Private Network, select Assign Projects\n4.  From the Assigned Projects dropdown, select one or more Projects that you would like to connect to the IP pair of this private network\n5.  Click Save to apply your changes\n\nTo update the list of Projects assigned to the IP pair:\n\n1.  Click the icon to the right of your private network and click Edit\n2.  Under Name, update the private network's name\n3.  You can add more Projects using the Assigned Projects dropdown\n4.  You can disconnect existing Projects by clicking the icon to the right of each Project in the list\n5.  Click Save to apply your changes\n\n![Edit a private network.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689789354%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fsecure-compute-edit-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Edit a private network.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689789356%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fsecure-compute-edit-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEdit a private network.\n\nYou can opt the [build container](https://vercel.com/docs/deployments/builds#build-process) out of using the dedicated IP addresses. This is useful if your application only calls your data sources at run time and not at build time. If you do this, you will not face the build delay limitation explained in [Limits](#limits) below.\n\nYou can do this for specific Project/s by:\n\n*   Clicking the icon to the right of your private network and clicking Edit\n*   Uncheck Run builds in this private network for the Project row under Assigned Projects\n*   Click Save\n\n![Exclude your build from the private network.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689789354%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fsecure-compute-exclude-build-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Exclude your build from the private network.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689789354%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fsecure-compute-exclude-build-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nExclude your build from the private network.\n\nWhen connected to a Secure Compute private network, builds experience a 2-minute delay as they provision a secure build container. We are working on reducing this delay.\n\nWhen this happens, your build is marked as Provisioning Container in the dashboard.",
  "title": "Vercel Secure Compute",
  "description": "Vercel Secure Compute allows you to establish secure connections between Vercel, and backend environments.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/image-optimization",
  "markdown": "# Image Optimization with Vercel\n\nVercel streamlines the image optimization process and manages the infrastructure for uploading, optimizing, and delivering images based on factors like pixel density, format, size, and quality. These optimized images are cached on the Vercel Edge Network, ensuring swift delivery to users.\n\nSome popular frameworks, including Next.js, Astro, and Nuxt seamlessly integrate with Vercel's Image Optimization, enabling you to optimize images using built-in components.\n\nFor a live example which demonstrates usage with the [`next/image`](https://nextjs.org/docs/pages/api-reference/components/image) component, see the [Image Optimization demo](https://image-component.nextjs.gallery/).\n\nTo start using Image Optimization with Next.js, Astro, or Nuxt, follow the [quickstart](https://vercel.com/docs/image-optimization/quickstart).\n\nIf you are building a custom web framework, you can also use the [Build Output API](https://vercel.com/docs/build-output-api/v3/configuration#images) to implement Image Optimization. To learn how to do this, see the [Build your own web framework](https://vercel.com/blog/build-your-own-web-framework#automatic-image-optimization) blog post.\n\nWhen you use the Images component in common frameworks and deploy your project on Vercel, the Image Optimization feature automatically adjusts your images for different device screen sizes. The `src` prop you provided in your code is dynamically replaced with an optimized image URL. For example:\n\n*   Next.js: `/_next/image?url={link/to/my/image}&w=3840&q=75`\n*   Nuxt.js or Astro: `/_vercel/image?url={link/to/my/image}&w=3840&q=75`\n*   Build Output API: `/_vercel/image?url={link/to/my/image}&w=3840&q=75`\n\nOptimized images are automatically cached on the [Vercel Edge Network](https://vercel.com/docs/edge-network/overview) and subsequent requests to the same image will be served from the cache. The caching behavior is different for local images compared to remote images:\n\nA local image is imported from your file system and analyzed at build time. The import is added to the `src` prop: `src={myImage}`\n\n*   Cache Key:\n    *   Query string parameters:\n        *   `q`: The quality of the optimized image, between 1 (lowest quality) and 100 (highest quality).\n        *   `w`: The width (in pixels) of the optimized image\n        *   `url`: The URL of the optimized image is keyed by content hash e.g. `/assets/me.png` is converted to `3399d02f49253deb9f5b5d1159292099`\n    *   `Accept` HTTP header (normalized)\n*   Local image cache invalidation:\n    *   Redeploying your app doesn't invalidate the image cache\n    *   To invalidate, replace the image of the same name with different content, then redeploy\n*   Local image cache expiration:\n    *   [Cached](https://vercel.com/docs/edge-network/caching#static-files-caching) for up to 31 days on the Edge Network\n\nA remote image requires the `src` property to be a URL string, which can be relative or absolute. As Next.js doesn't have access to remote files during the build process, the `width` and `height` props are needed.\n\n*   Cache key:\n    *   Query string parameters:\n        *   `q`: The quality of the optimized image, between 1 (lowest quality) and 100 (highest quality).\n        *   `w`: The width (in pixels) of the optimized image\n        *   `url`: The URL of the optimized image e.g. `https://example.com/assets/me.png`\n    *   `Accept` HTTP header (normalized)\n*   Remote image cache invalidation:\n    *   Redeploying your app doesn't invalidate the image cache\n    *   To invalidate, add a query string to the `src` property (e.g., `?v=2`), then redeploy\n    *   Alternatively, you can configure the cache to expire more frequently\n*   Remote image cache expiration:\n    *   TTL is determined by the [`Cache-Control`](https://vercel.com/docs/edge-network/headers#cache-control-header) `max-age` header from the upstream image or [`minimumCacheTTL`](https://nextjs.org/docs/api-reference/next/image#minimum-cache-ttl) config (default: `60` seconds), whichever is larger\n    *   If your image content changes frequently, it's best to keep this TTL short\n\nRefer to the [Limits and Pricing](https://vercel.com/docs/image-optimization/limits-and-pricing) page for more information. Measure real-world performance using [Speed Insights](https://vercel.com/docs/speed-insights) before and after adopting Image Optimization.\n\nOptimizing images on Vercel provides several advantages for your application:\n\n*   Enhanced website performance, user experience, and [Fast Data Transfer](https://vercel.com/docs/pricing/networking#fast-data-transfer) savings\n*   Improved [Core Web Vitals](https://web.dev/vitals/), reduced bounce rates, and faster page loads\n*   Properly sized images for different devices and support for modern formats like [WebP](https://developer.mozilla.org/docs/Web/Media/Formats/Image_types#webp_image) and [AVIF](https://developer.mozilla.org/docs/Web/Media/Formats/Image_types#avif_image)\n*   When [source images](https://vercel.com/docs/image-optimization/limits-and-pricing#source-images) cannot be optimized, Vercel will fall back to serving the original image\n*   Vercel manages the infrastructure for generating and caching optimized images at the Edge for quick responses\n\nFor more information on what to do next, we recommend the following articles:",
  "title": "Image Optimization with Vercel",
  "description": "Vercel has built-in image optimization that automatically serves the optimal image to your visitors.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage",
  "markdown": "# Vercel Storage\n\nVercel offers a suite of managed, serverless storage products that integrate with your frontend framework.\n\n*   [Vercel KV](https://vercel.com/docs/storage/vercel-kv): Durable Redis\n*   [Vercel Postgres](https://vercel.com/docs/storage/vercel-postgres): Serverless SQL\n*   [Vercel Blob](https://vercel.com/docs/storage/vercel-blob): Large file storage\n*   [Vercel Edge Config](https://vercel.com/docs/storage/edge-config): Global, low-latency data store\n\nThis page will help you choose the right storage product for your use case.\n\nChoosing the correct storage solution depends on your needs for latency, durability, and consistency, among many other considerations.\n\nTo help you choose, we've created a table below to summarize the benefits of each storage option in relation to each other:\n\nRead our section on [best practices](#best-practices) to get the most out of our storage products.\n\nVercel KV provides durable, serverless Redis storage.\n\nYou should use Vercel KV if you want to:\n\nUse the familiar Redis API – Take advantage of one of the most popular data stores, built on the open Redis standard\n\nAccess fast key-value data – For example, reading and writing user sessions\n\nEnsure multi-region storage – Vercel KV data can be replicated to multiple regions\n\nVercel Postgres is a serverless PostgresSQL database, designed to integrate with Vercel Functions and your frontend framework.\n\nYou should use Vercel Postgres if you need to:\n\nManage complex, transactional data - Ideal for storing financial transactions, inventory records, or other critical data. Postgres ensures high consistency and concurrency, making it well-suited for applications that require reliable, real-time data management\n\nRich data types and extensibility – Choose Postgres for handling diverse data formats or custom data types, such as JSON, arrays, or user-generated content\n\nVercel Blob offers optimized storage for images, videos, and other files.\n\nYou should use Vercel Blob if you need to:\n\nStore images – For example, storing user avatars or product images\n\nStore videos – For example, storing user-generated video content\n\nAn Edge Config is a global data store that enables you to read data at the edge without querying an external database or hitting upstream servers. Most lookups return in less than 1ms, and 99% of reads will return under 10ms.\n\nYou should use Edge Config if you need to:\n\nFetch data at ultra-low latency – For example, you should store feature flags in an Edge Config store\n\nStore data that is read often but changes rarely – For example, you should store critical redirect URLs in an Edge Config store\n\nRead data in every region – Edge Config data is actively replicated to all regions in the Vercel Edge Network\n\nWhen choosing a storage option, we recommend considering these best practices:\n\nTo ensure low-latency responses, it's crucial to have compute close to your databases. Always deploy your databases in [regions](https://vercel.com/docs/edge-network/regions) closest to your Functions to avoid long network roundtrips.\n\n*   [Serverless Functions](https://vercel.com/docs/functions/serverless-functions): Defaults to `iad1`, but can be deployed to any region\n    *   If using Vercel Postgres, ensure your database is in the same region as your Function\n    *   If using Vercel KV and replicated regions, place your stores in the same regions as your Functions\n*   [Edge Functions](https://vercel.com/docs/functions/edge-functions): Global by default, opt-into single-region\n    *   If using Vercel Postgres, ensure your database is in the same region as your Function\n    *   If using Vercel KV and replicated regions, place your stores in the same regions as your Functions\n*   [Edge Middleware](https://vercel.com/docs/functions/edge-middleware): Global only; always executed in the region nearest the user\n    *   Since Edge Middleware as part of request processing, it is best suited for extremely fast and globally replicated data like [Edge Config](https://vercel.com/docs/storage/edge-config)\n\nVercel's Edge Network provides caching in every region globally. To ensure the fastest response times, ensure data fetched from your data store is properly [cached](https://vercel.com/docs/concepts/edge-network/caching) at the Edge.\n\n[Incremental Static Regeneration](https://vercel.com/docs/concepts/incremental-static-regeneration/overview) automates properly setting up caching headers and globally storing generated assets for you. This ensures the highest availability for your traffic and prevents accidental misconfiguration of cache-control headers.\n\nYou can manually configure cache-control headers when using [Vercel Functions](https://vercel.com/docs/edge-network/caching#using-vercel-functions) to cache the response data in every Edge region. Edge Middleware runs before the Edge Network cache layer and cannot use cache-control headers.\n\nYou can bring your KV or Postgres Database along with your account as you upgrade from Hobby to Pro, or downgrade from Pro to Hobby. To do so:\n\n1.  Navigate to the [dashboard](https://vercel.com/dashboard) and select the Storage tab\n2.  Select Settings, then select Transfer Database or Transfer Store\n3.  Select a destination account or team. If you're upgrading to Pro, select your new Pro team. If downgrading, select your Hobby account\n\nWhen successful, you'll be taken to the Storage tab of the account or team you transferred the database or store to.\n\nYour pricing and available features will change based on the plan your database is under. See the pricing docs for your preferred option to learn more:",
  "title": "Vercel Storage",
  "description": "Store key-value data, transactional data, large files, and more with Vercel's suite of storage products.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv",
  "markdown": "# Vercel KV\n\n[Vercel KV](https://vercel.com/storage/kv) provides durable, serverless Redis storage. KV has been designed to be fast, scalable, and secure, and it's a great choice for storing and retrieving key-value and JSON data in your apps.\n\nKV stores are single [region](https://vercel.com/docs/storage/vercel-kv/limits#vercel-kv-region-list) by default, but can be replicated to multiple regions for distributed workloads. Learn how [Vercel KV works](#how-vercel-kv-works).\n\nThe following are just a few use cases for Vercel KV:\n\nEcommerce carts: Vercel KV can persist user session data across multiple page requests, enabling you to keep track of items in a shopping cart\n\nRate limiting: Key-value stores with fast reads and writes work well for rate-limiting traffic to prevent malicious activity, such as DDoS attacks or unintended traffic\n\nRead the [Vercel KV quickstart](https://vercel.com/docs/storage/vercel-kv/quickstart) or deploy a template with Vercel KV preconfigured. Learn more about the [KV SDK](https://vercel.com/docs/storage/vercel-kv/kv-reference).\n\n## Deploy a Vercel KV Template\n\nBy default, a single Redis database is provisioned in the primary region you specify when you create a KV database. This primary region is where write operations will be routed.\n\nA KV database may have additional read regions, and read operations will be run in the nearest region to the request that triggers them. This will result in lower latency reads for users close to your replicas.\n\nVercel KV is powered by a partnership with [Upstash](https://upstash.com/about). This means:\n\n*   Creating, deleting, and managing KV happens in the Vercel dashboard\n*   You do not need to create an Upstash account to use Vercel KV\n\nHere are some important points to note about how you can use Vercel KV with your workflow on Vercel:\n\n*   You can use Vercel KV with any Redis client you prefer\n*   You can have multiple Vercel KV database per [account](https://vercel.com/docs/accounts/create-an-account), depending on your plan, as explained in [our KV Limits docs](https://vercel.com/docs/storage/vercel-kv/limits)\n*   You can use multiple Vercel KV database in one project\n*   You can connect multiple projects to a single Vercel KV database\n*   You can send Redis commands to your KV database without connecting it to your project. All you need are the API URL and appropriate token, [which you can find on the dashboard](https://vercel.com/dashboard/stores). You can add them with the `createClient` method if you're [using the SDK](https://vercel.com/docs/storage/vercel-kv/kv-reference)\n*   Vercel KV database can be scoped to different environments within projects using [Environment Variables](https://vercel.com/docs/projects/environment-variables)\n*   Vercel KV should be used in server environments, like Vercel Functions, versus from the browser. An API token, either set as an Environment Variable or added with the `createClient` method, is required to read and write to a database\n\nYou can import/export your Redis database using the `upstash-redis-dump` tool. [Learn more about importing and exporting data](https://github.com/upstash/upstash-redis-dump).\n\nTo learn more about Vercel KV limitations, see [KV Limits](https://vercel.com/docs/storage/vercel-kv/limits).",
  "title": "Vercel KV",
  "description": "Vercel KV is a durable Redis database that enables you to store and retrieve JSON data.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/incremental-static-regeneration",
  "markdown": "# Incremental Static Regeneration (ISR)\n\nIncremental Static Regeneration (ISR) allows you to create or update content on your site without redeploying. ISR's main benefits for developers include:\n\n1.  Better Performance: Static pages can be consistently fast because ISR allows Vercel to cache generated pages in every region on [our global Edge Network](https://vercel.com/docs/edge-network/overview) and persist files into durable storage\n2.  Reduced Backend Load: ISR helps reduce backend load by using cached content to make fewer requests to your data sources\n3.  Faster Builds: Pages can be generated when requested by a visitor or through an API instead of during the build, speeding up build times as your application grows\n\nISR is available to applications built with:\n\n*   [Next.js](#using-isr-with-next.js)\n*   [SvelteKit](https://vercel.com/docs/frameworks/sveltekit#incremental-static-regeneration-isr)\n*   [Nuxt](https://vercel.com/docs/frameworks/nuxt#incremental-static-regeneration-isr)\n*   [Astro](https://vercel.com/docs/frameworks/astro#incremental-static-regeneration-isr)\n*   [Gatsby](https://vercel.com/docs/frameworks/gatsby#incremental-static-regeneration-isr)\n*   Or any custom framework solution that implements the [Build Output API](https://vercel.com/docs/build-output-api/v3)\n\n## Explore ISR with a project template\n\n### Interested in the Enterprise plan?\n\nContact our sales team to learn more about the Enterprise plan and how it can benefit your team.\n\nNext.js will automatically create a Serverless Vercel Function that can revalidate when you add `next: { revalidate: 10 }` to the options object passed to a `fetch` request.\n\nThe following example demonstrates a Next.js page that uses ISR to render a list of blog posts:\n\n```\ninterface Post {\n  title: string;\n  id: number;\n}\n \nexport default async function Page() {\n  const res = await fetch('https://api.vercel.app/blog', {\n    next: { revalidate: 10 },\n  });\n  const posts = (await res.json()) as Post[];\n  return (\n    <ul>\n      {posts.map((post: Post) => {\n        return <li key={post.id}>{post.title}</li>;\n      })}\n    </ul>\n  );\n}\n```\n\nTo learn more about using ISR with Next.js in the App router, such as enabling on-demand revalidation, see [the official Next.js documentation](https://nextjs.org/docs/app/building-your-application/data-fetching/revalidating).\n\n*   See [our dedicated SvelteKit docs](https://vercel.com/docs/frameworks/sveltekit#incremental-static-regeneration-isr) to learn how to use ISR with your SvelteKit projects on Vercel\n*   See [our dedicated Nuxt docs](https://vercel.com/docs/frameworks/nuxt#incremental-static-regeneration-isr) to use ISR with Nuxt\n\nWhen using the Build Output API, the Serverless Vercel Functions generated for your ISR routes are called [Prerender Functions](https://vercel.com/docs/build-output-api/v3#vercel-primitives/prerender-functions).\n\nBuild Output API Prerender Functions are [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) with accompanying JSON files that describe the Function's cache invalidation rules. See [our Prerender configuration file docs](https://vercel.com/docs/build-output-api/v3/primitives#prerender-configuration-file) to learn more.\n\nBoth ISR and `Cache-Control` headers help reduce backend load by using cached content to make fewer requests to your data source. However, there are key architectural differences between the two.\n\n*   Shared Global Cache: ISR has cache shielding built-in automatically, which helps improve the cache `HIT` ratio. The cache for your ISR route's Vercel Function output is distributed globally. In the case of a cache `MISS`, it looks up the value in a single, global bucket. With only [`cache-control` headers](https://vercel.com/docs/edge-network/caching), caches expire (by design) and are not shared across [regions](https://vercel.com/docs/edge-network/regions)\n*   300ms Global Purges: When revalidating (either on-demand or in the background), your ISR route's Vercel Function is re-run, and the cache is brought up to date with the newest content within 300ms in all regions globally\n*   Instant Rollbacks: ISR allows you to roll back instantly and not lose your previously generated pages by persisting them between deployments\n*   Simplified Caching Experience: ISR abstracts common issues with HTTP-based caching implementations, adds additional features for availability and global performance, and provides a better developer experience for implementation\n\nSee [our Cache control options docs](https://vercel.com/docs/edge-network/caching#cache-control-options) to learn more about `Cache-Control` headers.\n\nOn-demand revalidation is scoped to the domain and deployment where it occurs, and doesn't affect sub domains or other deployments.\n\nFor example, if you trigger on-demand revalidation for `example-domain.com/example-page`, it won't revalidate the same page served by sub domains on the same deployment, such as `sub.example-domain.com/example-page`.\n\nSee [Revalidating across domains](https://vercel.com/docs/edge-network/caching#revalidating-across-domains) to learn how to get around this limitation.\n\nWhen using ISR with a framework on Vercel, a Function is created based on your framework code. This means that using ISR incurs both Function usage as well as [Fast Origin Transfer](https://vercel.com/docs/pricing/networking#fast-origin-transfer):\n\n*   Incur usage when invoked – ISR functions are invoked whenever they revalidate in the background or through [on-demand revalidation](https://vercel.com/docs/incremental-static-regeneration/quickstart#on-demand-revalidation)\n*   Add to your [Fast Origin Transfer](https://vercel.com/docs/pricing/networking#fast-origin-transfer) usage\n\nExplore your [usage top paths](https://vercel.com/docs/limits/usage#top-paths) to better understand ISR usage and pricing.",
  "title": "Incremental Static Regeneration (ISR)",
  "description": "Learn how Vercel's Incremental Static Regeneration (ISR) provides better performance and faster builds.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres",
  "markdown": "# Vercel Postgres\n\n[Vercel Postgres](https://vercel.com/storage/postgres) enables you to create scalable, secure PostgreSQL databases. You should use Vercel Postgres if you need to manage customer profiles, user-generated content, financial transaction processing, [or other complex data](#use-cases).\n\nYour database can be deployed to a single region and is compatible with Serverless and Edge Functions. Learn how [Vercel Postgres works](#how-vercel-postgres-works).\n\nThe following are just a few use cases for Vercel Postgres:\n\nManage complex, transactional data: Ideal for storing financial transactions, inventory records, or other critical data, Postgres ensures high consistency and concurrency, making it well-suited for applications that require reliable, real-time data management\n\nRich data types and extensibility: Choose Postgres for handling diverse data formats or custom data types, such as JSON, arrays, or user-generated content\n\nRead the [Vercel Postgres quickstart](https://vercel.com/docs/storage/vercel-postgres/quickstart) or deploy a template with Vercel Postgres preconfigured. You can access your database with:\n\n*   The [Vercel Postgres SDK](https://vercel.com/docs/storage/vercel-postgres/sdk)\n*   One of [our supported ORMs](#orm-compatibility)\n\n## Deploy a Vercel Postgres Template\n\nWe recommend using Vercel Postgres with an ORM for larger applications. Select one of the options below to view pre-made templates for each ORM:\n\nWhen you create a Vercel Postgres database in your dashboard, a serverless database running [PostgreSQL](https://www.postgresql.org/docs/) version 15 is provisioned in the region you specify. This region is where read and write operations will be routed.\n\nWe recommend choosing the same region as your Serverless and Edge Functions for the fastest response times. After creating a database, you cannot change its region. Check your [project's region](https://vercel.com/docs/functions/serverless-functions/regions#select-a-default-serverless-region) before creating your database.\n\nVercel Postgres is powered by a partnership with [Neon](https://neon.tech/). This means:\n\n*   Creating, deleting, and managing Postgres happens in the Vercel dashboard\n*   You do not need to create a Neon account to use Vercel Postgres\n\nHere are some important points to note about how you can use Vercel Postgres with your workflow on Vercel:\n\n*   You can use Vercel Postgres with any PostgreSQL client you prefer\n*   You can connect to your database with any PostgreSQL client [or ORM](https://vercel.com/docs/storage/vercel-postgres/using-an-orm)\n*   You can have multiple Vercel Postgres databases per [account](https://vercel.com/docs/accounts/create-an-account), depending on your plan, as explained in [our Postgres Limits docs](https://vercel.com/docs/storage/vercel-postgres/limits)\n*   You can use multiple Vercel Postgres databases in one project\n*   You can connect multiple projects to a single Vercel Postgres database\n*   Vercel Postgres databases can be scoped to different environments within projects using [Environment Variables](https://vercel.com/docs/projects/environment-variables)",
  "title": "Vercel Postgres",
  "description": "Vercel Postgres is a serverless SQL database designed to integrate with Vercel Functions and your frontend framework.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-blob",
  "markdown": "# Vercel Blob\n\n[Vercel Blob](https://vercel.com/storage/blob) is a great solution for storing [blobs](https://developer.mozilla.org/docs/Web/API/Blob) that need to be frequently read. Here are some examples suitable for Vercel Blob:\n\n*   Files that are programmatically uploaded or generated at build time, for display and download such as avatars, screenshots, cover images and videos\n*   Large files such as videos and audios to take advantage of the global network\n*   Files that you would normally store in an external file storage solution like Amazon S3. With your project hosted on Vercel, you can readily access and manage these files with Vercel Blob\n\nYou can create and manage your Vercel Blob stores from your [account dashboard](https://vercel.com/dashboard). You can scope your Vercel Blob stores to your Hobby account or [team](https://vercel.com/docs/accounts/create-a-team), and connect them to as many projects as you want.\n\nTo get started, see the [server-side](https://vercel.com/docs/storage/vercel-blob/server-upload), or [client-side](https://vercel.com/docs/storage/vercel-blob/client-upload) quickstart guides.\n\nIf you'd like to know whether or not Vercel Blob can be integrated into your workflow, it's worth knowing the following:\n\n*   You can have one or more Vercel Blob stores per Vercel account\n*   You can use multiple Vercel Blob stores in one Vercel project\n*   Each Vercel Blob store can be accessed by multiple Vercel projects\n*   Vercel Blob URLs are publicly accessible, created with an unguessable random id, and immutable\n*   To add to or remove from the content of a Blob store, a valid [token](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#read-write-token) is required\n*   Making a blob private is planned in an upcoming release\n\nThere are two ways to upload files to Vercel Blob:\n\n1.  [Server uploads](https://vercel.com/docs/storage/vercel-blob/server-upload): This is the most common way to upload files. The file is first sent to your server and then to Vercel Blob. It's straightforward to implement, but you are limited to the request body your server can handle. Which in case of a Vercel-hosted website is 4.5 MB. This means you can't upload files larger than 4.5 MB on Vercel when using this method.\n2.  [Client uploads](https://vercel.com/docs/storage/vercel-blob/client-upload): This is a more advanced solution for when you need to upload larger files. The file is securely sent directly from the client (a browser for example) to Vercel Blob. This requires a bit more work to implement, but it allows you to upload files up to 5 TB (5,000 GB).\n\nYou can also upload files larger than 4.5 MB directly from a script or server code, as long as the file isn't received from a Vercel-hosted website. An example of that would be a server-side `fetch()` request streaming the response to Vercel Blob.\n\nVercel Blob URLs, although publicly accessible, are unique and hard to guess. They are composed of a unique store id, a pathname and a unique random blob id generated when the blob is created.\n\nThis is similar to [Share a file publicly](https://support.google.com/drive/answer/2494822?hl=en&co=GENIE.Platform%3DDesktop#zippy=%2Cshare-a-file-publicly) in Google Docs. You should ensure that the URLs are only shared to authorized users\n\nHeaders that enhance security by preventing unauthorized downloads, blocking external content from being embedded, and protecting against malicious file type manipulation, are enforced on each blob. They are:\n\n*   `content-security-policy`: `default-src \"none\"`\n*   `x-frame-options`: `DENY`\n*   `x-content-type-options`: `nosniff`\n*   `content-disposition`: `attachment/inline; filename=\"filename.extension\"`\n\nAll files stored on Vercel Blob are secured using AES-256 encryption. This encryption process is applied at rest and is transparent, ensuring that files are encrypted before being saved to the disk and decrypted upon retrieval.\n\nEach Blob is served with a `content-disposition` header. Based on the MIME type of the uploaded file, it is either set to `attachment` (force file download) or `inline` (can render in a browser tab). This is done to prevent hosting specific files on `@vercel/blob` like HTML web pages. Your browser will automatically download the file instead of displaying it for these cases.\n\nCurrently `text/plain`, `text/xml`, `application/json`, `application/pdf`, `image/*`, `audio/*` and `video/*` resolve to a `content-disposition: inline` header.\n\nAll other MIME types default to `content-disposition: attachment`.\n\nIf you need a blob URL that always forces a download you can use the `downloadUrl` property on the blob object. This URL always has the `content-disposition: attachment` header no matter its MIME type.\n\n```\nimport { list } from '@vercel/blob';\n \nexport default async function Page() {\n  const response = await list();\n \n  return (\n    <>\n      {response.blobs.map((blob) => (\n        <a key={blob.pathname} href={blob.downloadUrl}>\n          {blob.pathname}\n        </a>\n      ))}\n    </>\n  );\n}\n```\n\nAlternatively the SDK exposes a helper function called `getDownloadUrl` that returns the same URL.\n\nVercel Blobs have two levels of caching:\n\n1.  In browsers: Blobs are cached for one year.\n2.  In Vercel's [edge network](https://vercel.com/docs/edge-network/caching): Blobs are cached for 5 minutes.\n\nThe 5-minute \\[edge cache\\[(/docs/edge-network/caching) is important when you're updating or deleting blobs:\n\n*   If you override (update) a blob, it may take up to 5 minutes for the changes to be visible.\n*   If you delete a blob, it may still be accessible for up to 5 minutes.\n\nHowever, when you create a new blob, it's available immediately without any caching delay, as it doesn't exist in the cache yet.\n\nYou can configure this caching behavior by using the `cacheControlMaxAge` option on the [`put()`](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#put) method.\n\nThe minimum value is 0 second for browser and edge cache. The maximum value is 5 minutes (300 seconds) for edge cache and unlimited for browser cache.\n\nThe query string on the blob URL is not part of the cache key, meaning you cannot bypass the cache by adding a unique query string to the URL. To bypass the cache, upload a new version of your file with a different pathname.\n\nNote: when serving blobs from the edge cache, we do no not increment the number of basic operations, we only bill for the used bandwidth.\n\nVercel Blob has folders support to organize your files:\n\n```\nconst blob = await put('folder/file.txt', 'Hello World!', { access: 'public' });\n```\n\nThe path `folder/file.txt` creates a folder named `folder` and a blob file named `file.txt`. To list all blobs within a folder, use the [`list`](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#list-blobs) function:\n\n```\nconst listOfBlobs = await list({\n  cursor,\n  limit: 1000,\n  prefix: 'folder/',\n});\n```\n\nYou don't need to create folders. Upload a file with a path containing a slash `/`, and Vercel Blob will interpret the slashes as folder delimiters.\n\nIn the Vercel Blob file browser on the Vercel dashboard, any pathname with a slash `/` is treated as a folder. However, these are not actual folders like in a traditional file system; they are used for organizing blobs in listings and the file browser.\n\nVercel Blob supports [range requests](https://developer.mozilla.org/docs/Web/HTTP/Range_requests) for partial downloads. This means you can download only a portion of a blob, here are examples:\n\n```\ncurl https://1sxstfwepd7zn41q.public.blob.vercel-storage.com/range-requests.txt\n# 0123456789\n \n# First 5 bytes\ncurl -r 0-4 https://1sxstfwepd7zn41q.public.blob.vercel-storage.com/range-requests.txt\n# 01234\n \n# Last 5 bytes\ncurl -r -5 https://1sxstfwepd7zn41q.public.blob.vercel-storage.com/range-requests.txt\n# 56789\n \n# Bytes 3-6\ncurl -r 3-6 https://1sxstfwepd7zn41q.public.blob.vercel-storage.com/range-requests.txt\n# 3456\n```\n\nEvery Vercel Blob operation can be canceled, just like a fetch call. This is useful when you want to abort an ongoing operation, for example, when a user navigates away from a page or when the request takes too long.\n\n```\nconst abortController = new AbortController();\n \ntry {\n  const blobPromise = vercelBlob.put('hello.txt', 'Hello World!', {\n    access: 'public',\n    abortSignal: abortController.signal,\n  });\n \n  const timeout = setTimeout(() => {\n    // Abort the request after 1 second\n    abortController.abort();\n  }, 1000);\n \n  const blob = await blobPromise;\n \n  console.info('blob put request completed', blob);\n \n  clearTimeout(timeout);\n \n  return blob.url;\n} catch (error) {\n  if (error instanceof vercelBlob.BlobRequestAbortedError) {\n    // Handle the abort\n    console.info('canceled put request');\n  }\n \n  // Handle other errors\n}\n```\n\nIf, for some reason, you want to delete all the blobs in your store, do this:\n\n```\nimport { list, del } from '@vercel/blob';\n \nasync function deleteAllBlobs() {\n  let cursor;\n \n  do {\n    const listResult = await list({\n      cursor,\n      limit: 1000,\n    });\n \n    if (listResult.blobs.length > 0) {\n      await del(listResult.blobs.map((blob) => blob.url));\n    }\n \n    cursor = listResult.cursor;\n  } while (cursor);\n \n  console.log('All blobs were deleted');\n}\n \ndeleteAllBlobs().catch((error) => {\n  console.error('An error occurred:', error);\n});\n```",
  "title": "Vercel Blob",
  "description": "Vercel Blob is a scalable, and cost-effective object storage service for static assets, such as images, videos, audio files, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/caching",
  "markdown": "# Caching on Vercel's Edge Network\n\nVercel's [Edge Network](https://vercel.com/docs/edge-network/overview) caches your content at the edge in order to serve data to your users as fast as possible. Vercel's caching is available for all deployments and domains on your account, regardless of the [pricing plan](https://vercel.com/pricing).\n\nVercel uses the Edge Network to cache your content globally and serve data to your users as quickly as possible. There are two ways to cache content:\n\n*   [Static file caching](#static-files-caching) is automatic for all deployments, requiring no manual configuration\n*   To cache dynamic content, including SSR content, you can use `Cache-Control` [headers](https://vercel.com/docs/edge-network/headers#cache-control-header)\n\nYou can cache responses on Vercel with `Cache-Control` headers defined in:\n\n1.  Responses from [Vercel Functions](https://vercel.com/docs/functions/serverless-functions)\n2.  Route definitions in `vercel.json` or `next.config.js`\n\nYou can use any combination of the above options, but if you return `Cache-Control` headers in a Vercel Function, it will override the headers defined for the same route in `vercel.json` or `next.config.js`.\n\nTo cache the response of Serverless and Edge Functions on Vercel's Edge Network, you must include [`Cache-Control`](https://vercel.com/docs/edge-network/headers#cache-control-header) headers with any of the following directives:\n\n*   `s-maxage=N`\n*   `s-maxage=N, stale-while-revalidate=Z`\n\n`proxy-revalidate` and `stale-if-error` are not currently supported.\n\nThe following example demonstrates a [function](https://vercel.com/docs/functions/edge-functions) that caches its response and revalidates it every 1 second:\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'Cache-Control': 'public, s-maxage=1',\n      'CDN-Cache-Control': 'public, s-maxage=60',\n      'Vercel-CDN-Cache-Control': 'public, s-maxage=3600',\n    },\n  });\n}\n```\n\nTo deploy the above route as a Serverless Function, change the exported `runtime` property to `nodejs`\n\nFor direct control over caching on Vercel and downstream CDNs, you can use [CDN-Cache-Control](#cdn-cache-control) headers.\n\nYou can define route headers in `vercel.json` or `next.config.js` files. These headers will be overridden by [headers defined in Function responses](#using-vercel-functions).\n\nThe following example demonstrates a `vercel.json` file that adds `Cache-Control` headers to a route:\n\n```\n{\n  \"headers\": [\n    {\n      \"source\": \"/about.js\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"s-maxage=1, stale-while-revalidate=59\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nIf you're building your app with Next.js, you should use `next.config.js` rather than `vercel.json`. The following example demonstrates a `next.config.js` file that adds `Cache-Control` headers to a route:\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  reactStrictMode: true,\n  async headers() {\n    return [\n      {\n        source: '/about',\n        headers: [\n          {\n            key: 'Cache-Control',\n            value: 's-maxage=1, stale-while-revalidate=59',\n          },\n        ],\n      },\n    ];\n  },\n};\n \nmodule.exports = nextConfig;\n```\n\nSee [the Next docs](https://nextjs.org/docs/app/api-reference/next-config-js) to learn more about `next.config.js`.\n\nStatic files are automatically cached at the edge after the first request and are cached for up to 31 days on Vercel's Edge Network.\n\n*   If a static file is unchanged, the cached value can persist across deployments due to the hash used in the filename\n*   Optimized images cached will [persist between deployments](https://vercel.com/docs/image-optimization#caching)\n*   The default `Cache-Control` header contains `public`, `max-age=0`, `must-revalidate` to prevent clients (e.g. browsers) from caching the file locally\n\n*   `max-age=N, public`\n*   `max-age=N, immutable`\n\nWhere `N` is the number of seconds the response should be cached. The response must also meet the [caching criteria](https://vercel.com/docs/edge-network/caching#how-to-cache-responses).\n\nYou can cache dynamic content through [Edge Functions](https://vercel.com/docs/functions/edge-functions) and [Serverless Functions](https://vercel.com/docs/functions/serverless-functions), including SSR, by adding `Cache-Control` [headers](https://vercel.com/docs/edge-network/headers#cache-control-header) to your response. When you specify `Cache-Control` headers in a function, responses will be cached in the region the function was requested from.\n\nSee [our docs on Cache-Control headers](https://vercel.com/docs/edge-network/headers#cache-control-header) to learn how to best use `Cache-Control` directives on Vercel's Edge Network.\n\nVercel supports two [targeted headers for controlling the cache](https://httpwg.org/specs/rfc9213.html):\n\n*   `CDN-Cache-Control`, which allows you to control the Vercel Edge Cache or other CDN cache _separately_ from the browser's cache. The browser will not be affected by this header\n*   `Vercel-CDN-Cache-Control`, which allows you to specifically control Vercel's Edge Cache. Neither other CDNs nor the browser will be affected by this header\n\nBy default, the headers returned to the browser are as follows:\n\n*   `Cache-Control`\n*   `CDN-Cache-Control`\n\n`Vercel-CDN-Cache-Control` headers are not returned to the browser or forwarded to other CDNs.\n\nTo learn how these headers work in detail, see [our dedicated headers docs](https://vercel.com/docs/edge-network/headers#cdn-cache-control-header).\n\nThe following example demonstrates `Cache-Control` headers that instruct:\n\n*   Vercel's Edge Cache to have a [TTL](https://en.wikipedia.org/wiki/Time_to_live) of `3600` seconds\n*   Downstream CDNs to have a TTL of `60` seconds\n*   Clients to have a TTL of `10` seconds\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'Cache-Control': 'max-age=10',\n      'CDN-Cache-Control': 'max-age=60',\n      'Vercel-CDN-Cache-Control': 'max-age=3600',\n    },\n  });\n}\n```\n\nIf you set `Cache-Control` without a `CDN-Cache-Control`, the Vercel Edge Network strips `s-maxage` and `stale-while-revalidate` from the response before sending it to the browser. To determine if the response was served from the cache, check the [`x-vercel-cache`](#x-vercel-cache) header in the response.\n\nThe `Cache-Control` field is an HTTP header specifying caching rules for client (browser) requests and server responses. A cache must obey the requirements defined in the `Cache-Control` header.\n\nFor server responses to be successfully cached with Vercel's Edge Network, the following criteria must be met:\n\n*   Request uses `GET` or `HEAD` method.\n*   Request does not contain `Range` header.\n*   Request does not contain `Authorization` header.\n*   Response uses `200`, `404`, `301`, `302`, `307` or `308` status code.\n*   Response does not exceed `10MB` in content length.\n*   Response does not contain the `set-cookie` header.\n*   Response does not contain the `private`, `no-cache` or `no-store` directives in the `Cache-Control` header.\n\nVercel does not allow bypassing the cache for static files by design.\n\nEvery deployment has a unique key used for caching based on the deployment URL created at build time. This key ensures that users never see content from a previous deployment. It contains the following information:\n\n*   The request method (such as `GET`, `POST`, etc)\n*   The request URL (query strings are ignored for static files)\n*   The host domain\n*   The unique [deployment URL](https://vercel.com/docs/deployments/generated-urls)\n*   The scheme (whether it's `https` or `http`)\n*   The `accept` header (Image Optimization requests only)\n\nThe cache is automatically purged upon a new deployment being created. If you ever need to invalidate Vercel's Edge Network cache, you can always re-deploy.\n\nIf your project is in Next.js using the app router, you can use [`revalidateTag`](https://nextjs.org/docs/app/api-reference/functions/revalidateTag) to trigger revalidation on a different domain within the same project. To do so, you must:\n\n1.  Use the `tag` option with your `fetch` request to tag the cached data:\n\n```\ninterface Post {\n  title: string;\n  id: number;\n}\n \nexport default async function Page() {\n  const res = await fetch('https://api.vercel.app/blog', {\n    next: {\n      tags: ['blog-posts'],\n      revalidate: 10,\n    },\n  });\n  const posts = (await res.json()) as Post[];\n  return (\n    <ul>\n      {posts.map((post: Post) => {\n        return <li key={post.id}>{post.title}</li>;\n      })}\n    </ul>\n  );\n}\n```\n\n2.  Call `revalidateTag` from your revalidate route with the tag you applied to the cache:\n\n```\nimport { NextRequest } from 'next/server';\nimport { revalidateTag } from 'next/cache';\n \nexport async function GET(request: NextRequest) {\n  revalidateTag('blog-posts');\n  return Response.json({ revalidated: true, now: Date.now() });\n}\n```\n\nThe `x-vercel-cache` header is included in HTTP responses to the client, and describes the state of the cache.\n\nSee [our headers docs](https://vercel.com/docs/edge-network/headers#x-vercel-cache) to learn more.\n\nVercel's Edge Network cache is segmented [by region](https://vercel.com/docs/edge-network/regions). The following caching limits apply to Vercel Function responses:\n\n*   Max Cacheable Response Size = 10MB\n*   Max Cache Time = 31 days\n    *   `s-maxage`\n    *   `max-age`\n    *   `stale-while-revalidate`\n\nWhile you can put the maximum time for server-side caching, cache times are best-effort and not guaranteed. If an asset is requested often, it is more likely to live the entire duration. If your asset is rarely requested (e.g. once a day), it may be evicted from the regional cache.\n\nVercel does not currently support using `proxy-revalidate` and `stale-if-error` for server-side caching.",
  "title": "Caching on Vercel's Edge Network",
  "description": "Vercel's Edge Network caches your content at the edge in order to serve data to your users as fast as possible. Learn how Vercel caches works in this guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/infrastructure/data-cache",
  "markdown": "# Vercel Data Cache\n\nThe Vercel Data Cache is a specialized, granular cache for storing responses from fetches while using frontend frameworks like [Next.js](https://vercel.com/docs/frameworks/nextjs).\n\nFrameworks that integrate with the Data Cache (currently Next.js) are able to cache data per fetch instead of per route. This means you can have static, dynamic, and revalidated data together in the same route.\n\nWith Vercel, you write application code, like component-level data fetching with `fetch`, and we scaffold globally distributed infrastructure for you with no additional effort. See [our examples](#examples) to learn how to implement this.\n\n*   Ephemeral, globally available, regional cache: Every region in which your serverless or edge function runs has an independent cache, so any data used in server side rendering or Next.js route handlers is cached close to where the function executes.\n*   Time-based revalidation: All cached data can define a revalidation interval, after which the data will be marked as stale, triggering a re-fetch from origin.\n*   On-demand revalidation: Any data can be triggered for revalidation on-demand, regardless of the revalidation interval. The revalidation propagates to all regions within 300ms.\n*   Tag based revalidation: Next.js allows associating tags with data, which can be used to revalidate all data with the same tag at once with `revalidateTag`. For example, you could use this to revalidate all responses from a CMS with the same author ID tag.\n\nNext.js combines Vercel Data Cache with [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration) (ISR) to provide optimized caching infrastructure for your pages.\n\nWhen a page contains _entirely static data_, Vercel will use ISR to generate the whole page. However, when a page contains a _mix of static and dynamic data_, the dynamic data needs to be re-fetched when rendering the page. In this scenario, Vercel Data Cache is used to cache the static data to avoid slow origin fetches.\n\nBoth ISR and Vercel Data Cache support time-based revalidation, on-demand revalidation, and tag based revalidation.\n\n[Vercel's Edge Cache](https://vercel.com/docs/edge-network/caching) is used for caching entire static assets at the edge, such as images, fonts, and JavaScript bundles. The Vercel Data Cache is used for caching data fetched during a function's execution, such as API responses.\n\nWhen you deploy a Next.js project that uses [App Router](https://nextjs.org/docs/app) to Vercel, the Vercel Data Cache is automatically enabled to cache [segment-level data](https://nextjs.org/docs/app/building-your-application/data-fetching/fetching-caching-and-revalidating) alongside ISR in the app router.\n\nTo learn more about managing your Data Cache, including disabling it, and purging the cache, see [Managing Data Cache](https://vercel.com/docs/infrastructure/data-cache/manage-data-cache).\n\nThese examples use the [Next.js App Router](https://nextjs.org/docs/app/building-your-application/data-fetching/fetching-caching-and-revalidating):\n\n```\nexport default async function Page() {\n  const res = await fetch('https://api.vercel.app/blog', {\n    next: {\n      revalidate: 3600, // 1 hour\n    },\n  });\n  const data = await res.json();\n \n  return '...';\n}\n```\n\n```\nexport default async function Page() {\n  const res = await fetch('https://api.vercel.app/blog', {\n    next: {\n      tags: ['blog'], // Invalidate with revalidateTag('blog') on-demand\n    },\n  });\n  const data = await res.json();\n \n  return '...';\n}\n```\n\n```\n'use server';\n \nimport { revalidateTag } from 'next/cache';\n \nexport default async function action() {\n  revalidateTag('blog');\n}\n```\n\nThe Vercel Data Cache is unique per Vercel project, isolated per deployment environment (`production` or `preview`).\n\nCached data is persisted across deployments, unless invalidated through `revalidate` or programmatically calling `revalidateTag` or `revalidatePath`. It is not updated at build time. When invalidated, it will be updated at run time with the next new request to the path that was invalidated.\n\nWhen a revalidation is triggered, the path or cache tag is marked stale globally in every Vercel Edge Network region. The next request to that path or tag, in any region, will trigger a revalidation and update the cache globally. The regional cache in all regions is purged and updated within 300ms.\n\nFor information, see the [usage and pricing](https://vercel.com/docs/infrastructure/data-cache/limits-and-pricing) page for the Data Cache.",
  "title": "Vercel Data Cache",
  "description": "Vercel Data Cache is a specialized cache that stores responses from data fetches. Learn more about how it works with Next.js",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config",
  "markdown": "# Vercel Edge Config\n\nAn [Edge Config](https://vercel.com/storage/edge-config) is a global data store that [enables experimentation with feature flags, A/B testing, critical redirects, and IP blocking](#use-cases). It enables you to read data at the edge without querying an external database or hitting upstream servers.\n\nWith Vercel's optimizations, you can read Edge Config data at negligible latency. The vast majority of your reads will complete within 15ms [at P99](https://vercel.com/docs/speed-insights#how-the-percentages-are-calculated), or as low as 0ms in some scenarios.\n\nYou can use an Edge Config in [Edge Functions](https://vercel.com/docs/functions/edge-functions), [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), and [Serverless Functions](https://vercel.com/docs/functions/serverless-functions).\n\nEdge Configs are great for data that is accessed frequently and updated infrequently. Here are some examples of storage data suitable for Edge Config:\n\n**Feature flags and A/B testing**: Experiment with A/B testing by storing feature flags in your Edge Config. Fetching such data from Edge Config rather than a database can cut page loads by hundreds of milliseconds. [Deploy the template](https://vercel.com/templates/next.js/feature-flag-apple-store)\n\n**Critical redirects**: When you need to redirect a URL urgently, Edge Configs offer a fast solution that doesn't require you to redeploy your website. Using Edge Middleware, you can read from your Edge Config to redirect users when they visit bad URLs. [Deploy the template](https://vercel.com/templates/next.js/maintenance-page)\n\n**Malicious IP and User Agent blocking**: Store a set of malicious IPs in your Edge Config, then block them upon detection without invoking upstream servers\n\nYou can create and manage your Edge Config from either [Vercel REST API](https://vercel.com/docs/storage/edge-config/vercel-api) or [Dashboard](https://vercel.com/docs/storage/edge-config/edge-config-dashboard). You can scope your Edge Configs to your Hobby account or [team](https://vercel.com/docs/accounts/create-a-team), and connect them to as many projects as you want.\n\nTo get started, see [our quickstart](https://vercel.com/docs/storage/edge-config/get-started).\n\n## Deploy an Edge Config Template\n\nIf you'd like to know whether or not Edge Config can be integrated into your workflow, it's worth knowing the following:\n\n*   You can have one or more Edge Configs per Vercel account, depending on your plan as explained in [Limits](https://vercel.com/docs/storage/edge-config/edge-config-limits)\n*   You can use multiple Edge Configs in one Vercel project\n*   Each Edge Config can be accessed by multiple Vercel projects\n*   Edge Configs can be scoped to different environments within projects using environment variables\n*   Edge Config access is secure by default. A [read access token](https://vercel.com/docs/storage/edge-config/using-edge-config#creating-a-read-access-token) is required to read from them, and an [API token](https://vercel.com/docs/rest-api#creating-an-access-token) is required to write to them\n\nSee [our Edge Config limits docs to learn more](https://vercel.com/docs/storage/edge-config/edge-config-limits)\n\nThere are alternative solutions to Edge Config for handling A/B testing, feature flags, and IP blocking. The following table lays out how those solutions compare to Edge Config:\n\n| Edge Config vs alternatives | Read latency | Write latency | Redeployment required | Added risk of downtime |\n| --- | --- | --- | --- | --- |\n| Edge Config | Ultra-low | Varies | No  | No  |\n| Remote JSON files | Varies | Varies | No  | Yes |\n| Embedded JSON files | Lowest | Highest | Yes | No  |\n| Environment Variables | Lowest | Highest | Yes | No  |\n\nTo learn about Edge Config limits and pricing, see [our Edge Config limits docs](https://vercel.com/docs/storage/edge-config/edge-config-limits).",
  "title": "Vercel Edge Config",
  "description": "An Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability",
  "markdown": "# Frontend Observability\n\nObservability helps you monitor, analyze, and manage your applications. It includes [monitoring](#monitoring) to track usage and performance, [auditing](#audit-logs) to record activities by team members, [logging](#runtime-logs) mechanisms to visualize real-time data, and more.\n\nObservability on Vercel provides you with:\n\n*   Health and performance metrics about your website\n*   Transparency with security investigations and compliance reporting\n*   An operational and extra-visible web application system\n\nRuntime logs allow you to search, inspect, and share your team's runtime logs at a project level. You can search runtime logs from the deployments section inside the Vercel dashboard. Your log data is retained for 3 days. For longer log storage, you can use [log drains](https://vercel.com/docs/observability/log-drains).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FLogs-Light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FLogs-Dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nWeb Analytics empowers you with in-depth insights into your website's visitors, showcasing metrics such as top pages, referrers, and demographic data like countries, operating systems, and browser usage.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Fvisitor-chart-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Fvisitor-chart-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVercel Speed Insights provides a convenient way to analyze your site's performance metrics directly within the dashboard, without the need to modify your code. Easily view and filter data based on device type, user percentiles, and reporting windows to better understand and optimize your site's speed and user experience.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fres-chart-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fres-chart-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nMonitoring allows you to visualize, explore, and track usage and traffic. Using the query editor, you can create custom queries to gain greater insights into your application. This allows you to debug issues and optimize all the projects on your Vercel Team.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmonitoring-tab-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmonitoring-tab-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nActivity Logs provide chronologically organized events on your personal or team account. You get an overview of changes to your environment variables, deployments, and more.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FActivity-Light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FActivity-Dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAudit Logs allow owners to track events performed by other team members. The feature helps you verify who accessed what, for what reason, and at what time. You can export up to 90 days of audit logs to a CSV file.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FAudit-Logs-Light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FAudit-Logs-Dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLog Drains allow you to export your log data, making it easier to debug and analyze. You can configure Log Drains through the Vercel dashboard or through one of our Log Drains integrations.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FLog-Drains-Light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FLog-Drains-Dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVercel's OpenTelemetry (OTEL) collector enables seamless transmission of OTEL traces from your Serverless Functions to APM vendors like [New Relic](https://vercel.com/integrations/newrelic). Traces provide valuable insights into your application's performance, helping pinpoint and resolve issues.",
  "title": "Frontend Observability",
  "description": "Frontend observability on Vercel helps you monitor, analyze, and manage your applications.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cron-jobs",
  "markdown": "# Cron Jobs\n\nCron jobs are time-based scheduling tools used to automate repetitive tasks. By using a specific syntax called a [cron expression](#cron-expressions), you can define the frequency and timing of each task. This helps improve efficiency and ensures that important processes are performed consistently.\n\nSome common use cases of cron jobs are:\n\n*   Automating backups and archiving them\n*   Sending email and Slack notifications\n*   Updating Stripe subscription quantities\n\nVercel supports cron jobs for [Serverless](https://vercel.com/docs/functions/serverless-functions) and [Edge](https://vercel.com/docs/functions/edge-functions) Functions. Cron jobs can be added through [vercel.json](https://vercel.com/docs/projects/project-configuration) or the [Build Output API](https://vercel.com/docs/build-output-api/v3/configuration#crons).\n\nSee [Managing Cron Jobs](https://vercel.com/docs/cron-jobs/manage-cron-jobs) for information on duration, error handling, deployments, concurrency control, and local execution. To learn about usage limits and pricing information, see the [Usage and Pricing](https://vercel.com/docs/cron-jobs/usage-and-pricing) page.\n\n## Deploy a Cron Job Template\n\nLearn how to set up and configure cron jobs for your project using our [Quickstart](https://vercel.com/docs/cron-jobs/quickstart) guide.\n\nTo trigger a cron job, Vercel makes an HTTP GET request to your project's production deployment URL, using the `path` provided in your project's `vercel.json` file. An example endpoint Vercel would make a request to in order to trigger a cron job might be: `https://*.vercel.app/api/cron`.\n\nVercel supports the following cron expressions format:\n\n| Field | Value Range | Example Expression | Description |\n| --- | --- | --- | --- |\n| Minute | 0 - 59 | `5 * * * *` | Triggers at 5 minutes past the hour |\n| Hour | 0 - 23 | `* 5 * * *` | Triggers every minute, between 05:00 AM and 05:59 AM |\n| Day of Month | 1 - 31 | `* * 5 * *` | Triggers every minute, on day 5 of the month |\n| Month | 1 - 12 | `* * * 5 *` | Triggers every minute, only in May |\n| Day of Week | 0 - 6 (Sun-Sat) | `* * * * 5` | Triggers every minute, only on Friday |\n\nTo validate your cron expressions, you can use the following tool to quickly verify the syntax and timing of your scheduled tasks to ensure they run as intended.\n\n#### Cron job validator\n\nUse the input below to validate a cron expression. A human readable version of the expression will be displayed when submitted.\n\nCron expression\n\nYou can also use [crontab guru](https://crontab.guru/) to validate your cron expressions.\n\n*   Cron jobs on Vercel do not support alternative expressions like `MON`, `SUN`, `JAN`, or `DEC`\n*   You cannot configure both day of the month and day of the week at the same time. When one has a value, the other must be `*`\n*   The timezone is always UTC",
  "title": "Cron Jobs",
  "description": "Learn about cron jobs, how they work, and how to use them on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights",
  "markdown": "# Speed Insights Overview\n\nVercel Speed Insights provides you with a detailed view of your website's performance metrics, facilitating informed decisions for its optimization. For granular visitor data, turn to our [Web Analytics](https://vercel.com/docs/analytics).\n\nBy [enabling Speed Insights](https://vercel.com/docs/speed-insights/quickstart), you gain access to the Speed Insights dashboard, which offers in-depth information about scores and individual metrics without the need for code modifications or leaving the dashboard. It's the key to analyzing your site's performance parameters without the hassle of introducing new scripts or headers.\n\nWhen you enable Speed Insights, data will be tracked on all deployed environments, including [preview](https://vercel.com/docs/deployments/preview-deployments) and [production](https://vercel.com/docs/deployments/environments#production) deployments.\n\n![A snapshot of the Speed Insights tab from the project view.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fres-chart-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A snapshot of the Speed Insights tab from the project view.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fres-chart-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA snapshot of the Speed Insights tab from the project view.\n\nOnce enabled, you'll see an interface where gathered data can be sorted and inspected based on a variety of parameters:\n\n*   Device type: switching between mobile and desktop\n*   Environment: filtering by preview and/or production environments\n*   Time range: varying from the last day up to the last 12 months (duration varies depending on the account type)\n*   [Performance metric](https://vercel.com/docs/speed-insights/metrics): switching between parameters that include Real Experience Score (RES), First Contentful Paint (FCP) and Largest Contentful Paint (LCP)\n*   Performance metric views: displaying the P75 [percentile of data](https://vercel.com/docs/speed-insights/metrics#how-the-percentages-are-calculated) for the selected metric [data points](https://vercel.com/docs/speed-insights/metrics#understanding-data-points) and time range in multiple views:\n    *   Time-based line graph showing P75 by default. You can include P90, P95 and P99 in this view only\n    *   Kanban board showing which routes, paths or HTML elements need improvement (URLs that make up less than 0.5% of visits are not shown by default)\n    *   Geographical map showing the experience metric by country\n\n![Geographic map of the P75 score where the color intensity indicates the relative amount of data points per country](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fcountry-map-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Geographic map of the P75 score where the color intensity indicates the relative amount of data points per country](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fcountry-map-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nGeographic map of the P75 score where the color intensity indicates the relative amount of data points per country\n\nThe data in the Kanban and map views is selectable so that you can filter by country, route, path and HTML element. The red, orange and green colors in the map view indicate the P75 score.",
  "title": "Speed Insights Overview",
  "description": "This page lists out and explains all the performance metrics provided by Vercel's Speed Insights feature.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics",
  "markdown": "# Vercel Web Analytics\n\nWeb Analytics provides comprehensive insights into your website's visitors, tracking top pages, referrers, and demographics like location, operating systems, and browser info. Vercel's Web Analytics offers:\n\n*   Privacy: Only stores anonymized data, and [does not use cookies](#how-visitors-are-determined)\n*   Integrated Infrastructure: Built into the Vercel platform, so there's no need for third-party services for detailed visitor insights\n\nTo get started with Web Analytics, see the [Quickstart](https://vercel.com/docs/analytics/quickstart).\n\nIf you're interested in learning more about how your site is performing, use [Speed Insights](https://vercel.com/docs/speed-insights).\n\nThe Visitors tab displays all your website's unique visitors within a selected timeframe. You can adjust the timeframe by selecting a value from the dropdown in the top right hand corner.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Fvisitor-chart-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Fvisitor-chart-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVisitors tab data.\n\nYou can use the [panels](#panels) section to view a breakdown of specific information, organized by the total number of visitors.\n\nThe Page Views tab, like the Visitors tab, shows a breakdown of every page loaded on your website during a certain time. Page views are counted by the total number of views on a page. For page views, the same visitor can view the same page multiple times resulting in multiple events.\n\nYou can use the [panels](#panels) section to view a breakdown of specific information, organized by the total number of page views.\n\nInstead of relying on cookies like many analytics products, visitors are identified by a hash created from the incoming request. Using a generated hash provides a privacy-friendly experience for your visitors and means visitors can't be tracked between different days or different websites.\n\nThe generated hash is valid for a single day, at which point it is automatically reset.\n\nIf a visitor loads your website for the first time, we immediately track this visit as a page view. Subsequent page views are tracked through the native Browser API.\n\nWeb Analytics does not count traffic that comes from automated processes or accounts. This is determined by inspecting the [User Agent](https://developer.mozilla.org/docs/Web/HTTP/Headers/User-Agent) header for incoming requests.\n\nPanels provide a way to view detailed analytics for Visitors and Page Views, such as top pages and referrers, and the country, OS, and browser of your visitors. The tab you choose determines how the information in each panel is set up.\n\nBy default, each panel provides you with the top entries, but you can click Explore to view all the data.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Fpanels-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Fpanels-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nPanels showing a breakdown of page view data.\n\nTo export the data from a panel as a CSV file:\n\n1.  Select the Analytics tab from your project's [dashboard](https://vercel.com/dashboard)\n2.  From the bottom of the panel you want to export data from, click the three-dot menu\n3.  Select the Export as CSV button\n\nThe export will include up to 250 entries from the panel, not just the top entries.",
  "title": "Vercel Web Analytics",
  "description": "With Web Analytics, you can get detailed insights into your website's visitors with new metrics like top pages, top referrers, and demographics.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/vercel-toolbar",
  "markdown": "# Vercel Toolbar\n\nThe Vercel Toolbar is a tool that assists in the iteration and development process. Through the toolbar, you can:\n\n*   Leave feedback on deployments with [Comments](https://vercel.com/docs/workflow-collaboration/comments)\n*   Navigate through dashboard pages, and share deployments\n*   Read and set [Feature Flags](https://vercel.com/docs/workflow-collaboration/feature-flags)\n*   Utilize [Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode) for previewing unpublished content\n*   Edit content in real-time using [Edit Mode](https://vercel.com/docs/workflow-collaboration/edit-mode)\n*   Inspect for [Layout Shifts](https://vercel.com/docs/workflow-collaboration/layout-shift-tool) and [Interaction Timing](https://vercel.com/docs/workflow-collaboration/interaction-timing-tool)\n*   Check for accessibility issues with the [Accessibility Audit Tool](https://vercel.com/docs/workflow-collaboration/accessibility-audit-tool)\n\n![The Vercel Toolbar on a deployment](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Vercel Toolbar on a deployment](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Vercel Toolbar on a deployment\n\nThe Vercel Toolbar provides the following features:\n\n| Feature | Description |\n| --- | --- |\n| [Comments](https://vercel.com/docs/workflow-collaboration/comments) | Leave feedback on your preview and production environment |\n| [Navigate to useful dashboard pages](#using-the-command-menu) | Navigate to useful dashboard pages |\n| [Share your deployment](#sharing-deployments) | Share your deployment with others |\n| [Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode#enabling-draft-mode-in-the-vercel-toolbar) | Use Draft Mode to preview unpublished content from your headless CMS |\n| [Feature Flags](https://vercel.com/docs/workflow-collaboration/feature-flags) | Read and set feature flag overrides for your applications |\n| [Edit Mode](https://vercel.com/docs/workflow-collaboration/edit-mode#enabling-visual-editing-in-the-vercel-toolbar) | Use Edit Mode to edit content in real-time |\n| [Layout Shifts](https://vercel.com/docs/workflow-collaboration/layout-shift-tool) | Check for Layout Shifts (CLS) in your deployment |\n| [Interaction Timing](https://vercel.com/docs/workflow-collaboration/interaction-timing-tool) | Measure Interaction Timing (INP) in your deployment |\n| [Accessibility Audit Tool](https://vercel.com/docs/workflow-collaboration/accessibility-audit-tool) | Check your deployment for accessibility issues |\n\nThe toolbar appears on all preview deployments by default, and can be added to production or local environments using the [`@vercel/toolbar`](https://www.npmjs.com/package/@vercel/toolbar) npm package. See [using in production or locally](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/in-production-and-localhost) for more information.\n\nWhile logged into the toolbar, you can navigate to many of the project and deployment settings by:\n\n*   Selecting the Menu icon in the Vercel Toolbar (`☰`)\n*   Entering  ⇧k (`cmd+shift+k` or `ctrl+shift+k` on Windows). See the [Using your own CMD + K feature](#using-your-own-cmd+k-feature) section if your app already implements a  k shortcut\n\nDoing so will open a menu that allows you to navigate to useful pages and tools, such as:\n\n| Feature | Description |\n| --- | --- |\n| Search | Quickly search the toolbar and access dashboard pages. |\n| Quick branch access | View the current branch and commit hash. |\n| Switch branches | Quickly switch between branches (on preview and production branches - not locally). |\n| [Layout shifts](https://vercel.com/docs/workflow-collaboration/layout-shift-tool) | Open the Layout Shift Tool to identify elements causing layout shifts. |\n| [Interaction timing](https://vercel.com/docs/workflow-collaboration/interaction-timing-tool) | Inspect in detail each interaction's latency and view your current session's INP. |\n| [Accessibility audit tool](https://vercel.com/docs/workflow-collaboration/accessibility-audit-tool) | Automatically check the Web Content Accessibility Guidelines 2.1 level A and AA rules. |\n| Open Graph | View [open graph](https://ogp.me/#metadata) properties for the page you are on and see what the link preview will look like. |\n| [Comments](https://vercel.com/docs/workflow-collaboration/comments) | Access the Comments panel to leave or view feedback. |\n| [View inbox](https://vercel.com/docs/workflow-collaboration/comments/using-comments#comment-threads) | View all open comments. |\n| Navigate to your team | Navigate to your team's dashboard. |\n| Navigate to your project | Navigate to your project's dashboard. |\n| Navigate to your deployment | Navigate to your deployment's dashboard. |\n| [Hide Toolbar](#disable-toolbar-for-session) | Hide the toolbar. |\n| [Disable for session](#disable-toolbar-for-session) | Disable the toolbar for the current session. |\n| [Set preferences](#setting-preferences) | Set personal preferences for the toolbar. |\n| Logout | Logout of the toolbar. |\n\nIf your app already has a  k (`cmd+k` or `ctrl+k` on Windows) feature, you can still open your menu by:\n\n*   Adding `event.preventDefault()` to the handler that toggles the menu, to prevent Vercel's Command Menu from opening with the  k shortcut\n*   Using  ⇧k (`cmd+shift+k` or `ctrl+shift+k` on Windows) to open Vercel's Command Menu\n\nYou can use the Share button in deployments with the Vercel Toolbar enabled, as well as in all preview deployments, to share your deployment's [generated URL](https://vercel.com/docs/deployments/generated-urls). To learn more, see [Sharing Deployments](https://vercel.com/docs/deployments/sharing-deployments).\n\nIf you're on an [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) team, you will be able to see who shared deployment URLs in your [audit logs](https://vercel.com/docs/observability/audit-log).\n\nYou can reposition the toolbar by dragging it to any edge of your screen. It will snap into place and appear there across deployments until you move it again. Repositioning only affects where you see the toolbar, it does not change the toolbar position for your collaborators.\n\nThe Vercel Toolbar is enabled by default for all preview deployments. You can disable the toolbar at the [team](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar#enable-or-disable-the-toolbar-team-wide), [project](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar#enable-or-disable-the-toolbar-project-wide), or [session](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar#disable-toolbar-for-session) level. You can also manage its visibility for [automation](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar#disable-toolbar-for-automation) with HTTP headers and through [environment variables](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar#enable-or-disable-the-toolbar-for-a-specific-branch). To learn more, see [Managing the toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar).\n\nWhen logged into the Vercel Toolbar, you'll find a Preferences button in the options menu. In this menu, you can update the following settings:\n\n| Setting | Description |\n| --- | --- |\n| [Notifications](https://vercel.com/docs/workflow-collaboration/comments/managing-comments#notifications) | Set when you will receive notifications for comments in the deployment you're viewing |\n| Theme | Select your color theme |\n| Chrome Extension | Add Vercel's extension to your browser for easy attachment of screenshots to your comments |\n| Layout Shift Detection | Enable or disable the [Layout Shift Tool](https://vercel.com/docs/workflow-collaboration/layout-shift-tool) |\n| Reset Onboarding | See tooltips above the comments toolbar explaining the functionality of each button |",
  "title": "Vercel Toolbar",
  "description": "Learn how to use the Vercel Toolbar to leave feedback, navigate through important dashboard pages, share deployments, use Draft Mode for previewing unpublished content, and Edit Mode for editing content in real-time.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/comments",
  "markdown": "# Comments Overview\n\nComments allow teams [and invited participants](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work#sharing) to give direct feedback on [preview deployments](https://vercel.com/docs/deployments/preview-deployments) or other environments through the Vercel Toolbar. Comments can be added to any part of the UI, opening discussion threads that [can be linked to Slack threads](https://vercel.com/docs/workflow-collaboration/comments/integrations#use-the-vercel-slack-app). This feature is enabled by default on _all_ preview deployments, for all account plans, free of charge. The only requirement is that all users must have a Vercel account.\n\n![Comments on a preview deployment of the Vercel homepage.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fold-hero-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Comments on a preview deployment of the Vercel homepage.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fold-hero-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nComments on a preview deployment of the Vercel homepage.\n\nPull request owners receive emails when a new comment is created. Comment creators and participants in comment threads will receive email notifications alerting them to new activity within those threads. Anyone in your Vercel team can leave comments on your previews by default. On Pro and Enterprise plans, you can [invite external users](https://vercel.com/docs/deployments/sharing-deployments#sharing-a-preview-deployment-with-external-collaborators) to view your deployment and leave comments.\n\nWhen changes are pushed to a PR, and a new preview deployment has been generated, a popup modal in the bottom-right corner of the deployment will prompt you to refresh your view:\n\n![The popup modal that alerts you when you are viewing an outdated deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1696504161%2Ffront%2Fdocs%2Fcomments%2Fnew-deployment-is-ready-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The popup modal that alerts you when you are viewing an outdated deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1696504161%2Ffront%2Fdocs%2Fcomments%2Fnew-deployment-is-ready-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe popup modal that alerts you when you are viewing an outdated deployment.\n\nComments are visible over your project's UI at the [preview deployment URL](https://vercel.com/docs/deployments/preview-deployments#preview-urls).\n\nWhen you open a preview deployment with comments enabled, there will be a toolbar near the bottom of your browser that will prompt you to log into your Vercel account to leave a comment. You can drag this toolbar anywhere.\n\n![The comments toolbar in a preview deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Ftoolbar-light.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The comments toolbar in a preview deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Ftoolbar-dark.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe comments toolbar in a preview deployment.\n\nAfter successfully logging in, the toolbar will display buttons allowing you to:\n\nSee [Vercel Toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar) to learn more about the feature of the toolbar.\n\nComments on each page are represented by the author's Vercel profile picture, allowing you to see at a glance which team members and participants have left feedback.\n\nAnyone who has ever viewed your preview while logged into comments will appear as a profile picture on the menu bar.",
  "title": "Comments Overview",
  "description": "Comments allow teams and invited participants to give direct feedback on preview deployments. Learn more about Comments in this overview.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/feature-flags",
  "markdown": "# Feature Flags\n\nVercel works with your existing feature flags implementation and allows you to ship, test, and experiment with confidence by providing a seamless integration with our DX platform:\n\n*   You can speeds up how your application loads feature flags by using [Edge Config integrations](https://vercel.com/docs/storage/edge-config/integrations)\n*   You can improve collaboration and accelerate your team's workflow by using Vercel Toolbar to [view, override, and share your application's feature flags](https://vercel.com/docs/workflow-collaboration/feature-flags/using-vercel-toolbar)\n*   You can observe how your flags are used through [Runtime Logs](https://vercel.com/docs/workflow-collaboration/feature-flags/integrate-with-runtime-logs) and [Web Analytics](https://vercel.com/docs/workflow-collaboration/feature-flags/integrate-with-web-analytics)\n\nYou can also implement Feature flags as code by using the [Flags pattern](https://vercel.com/docs/workflow-collaboration/feature-flags/feature-flags-pattern) in your Next.js App Router application.\n\nVercel is compatible with any feature flag provider including [LaunchDarkly](https://launchdarkly.com/), [Optimizely](https://www.optimizely.com/), [Statsig](https://statsig.com/), [Hypertune](https://www.hypertune.com/), [Split](https://www.split.io/), and custom feature flag setups.\n\nUsing the [Vercel Toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar), you're able to view, override, and share feature flags for your application without leaving your browser tab.\n\nYou can manage feature flags from the toolbar in any development environment that your team has [enabled the toolbar for](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/in-production-and-localhost). This includes local development, preview deployments, and production deployments.\n\nFeature flags play a crucial role in the software development lifecycle, enabling safe feature rollouts, experimentation, and A/B testing. When you integrate your feature flags with the Vercel platform, you can improve your application by using Vercel's observability features.\n\nIf you're using Next.js App Router, or Sveltekit for your application, you have the option of implementing feature flags as code. This allows you to manage feature flags in your application codebase, including the ability to use feature flags in your routing logic through precomputed flags.\n\nAn Edge Config is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and IP blocking. It enables you to read data at the edge without querying an external database or hitting upstream servers. With [Vercel Integrations](https://vercel.com/docs/integrations), you can connect with external providers to synchronize their flags into your Edge Config.\n\nWith Vercel's optimizations, you can read Edge Config data at negligible latency. The vast majority of your reads will complete within 15ms at P99, or as low as 0ms in some scenarios.",
  "title": "Feature Flags",
  "description": "Learn how you can use Vercel's DX platform to manage, view, override feature flags that your team has enabled.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/monitoring",
  "markdown": "# Monitoring\n\nMonitoring allows you to visualize and quantify the performance and traffic of your projects on Vercel. You can use [example queries](https://vercel.com/docs/observability/monitoring/monitoring-reference#example-queries) or create [custom queries](https://vercel.com/docs/observability/monitoring/quickstart#create-a-new-query) to debug and optimize bandwidth, errors, performance, and bot traffic issues in a production or preview deployment.\n\n![Monitoring in the Vercel dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmonitoring-tab-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Monitoring in the Vercel dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmonitoring-tab-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nMonitoring in the Vercel dashboard.\n\nCharts allow you to explore your query results in detail. Use filters to adjust the date, data granularity, and chart type (line or bar).\n\n![Graph view to visualize data and usage of your application.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fquery-graphs.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Graph view to visualize data and usage of your application.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fquery-graphs-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nGraph view to visualize data and usage of your application.\n\nHover and move your mouse across the chart to view your data at a specific point in time. For example, if the data granularity is set to 1 hour, each point in time will provide a one-hour summary.\n\n![The tooltip shows you the aggregated data for the date and time selected.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Ftool-tip.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The tooltip shows you the aggregated data for the date and time selected.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Ftool-tip-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe tooltip shows you the aggregated data for the date and time selected.\n\nTo get started with the most common scenarios, use our Example Queries. You cannot edit or add new example queries. For a list of the available options, view our [example queries docs](https://vercel.com/docs/observability/monitoring/monitoring-reference#example-queries).\n\nYou can save either personal (My Queries) or Team Queries from the left navigation bar. Personal queries can only be viewed and edited by the user who created them. Only team members with the [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) or [member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) roles can access team queries.\n\nYou can manage your saved personal and team queries from the query console. Select a query from the left navigation bar and click on the vertical ellipsis (⋮) in the upper right-hand corner. You can choose to Duplicate, Rename, or Delete the selected query from the dropdown menu.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmanage-query.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmanage-query-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDuplicate, Rename and Delete a query from the query editor.\n\nAlternatively, you can perform the same actions from the left navigation bar. Hover your mouse over a saved query and click on the vertical ellipsis (⋮) to view the drop-down menu.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmanage-query-from-sidebar.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fmanage-query-from-sidebar-dark.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nManage individual queries from the sidebar right next to their names.\n\nDuplicating a query creates a copy of the query in the same folder. You cannot copy queries to another folder. To rename a saved query, use the ellipses (⋮) drop-down menu or directly click its title to edit.\n\nDeleting a saved personal or team query is permanent and irreversible. To delete a saved query, click the Delete button in the confirmation modal.\n\nYou may encounter errors such as invalid queries when using Monitoring. For example, defining an incorrect location parameter generates an invalid query. In such cases, no data appears.\n\nTo enable monitoring on [Pro](https://vercel.com/docs/accounts/plans/pro) plans:\n\n1.  Go to Monitoring tab from the dashboard\n2.  Click Enable Monitoring and you see a confirmation modal\n3.  Click Next and then Confirm and pay to get access to the feature\n\n1.  Go to your team Settings > Billing\n2.  Scroll to the Monitoring section\n3.  Set the [Toggle](https://vercel.com/design/toggle) to the disabled state\n\nVercel creates data points each time a request is made to your website. These data points include unique parameters such as execution time and bandwidth used.\n\nCertain data points such as `public_ip` may be considered personal information under certain data protection laws. You can hide this information from your Monitoring queries by going to Settings and de-selecting IP Address Visibility. This can only be done by [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) and [admin](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#adding-project-administrators) roles.\n\nFor business purposes, such as DDoS mitigation, Vercel will still collect IP addresses.\n\nFor a complete list of fields, see the [visualize clause](https://vercel.com/docs/observability/monitoring/monitoring-reference#visualize) docs.\n\nFor more information on what to do next, we recommend the following articles:",
  "title": "Monitoring",
  "description": "Query and visualize your Vercel usage, traffic, and more with Monitoring.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/otel-overview",
  "markdown": "# Quickstart for using the Vercel OpenTelemetry Collector\n\nVercel has an OpenTelemetry (OTEL) [collector](https://opentelemetry.io/docs/collector/) that allows you to send OTEL traces from your Serverless or Edge Functions to application performance monitoring (APM) vendors such as [New Relic](https://vercel.com/integrations/newrelic).\n\nThe use of the OTEL collector is recommended due to improved performance, but not strictly required. If desired, you can configure the OTEL SDK to use [custom trace exporters](#custom-otel-exporters).\n\nTraces are a way to collect data about the performance and behavior of your application and help identify the cause of performance issues, errors, and other problems. Learn more about traces [in the OpenTelemetry](https://opentelemetry.io/docs/concepts/signals/traces/) docs.\n\nTo start using OpenTelemetry on Vercel, follow the steps below. This guide gives examples using Next.js and other frameworks where you can use Serverless or Edge Functions.\n\n*   You must be using an OTEL Integration:\n    *   [New Relic](https://vercel.com/integrations/newrelic): Available in [Beta](https://vercel.com/docs/release-phases#beta) to teams on Pro and Enterprise plans by following the steps below\n    *   [DataDog](https://vercel.com/integrations/datadog): Available in [Private Beta](https://vercel.com/docs/release-phases#private-beta) to teams on the Enterprise plan. To get access contact your CSM and follow the steps below\n\n1.  Select an integration from the Observability category in the [Marketplace](https://vercel.com/integrations#observability) (such as [DataDog](https://vercel.com/integrations/datadog) or [New Relic](https://vercel.com/integrations/newrelic)).\n    \n    Datadog integration support for OTEL is only available to teams on the Enterprise plan. You must contact your CSM to get access.\n    \n    Click the Add Integration button to begin the [installation](https://vercel.com/docs/integrations/using-an-integration/install-integration#marketplace) and follow each step to add the correct Scope.\n    \n    If you already have installed an OTEL integration, you can skip this step.\n    \n2.  To use OTEL, you must enable Traces for the Integration. You can do this either during initial setup, or if you already have the integration installed, select Manage next to the Integration in the Integrations tab and then select Configure.\n    \n3.  For JavaScript and Typescript users on Vercel, you can use the `@vercel/otel` package to call the correct OpenTelemetry SDK for you.\n    \n    Install the OpenTelemetry JavaScript SDK and `@vercel/otel`:\n    \n    ```\n    pnpm i @opentelemetry/api @vercel/otel\n    ```\n    \n    Create an `instrumentation.ts` file in the root of your project and add the following code to initialize and configure OTEL using `@vercel/otel`.\n    \n    ```\n    import { registerOTel } from '@vercel/otel';\n     \n    export function register() {\n      registerOTel({ serviceName: 'your-project-name' });\n    }\n    // NOTE: You can replace `your-project-name` with the actual name of your project\n    ```\n    \n    Before receiving traces from an APM vendor (such as DataDog), it may be necessary to first create the service you intend to use as a `serviceName` within the service catalog. Refer to the APM vendor's documentation for specific requirements.\n    \n4.  Next.js 13.4+ supports auto-instrumentation which means you no longer have to create a span for each request. To use this feature, you must explicitly opt-in by adding `experimental.instrumentationHook = true` to your `next.config.js`.\n    \n    For more information, please refer to the [Next.js docs for auto-instrumentation](https://nextjs.org/docs/advanced-features/open-telemetry).\n    \n5.  If you have an existing project, you must trigger a redeployment to use traces.\n    \n    You can either deploy your project through the [dashboard](https://vercel.com/new) or through the [CLI](https://vercel.com/docs/deployments/overview#vercel-cli).\n    \n\nThe use of OTEL collector is recommended due to its performance benefits. However, if you need to export tracing to an unsupported APM vendor, you can do so using environment variables or configuration options in the `@vercel/otel` package.\n\nMost of OpenTelemetry's [SDK environment variables](https://opentelemetry.io/docs/specs/otel/configuration/sdk-environment-variables/) are supported by `@vercel/otel`, including [OTLP exporter variables](https://opentelemetry.io/docs/specs/otel/protocol/exporter/). You can configure these variables using Vercel's [environment variables](https://vercel.com/docs/projects/environment-variables).\n\nAnd you can supply completely custom exporter using the `traceExporter` or `spanProcessors` configuration options in the `registerOTel()` API.\n\n```\nimport { registerOTel } from '@vercel/otel';\nimport { MyCustomExporter } from './my-custom-exporter';\n \nexport function register() {\n  registerOTel({\n    serviceName: 'your-project-name',\n    traceExporter: new MyCustomExporter(),\n  });\n}\n```",
  "title": "Quickstart for using the Vercel OpenTelemetry Collector",
  "description": "Learn how to get started with OTEL on Vercel to send traces from your Serverless or Edge Functions to application performance monitoring (APM) vendors.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/logs",
  "markdown": "# Logs\n\nWhen you deploy your website to Vercel, the platform generates build logs that show the deployment progress. The build logs contain information about:\n\n*   The version of the build tools\n*   Warnings or errors encountered during the build process\n*   Details about the files and dependencies that were installed, compiled, or built during the deployment\n\nRuntime logs allow you to search, inspect, and share your team's runtime logs at a project level. You can search runtime logs from the deployments section inside the Vercel dashboard. Your log data is retained for 3 days. For longer log storage, you can use [Log Drains](https://vercel.com/docs/observability/log-drains).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FLogs-Light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FLogs-Dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nActivity Logs provide chronologically organized events on your personal or team account. You get an overview of changes to your environment variables, deployments, and more.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FActivity-Light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FActivity-Dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAudit Logs allow owners to track events performed by other team members. The feature helps you verify who accessed what, for what reason, and at what time. You can export up to 90 days of audit logs to a CSV file.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FAudit-Logs-Light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fobservability%2FAudit-Logs-Dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLog Drains allow you to export your log data, making it easier to debug and analyze. You can configure Log Drains through the Vercel dashboard or through one of our Log Drains integrations.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1715860580%2Ffront%2Fdocs%2Flogs%2Flog-drains-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1715860580%2Ffront%2Fdocs%2Flogs%2Flog-drains-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)",
  "title": "Logs",
  "description": "Use logs to find information on deployment builds, function executions, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/edit-mode",
  "markdown": "# Edit Mode\n\nContent editing in CMSs usually occurs separately from the website's layout and design. This separation makes it hard for authors to visualize their changes. Edit Mode allows authors to edit content within the website's context, offering a clearer understanding of the impact on design and user experience. The ability to jump from content to the editing interface further enhances this experience.\n\nWhen editable content is detected on a page, the toolbar shows an pencil icon to indicate there are elements on the page matched to fields in the CMS.\n\n![The Vercel Toolbar on a deployment](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Vercel Toolbar on a deployment](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Vercel Toolbar on a deployment\n\nSelecting the pencil icon activates Edit Mode, which highlights the editable fields as [Content Links](https://vercel.com/docs/workflow-collaboration/edit-mode#content-link) in blue as you hover near them.\n\nContent Link enables you to edit content on websites using headless CMSs by providing links on elements that match a content model in the CMS. This real-time content visualization allows collaborators to make changes without needing a developer's assistance.\n\nContent Link can be enabled on a preview deployment through the Edit Mode button on the [Vercel Toolbar's](https://vercel.com/docs/workflow-collaboration/vercel-toolbar).\n\nThe corresponding model in the CMS determines an editable field. Hover over an element to display a link in the top-right corner of the element. Select the link to open the related CMS field for editing.\n\n![An editable element with a link to open the related field in the CMS](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fopen-in-sanity-light.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![An editable element with a link to open the related field in the CMS](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fopen-in-sanity-dark.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn editable element with a link to open the related field in the CMS\n\nUsing this feature doesn't require any additional configuration or code changes to the page you want to edit.\n\nThe following CMS integrations support Content Link:\n\nSee the [CMS integration documentation](https://vercel.com/docs/integrations/cms) for information on how to use Content Link with your chosen CMS.",
  "title": "Edit Mode",
  "description": "Discover how Vercel's Edit Mode enhances content management for headless CMSs, enabling real-time editing, and seamless collaboration.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/draft-mode",
  "markdown": "# Draft Mode\n\nDraft Mode lets you view your unpublished headless CMS content on your website rendered with all the normal styling and layout that you would see once published.\n\nBoth [Next.js](https://vercel.com/docs/frameworks/nextjs#draft-mode) and [SvelteKit](https://vercel.com/docs/frameworks/sveltekit#draft-mode) support Draft Mode. Any framework that uses the [Build Output API](https://vercel.com/docs/build-output-api/v3) can support Draft Mode by adding the `bypassToken` option to [prerender configuration](https://vercel.com/docs/build-output-api/v3/primitives#prerender-functions).\n\nDraft Mode was called Preview Mode before the release of Next.js [13.4](https://nextjs.org/blog/next-13-4) . The name was changed to avoid confusion with [preview deployments](https://vercel.com/docs/deployments/preview-deployments), which is a different product.\n\nYou can use Draft Mode if you:\n\n1.  Use [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) to fetch and render data from a headless CMS\n2.  Want to view your unpublished headless CMS content on your site without rebuilding your pages when you make changes\n3.  Want to protect your unpublished content from being viewed publicly\n\nDraft Mode allows you to bypass [ISR](https://vercel.com/docs/incremental-static-regeneration) caching to fetch the latest CMS content at request time. This is useful for seeing your draft content on your website without waiting for the cache to refresh, or manually revalidating the page.\n\nThe process works like this:\n\n1.  Each ISR route has a `bypassToken` configuration option, which is assigned a generated, cryptographically-secure value at build time\n2.  When someone visits an ISR route with a `bypassToken` configured, the page will check for a `__prerender_bypass` cookie\n3.  If the `__prerender_bypass` cookie exists and has the same value as the `bypassToken` your project is using, the visitor will view the page in Draft Mode\n\nOnly team members will be able to view pages in Draft Mode.\n\nTo use Draft Mode with Next.js on Vercel, you must:\n\n1.  [Enable ISR](https://vercel.com/docs/incremental-static-regeneration) on pages that fetch content. Using ISR is required on pages that you want to view in Draft Mode\n    \n2.  Add code to your ISR pages to detect when Draft Mode is enabled and render the draft content\n    \n3.  Toggle Draft Mode in the Vercel Toolbar by selecting the eye icon to view your draft content. Once toggled, the toolbar will turn purple, indicating that Draft Mode is enabled\n    \n    ```\n    import { draftMode } from 'next/headers';\n     \n    async function getContent() {\n      const { isEnabled } = draftMode();\n     \n      const contentUrl = isEnabled\n        ? 'https://draft.example.com'\n        : 'https://production.example.com';\n     \n      // This line enables ISR, required for draft mode\n      const res = await fetch(contentUrl, { next: { revalidate: 120 } });\n     \n      return res.json();\n    }\n     \n    export default async function Page() {\n      const { title, desc } = await getContent();\n     \n      return (\n        <main>\n          <h1>{title}</h1>\n          <p>{desc}</p>\n        </main>\n      );\n    }\n    ```\n    \n\nSee the Next.js docs to learn how to use Draft Mode with self-hosted Next.js projects:\n\nYou will be able to access Draft Mode in the Vercel Toolbar through the eye icon. Once selected, the toolbar will turn purple, indicating that Draft Mode is enabled:\n\n![The Vercel Toolbar with Draft Mode enabled](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar-draft-mode.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Vercel Toolbar with Draft Mode enabled](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar-draft-mode.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Vercel Toolbar with Draft Mode enabled\n\nTo share a draft URL, it must have the `?__vercel_draft=1` query parameter. For example:\n\n```\nhttps://my-site.com/blog/post-01?__vercel_draft=1\n```\n\nViewers outside your Vercel team cannot enable Draft Mode or see your draft content, even with a draft URL.",
  "title": "Draft Mode",
  "description": "Vercel's Draft Mode enables you to view your unpublished headless CMS content on your site before publishing it.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations",
  "markdown": "# Vercel Integrations Overview\n\nLearn how to extend Vercel's capabilities by integrating with your preferred providers for headless content, commerce, databases, and more.\n\nIntegrations allow you to extend the capabilities of Vercel and connect with third-party platforms or services to do things like sending logs to services, integrate with testing tools, or connect to your CMS. The [Integrations Marketplace](https://vercel.com/integrations) provides you with curated integrations that extend and automate your workflow.\n\n*   Extend your Vercel workflow: As someone who uses Vercel to deploy their application, you can integrate with many of the other tools you require into your Vercel workflow.\n*   Integrate your service with Vercel: As the creator of a third-party tool or service, you can extend the Vercel platform through traditional integrations, guides, and templates to make it simple for your users to use your platform when they deploy on Vercel. You can then distribute it privately, or partner with us to host it on the Vercel Marketplace.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Vercel Integrations Overview",
  "description": "Learn how to extend Vercel's capabilities by integrating with your preferred providers for headless content, commerce, databases, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/checks-overview",
  "markdown": "# Working with Checks\n\nChecks are tests and assertions created and run after every successful deployment. Checks API defines your application's quality metrics, runs end-to-end tests, investigates APIs' reliability, and checks your deployment.\n\nMost testing and CI/CD flows occur in synthetic environments. This leads to false results, overlooked performance degradation, and missed broken connections.\n\n| Flow Type | Description |\n| --- | --- |\n| Core | Checks `200` responses on specific pages or APIs. Determine the deployment's health and identify issues with code, errors, or broken connections |\n| Performance | Collects [core web vital](https://vercel.com/docs/speed-insights) information for specific pages and compares it with the new deployment. It helps you decide whether to build the deployment or block it for further investigation |\n| End-to-end | Validates that your deployment has all the required components to build successfully. And identifies any broken pages, missing images, or other assets |\n| Optimization | Optimizes information about the bundle size. Ensures that your website manages large assets like package and image size |\n\n![The depiction of how the Checks lifecycle works.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687474748%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fchecks%2Fchecks-overview-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The depiction of how the Checks lifecycle works.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687474748%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fchecks%2Fchecks-overview-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe depiction of how the Checks lifecycle works.\n\nThe diagram shows the complete lifecycle of how a check works:\n\n1.  When a [deployment](https://vercel.com/docs/deployments/overview) is created, Vercel triggers the `deployment.created` webhook. This tells integrators that checks can now be registered\n2.  Next, an integrator uses the Checks API to create checks defined in the integration configuration\n3.  When the deployment is built, Vercel triggers the `deployment.ready` webhook. This notifies integrators to begin checks on the deployment\n4.  Vercel waits until all the created checks receive an update\n5.  Once all checks receive a `conclusion`, aliases will apply, and the deployment will go live\n\nLearn more about this process in the [Anatomy of Checks API](https://vercel.com/docs/integrations/checks-overview/creating-checks)\n\nYou can build your Checks [integration](https://vercel.com/docs/integrations/create-integration) and [publish](https://vercel.com/docs/integrations/create-integration/submit-integration) it to the [integration marketplace](https://vercel.com/marketplace). Your integration should follow these guidelines:\n\n*   Provide low or no configuration solutions for developers to run checks\n*   A guided onboarding process for developers from the installation to the end result\n*   Provide relevant information about the outcome of the test on the Vercel dashboard\n*   Document how to go beyond the default behavior to build custom tests for advanced users",
  "title": "Working with Checks",
  "description": "Vercel automatically keeps an eye on various aspects of your web application using the Checks API. Learn how to use Checks in your Vercel workflow here.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations/install-an-integration",
  "markdown": "# Extend your Vercel Workflow\n\nUsing Vercel doesn't stop at the products and features that we provide. Through integrations, you can use third-party platforms or services to extend the capabilities of Vercel and connect with third-party platforms or services to do things like sending logs to services, integrate with testing tools, connect to your CMS, and more.\n\nYou can extend the Vercel platform in any of the following ways:\n\n*   Marketplace - The [Integrations Marketplace](https://vercel.com/integrations) is the best way to find suitable Integrations that fit into a variety of workflows including [monitoring](https://vercel.com/integrations#monitoring), [databases](https://vercel.com/integrations#databases), [CMS](https://vercel.com/integrations#cms), [DevTools](https://vercel.com/integrations#dev-tools), and more.\n*   Using templates - You can use one of our verified and pre-built [templates](https://vercel.com/templates) to learn more about integrating your favorite tools and get a quickstart on development. When you deploy a template using the [Deploy Button](https://vercel.com/docs/deployments/deploy-button), the deployment may prompt you to install related integrations to connect with a third-party service.\n*   Through a third party - Integration creators can prompt you to install their Vercel Integration through their app or website.\n\nWhen installing or using an integration, your data may be collected or disclosed to Vercel. Your information may also be sent to the integration creator per our [Privacy Notice](https://vercel.com/legal/privacy-policy) . Third party integrations are available \"as is\" and not operated or controlled by Vercel. We suggest reviewing the terms and policies for the integration and/or contacting the integration creator directly for further information on their privacy practices.\n\nYou can manage which projects the installed integration has access to by going to the [Integrations tab](https://vercel.com/dashboard/integrations) on your Vercel Dashboard and selecting the Manage button next to an installed Integration.\n\nFrom here, you'll be able to:\n\nIf further configurations are required, you can also select the Configure button on this page.\n\n![Manage all your installed integrations.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687478825%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fmanaging-installed-integrations%2Fmanage-integration-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Manage all your installed integrations.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687478825%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fmanaging-installed-integrations%2Fmanage-integration-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nManage all your installed integrations.\n\nIntegration permissions restrict how much of the API the integration is allowed to access. When you install an integration, you will see an overview of what permissions the integration requires to work.\n\n| Permission Type | Read Access | Write Access |\n| --- | --- | --- |\n| Installation | Reads whether the integration is installed for the hobby or team account | Removes the installation for the hobby or team account |\n| Deployment | Retrieves deployments for the hobby or team account. Includes build logs, a list of files and builds, and the file structure for a specific deployment | Creates, updates, and deletes deployments for the hobby or team account |\n| Deployment Checks | N/A | Retrieves, creates, and updates tests/assertions that trigger after deployments for the hobby or team account |\n| Project | Retrieves projects for the hobby or team account. Also includes retrieving all domains for an individual project | Creates, updates, and deletes projects for the hobby or team account |\n| Project Environment Variables | N/A | Reads, creates, and updates integration-owned environment variables for the hobby or team account |\n| Global Project Environment Variables | N/A | Reads, creates, and updates all environment variables for the hobby or team account |\n| Team | Accesses team details for the account. Includes listing team members | N/A |\n| Current User | Accesses information about the hobby account on which the integration is installed | N/A |\n| Log Drains | N/A | Retrieves a list of log drains, creates new and removes existing ones for the Pro or Enterprise accounts |\n| Domain | Retrieves all domains for the hobby or team account. Includes reading its status and configuration | Removes a previously registered domain name from Vercel for the hobby or team account |\n\nIntegrations can request more permissions over time. Individual users and team owners will be [notified](https://vercel.com/docs/dashboard-features/notifications#notification-details) when an integration installation has pending permission changes.\n\n![Changed Permissions on Integration.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687478932%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fdashboard%2Faction-required-for-changed-permissions-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Changed Permissions on Integration.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687478932%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fdashboard%2Faction-required-for-changed-permissions-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nChanged Permissions on Integration.\n\nYou'll also be alerted to any new permissions on the [dashboard](https://vercel.com/dashboard/integrations). The permission request contains information on which permissions are changing and the reasoning behind the changes.\n\nTo manage which projects the installed integration has access to:\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard), go to the Integrations tab\n2.  Next to the integration, select the Manage button\n3.  On the integrations page, under Access, select the Manage Access button\n4.  From the dialog, select the option to manage which projects have access\n\nTo uninstall an integration:\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard), go to the Integrations tab\n2.  Next to the integration, select the Manage button\n3.  At the bottom of the integrations page, under Uninstall, select Uninstall Integration and follow the steps to uninstall\n\nEvery integration installed for a team creates an access token that is associated with the developer who originally installed it. If the developer loses access to the team, the integration will become disabled to prevent unauthorized access. We will [notify](https://vercel.com/docs/dashboard-features/notifications#notification-details) team owners when an installation becomes disabled.\n\nWhen an integration is disabled, team owners must take action by clicking Manage and either changing ownership or removing the integration.\n\nIf a disabled integration is not re-enabled, it will be automatically removed after 30 days. Any environment variables that were created by that integration will also be removed - this may prevent new deployments from working.\n\nWhen an integration is `disabled`:\n\n*   The integration will no longer have API access to your team or account\n*   If the integration has set up log drains, then logs will cease to flow\n*   The integration will no longer receive the majority of webhooks, other than those essential to its operation (`project.created`, `project.removed` and `integration-configuration.removed`)\n\nIf you are an integrator, see the [disabled integration configurations](https://vercel.com/docs/rest-api/vercel-api-integrations#disabled-integration-configurations) documentation to make sure your integration can handle `disabled` state.",
  "title": "Extend your Vercel Workflow",
  "description": "Learn how to pair Vercel's functionality with a third-party service to streamline observability, integrate with testing tools, connect to your CMS, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/conformance",
  "markdown": "# Introduction to Conformance\n\nConformance provides tools that run automated checks on your code for product critical issues, such as performance, security, and code health. Conformance runs in the development workflow to help you:\n\n*   Prevent issues from being merged into your codebase: Conformance runs locally and on Continuous Integration (CI) to notify developers early and prevent issues from ever reaching production\n*   Learn from expert guidance directly in your development workflow: Conformance rules were created based on years of experience in large codebases and frontend applications, and with Vercel's deep knowledge of the framework ecosystem\n*   Burn down existing issues over time: Conformance allowlists enable you to identify and allowlist all existing errors, unblocking development and facilitating gradual error fixing over time. Developers can then incrementally improve the codebase when they have the time to work on the issues. The Vercel dashboard provides access to these errors, allowing you to explore the codebase's health at any time\n\n![Discover critical issues that affect your product](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701774765%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fconformance-view-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Discover critical issues that affect your product](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701774764%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fconformance-view-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDiscover critical issues that affect your product\n\nTo get started with Conformance, follow the instructions on the [Getting Started](https://vercel.com/docs/workflow-collaboration/conformance/getting-started) page.\n\n**Note:** Conformance is available for Enterprise teams. To add it to your contract or upgrade to Enterprise, contact us\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nConformance comes with a curated suite of rules that look for common issues. These rules were created based on the decades of combined experience that we have building high quality web applications.\n\nYou can lean more about the built-in Conformance rules on the [Conformance Rules](https://vercel.com/docs/workflow-collaboration/conformance/rules) page.\n\nA core feature in Conformance is the ability to provide allowlists. This mechanism allows organizations to have developers review their conformance violations with an expert on the team before deciding whether it should be allowed. Conformance allowlists can also be added to existing issues, helping to make sure that new code follows the best practices.\n\nLearn more about how this mechanism works on the [Allowlists](https://vercel.com/docs/workflow-collaboration/conformance/allowlist) page.\n\nConformance can be customized to meet your repository's needs. See [Customizing Conformance](https://vercel.com/docs/workflow-collaboration/conformance/customize) for more information.",
  "title": "Introduction to Conformance",
  "description": "Learn how Conformance improves collaboration, productivity, and software quality at scale.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations/create-integration",
  "markdown": "# Integrate with Vercel\n\nThis guide will walk you through the process of creating and managing integrations on Vercel, helping you to extend the capabilities of your Vercel projects by connecting with third-party services.\n\nIntegrations can be created by filling out the Create Integration form. To access the form:\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard), select your account/team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Select the Integrations tab to see the Integrations overview\n3.  Then, select the [Integrations Console](https://vercel.com/dashboard/integrations/console) button and then select Create\n4.  Fill out all the entries in the [Create integration form](#create-integration-form) as necessary\n5.  At the end of the form, you must accept [Vercel's Integration Marketplace Agreement](https://vercel.com/legal/integrations-marketplace-agreement) in order for your integration to be published\n\nThe Create Integration form must be completed in full before you can submit your integration for review. The form has the following fields:\n\nOnce you have created your integration, it will be assigned the [Community badge](https://vercel.com/docs/integrations/create-integration#community-badge) and be available for external users to download. You can share it with users either through your site or through the Vercel [deploy button](https://vercel.com/docs/deployments/deploy-button/integrations).\n\nIf you are interested in having your integration listed on the [Integration Marketplace](https://vercel.com/integrations):\n\n*   The integration must have at least 500 active installations (500 accounts that have the integration installed).\n*   The integration follows our [review guidelines](https://vercel.com/docs/integrations/create-integration/approval-checklist).\n*   Once you've reached this minimum install requirement, please email [integrations@vercel.com](mailto:integrations@vercel.com) with your request to be reviewed for listing.\n\nYou can view all integrations that you have created on the [Integrations Console](https://vercel.com/dashboard/integrations/console).\n\nTo preview an integration's live URL, click View Integration. This URL can be shared for installation based on the integration's visibility settings.\n\nThe live URL has the following format:\n\n```\nhttps://vercel.com/integrations/<slug>\n```\n\nWhere, `<slug>` is the name you specified in the URL Slug field during the integration creation process.\n\nIn the [Integrations Console](https://vercel.com/dashboard/integrations/console), a Community badge will appear under your new integration's title once you have submitted the integration. While integrations with a Community badge do not appear in the [marketplace](https://vercel.com/integrations), they are available to be installed through your site or through the Vercel [deploy button](https://vercel.com/docs/deployments/deploy-button/integrations)\n\nCommunity integrations are developed by third parties and are supported solely by the developers. Before installing, review the developer's Privacy Policy and End User License Agreement on the integration page.\n\nThe installation of the integration is a critical component of the developer experience that must cater to all types of developers. While deciding the installation flow you should consider the following:\n\n*   New user flow: Developers should be able to create an account on your service while installing the integration\n*   Existing user flow: With existing accounts, developers should sign in as they install the integration. Also, make sure the forgotten password flow doesn't break the installation flow\n*   Strong defaults: The installation flow should have minimal steps and have set defaults whenever possible\n*   Advanced settings: Provide developers with the ability to override or expand settings when installing the integration\n\nFor the installation flow, you should consider adding the following specs:\n\n| Spec Name | Required | Spec Notes |\n| --- | --- | --- |\n| Documentation | Yes | Explain the integration and how to use it. Also explain the defaults and how to override them. |\n| Deploy Button | No  | Create a [Deploy Button](https://vercel.com/docs/deployments/deploy-button) for projects based on a Git repository. |\n\nAs an integration creator, you are solely responsible for the support of your integration developed and listed on Vercel. When providing user support, your response times and the scope of support must be the same or exceed the level of [Vercel's support](https://vercel.com/legal/support-terms). For more information, refer to the [Vercel Integrations Marketplace Agreement](https://vercel.com/legal/integrations-marketplace-agreement).\n\nWhen submitting an integration, you'll enter a [support email](https://vercel.com/docs/integrations/create-integration/submit-integration#email), which will be listed publicly. It's through this email that integration users will be able to reach out to you.",
  "title": "Integrate with Vercel",
  "description": "Learn how to create your own integration for internal or public use with Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations/cms",
  "markdown": "# Vercel CMS Integrations\n\nVercel Content Management System (CMS) Integrations allow you to connect your projects with CMS platforms, including [Contentful](https://vercel.com/docs/integrations/contentful), [Sanity](https://vercel.com/integrations/sanity), [Sitecore XM Cloud](https://vercel.com/docs/integrations/sitecore) and [more](#featured-cms-integrations). These integrations provide a direct path to incorporating CMS into your applications, enabling you to build, deploy, and leverage CMS-powered features with minimal hassle.\n\nYou can use the following methods to integrate your CMS with Vercel:\n\n*   [Environment variable import](#environment-variable-import): Quickly setup your Vercel project with environment variables from your CMS\n*   [Edit Mode through the Vercel Toolbar](#edit-mode-through-the-vercel-toolbar): Visualize content from your CMS within a Vercel deployments and edit directly in your CMS\n    *   [Content Link](https://vercel.com/docs/workflow-collaboration/edit-mode#content-link): Lets you visualize content models from your CMS within a Vercel deployments and edit directly in your CMS\n*   [Deploy changes from CMS](#deploy-changes-from-cms): Connect and deploy content from your CMS to your Vercel site\n\nThe most common way to setup a CMS with Vercel is by installing an integration through the [Integrations Marketplace](https://vercel.com/integrations#cms). This method allows you to quickly setup your Vercel project with environment variables from your CMS.\n\nOnce a CMS has been installed, and a project linked you can pull in environment variables from the CMS to your Vercel project using the [Vercel CLI](https://vercel.com/docs/cli/env).\n\n1.  To pull in environment variables from your CMS to your Vercel project, you need to install the [Vercel CLI](https://vercel.com/docs/cli). Run the following command in your terminal:\n    \n2.  Navigate to the CMS integration you want to install into your project, and follow the steps to install the integration.\n    \n3.  Once you've installed the CMS integration, you can pull in environment variables from the CMS to your Vercel project. In your terminal, run:\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n\nSee your installed CMSs documentation for next steps on how to use the integration.\n\nWhen editable content is detected on a page, the toolbar shows an pencil icon to indicate there are elements on the page matched to fields in the CMS.\n\n![The Vercel Toolbar on a deployment](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Vercel Toolbar on a deployment](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1716539135%2Ffront%2Fdocs%2Fvercel-toolbar%2Ftoolbar.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Vercel Toolbar on a deployment\n\nSelecting the pencil icon activates Edit Mode, which highlights the editable fields as [Content Links](https://vercel.com/docs/workflow-collaboration/edit-mode#content-link) in blue as you hover near them.\n\nThe following CMS integrations support Content Link:\n\nSee the [Edit Mode documentation](https://vercel.com/docs/workflow-collaboration/edit-mode) for information on setup and configuration.\n\nDraft mode allows you to view unpublished content from your CMS within a Vercel preview, and works with Next.js and SvelteKit. See the [Draft Mode documentation](https://vercel.com/docs/workflow-collaboration/draft-mode) for information and setup and configuration.\n\nThis method is generally setup through webhooks or APIs that trigger a deployment when content is updated in the CMS. See your CMSs documentation for information on how to set this up.",
  "title": "Vercel CMS Integrations",
  "description": "Learn how to integrate Vercel with CMS platforms, including Contentful, Sanity, and Sitecore XM Cloud.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations/ai",
  "markdown": "# Vercel AI Integrations\n\nVercel AI integrations allow you to connect powerful AI models like GPT-3, Pinecone, and more to your Vercel projects.\n\nVercel AI Integrations allow you to connect your projects with advanced AI models and services, including [Perplexity](https://vercel.com/docs/integrations/ai/perplexity), [Pinecone](https://vercel.com/docs/integrations/ai/pinecone), [Replicate](https://vercel.com/docs/integrations/ai/replicate), and more. These integrations provide a direct path to incorporating AI technologies into your applications, enabling you to build, deploy, and leverage AI-powered features with minimal hassle.\n\nYou can access the Vercel AI Integrations through the AI tab on your Vercel [dashboard](https://vercel.com/dashboard). From there, you can browse and connect to the AI models and services that best fit your project's needs.\n\nSee the [adding a provider](https://vercel.com/docs/integrations/ai/adding-a-provider) guide to learn how to add a provider to your Vercel project, or the [adding a model](https://vercel.com/docs/integrations/ai/adding-a-model) guide to learn how to add a model to your Vercel project.",
  "title": "Vercel AI Integrations",
  "description": "Vercel AI integrations allow you to connect powerful AI models like GPT-3, Pinecone, and more to your Vercel projects.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations/ecommerce",
  "markdown": "# Vercel Ecommerce Integrations\n\nLearn how to integrate Vercel with CMS platforms, including Contentful, Sanity, and Sitecore XM Cloud.\n\nVercel CMS Integrations allow you to connect your projects with CMS platforms, including [Contentful](https://vercel.com/docs/integrations/contentful), [Sanity](https://vercel.com/integrations/sanity), and [Sitecore XM Cloud](https://vercel.com/docs/integrations/sitecore). These integrations provide a direct path to incorporating CMS into your applications, enabling you to build, deploy, and leverage CMS-powered features with minimal hassle.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Vercel Ecommerce Integrations",
  "description": "Learn how to integrate Vercel with CMS platforms, including Contentful, Sanity, and Sitecore XM Cloud.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security",
  "markdown": "# Security & Compliance Measures\n\nThis page covers the protection and compliance measures Vercel takes to ensure the security of your data, including [DDoS mitigation](https://vercel.com/docs/security/ddos-mitigation), [SOC2 Type 2 compliance](#soc2), [Data encryption](#data-encryption), and more.\n\nSystem and Organization Control 2 Type 2 ([SOC 2](https://www.aicpa-cima.com/topic/audit-assurance/audit-and-assurance-greater-than-soc-2)) is a compliance framework developed by the American Institute of Certified Public Accountants ([AICPA](https://us.aicpa.org/forthepublic)) that focuses on how an organization's services remain secure and protect customer data. The framework contains 5 Trust Services Categories ([TSCs](https://www.schellman.com/blog/soc-examinations/soc-2-trust-services-criteria-with-tsc)), which contain criteria to evaluate the controls and service commitments of an organization.\n\nVercel has a SOC 2 Type 2 attestation for Security, Confidentiality, and Availability.\n\nMore information is available at [security.vercel.com](https://security.vercel.com/).\n\nISO 27001 is an internationally recognized standard, developed by the International Organization for Standardization (ISO) and International Electrotechnical Commission (IEC), that provides organizations with a systematic approach to securing confidential company and customer information.\n\nVercel is ISO 27001:2013 certified. Our certificate is available [here](https://www.schellman.com/certificate-directory?certificateNumber=1868222-1).\n\nThe EU General Data Protection Regulation (GDPR), is a comprehensive data protection law that governs the use, sharing, transfer, and processing of EU personal data. For UK personal data, the provisions of the EU GDPR have been incorporated into UK law as the UK GDPR\n\nVercel supports GDPR compliance, which means that we commit to the following:\n\n*   Implement and maintain appropriate technical and organizational security measures surrounding customer data\n*   Notify our customers without undue delay of any data breaches\n*   Impose similar data protection obligations on our sub-processors as we do for ourselves\n*   Respond to applicable [data subjects rights](https://vercel.com/legal/privacy-policy#eea), including requests for access, correction, and/or deletion of their personal data\n*   Rely on the EU Standard Contractual Clauses and the UK Addendum as valid data transfer mechanisms when transferring personal data outside the EEA\n\nFor more information on how Vercel protects your personal data, and the data of your customers, refer to our [Privacy Policy](https://vercel.com/legal/privacy-policy) and [Data Processing Addendum](https://vercel.com/legal/dpa).\n\nPayment Card Industry Data Security Standard (PCI DSS) is a standard that defines the security and privacy requirements for payment card processing. PCI compliance requires that businesses who handle customer credit card information adhere to a set of information security standards.\n\nIn alignment with Vercel’s [shared responsibility model](https://vercel.com/docs/security/shared-responsibility), Vercel serves as a service provider to customers who process payment and cardholder data. Customers should select an appropriate payment gateway provider to integrate an `iframe` into their application to ensure that any information entered in the `iframe` goes directly to their payment processor and is isolated from their application’s managed infrastructure on Vercel.\n\n[Learn about PCI DSS iframe integration](https://vercel.com/docs/security/pci-dss).\n\nVercel provides a Self-Assessment Questionnaire D (SAQ-D) Attestation of Compliance (AOC) (SAQ-D AOC) under [PCI DSS v3.2.1](https://docs-prv.pcisecuritystandards.org/PCI%20DSS/Standard/PCI-DSS-v3-2-1-r1.pdf) for service providers. This is crucial for customers handling payments through their applications, as it may affect the scope of their cardholder data environment per PCI DSS standards. The SAQ-D AOC certifies Vercel's adherence to PCI DSS requirements as a service provider.\n\n[Contact us](https://vercel.com/contact/sales) for more details or to access the SAQ-D AOC report.\n\nThe [Health Information Portability and Accountability Act](https://www.hhs.gov/hipaa/) (HIPAA) is one of the most important sectoral regulations related to privacy within the United States (US). The Secretary for the [Health and Human Services](https://www.hhs.gov/) (HHS) developed a set of required national standards designed to protect the confidentiality, integrity, and availability of health data. Certain businesses, covered entities and business associates, are required to comply to these regulations to ensure that health data is transmitted without compromising its security.\n\nVercel supports HIPAA compliance as a business associate by committing to the following:\n\n*   Implementing and maintaining appropriate technical and organizational security measures designed to safeguard a customer's [Protected Health Information](https://www.hhs.gov/hipaa/for-professionals/privacy/laws-regulations/index.html#:~:text=Information%20is%20Protected-,Protected%20Health%20Information.,health%20information%20(PHI).%22) (PHI)\n*   Notifying customers of any data breaches without undue delay\n*   Signing Business Associate Agreements (BAAs) with enterprise customers\n\nCustomers subject to HIPAA may enable [Vercel Secure Compute (available on Enterprise plans)](https://vercel.com/docs/security/secure-compute) for additional layers of protection. This allows customers to have more control over which resources they allow to have access to their information through:\n\n*   Private, isolated cloud environments\n*   Dedicated outgoing IP addresses\n\n[VPC peering and VPN support](https://vercel.com/docs/security/secure-compute#vpc-or-vpn-support) (built on top of Secure Compute) allows customers to create fewer entry points into their networks by establishing secure tunnels within their AWS infrastructure.\n\n[Learn](https://security.vercel.com/?itemUid=aec41c33-0f3a-4030-ac59-49adfd4a975b&source=click) about how Vercel supports HIPAA compliance.\n\n[Contact us](https://vercel.com/contact/sales/security) to request a BAA or to add Secure Compute to your plan.\n\nThe EU-U.S [Data Privacy Framework](https://www.dataprivacyframework.gov/) (DPF) provides U.S. organizations a reliable mechanism for transferring personal data from the European Union (EU), United Kingdom (UK), and Switzerland to the United States (U.S.) while ensuring data protection that is consistent with EU, UK, and Swiss law.\n\nThe International Trade Administration (ITA) within the U.S. Department of Commerce administers the DPF program, enabling eligible U.S.-based organizations to certify their compliance with the framework.\n\nVercel is certified under the EU-U.S. Data Privacy Framework. To view our public listing, visit the [Data Privacy Framework website](https://www.dataprivacyframework.gov/list).\n\nVercel's certification provides adequate data protection for transferring personal data outside of the EU, UK, and Switzerland under the EU/UK [General Data Protection Regulation](https://gdpr-info.eu/) (GDPR) and UK Data Protection Act 2018, as well as the [Swiss Federal Act on Data Protection](https://www.fedlex.admin.ch/eli/cc/2022/491/en) (FADP).\n\n[Learn more](https://security.vercel.com/?itemName=data_privacy&source=click) about Vercel's data privacy practices or visit our [Privacy Notice](https://vercel.com/legal/privacy-policy) for more information.\n\nThe Vercel Edge Network and deployment platform primarily uses Amazon Web Services (AWS), and currently has [18 different regions](https://vercel.com/docs/edge-network/regions) and an Anycast network with global IP addresses.\n\nWe use a multi-layered security approach that combines people, processes, and technology, including centralized IAM, to regulate access to production resources.\n\nWe use cloud security processes to develop and implement procedures for provisioning, configuring, managing, monitoring, and accessing cloud resources. Any changes made in production environments are managed through change control using Infrastructure as Code (IaC).\n\nTo ensure always-on security, Vercel's edge infrastructure uses a combination of cloud-native and vendor tooling, including cloud security posture management tooling for continuous scanning and alerting.\n\nWhen an AWS outage occurs in a region, Vercel will automatically route traffic to the nearest available edge, ensuring network resilience.\n\nVercel operates on a shared responsibility model with customers. Customers have the ability to select their preferred region for deploying their code. The default location for serverless functions is the U.S., but there are dozens of [regions](https://vercel.com/docs/edge-network/regions#region-list) globally that can be used.\n\nAdditionally, Vercel may transfer data to and in the United States and anywhere else in the world where Vercel or its service providers maintain data processing operations. Please see Vercel's [Data Processing Addendum](https://vercel.com/legal/dpa) for further details.\n\n*   Vercel uses [AWS Global Accelerator](https://aws.amazon.com/global-accelerator/) and our Anycast network to automatically reroute traffic to another region in case of regional failure\n*   [Vercel Functions](https://vercel.com/docs/functions/configuring-functions/region#automatic-failover) have multiple availability zone redundancy by default. Multi-region redundancy is available depending on your runtime\n*   Our core database and data plane is a globally replicated database with rapid manual failover, using multiple availability zones\n\nWith region-based failover, Vercel data is replicated across multiple regions, and a failover is triggered when an outage occurs in a region. Rapid failover is then provided to secondary regions, allowing users continuous access to critical applications and services with minimal disruption.\n\nTo meet RTO/RPO goals, Vercel conducts recurring resiliency testing. This testing simulates regional failures. Throughout testing, service statuses are also monitored to benchmark recovery time, and alert on any disruptions.\n\nVercel encrypts data at rest (when on disk) with 256 bit Advanced Encryption Standard (AES-256). While data is in transit (on route between source and destination), Vercel uses HTTPS/TLS 1.3.\n\nIf you need isolated runtime infrastructure, you can use [Vercel Secure Compute](https://vercel.com/docs/security/secure-compute) to create a private, isolated cloud environment with dedicated outgoing IP addresses.\n\nVercel backs-up customer data at an interval of every hour, each backup is persisted for 30 days, and is globally replicated for resiliency against regional disasters. Automatic backups are taken without affecting the performance or availability of the database operations.\n\nAll backups are stored separately in a storage service. If a database instance is deleted, all associated backups are also automatically deleted. Backups are periodically tested by the Vercel engineering team.\n\nThese backups are not available to customers and are created for Vercel's infrastructure's use in case of disaster.\n\nEnterprise Teams on Vercel have their own build infrastructure ensuring isolation from Hobby/Pro accounts on Vercel.\n\nVercel conducts regular penetration testing through third-party penetration testers, and has daily code reviews and static analysis checks.",
  "title": "Security & Compliance Measures",
  "description": "Learn about the protection and compliance measures Vercel takes to ensure the security of your data, including DDoS mitigation, SOC 2 compliance and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/vercel-firewall",
  "markdown": "# Vercel Firewall\n\nVercel Firewall is a set of tools and infrastructure, created specifically with security in mind. It automatically mitigates DDoS attacks and Enterprise teams can get further customization for their site, including dedicated support and custom rules for IP blocking.\n\nVercel provides automated DDoS mitigation for all deployments, regardless of the plan that you are on. With this automated DDoS mitigation, we block incoming traffic if we identify abnormal or suspicious levels of incoming requests.\n\nFor significantly larger, distributed attacks on Enterprise Teams, we work closely with you to ensure your site(s) stay online in the event of an attack. The combination of automated prevention and direct communication from our Customer Success Managers helps ensure your site is resilient to attacks.\n\nContact our sales team to learn more:\n\nAttack Challenge Mode is a way for customers on all plans to ensure more control when under high volume attacks. The Vercel Firewall automatically [helps mitigate DDoS attacks](https://vercel.com/docs/security/ddos-mitigation), but sometimes you may want an extra layer of control to ensure that all traffic to your site is legitimate.\n\nWith Vercel WAF, you can customize the Vercel Firewall by restricting access to your applications or websites by blocking specific IP address or applying specific rules that you can customize in the Vercel dashboard.\n\nBy creating custom rules, in conjunction with DDoS mitigation, you can further strengthen your security posture and maintain control over who can access your applications and websites.\n\nFor customers with advanced firewall needs, the Vercel Firewall offers the utilization of [JA3](https://vercel.com/docs/security/tls-fingerprints#ja3) and [JA4](https://vercel.com/docs/security/tls-fingerprints#ja4) TLS fingerprints, a sophisticated technology employed to track and identify suspicious traffic. TLS fingerprints uniquely identify user sessions based on details in the TLS protocol initiation process.\n\nThis advanced feature provides heightened security measures, especially useful in detecting persistent and covert threats like Botnets or Advanced Persistent Threats (APTs).",
  "title": "Vercel Firewall",
  "description": "Learn how Vercel Firewall helps protect your applications and websites from DDoS attacks and unauthorized access.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/saml",
  "markdown": "# SAML Single Sign-On\n\nTo manage the [members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) of your team through a third-party identity provider like [Okta](https://www.okta.com/) or [Auth0](https://auth0.com/), you can set up the Security Assertion Markup Language (SAML) [feature](#configuring-saml-sso) from your team's settings.\n\nOnce enabled, all team members will be able to log in, or access [Preview](https://vercel.com/docs/deployments/preview-deployments) and Production Deployments, using your [selected identity provider](https://vercel.com/docs/security/saml#saml-providers) and, similar to the [team email domain](https://vercel.com/docs/accounts/create-a-team#team-email-domain) feature, any new users signing up with SAML will automatically be added to your team.\n\nIf needed, you can also automatically assign a users [Hobby account](https://vercel.com/docs/accounts/create-an-account#creating-a-hobby-account) with a specific [role](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) within your team by setting up [Directory Sync](https://vercel.com/docs/security/directory-sync).\n\n![The SAML SSO settings for a Team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fsaml-options.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The SAML SSO settings for a Team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fsaml-options-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe SAML SSO settings for a Team.\n\n1.  To configure SAML SSO for your team, you must be an [owner](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#roles) of the team\n2.  From your [dashboard](https://vercel.com/dashboard), ensure your team is selected in the scope selector\n3.  Navigate to the Settings tab and select Security & Privacy\n4.  Navigate to the SAML Single Sign-On section. Click Configure and follow the walkthrough to configure SAML SSO for your team with your identity provider of choice\n5.  As a further step, you may want to [enforce SAML SSO](#enforcing-saml) for your team\n\nDo you need to enable SAML SSO for your team?\n\nThis feature is available on the Enterprise plan\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nFor additional security, SAML SSO can be enforced for a team so that all [team members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) cannot access any team information unless their current session was authenticated with SAML SSO.\n\n1.  To enforce SAML SSO for your team, you must be an [owner](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#roles) and currently be authenticated with SAML SSO. This ensures that your configuration is working properly before tightening access to your team information\n2.  From your [dashboard](https://vercel.com/dashboard), navigate to the Settings tab and select Security & Privacy. Then go to the SAML Single Sign-On section\n3.  Toggle the Require Team Members to login with SAML switch to Enabled\n\n![SAML SSO configured and enforced.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fsaml-enforced.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![SAML SSO configured and enforced.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fsaml-enforced-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSAML SSO configured and enforced.\n\nWhen modifying your SAML configuration, the option for enforcing will automatically be turned off. Please verify your new configuration is working correctly by re-authenticating with SAML SSO before re-enabling the option.\n\nOnce you have configured SAML, your [team members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) can use SAML SSO to log in or sign up to Vercel. To login:\n\n1.  Select the Continue with SAML SSO button on the authentication page, then enter your team's URL. Your team slug is the identifier in the URLs for your team. For example, the identifier for vercel.com/acme is `acme`.\n2.  Select Continue with SAML SSO again to be redirected to the third-party authentication provider to finish authenticating. Once completed, you will be logged into Vercel.\n\nSAML SSO sessions last for 24 hours before users must re-authenticate with the third-party SAML provider (unless [Directory Sync](https://vercel.com/docs/security/directory-sync) is configured).\n\nYou can choose to share a Vercel login page that only shows the option to log in with SAML SSO. This prevents your team members from logging in with an account that's not managed by your identity provider.\n\nTo use this page, you can set the `saml` query param to your team URL. For example:\n\n```\nhttps://vercel.com/login?saml=team_id\n```\n\n![Vercel's login page showing only the SAML SSO login button.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fsaml-login-custom-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Vercel's login page showing only the SAML SSO login button.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fsaml-login-custom-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVercel's login page showing only the SAML SSO login button.\n\nVercel is SCIM compliant and therefore when a user is removed from your SAML provider, they are automatically offboarded from Vercel.\n\nVercel supports the following third-party SAML providers:",
  "title": "SAML Single Sign-On",
  "description": "Learn how to configure SAML SSO for your organization on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/access-control",
  "markdown": "# Access Control\n\nLearn about the protection and compliance measures Vercel takes to ensure the security of your data, including DDoS mitigation, SOC 2 compliance and more.\n\nDeployments can be protected with [Password protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) and [SSO protection](https://vercel.com/docs/security/deployment-protection#advanced-deployment-protection). Password protection is available for Teams on Pro and Enterprise plans, while SSO protection is only available for Teams on the Enterprise plan. Both methods can be used to protect [Preview](https://vercel.com/docs/deployments/preview-deployments) and [Production](https://vercel.com/docs/deployments/environments#production) deployments.\n\nPassword protection applies to Preview deployments and Production deployments. This feature can be enabled through the Teams Project dashboard. [Read more about in the documentation here](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection).\n\nVercel Authentication protection applies to Preview deployments and Production deployments. When enabled, a person with a Personal Account that is a member of a Team, can use their login credentials to access the deployment. This feature can be enabled through the Teams Project dashboard.\n\nBoth Password protection, and Vercel Authentication can be enabled at the same time. When this is the case, the person trying to access the deployment will be presented with an option to use either method to access the deployment.\n\n[Read more about in the documentation here](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication).",
  "title": "Access Control",
  "description": "Learn about the protection and compliance measures Vercel takes to ensure the security of your data, including DDoS mitigation, SOC 2 compliance and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/encryption",
  "markdown": "# HTTPS/SSL\n\nOut of the box, every Deployment on Vercel is served over an HTTPS connection. The [SSL](https://en.wikipedia.org/wiki/Transport_Layer_Security) certificates for these unique URLs are automatically generated free of charge.\n\nAny HTTP requests to your Deployments are automatically forwarded to HTTPS using the `308` status code:\n\n```\nHTTP/1.1 308 Moved Permanently\nContent-Type: text/plain\nLocation: https://<your-deployment-host>\n```\n\nAn example showing how all `HTTP` requests are forwarded to `HTTPS`.\n\nEnabling HTTPS redirection for Deployments is considered an industry standard, and therefore it is not possible to disable it. This ensures that web content is always served over a secure connection, which helps protect users' data and privacy.\n\nIf the client that is issuing requests to your **Deployment** wants to establish a WebSocket connection, please ensure it is connecting using HTTPS directly, as the WSS protocol does not support redirections.\n\n​Vercel supports TLS version [1.2](https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.2) and TLS version [1.3](https://en.wikipedia.org/wiki/Transport_Layer_Security#TLS_1.3).\n\n​Vercel supports both Session Identifiers and Session Tickets as methods for [resuming a TLS connection](https://hpbn.co/transport-layer-security-tls/#tls-session-resumption). This can significantly improve Time To First Byte for second time visitors.\n\nTo ensure clients can validate TLS certificates as quickly as possible, we [staple an OCSP response](https://en.wikipedia.org/wiki/OCSP_stapling) allowing them to skip a network request to check for revocation, which improves TTFB for first-time visitors.\n\nIn order to ensure the integrity of the data received and sent by any Deployment running on the Vercel platform, we only support strong ciphers with [forward secrecy](https://en.wikipedia.org/wiki/Forward_secrecy).\n\nThe following cipher algorithms are supported:\n\n*   `TLS_AES_128_GCM_SHA256` (TLS 1.3)\n*   `TLS_AES_256_GCM_SHA384` (TLS 1.3)\n*   `TLS_CHACHA20_POLY1305_SHA256` (TLS 1.3)\n*   `ECDHE-ECDSA-AES128-GCM-SHA256` (TLS 1.2)\n*   `ECDHE-RSA-AES128-GCM-SHA256` (TLS 1.2)\n*   `ECDHE-ECDSA-AES256-GCM-SHA384` (TLS 1.2)\n*   `ECDHE-RSA-AES256-GCM-SHA384` (TLS 1.2)\n*   `ECDHE-ECDSA-CHACHA20-POLY1305` (TLS 1.2)\n*   `ECDHE-RSA-CHACHA20-POLY1305` (TLS 1.2)\n*   `DHE-RSA-AES256-GCM-SHA384` (TLS 1.2)\n\nThis is the [recommended configuration from Mozilla](https://wiki.mozilla.org/Security/Server_Side_TLS#Intermediate_compatibility_.28recommended.29).\n\nThe `.vercel.app` domain (and therefore all of its sub domains, which are the unique URLs set when creating a deployment) support [HSTS](https://developer.mozilla.org/docs/Web/HTTP/Headers/Strict-Transport-Security) automatically and are preloaded.\n\n```\nStrict-Transport-Security: max-age=63072000; includeSubDomains; preload;\n```\n\nThe default `Strict-Transport-Security` header for \\*.vercel.app\n\nCustom domains use HSTS, but only for the particular subdomain.\n\n```\nStrict-Transport-Security: max-age=63072000;\n```\n\nThe default `Strict-Transport-Security` header for custom domains\n\nYou can modify the `Strict-Transport-Security` header by configuring [custom response headers](https://vercel.com/docs/edge-network/headers#custom-response-headers) in your project.\n\nTheoretically, you could set the `max-age` parameter to a different value (it indicates how long the client should remember that your site is only accessible over HTTPS), but since we do not allow connections made over HTTP, there is no point in setting it to a shorter value, as the client can just remember it forever.\n\nYou can test whether your site qualifies for HSTS Preloading [here](https://hstspreload.org/) . It also allows submitting the domain to Google Chrome's hardcoded HSTS list. Making it onto that list means your site will become even faster, as it is always accessed over HTTPS right away, instead of the browser following the redirection issued by our **Network** layer.\n\nThe unique URLs generated when creating a deployment are handled using a wildcard certificate issued for the `.vercel.app` domain. The Vercel platform generates wildcard certificates using [LetsEncrypt](https://letsencrypt.org/) and keeps them updated automatically.\n\nWhen custom certificates are generated using `vercel certs issue`, however, their keys are placed in our database and [encrypted at rest](https://en.wikipedia.org/wiki/Data_at_rest#Encryption) within the Network layer.\n\nThen, once a hostname is requested, the certificate and key are read from the database and used for establishing the secure connection. In addition, both are cached in memory for optimal SSL termination performance.\n\nAny features of the encryption mechanism that were left uncovered are documented on [SSL Labs](https://www.ssllabs.com/ssltest/analyze.html?d=vercel.com). You only need to make sure to select any IP address of your choice (it does not matter which one you pick – the results are the same for all).",
  "title": "HTTPS/SSL",
  "description": "Out of the box, every Deployment on Vercel is served over an HTTPS connection. Learn more about how encryption works for the Edge Network here.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/shared-responsibility",
  "markdown": "# Shared Responsibility Model\n\nDiscover the essentials of our Shared Responsibility Model, outlining the key roles and responsibilities for customers, Vercel, and shared aspects in ensuring secure and efficient cloud computing services.\n\nA shared responsibility model is a framework designed to split tasks and obligations between two groups in cloud computing. The model divides duties to ensure security, maintenance, and service functionality.\n\nWhen using a cloud platform such as Vercel, it is important to understand where your security responsibilities lie, and where Vercel takes responsibility. This is especially important when it comes to handling data, such as user account information, payment details, source code and other sensitive information.\n\nThe customer handles their data, applications, and user access management. This includes data encryption, safeguarding sensitive information, and assigning appropriate permissions to users.\n\nVercel manages infrastructure components, such as compute, storage, and networking. Our role is to guarantee that the platform is secure, dependable, and maintained.\n\n![The shared responsibility model for Vercel.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fshared-responsibility-model-light-mode.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The shared responsibility model for Vercel.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fshared-responsibility-model-dark-mode.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe shared responsibility model for Vercel.\n\n*   Security Requirements Assessment: Customers are responsible for evaluating and deciding whether Vercel's platform and the security protection provided meet the specific needs and requirements for their application. By choosing to use our platform, customers acknowledge and accept the level of security coverage offered by Vercel\n    *   Handling Malicious Traffic: Customers are responsible for addressing any costs and resource consumption related to malicious traffic. They should assess their security requirements and implement additional safeguards beyond the [protections](https://vercel.com/docs/security) provided by Vercel\n    *   Payment Transactions: Customers subject to PCI DSS compliance are responsible for choosing an appropriate payment gateway provider to integrate an [iframe into their application](https://vercel.com/docs/security/pci-dss).\n*   Client-side Data: Customers are responsible for the security and management of data on their clients' devices\n*   Source Code: Customers are responsible for securely storing, and maintaining their source code at all times\n*   Server-side Encryption: Customers are responsible for encrypting their server-side data, whether it's stored in the file system or in a database\n*   Identity & Access Management (IAM): Customers choose and implement their desired level of access control regarding their IAM configuration with tools provided by Vercel\n*   Region Selection for Compute: Customers are responsible for selecting the appropriate regions for their compute resources based on their requirements and compliance needs\n*   Production Checklist: Customers are responsible for implementing and adhering to recommended best practices provided in [Vercel's production checklist](https://vercel.com/docs/production-checklist). The customer must ensure these guidelines for optimizing application performance and security are properly followed and integrated into their application's development and deployment processes\n*   Spend Management: Customers are responsible for enabling [Spend Management](https://vercel.com/docs/accounts/spend-management) to set spend a reasonable spend amount and configure actions based on the amount as needed\n\n*   Information and Data: Customers control and own their data. By design, customers determine the access to their data and are responsible for securing and protecting it while in their possession. Vercel does not have visibility into customers' data until they provide it to us. Once in our possession, it is our responsibility to protect and secure it. This shared responsibility ensures the safety and privacy of our customers' data\n    *   Integrations: Customers are responsible for deciding which Vercel services to use and the data that is collected or needed to provide those services. This includes making choices about optional features such as [monitoring](https://vercel.com/docs/observability/monitoring) and [analytics](https://vercel.com/docs/analytics), which give customers more information about their end users. Integrations with third-party services should also be considered in this context, as they can impact the data collected and shared\n*   Encryption & Data Integrity: Vercel is responsible for [encryption](https://vercel.com/docs/security/encryption) and data integrity for data in transit (when in motion between systems or locations) and at rest for the services Vercel controls. However, customers must ensure that all integrations and third-party services used to interact with Vercel are properly secured. This includes proxies, WAFs, CMSs, and integrations with other third-party services\n    *   User Code & Environment Variables: Customers are responsible for managing their application's code, including the exposure of [environment variables](https://vercel.com/docs/projects/environment-variables). By providing code and setting environment variables, customers authorize Vercel to build and deploy their application based on the provided parameters. It is essential for customers to ensure proper handling of sensitive information, such as API keys or other secrets, to maintain the security of their application and data\n*   Authentication: Customers handle their app's authentication with tools like [NextAuth.js](https://next-auth.js.org/getting-started/introduction). Vercel manages platform authentication and provides [deployment protection](https://vercel.com/docs/security/deployment-protection) to help secure the platform for Pro and Hobby users, who authenticate using the [CLI](https://vercel.com/docs/cli/login). Enterprise users can access Single Sign-On (SSO). Vercel deployments can be protected in the following ways: [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), [SSO](https://vercel.com/docs/security/saml), or [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection)\n*   Log Management: While Vercel provides access to short-term [runtime logs](https://vercel.com/docs/observability/runtime-logs) for debugging purposes, it is the customer's responsibility to set up [log drains](https://vercel.com/docs/observability/log-drains) for long-term log retention, data auditing, or additional visibility into their application's performance\n\n*   Infrastructure: Vercel is responsible for the security and availability of the underlying infrastructure used to provide our services. Vercel maintains strict security protocols and regularly performs upgrades to ensure that our infrastructure is up to date and secure\n    *   Multiple Availability Zones and Globally Located Edge Locations: Vercel makes use of [18 different regions](https://vercel.com/docs/edge-network/regions), which are strategically placed around the globe to provide fast and reliable content delivery to customers\n*   Compute: Vercel provides a compute environment for customer applications that utilizes serverless functions and containers to ensure the secure execution of customer code and middleware. Industry-standard security practices are used to isolate customer applications and ensure they are not impacted by other applications running on the platform\n*   Storage: Vercel is responsible for the security and reliability of storage environments for customer data. This includes the storage of application code, configuration files, and other data required to run customer applications. Vercel uses industry-standard encryption and access controls to ensure that customer data is protected from unauthorized access\n*   Networking: Vercel is responsible for providing a secure and reliable networking environment for customer applications. This includes the network infrastructure used to connect customer applications to the internet, as well as the firewalls and other security measures used to protect them from unauthorized access. Industry-standard security practices are used to monitor network traffic and detect and respond to potential security threats",
  "title": "Shared Responsibility Model",
  "description": "Discover the essentials of our Shared Responsibility Model, outlining the key roles and responsibilities for customers, Vercel, and shared aspects in ensuring secure and efficient cloud computing services.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/directory-sync",
  "markdown": "# Directory Sync\n\nDirectory Sync helps teams manage their organization membership from a third-party identity provider like Google Directory or Okta. Like SAML, Directory Sync is only available for Enterprise Teams and can only be configured by [Team Owners](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role).\n\nWhen Directory Sync is configured, changes to your Directory Provider will automatically be synced with your [team members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members). The previously existing permissions/roles will be overwritten by Directory Sync, including current user performing the sync.\n\nMake sure that you still have the right permissions/role after configuring Directory Sync, [otherwise you might lock yourself out.](#preventing-account-lockout)\n\nAll team members will receive an email detailing the change. For example, if a new user is added to your Okta directory, that user will automatically be invited to join your Vercel Team. If a user is removed, they will automatically be removed from the Vercel Team.\n\nYou can configure a mapping between your Directory Provider's groups and a Vercel Team role. For example, your Engineers group on Okta can be configured with the [member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) role on Vercel, and your Admin group can use the [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role.\n\nTo configure directory sync for your team:\n\n1.  Ensure your team is selected in the [scope selector](https://vercel.com/docs/dashboard-features)\n2.  From your team's dashboard, select the Settings tab, and then Security & Privacy\n3.  Under SAML Single Sign-On, select the Configure button. This opens a dialog to guide you through configuring Directory Sync for your Team with your Directory Provider.\n4.  Once you have completed the configuration walkthrough, configure how Directory Groups should map to Vercel Team roles:\n    \n    ![Setting the Okta Admins group as Vercel owners and the Engineers group as Vercel Members.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fdsync-roles.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Setting the Okta Admins group as Vercel owners and the Engineers group as Vercel Members.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fdsync-roles-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Setting the Okta Admins group as Vercel owners and the Engineers group as Vercel Members.\n    \n5.  Finally, an overview of all synced members is shown. Click Confirm and Sync to complete the syncing:\n    \n    ![An overview of Team owners and Members that will be added.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fdsync-confirmation.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![An overview of Team owners and Members that will be added.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fdsync-confirmation-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    An overview of Team owners and Members that will be added.\n    \n6.  Once confirmed, Directory Sync will be successfully configured for your Vercel Team.\n\nSAML Single Sign-On is optionally available on the Enterprise Plan. To enable contact [sales](https://vercel.com/contact/sales) .\n\nSee [SAML Single Sign-On](https://vercel.com/docs/security/saml#saml-providers) for a list of all the SAML providers that Vercel supports.\n\nTo prevent account lockout ensure that at least one person in your team has the owner role, and that they are not removed from the team.\n\nIf access is lost due to removal of team owners, use the following group names to automatically allocate the corresponding roles to individuals in that group:",
  "title": "Directory Sync",
  "description": "Learn how to configure Directory Sync for your Vercel Team.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments",
  "markdown": "# Methods to Protect Deployments\n\nLearn about the different methods to protect your deployments on Vercel, including Vercel Authentication, Password Protection, and Trusted IPs.\n\nVercel offers three methods for protecting your deployments. Depending on your use case, you can choose to protect a single environment, or multiple environments. See [Understanding Deployment Protection by environment](https://vercel.com/docs/security/deployment-protection#understanding-deployment-protection-by-environment) for more information.\n\nYou can see an overview of your projects' protections in the following way\n\n1.  From your [dashboard](https://vercel.com/dashboard) go to the Settings tab\n2.  Select Deployment Protection\n\n![View your project protections on the Dashboard > Settings > Deployment Protection page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fdeployment-protection-projects-view.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![View your project protections on the Dashboard > Settings > Deployment Protection page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fdeployment-protection-projects-view-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nView your project protections on the Dashboard > Settings > Deployment Protection page.\n\nWith Vercel Authentication you can restrict access to all deployments (including non-public deployments), meaning only those with a Vercel account on your team, or those you share a [Sharable Link](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection#sharable-links) with, can access non-public urls, such as `my-project-1234-your-name.vercel.app`.\n\nWhen a Vercel user visits your protected deployment, but they do not have permission to access it, they have the option to [request access](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication#access-requests) for their Vercel account. This request triggers an email and Vercel notification to the branch authors.\n\nLearn more about [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication) and how to enable it.\n\nPassword Protection on Vercel lets you restrict access to both non-public, and public deployments depending on the type of [environment protection](https://vercel.com/docs/security/deployment-protection#understanding-deployment-protection-by-environment) you choose.\n\nLearn more about [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) and how to enable it.\n\nTrusted IPs restrict deployment access to specified IPv4 addresses and [CIDR ranges](https://www.ipaddressguide.com/cidr), returning a 404 for unauthorized IPs. This protection feature is suitable for limiting access through specific paths like VPNs or external proxies.\n\nLearn more about [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips) and how to enable it.",
  "title": "Methods to Protect Deployments",
  "description": "Learn about the different methods to protect your deployments on Vercel, including Vercel Authentication, Password Protection, and Trusted IPs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection",
  "markdown": "# Methods to bypass Deployment Protection\n\nTo test, share, or exclude specific domains from Deployment Protection, you can use the following methods to allow specific access while maintaining overall security:\n\n*   [Shareable Links](#sharable-links): Shareable links enable external users to access specific branch deployments by appending a secure query parameter to the URL\n*   [Protection Bypass for Automation](#protection-bypass-for-automation): Use a secret to bypass protection features for all deployments in a project, such as for end-to-end (E2E) testing\n*   [Deployment Protection Exceptions](#deployment-protection-exceptions): Specify preview domains that should be exempt from deployment protection\n*   [OPTIONS Allowlist](#options-allowlist): Specify paths to be unprotected for CORS preflight `OPTIONS` requests\n\nSharable Links allow external access to specific branch deployments through a secure query parameter. Users with this link can see the latest deployment and leave [comments](https://vercel.com/docs/workflow-collaboration/comments) (if enabled and logged in with their Vercel account).\n\nFor example, if you generate a Sharable Link for the `feature-new-ui` branch. Users with this link can view the latest deployment and comment.\n\nLearn more about [Sharable Links](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/sharable-links), and how to generate and revoke them.\n\nFor automated tasks like end-to-end (E2E) testing, you can use Protection bypass for Automation. When enabled, it generates a secret that can be used as a System Environment Variable (`VERCEL_AUTOMATION_BYPASS_SECRET`) to bypass protection features for all deployments in a project.\n\nFor example, you set up E2E tests that run on deployments. By using this feature and the generated secret, your tests can bypass the protection mechanisms.\n\nLearn more about [Protection bypass for Automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation), and how to enable and disable it.\n\nWith Deployment Protection Exceptions you can specify preview domains that should be exempt from deployment protection. Adding a domain to Deployment Protection Exceptions makes it publicly accessible, bypassing features like [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection), and [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips).\n\nFor example, if you add `preview-branch-name.vercel.app` to Deployment Protection Exceptions, this domain becomes publicly accessible, bypassing the project's deployment protection settings. When removed, it reverts to the default protection settings.\n\nLearn more about [Deployment Protection Exceptions](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/deployment-protection-exceptions), and how to add and remove domains.\n\nWith OPTIONS Allowlist you can specify paths to be unprotected for preflight OPTIONS requests. This can be used to enable [CORS preflight](https://developer.mozilla.org/en-US/docs/Glossary/Preflight_request) requests to your project's protected deployments, as browsers do not send authentication on preflight requests.\n\nIncoming request paths will be compared with the paths in the allowlist, if a request path starts with one of the specified paths, and has the method `OPTIONS`, it will bypass Deployment Protection.\n\nFor example, if you specify `/api`, all requests to paths that start with `/api` (such as `/api/v1/users` and `/api/v2/projects`) will be unprotected for any `OPTIONS` request.\n\nLearn more about [OPTIONS Allowlist](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/options-allowlist).",
  "title": "Methods to bypass Deployment Protection",
  "description": "Learn how to bypass Deployment Protection for specific domains, or for all deployments in a project.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection",
  "markdown": "# Password Protection\n\nWith [Password Protection](#managing-password-protection) enabled, visitors to your deployment must enter the pre-defined password to gain access. You can set the desired password from your project settings when enabling the feature, and update it any time\n\n![Deployment protected with Password Protection authentication screen.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fpassword-protection-screen.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Deployment protected with Password Protection authentication screen.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fpassword-protection-screen.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDeployment protected with Password Protection authentication screen.\n\nThe table below outlines key considerations and security implications when using Password Protection for your deployments on Vercel.\n\n| Consideration | Description |\n| --- | --- |\n| Environment Configuration | Can be enabled for different environments. See [Understanding Deployment Protection by environment](https://vercel.com/docs/security/deployment-protection#understanding-deployment-protection-by-environment) |\n| Compatibility | Compatible with [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication) and [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips) |\n| Bypass Methods | Can be bypassed using [Shareable Links](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/sharable-links) and [Protection bypass for Automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation) |\n| Password Persistence | Users only need to enter the password once per deployment, or when the password changes, due to cookie set by the feature being invalidated on password change |\n| Password Changes | Users must re-enter a new password if you change the existing one |\n| Disabling Protection | All existing deployments become unprotected if you disable the feature |\n| Token Scope | JWT tokens set as cookies are valid only for the URL they were set for and can't be reused for different URLs, even if those URLs point to the same deployment |\n\nYou can manage Password Protection through the dashboard, API, or Terraform:\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Password Protection for\n    2.  Go to Settings then Deployment Protection\n2.  From the Password Protection section:\n    \n    1.  Use the toggle to enable the feature\n    2.  Select the [deployment environment](https://vercel.com/docs/security/deployment-protection#understanding-deployment-protection-by-environment) you want to protect\n    3.  Enter a password of your choice\n    4.  Finally, select Save\n    \n    All your existing and future deployments will be protected with a password for the project. Next time when you access a deployment, you will be asked to log in by entering the password, which takes you to the deployment. A cookie will then be set in your browser for the deployment URL so you don't need to enter the password every time.\n    \n    ![Enabling Password Protection.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fpassword-protection-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Enabling Password Protection.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fpassword-protection-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Enabling Password Protection.\n    \n\nYou can manage Password Protection using the Vercel API endpoint to [update an existing project](https://vercel.com/docs/rest-api/endpoints/projects#update-an-existing-project) with the following body\n\n*   `deploymentType`\n    *   `prod_deployment_urls_and_all_previews`: Standard Protection\n    *   `all`: All Deployments\n    *   `preview`: Only Preview Deployments\n*   `password`: Password\n\n```\n// enable / update password protection\n{\n  \"passwordProtection\": {\n    \"deploymentType\": \"prod_deployment_urls_and_all_previews\" | \"all\" | \"preview\",\n    \"password\": \"<password>\"\n  },\n}\n \n// disable password protection\n{\n  \"passwordProtection\": null\n}\n```\n\nYou can configure Password Protection using `password_protection` in the `vercel_project` data source in the [Vercel Terraform Provider](https://registry.terraform.io/providers/vercel/vercel/latest/docs/data-sources/project).",
  "title": "Password Protection",
  "description": "Learn how to protect your deployments with a password.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/overview",
  "markdown": "# Security\n\nLearn about the protection and compliance measures Vercel takes to ensure the security of your data, including DDoS mitigation, SOC2 Type 2 compliance, Data encryption, and more.\n\nA shared responsibility model is a framework designed to split tasks and obligations between two groups in cloud computing. The model divides duties to ensure security, maintenance, and service functionality.\n\nLearn how Vercel Firewall helps to protect your applications and websites from DDoS attacks and unauthorized access, including customizations that you can make\n\nDeployments can be protected with [Password protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) and [SSO protection](https://vercel.com/docs/projects/overview#sso-protection). Password protection is available for Teams on Pro and Enterprise plans, while SSO protection is only available for Teams on the Enterprise plan. Both methods can be used to protect [Preview](https://vercel.com/docs/deployments/preview-deployments) and [Production](https://vercel.com/docs/deployments/environments#production) deployments.\n\nTo manage the [members](https://vercel.com/docs/teams-and-accounts/team-members-and-roles#managing-team-members) of your team through a third-party identity provider like [Okta](https://www.okta.com/) or [Auth0](https://auth0.com/), you can set up the Security Assertion Markup Language (SAML) [feature](#configuring-saml-sso) from the team settings.\n\nOut of the box, every Deployment on Vercel is served over an HTTPS connection. The SSL certificates for these unique URLs are automatically generated free of charge.\n\nLearn how to configure Directory Sync for your Vercel Team.\n\nWith Secure Compute, you can create private connections between Serverless Functions and your backend cloud, such as databases and other private infrastructure.\n\nLearn how to use the Deployment Protection feature, which makes your preview URLs private and allows access in a flexible and secure way.",
  "title": "Security",
  "description": "Vercel uses and provides a variety of tools, frameworks, and features to ensure that your site is secure.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/code-owners",
  "markdown": "# Code Owners\n\nAs a company grows, it can become difficult for any one person to be familiar with the entire codebase. As growing teams start to specialize, it's hard to track which team and members are responsible for any given piece of code. Code Owners works with GitHub to let you automatically assign the right developer for the job by implementing features like:\n\n*   Colocated owners files: Owners files live right next to the code, making it straightforward to find who owns a piece of code right from the context\n*   Mirrored organization dynamics: Code Owners mirrors the structure of your organization. Code owners who are higher up in the directory tree act as broader stewards over the codebase and are the fallback if owners files go out of date, such as when developers switch teams\n*   Customizable code review algorithms: Modifiers allow organizations to tailor their code review process to their needs. For example, you can assign reviews in a round-robin style, based on who's on call, or to the whole team\n\n![The Code Owners overview.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701775102%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fcodeowners-overview-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Code Owners overview.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701775103%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fcodeowners-overview-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Code Owners overview.\n\nCode Owners is only available for use with GitHub.\n\nTo get started with Code Owners, follow the instructions on the [Getting Started](https://vercel.com/docs/workflow-collaboration/code-owners/getting-started) page.\n\n**Note:** Code owners are available for Enterprise teams. To add it to your contract or upgrade to Enterprise, contact us.\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nCode Approvers are a list of [GitHub usernames or teams](https://docs.github.com/en/organizations/organizing-members-into-teams/about-teams) that can review and accept pull request changes to a directory or file.\n\nYou can enable Code Approvers by adding a `.vercel.approvers` file to a directory in your codebase. To learn more about how the code approvers file works and the properties it takes, see the [Code Approvers](https://vercel.com/docs/workflow-collaboration/code-owners/code-approvers) reference.",
  "title": "Code Owners",
  "description": "Use Code Owners to define users or teams that are responsible for directories and files in your codebase",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips",
  "markdown": "# Trusted IPs\n\nWith Trusted IPs [enabled](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips#managing-trusted-ips) at the level of your [project](https://vercel.com/docs/projects/project-dashboard#settings), only visitors from an allowed IP address can access your deployment. The deployment URL will return `404` [No Deployment Found](https://vercel.com/docs/errors/platform-error-codes#404:-deployment_not_found) for all other requests. Trusted IPs is configured by specifying a list of IPv4 addresses and IPv4 CIDR ranges.\n\nTrusted IPs is suitable for customers who access Vercel deployments through a specific IP address. For example, limiting preview deployment access to your VPN. Trusted IPs can also be enabled in production, for example, to restrict incoming access to only requests through your external proxy.\n\n![Enabling Trusted IPs.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698853473%2Ffront%2Fdocs%2Fsecurity%2Ftrusted-ips-dash-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Enabling Trusted IPs.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698853473%2Ffront%2Fdocs%2Fsecurity%2Ftrusted-ips-dash-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEnabling Trusted IPs.\n\nThe table below outlines key considerations and security implications when using Trusted IPs for your deployments on Vercel.\n\nStandalone Trusted IPs is an optional add-on to your Enterprise plan, [contact our sales Team](https://vercel.com/contact/sales) to learn more. Standalone Trusted IPs allows for the following:\n\n*   Allows Trusted IPs to be configured to be optional, so it behaves as a bypass to [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication) & [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection)\n*   Allows Trusted IPs to be enabled in preview environments independently of [Vercel Authentication](#vercel-authentication)\n    *   It is however recommended to have Trusted IPs as an additional security measure on-top of Vercel Authentication, as relying solely on request IP matching for security is vulnerable to IP spoofing\n    *   Additionally, Vercel Authentication enhances Vercel collaboration features like [Comments](https://vercel.com/docs/workflow-collaboration/comments). See [who can access a deployment protected with Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication#who-can-access-protected-deployments)\n\nYou can manage Trusted IPs through the dashboard, API, or Terraform:\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Trusted IPs for\n    2.  Go to Settings then Deployment Protection\n2.  Ensure Vercel Authentication is enabled. See [Managing Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication#managing-vercel-authentication).\n    \n3.  From the Trusted IPs section:\n    \n    1.  Use the toggle to enable the feature\n    2.  Select the [deployment environment](https://vercel.com/docs/security/deployment-protection#understanding-deployment-protection-by-environment) you want to protect\n    3.  Enter your list of IPv4 addresses and IPv4 CIDR ranges with an optional note describing the address\n    4.  Finally, select Save\n    \n    All your existing and future deployments will be protected with Trusted IPs for that project. Visitors to your project deployments from IP addresses not included in your list will see a [No Deployment Found](https://vercel.com/docs/errors/platform-error-codes#404:-deployment_not_found) error page.\n    \n\nYou can manage Trusted IPs using the Vercel API endpoint to [update an existing project](https://vercel.com/docs/rest-api/endpoints/projects#update-an-existing-project) with the following body\n\n*   `deploymentType`\n    *   `prod_deployment_urls_and_all_previews`: Standard Protection\n    *   `all`: All Deployments\n    *   `preview`: Only Preview Deployments\n    *   `production`: Only Production Deployments\n*   `addresses`: Array of addresses\n    *   `value`: The IPv4, or IPv4 CIDR address\n    *   `note`: Optional note about the address\n    *   `protectionMode`\n        *   `additional`: IP is required along with other enabled protection methods (recommended setting)\n        *   `exclusive`: Trusted IPs is optional, it bypasses other protection methods (only available when [Standalone Trusted IPs](#standalone-trusted-ips) is enabled for the team)\n\n```\n// enable / update trusted ips\n{\n  \"trustedIps\": {\n      \"deploymentType\": \"all\" | \"preview\" | \"production\" | \"prod_deployment_urls_and_all_previews\",\n      \"addresses\": { \"value\": \"<value>\"; \"note\": \"<note>\" | undefined }[],\n      \"protectionMode\": \"additional\" | \"exclusive\"\n  }\n}\n// disbale trusted ips\n{\n  \"trustedIps\": null\n}\n```\n\nYou can configure Trusted IPs using `trusted_ips` in the `vercel_project` data source in the [Vercel Terraform Provider](https://registry.terraform.io/providers/vercel/vercel/latest/docs/data-sources/project).",
  "title": "Trusted IPs",
  "description": "Learn how to restrict access to your deployments to a list of trusted IP addresses.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication",
  "markdown": "# Vercel Authentication\n\nVercel Authentication lets you restrict access to your public and non-public deployments. It is the recommended approach to protecting your deployments, and available on all plans. When enabled, it allows only users with deployment access to view and comment on your site.\n\nUsers attempting to access the deployment will encounter a Vercel login redirect. If already logged into Vercel, Vercel will authenticate them automatically.\n\nAfter login, users are redirected and a cookie is set in the browser if they have view access. If the user does not have access to view the deployment, they will be redirected to [request access](#access-requests).\n\n*   Logged in [team members](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#team-level-roles) with at least the [viewer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#viewer-role) role\n*   Logged in [project members](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#project-level-roles) with at least the [project Viewer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#project-viewer) role\n*   Logged in Vercel users who have been [granted access](#access-requests)\n*   Anyone who has been given a [Shareable Link](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/sharable-links) to the deployment\n*   Tools using the [protection bypass for automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation) header\n\nWhen a Vercel user visits your protected deployment, but they do not have permission to access it, they have the option to request access for their Vercel account. This request triggers an email and Vercel notification to the branch authors.\n\n![External users can request access to protected deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Frequest-access.png&w=640&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![External users can request access to protected deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Frequest-access-dark.png&w=640&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nExternal users can request access to protected deployments.\n\nThe access request can be approved or declined. Additionally, granted access can be revoked for a user at any time.\n\nUsers granted access can view the latest deployment from a specific branch when logged in with their Vercel account. They can also leave preview [Comments](https://vercel.com/docs/workflow-collaboration/comments) if these are enabled on your team.\n\nThose on the Hobby plan can only have one external user per account. If you need more, you can upgrade to a [Pro plan](https://vercel.com/docs/accounts/plans/pro/trials).\n\nYou can manage access requests in the following way\n\n1.  From your [dashboard](https://vercel.com/dashboard) go to the Settings tab\n2.  Select Deployment Protection and then choose the Requests tab to see pending requests\n3.  Choose Access to manage existing access\n\n![Access requests can be approved and declined on the Dashboard > Settings > Deployment Protection > Requests section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fmanage-requests.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Access requests can be approved and declined on the Dashboard > Settings > Deployment Protection > Requests section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fmanage-requests-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAccess requests can be approved and declined on the Dashboard > Settings > Deployment Protection > Requests section.\n\n![Granted access requests can be managed on the Dashboard > Settings > Deployment Protection > Access section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fgranted-access-list.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Granted access requests can be managed on the Dashboard > Settings > Deployment Protection > Access section.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fgranted-access-list-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nGranted access requests can be managed on the Dashboard > Settings > Deployment Protection > Access section.\n\nAccess requests can also be managed using the share modal on the deployment page\n\n![Access requests can be approved, declined and revoked in the deployment share modal.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fmanage-access-v2-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Access requests can be approved, declined and revoked in the deployment share modal.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fmanage-access-v2-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAccess requests can be approved, declined and revoked in the deployment share modal.\n\nYou can configure Vercel Authentication for different environments, as outlined in [Understanding Deployment Protection by environment](https://vercel.com/docs/security/deployment-protection#understanding-deployment-protection-by-environment). This feature works alongside other security measures like [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) and [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips). For specific use-cases, you can bypass Vercel Authentication with methods like [Shareable Links](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/sharable-links) or [Protection bypass for Automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation).\n\nDisabling Vercel Authentication renders all existing deployments unprotected. However, re-enabling it allows previously authenticated users to maintain access without a new login provided they have already authenticated to the specific deployment and have a cookie set in their browser. The authentication token sent as a cookie is restricted to one URL and isn't transferable, even between URLs pointing to the same deployment.\n\nAdmins and members can enable or disable Vercel Authentication for their team. Hobby teams can also enable or disable for their own projects. Vercel Authentication is managed on a per-project basis.\n\nYou can manage Vercel Authentication through the dashboard, API, or Terraform:\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Password Protection for\n    2.  Go to Settings then Deployment Protection\n2.  From the Vercel Authentication section:\n    \n    1.  Use the toggle to enable the feature\n    2.  Select the [deployment environment](#configuring-deployment-protection) you want to protect\n    3.  Finally, Select Save\n    \n    All your existing and future deployments will be protected with Vercel Authentication for the project. Next time when you access a deployment, you will be asked to log in with Vercel if you aren't already logged in, you will be redirected to the deployment URL and a cookie will be set in your browser for that deployment URL.\n    \n    ![Enabling Vercel Authentication.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fsso-protection-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Enabling Vercel Authentication.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fsso-protection-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Enabling Vercel Authentication.\n    \n\nYou can manage Vercel Authentication using the Vercel API endpoint to [update an existing project](https://vercel.com/docs/rest-api/endpoints/projects#update-an-existing-project) with the following body\n\n*   `prod_deployment_urls_and_all_previews`: Standard Protection\n*   `all`: All Deployments\n*   `preview`: Only Preview Deployments\n\n```\n// enable / update Vercel Authentication\n{\n  \"ssoProtection\": {\n    \"deploymentType\": \"prod_deployment_urls_and_all_previews\" | \"all\" | \"preview\"\n  }\n}\n \n// disable Vercel Authentication\n{\n  \"ssoProtection\": null\n}\n```\n\nYou can configure Vercel Authentication using `vercel_authentication` in the `vercel_project` data source in the [Vercel Terraform Provider](https://registry.terraform.io/providers/vercel/vercel/latest/docs/data-sources/project).",
  "title": "Vercel Authentication",
  "description": "Learn how to use Vercel Authentication to restrict access to your deployments.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/generated-urls",
  "markdown": "# Accessing Deployments through Generated URLs\n\nWhen you create a new [deployment](https://vercel.com/docs/deployments/overview) in either a preview or production [environment](https://vercel.com/docs/deployments/environments), Vercel will automatically generate a unique URL in order for you to access the deployment. This URL is publicly accessible by default, but you can configure it to be private using [deployment protection](https://vercel.com/docs/security/deployment-protection). The URL is structured as so:\n\n```\n<project-name>-<unique-hash>-<scope-slug>.vercel.app\n```\n\nYou can use this URL to access a particular deployment forever. It will never cease to exist and can therefore be used as part of a revision history.\n\nYou can access these automatically generated URLs in the following ways:\n\n*   On the command line when the build has completed.\n*   When using Git, you have two options to access deployment URLs. Firstly, you can access the generated URL for a specific deployment within your pull request. Alternatively, you can view a URL that displays [the latest build](#url-with-git-branch). This URL is returned by the Vercel bot as part of a Git comment inside the Git commit, but only if the deployment is successful.\n*   Under the Project's Overview and Deployments tabs as shown below\n\n![Generated URL for a production deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgenerated-url-prod-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Generated URL for a production deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgenerated-url-prod-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nGenerated URL for a production deployment.\n\nGenerated URLs are comprised of several different pieces of data associated with the underlying deployment.\n\nVarying combinations of the following information may be used to generate a URL:\n\n*   `<project-name>`: The name of the [Project](https://vercel.com/docs/projects/overview) that contains the deployment\n*   `<unique-hash>`: 9 randomly generated numbers and letters\n*   `<scope-slug>`: The slug (not the name) of the [Personal Account](https://vercel.com/docs/accounts/create-an-account#creating-a-hobby-account) or [Team](https://vercel.com/docs/accounts/create-a-team) that contains the Project/Deployment\n*   `<branch-name>`: The name of the Git branch for which the deployment was created\n*   `<author-name>`: The username of the [Personal Account](https://vercel.com/docs/accounts/create-an-account#creating-a-hobby-account) belonging to the [Team Member](https://vercel.com/docs/accounts/team-members-and-roles) that created the deployment\n\nTo access the latest successful version of a deployment connected to a Git branch, you do not have to find the unique generated URL mentioned above. You can refresh the generated URL associated with the Git branch.\n\nThe structure of the URL will be as follows:\n\n```\n<project-name>-git-<branch-name>-<scope-slug>.vercel.app\n```\n\nTo access the URL for a successful deployment from Vercel CLI, you can save the [standard output of the deploy command](https://vercel.com/docs/cli/deploy#standard-output-usage). The generated URL will have the following structure:\n\n```\n<project-name>-<scope-slug>.vercel.app;\n```\n\nOnce you deploy to the production environment, the above URL will point to the production deployment.\n\nIf the deployment is created on a [Team](https://vercel.com/docs/accounts/create-a-team), you can also use the URL specific to the deployment's author. It will have the following structure:\n\n```\n<project-name>-<author-name>-<scope-slug>.vercel.app;\n```\n\nThis allows you to easily stay on top of the latest change deployed by a particular [Member](https://vercel.com/docs/accounts/team-members-and-roles) of a Team within a specific Project.\n\nIf more than 63 characters are present before the `.vercel.app` suffix (or the respective [Preview Deployment Suffix](#preview-deployment-suffix)) for a generated URL, they will be truncated.\n\nFor example, this is what an [Automatic Branch URL](#url-with-git-branch) could look like:\n\n```\nmy-project-git-this-is-really-an-extremely-long-bra-abc123xyz-scope-slug.vercel.app;\n```\n\nThe truncation happens by taking away from the end of this list of characters until only 56 of them remain.\n\nAfterward, the first 6-characters of an SHA-256 hash prefix, the Git branch, and the Project name preceded by a dash (like `-ar63fm`) will be appended at the end to avoid collision with other generated URLs that may also be truncated.\n\nThe hash prefix will either be `git-`, or `git-fork-` if the deployment was created through a fork. In the end, the hash creation might look like this:\n\n```\nconst prefix = isFork ? 'git-fork-' : 'git-';\nsha256(prefix + branch + projectName).slice(0, 6);\n```\n\nOnce the truncation is complete, the list of characters will be exactly 63 and therefore comply with the limit.\n\nIf your `<project-name>` resembles a regular web domain, it may be shortened to avoid that resemblance. For example, `www-company-com` would be changed to just `company`. This is done to prevent an accidental trigger of anti-phishing protection built into web browsers that protect the user from visiting domains that look roughly like other domains they visit.\n\nLastly, suppose a [Preview Deployment Suffix](#preview-deployment-suffix) is configured, and the entire generated URL exceeds 253 characters. In that case, the same truncation as mentioned above applies. Still, instead of 63 characters, the length limit will be 253 minus the length of the Preview Deployment Suffix plus 1 (for the period that precedes the Preview Deployment Suffix).\n\nFor example, if the domain `acme-previews.com` is configured as the Preview Deployment Suffix. In that case, that domain has a length of 17, including the preceding `.`, the character limit that would apply before the suffix is 18.\n\nPreview Deployment Suffixes allow you to customize the URL of a [preview deployment](https://vercel.com/docs/deployments/overview#preview-deployments) by replacing the default `vercel.app` suffix with a [custom domain](https://vercel.com/docs/projects/domains/add-a-domain) of your choice.\n\nThe entered custom domain must be:\n\n*   Available and active within the team that enabled the Preview Deployment Suffix\n*   Using Vercel's [Nameservers](https://vercel.com/docs/projects/domains/add-a-domain#vercel-nameservers)\n\nTo enable Preview Deployment Suffix, and customize the appearance of any of your generated URLs:\n\n1.  From your [dashboard](https://vercel.com/dashboard), select the Settings tab\n2.  Select the Billing tab\n3.  Under Add-Ons, set the toggle for Preview Deployment Suffix to Enabled\n4.  Navigate to the Settings tab on the team dashboard\n5.  Select the General tab and scroll down to the Preview Deployment Suffix section\n6.  Enter the custom domain of your choice in the input, and push Save\n\n![Selecting a custom value for the Preview Deployment Suffix.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployment-suffix-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting a custom value for the Preview Deployment Suffix.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployment-suffix-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting a custom value for the Preview Deployment Suffix.\n\nIf you are not able to use Vercel's Nameservers, see our guide on [how to use a custom domain without Vercel's Nameservers](https://vercel.com/guides/preview-deployment-suffix-without-vercel-nameservers).\n\nSee the [plans add-ons](https://vercel.com/docs/accounts/plans/pro#pro-plan-add-ons) documentation for information on pricing.\n\nTo disable Preview Deployment Suffix:\n\n1.  From your [dashboard](https://vercel.com/dashboard), select the Settings tab\n2.  Select the Billing tab\n3.  Under Add-Ons, set the toggle for Preview Deployment Suffix to Disabled\n\nThe next preview deployment generated will revert back to the default `vercel.app` suffix.\n\nYou may encounter this error if you are using the [Preview Deployment Suffix](#preview-deployment-suffix) in your team. Make sure that the custom domain you configured is:\n\n*   Active (not deleted)\n*   Available within the team that enabled the [Preview Deployment Suffix](#preview-deployment-suffix)\n*   Backed by an [active wildcard certificate](https://knowledge.digicert.com/generalinformation/INFO900.html)\n\nThe best way to satisfy all of these constraints is to ensure the domain is also added to a project located in the same team. In this project, you can include a single `index.html` that displays when someone visits the root of the domain.",
  "title": "Accessing Deployments through Generated URLs",
  "description": "Whenever a new deployment is created, Vercel will automatically generate a unique URL which you can use to access that particular deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/environment-variables/system-environment-variables",
  "markdown": "# System Environment Variables Overview\n\nVercel provides a set of Environment Variables that are automatically populated by the System, such as the URL of the Deployment or the name of the Git branch deployed.\n\nTo expose them to your Deployments, make sure Automatically expose System Environment Variables is checked in your Project Settings.\n\n![Automatically exposing System Environment Variables in the Project Settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fauto-expose-system-envs-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Automatically exposing System Environment Variables in the Project Settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fauto-expose-system-envs-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAutomatically exposing System Environment Variables in the Project Settings.\n\nIf you are using a Framework for your Project, Vercel provides prefixed Environment Variables, which you can find in the table below:\n\nWhen you choose to automatically expose System Environment Variables, some React warnings, such as those in a create-react-app will display as build errors. For more information on this error, see [How do I resolve a `process.env.CI = true` error?](https://vercel.com/guides/how-do-i-resolve-a-process-env-ci-true-error)\n\n| Name | Description | Available at [Build](https://vercel.com/docs/deployments/configure-a-build) and/or [Run](https://vercel.com/docs/functions) Time |\n| --- | --- | --- |\n| `VERCEL` | An indicator to show that System Environment Variables have been exposed to your project's Deployments. Example: `1`. | both |\n| `CI` | An indicator that the code is running in a [Continuous Integration](https://en.wikipedia.org/wiki/Continuous_integration) environment. Example: `1`. | build time |\n| `VERCEL_ENV` | The [Environment](https://vercel.com/docs/projects/environment-variables#environments) that the app is deployed and running on. The value can be either `production`, `preview`, or `development`. | both |\n| `VERCEL_URL` | The domain name of the [generated deployment URL](https://vercel.com/docs/deployments/generated-urls). Example: `*.vercel.app`. The value **does not** include the protocol scheme`https://`. **Note:** This Variable cannot be used in conjunction with [Standard Deployment Protection](https://vercel.com/docs/security/deployment-protection#configuring-deployment-protection). See [Migrating to Standard Protection](https://vercel.com/docs/security/deployment-protection#migrating-to-standard-protection). | both |\n| `VERCEL_BRANCH_URL` | The domain name of the [generated Git branch URL](https://vercel.com/docs/deployments/generated-urls#url-with-git-branch). Example: `*-git-*.vercel.app`. The value **does not** include the protocol scheme `https://`. | both |\n| `VERCEL_PROJECT_PRODUCTION_URL` | A production domain name of the project. We select the shortest production custom domain, or vercel.app domain if no custom domain is available. Note, that this is always set, even in preview deployments. This is useful to reliably generate links that point to production such as OG-image URLs. The value **does not** include the protocol scheme `https://`. | both |\n| `VERCEL_REGION` | The ID of the [Region](https://vercel.com/docs/edge-network/regions) where the app is running. Example: `cdg1`. | run time |\n| `VERCEL_DEPLOYMENT_ID` | The unique identifier for the deployment, which can be used to implement [Skew Protection](https://vercel.com/docs/deployments/skew-protection). Example: `dpl_7Gw5ZMBpQA8h9GF832KGp7nwbuh3`. | both |\n| `VERCEL_SKEW_PROTECTION_ENABLED` | When [Skew Protection](https://vercel.com/docs/deployments/skew-protection) is enabled in Project Settings, this value is set to `1`. Example: `1`. | both |\n| `VERCEL_AUTOMATION_BYPASS_SECRET` | The [Protection Bypass for Automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation) value, if the secret has been generated in the project's [Deployment Protection](https://vercel.com/docs/security/deployment-protection) settings. | both |\n| `VERCEL_GIT_PROVIDER` | The Git Provider the deployment is triggered from. Example: `github`. | both |\n| `VERCEL_GIT_REPO_SLUG` | The origin repository the deployment is triggered from. Example: `my-site`. | both |\n| `VERCEL_GIT_REPO_OWNER` | The account that owns the repository the deployment is triggered from. Example: `acme`. | both |\n| `VERCEL_GIT_REPO_ID` | The ID of the repository the deployment is triggered from. Example: `117716146`. | both |\n| `VERCEL_GIT_COMMIT_REF` | The git branch of the commit the deployment was triggered by. Example: `improve-about-page`. | both |\n| `VERCEL_GIT_COMMIT_SHA` | The git [SHA](https://help.github.com/articles/github-glossary/#commit) of the commit the deployment was triggered by. Example: `fa1eade47b73733d6312d5abfad33ce9e4068081`. | both |\n| `VERCEL_GIT_COMMIT_MESSAGE` | The message attached to the commit the deployment was triggered by. Example: `Update about page`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_LOGIN` | The username attached to the author of the commit that the project was deployed by. Example: `johndoe`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_NAME` | The name attached to the author of the commit that the project was deployed by. Example: `John Doe`. | both |\n| `VERCEL_GIT_PREVIOUS_SHA` | The git [SHA](https://help.github.com/articles/github-glossary/#commit) of the last successful deployment for the project and branch. Example: `fa1eade47b73733d6312d5abfad33ce9e4068080`. **Note:** This Variable is only exposed when an [Ignored Build Step](https://vercel.com/docs/projects/overview#ignored-build-step) is provided. | build time |\n| `VERCEL_GIT_PULL_REQUEST_ID` | The pull request id the deployment was triggered by. If a deployment is created on a branch before a pull request is made, this value will be an empty string. Example: `23`. | both |\n\nFrameworks typically use a prefix in order to expose Environment Variables to the browser.\n\nThe following prefixed Environment Variables will be available during the Build Step, based on the Project's selected [Framework Preset](https://vercel.com/docs/deployments/configure-a-build#framework-preset).\n\n| Name | Description |\n| --- | --- |\n| `NEXT_PUBLIC_VERCEL_ENV` | The [Environment](https://vercel.com/docs/projects/environment-variables#environments) that the app is deployed and running on. The value can be either `production`, `preview`, or `development`. |\n| `NEXT_PUBLIC_VERCEL_URL` | The domain name of the [generated deployment URL](https://vercel.com/docs/deployments/generated-urls). Example: `*.vercel.app`. The value **does not** include the protocol scheme`https://`. **Note:** This Variable cannot be used in conjunction with [Standard Deployment Protection](https://vercel.com/docs/security/deployment-protection#configuring-deployment-protection). See [Migrating to Standard Protection](https://vercel.com/docs/security/deployment-protection#migrating-to-standard-protection). |\n| `NEXT_PUBLIC_VERCEL_BRANCH_URL` | The domain name of the [generated Git branch URL](https://vercel.com/docs/deployments/generated-urls#url-with-git-branch). Example: `*-git-*.vercel.app`. The value **does not** include the protocol scheme `https://`. |\n| `NEXT_PUBLIC_VERCEL_PROJECT_PRODUCTION_URL` | A production domain name of the project. We select the shortest production custom domain, or vercel.app domain if no custom domain is available. Note, that this is always set, even in preview deployments. This is useful to reliably generate links that point to production such as OG-image URLs. The value **does not** include the protocol scheme `https://`. |\n| `NEXT_PUBLIC_VERCEL_AUTOMATION_BYPASS_SECRET` | The [Protection Bypass for Automation](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation) value, if the secret has been generated in the project's [Deployment Protection](https://vercel.com/docs/security/deployment-protection) settings. |\n| `NEXT_PUBLIC_VERCEL_GIT_PROVIDER` | The Git Provider the deployment is triggered from. Example: `github`. |\n| `NEXT_PUBLIC_VERCEL_GIT_REPO_SLUG` | The origin repository the deployment is triggered from. Example: `my-site`. |\n| `NEXT_PUBLIC_VERCEL_GIT_REPO_OWNER` | The account that owns the repository the deployment is triggered from. Example: `acme`. |\n| `NEXT_PUBLIC_VERCEL_GIT_REPO_ID` | The ID of the repository the deployment is triggered from. Example: `117716146`. |\n| `NEXT_PUBLIC_VERCEL_GIT_COMMIT_REF` | The git branch of the commit the deployment was triggered by. Example: `improve-about-page`. |\n| `NEXT_PUBLIC_VERCEL_GIT_COMMIT_SHA` | The git [SHA](https://help.github.com/articles/github-glossary/#commit) of the commit the deployment was triggered by. Example: `fa1eade47b73733d6312d5abfad33ce9e4068081`. |\n| `NEXT_PUBLIC_VERCEL_GIT_COMMIT_MESSAGE` | The message attached to the commit the deployment was triggered by. Example: `Update about page`. |\n| `NEXT_PUBLIC_VERCEL_GIT_COMMIT_AUTHOR_LOGIN` | The username attached to the author of the commit that the project was deployed by. Example: `johndoe`. |\n| `NEXT_PUBLIC_VERCEL_GIT_COMMIT_AUTHOR_NAME` | The name attached to the author of the commit that the project was deployed by. Example: `John Doe`. |\n| `NEXT_PUBLIC_VERCEL_GIT_PULL_REQUEST_ID` | The pull request id the deployment was triggered by. If a deployment is created on a branch before a pull request is made, this value will be an empty string. Example: `23`. |\n\nMany frontend frameworks require prefixes on environment variable names to make them available to the client, such as `NEXT_PUBLIC_` for Next.js or `PUBLIC_` for SvelteKit. Vercel adds these prefixes automatically for your production and preview deployments, but not for your local development environment.\n\nFramework environment variables are not prefixed when pulled into your local development environment with `vercel env pull`. For example, `VERCEL_ENV` will not be prefixed to `NEXT_PUBLIC_VERCEL_ENV`.\n\nTo use framework-prefixed environment variables locally:\n\n1.  [Define them in your project settings](https://vercel.com/docs/projects/environment-variables#declare-an-environment-variable) with the appropriate prefix\n2.  Scope them to `Development`\n3.  Pull them into your local environment with Vercel CLI using the `vercel env pull` command",
  "title": "System Environment Variables Overview",
  "description": "Vercel Environment variables that are automatically populated by the System, such as the URL of the Deployment or the name of the Git branch deployed.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/plans",
  "markdown": "# Account Plans on Vercel\n\nVercel offers three account plans: Hobby, Pro, and Enterprise.\n\nEach plan is designed to meet the needs of different types of users, from personal projects to large enterprises. The Hobby plan is free and includes base features, while the Pro and Enterprise plans offer enhanced features and resources.\n\nThe Hobby plan is designed for personal projects and developers. It includes CLI and personal [Git integrations](https://vercel.com/docs/deployments/git), built-in CI/CD, [automatic HTTPS/SSL](https://vercel.com/docs/security/encryption), and [previews deployments](https://vercel.com/docs/deployments/preview-deployments) for every Git push.\n\nIt also provides base resources for [Vercel Functions](https://vercel.com/docs/functions), [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), and [Image Optimization](https://vercel.com/docs/image-optimization), along with 100 GB of Fast Data Transfer and 1 hour of [runtime logs](https://vercel.com/docs/observability/runtime-logs).\n\nSee the [Hobby plan](https://vercel.com/docs/accounts/plans/hobby) page for more details.\n\nThe Pro plan caters to professional developers, freelancers, and small businesses, offering enhanced features and resources. It encompasses all features of the [Hobby plan](https://vercel.com/docs/accounts/plans/hobby), while expanding Fast Data and Origin Transfer, [Functions](https://vercel.com/docs/functions/edge-functions) limitations, Build Execution minutes, and [Image Optimization](https://vercel.com/docs/image-optimization) source images.\n\nIt also introduces team collaboration features, email support, and increased limits for [domains](https://vercel.com/docs/projects/domains) per project and [deployments](https://vercel.com/docs/deployments/overview) per day.\n\nSee the [Pro plan](https://vercel.com/docs/accounts/plans/pro) page for more details.\n\nThe Enterprise plan caters to large organizations and enterprises requiring custom options, advanced security, and dedicated support. It includes all features of the [Pro plan](https://vercel.com/docs/accounts/plans/pro), with custom limits for [Vercel Functions](https://vercel.com/docs/functions) and [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), Execution, Build Execution, and [Image Optimization](https://vercel.com/docs/image-optimization).\n\nEnterprise customers benefit from [Single Sign-On (SSO)](https://vercel.com/docs/security/saml), enhanced [observability and logging](https://vercel.com/docs/observability), isolated build infrastructure, dedicated customer success managers, and SLAs.\n\nSee the [Enterprise plan](https://vercel.com/docs/accounts/plans/enterprise) page for more details.\n\nThe following table is a high-level comparison of the plans available on Vercel. For more details, see each plans individual page.\n\n| Feature | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Fast Data Transfer | Up to 100 GB | Up to 1 TB | Custom |\n| Fast Origin Transfer | Up to 10 GB | Up to 100 GB | Custom |\n| Edge Functions execution units | 500,000 | 1 million | Custom |\n| Edge Middleware invocations | 1 million | 1 million | Custom |\n| Serverless Function maximum duration | 10s (default) - [configurable up to 60s](https://vercel.com/docs/functions/configuring-functions/duration) | 15s (default) - [configurable up to 300s](https://vercel.com/docs/functions/configuring-functions/duration) | 15s (default) - [configurable up to 900s](https://vercel.com/docs/functions/configuring-functions/duration) |\n| Serverless Function execution | 100 GB-hours | 1,000 GB-hours | Custom |\n| Build execution minutes | 6,000 | 24,000 | Custom |\n| Concurrent builds | 1   | 1   | Custom |\n| Image Optimization source images | 1,000 | 5,000 | Custom |\n| Team collaboration features | \\-  | Yes | Yes |\n| Team member pricing | \\-  | $20/mo | Custom |\n| Remote Cache artifact downloads | 10 GB | 20 GB | Custom |\n| Domains per project | 50  | Unlimited | Unlimited |\n| Deployments per day | 100 | 6,000 | Custom |\n| Web Analytics events | 2,500 | 25,000 | Custom |\n| Speed Insights data points | 10,000 | Unlimited | Custom |\n| Email support | \\-  | Yes | Custom |\n| Single Sign-On (SSO) / SAML Login | \\-  | \\-  | Yes |\n| Enhanced observability & logging | \\-  | \\-  | Yes |\n| Isolated build infrastructure | \\-  | \\-  | Yes |\n| Custom security features | \\-  | \\-  | Yes |\n| Dedicated success manager & SLAs | \\-  | \\-  | Yes |\n| Onboarding & advanced support | \\-  | \\-  | Yes |\n| Code audits & professional services | \\-  | \\-  | Yes |\n\nOn the [usage page of your dashboard](https://vercel.com/dashboard). To learn how your usage relates to your bill and how to optimize your usage, see [Manage and optimize usage](https://vercel.com/docs/pricing/manage-and-optimize-usage).\n\nYou can also learn more about how [usage incurs on your site](https://vercel.com/docs/pricing/how-does-vercel-calculate-usage-of-resources) or how to [understand your invoice](https://vercel.com/docs/pricing/understanding-my-invoice).\n\nAll plans [receive notifications](https://vercel.com/docs/dashboard-features/notifications#on-demand-usage-notifications) by email and on the dashboard when they are approaching and exceed their usage limits.\n\n*   Hobby plans will be paused when they exceed the included free tier usage\n*   Pro plans users can configure [Spend Management](https://vercel.com/docs/pricing/spend-management) to automatically pause deployments, trigger a webhook, or send SMS notifications when they reach 100% usage\n\nFor Pro and Enterprise teams, when you reach 100% usage your deployments are not automatically stopped. Rather, Vercel enables you to incur on-demand usage as your site grows. It's important to be aware of the [usage page of your dashboard](https://vercel.com/docs/limits/usage) to see if you are approaching your limit.\n\nOne of the benefits to always being on, is that you don't have to worry about downtime in the event of a huge traffic spike caused by announcements or other events. Keeping your site live during these times can be critical to your business.\n\nSee [Manage & optimize usage](https://vercel.com/docs/pricing/manage-and-optimize-usage) for more information on how to optimize your usage.",
  "title": "Account Plans on Vercel",
  "description": "Learn about the different plans available on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/plans/enterprise",
  "markdown": "# Vercel Enterprise Plan\n\nLearn about the Enterprise plan for Vercel, including features, pricing, and more.\n\nVercel offers an Enterprise plan for organizations and enterprises that need high [performance](#performance-and-reliability), advanced [security](#security-and-compliance), and dedicated [support](#administration-and-support).\n\n### Interested in Vercel Enterprise plan?\n\nScale your enterprise with Vercel's tailored plan. Experience high performance, advanced security, and dedicated support. Access empowering features\n\nThe Enterprise plan uses isolated build infrastructure on high-grade hardware with no queues to ensure exceptional performance and a seamless experience.\n\nManaged Infrastructure\n\n*   Greater function limits for [Vercel Functions](https://vercel.com/docs/functions/runtimes) including bundle size, duration, memory, and concurrency\n*   Automatic failover regions for [Vercel Functions](https://vercel.com/docs/functions/configuring-functions/region#automatic-failover)\n*   Multi-region support for [Vercel Functions](https://vercel.com/docs/functions/configuring-functions/region#set-multiple-regions)\n*   Automatic concurrency scaling up to 100,000 for [Vercel Functions](https://vercel.com/docs/functions/runtimes#automatic-concurrency-scaling)\n\nDX Platform\n\nData and infrastructure security is paramount in the Enterprise plan with advanced features including:\n\nDX Platform\n\n[Conformance](https://vercel.com/docs/workflow-collaboration/conformance) is a suite of tools designed for static code analysis. Conformance ensures high standards in performance, security, and code health, which are integral for enterprise projects. Code Owners enables you to define users or teams that are responsible for directories and files in your codebase.\n\nDX Platform\n\nGain actionable insights with enhanced observability & logging.\n\nManaged Infrastructure\n\n*   Enhanced [Observability and Logging](https://vercel.com/docs/observability)\n*   [Audit Logs](https://vercel.com/docs/observability/audit-log)\n*   Increased retention with [Speed Insights](https://vercel.com/docs/speed-insights/limits-and-pricing)\n*   [Custom Events](https://vercel.com/docs/analytics/custom-events) tracking and more filters, such as UTM Parameters\n*   3 days of [Runtime Logs](https://vercel.com/docs/observability/runtime-logs) and increased row data\n*   Increased retention with [Vercel Monitoring](https://vercel.com/docs/observability/monitoring)\n\nDX Platform\n\n*   [OpenTelemetry](https://vercel.com/docs/observability/otel-overview/quickstart) support\n*   Configurable [log drains](https://vercel.com/docs/observability/log-drains/configure-log-drains)\n*   Integrations, like [Datadog](https://vercel.com/integrations/datadog), [New Relic](https://vercel.com/integrations/newrelic), and [Middleware](https://vercel.com/integrations/middleware)\n\nThe plan offers scalability with custom limitations and allows you to tailor your usage and resources to your needs with:\n\nManaged Infrastructure\n\n*   Customizable and scalable amount of MIUs\n*   Custom [Image Optimization](https://vercel.com/docs/image-optimization) source images\n*   Greater [Remote Cache](https://vercel.com/docs/monorepos/remote-caching) artifact uploads\n*   Serverless Functions memory [configurable](https://vercel.com/docs/functions/runtimes#size-limits) to 3009 MB\n*   Configurable [Serverless Function](https://vercel.com/docs/functions/serverless-functions) up to a [maximum duration](https://vercel.com/docs/functions/serverless-functions/runtimes#max-duration) of 900-seconds\n\nDX Platform\n\nThe Enterprise plan allows for streamlined team collaboration and offers robust support with:\n\nDX Platform\n\n*   [Edit Mode](https://vercel.com/docs/workflow-collaboration/edit-mode)\n*   [Role-Based Access Control (RBAC)](https://vercel.com/docs/accounts/team-members-and-roles/access-roles)\n*   [Vercel Support Center](https://vercel.com/docs/dashboard-features/support-center)\n*   A dedicated Success Manager\n*   [SLAs](https://vercel.com/legal/sla), including [response time](https://vercel.com/legal/support-terms)\n*   Audits for Next.js\n*   Launch Pad services / professional services",
  "title": "Vercel Enterprise Plan",
  "description": "Learn about the Enterprise plan for Vercel, including features, pricing, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/protection-bypass-automation",
  "markdown": "# Protection Bypass for Automation\n\nThe Protection Bypass for Automation feature lets you bypass Vercel Deployment Protection ([Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection), [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), and [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips)) for automated tooling (e.g. E2E testing).\n\nThe generated secret can be used to bypass deployment protection on all deployments in a project until it is revoked. This value will also be automatically added to your deployments as a [system environment variable](https://vercel.com/docs/projects/environment-variables/system-environment-variables#:~:text=VERCEL_AUTOMATION_BYPASS_SECRET) `VERCEL_AUTOMATION_BYPASS_SECRET`.\n\nThe environment variable value is set when a deployment is built, so regenerating the secret in the project settings will invalidate previous deployments. You will need to redeploy your app if you update the secret in order to use the new value.\n\n![Protection Bypass for Automation option](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698927041%2Ffront%2Fdocs%2Fsecurity%2Fenable-bypass-protection-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Protection Bypass for Automation option](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698927041%2Ffront%2Fdocs%2Fsecurity%2Fenable-bypass-protection-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nProtection Bypass for Automation option\n\nTo use Protection Bypass for Automation, set an HTTP header (or query parameter) named `x-vercel-protection-bypass` with the value of the generated secret for the project.\n\nUsing a header is strongly recommended, however in cases where your automation tool is unable to specify a header, it is also possible to set the same name and value as a query parameter.\n\nx-vercel-protection-bypass: your-generated-secret (required)\n\nTo bypass authorization on follow-up requests (e.g. for in-browser testing) you can set an additional header or query parameter named `x-vercel-set-bypass-cookie` with the value `true`.\n\nThis will set the authorization bypass as a cookie using a redirect with a `Set-Cookie` header.\n\nx-vercel-set-bypass-cookie: true (optional)\n\nIf you are accessing the deployment through a non-direct way (e.g. in an `iframe`) then you may need to further configure `x-vercel-set-bypass-cookie` by setting the value to `samesitenone`.\n\nThis will set `SameSite` to `None` on the `Set-Cookie` header, by default `SameSite` is set to `Lax`.\n\nx-vercel-set-bypass-cookie: samesitenone (optional)",
  "title": "Protection Bypass for Automation",
  "description": "Learn how to bypass Vercel Deployment Protection for automated tooling (e.g. E2E testing).",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/plans/pro",
  "markdown": "# Vercel Pro Plan\n\nWhen you upgrade to the Pro plan, you can add team members to your account. Each additional team member incurs a $20 per user / month charge. Seats are defined as the number of accounts associated with your Vercel team. You can add or remove team members at any time.\n\nVercel's Managed Infrastructure offers zero-config deployments, scalability, intelligent edge caching, and observability tools. The Pro plan includes:\n\nTo learn more about Managed Infrastructure on the Pro plan, and how to understand your invoices, see [understanding my invoice.](https://vercel.com/docs/pricing/understanding-my-invoice)\n\nThe following table lists the pricing for each resource in Managed Infrastructure. Resources that depend on the region of your Vercel project are priced differently based on the cost of resources in that region.\n\nUse the dropdown to select the regional prices.\n\nSee the tables above for more information on the available add-ons. To enable any of the Pro plan add-ons:\n\n1.  Visit the Vercel dashboard\n2.  Select the Settings tab and go to Billing\n3.  In the Add-Ons section, find the add-on you'd like to add. Switch the toggle to Enabled and configure the add-on as necessary\n\nIn addition to all features from the [Hobby plan](https://vercel.com/docs/accounts/plans/hobby), the Pro plan includes the following Vercel platform features:\n\n| Feature | Hobby | Pro |\n| --- | --- | --- |\n| Edge Middleware Invocations | Up to 1,000,000 Invocations | 1,000,000 Invocations included |\n| Data Cache Reads | Up to 50,000 Reads | 100,000 included |\n| Data Cache Writes | Up to 5,000 | 10,000 included |\n| Edge Requests | Up to 1,000,000 requests | 10,000,000 requests included |\n| Projects | 200 | Unlimited |\n| Serverless Function maximum duration | 10s (default) - [configurable up to 60s](https://vercel.com/docs/functions/configuring-functions/duration) | 15s (default) - [configurable up to 300s](https://vercel.com/docs/functions/configuring-functions/duration) |\n| Build execution minutes | 6,000 | 24,000 |\n| Team collaboration features | \\-  | Yes |\n| Domains per project | 50  | Unlimited |\n| Deployments per day | 100 | 6,000 |\n| Analytics | \\-  | Limited |\n| Email support | \\-  | Yes |\n| [Vercel AI Playground models](https://sdk.vercel.ai/) | Llama, GPT 3.5, Mixtral | GPT-4, Claude, Mistral Large, Code Llama |\n| [RBAC](https://vercel.com/docs/accounts/team-members-and-roles/access-roles) available | N/A | [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role), [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role), [Billing](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#billing-role) |\n| [Comments](https://vercel.com/docs/workflow-collaboration/comments) | Available | Available for team collaboration |\n| Log Drains | \\-  | [Configurable](https://vercel.com/docs/observability/log-drains/configure-log-drains) (not on a trial) |\n| Spend Management | N/A | [Configurable](https://vercel.com/docs/pricing/spend-management) |\n| [Vercel Toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar) | Available for certain features | Available |\n| [Storage](https://vercel.com/docs/storage) | KV, Postgres, Blob (Beta) | KV, Postgres, Blob (Beta) |\n| [Activity Logs](https://vercel.com/docs/observability/activity-log) | Available | Available |\n| [Runtime Logs](https://vercel.com/docs/observability/runtime-logs) | 1 hour of logs and up to 4000 rows of log data | 1 day of logs and up to 100,000 rows of log data |\n| [DDoS Mitigation](https://vercel.com/docs/security/ddos-mitigation) | On by default. Optional [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode). | On by default. Optional [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode). |\n| [Vercel WAF IP Blocking](https://vercel.com/docs/security/vercel-waf/ip-blocking) | Up to 10 | Up to 100 |\n| [Vercel WAF Custom Rules](https://vercel.com/docs/security/vercel-waf/custom-rules) | Up to 3 | Up to 40 |\n| Deployment Protection | [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication) | [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) (Add-on), [Sharable Links](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/sharable-links) |\n\nYou can take advantage of Vercel's Pro trial to explore [Pro features](https://vercel.com/docs/accounts/plans/pro) for free during the trial period, with some [limitations](https://vercel.com/docs/accounts/plans/pro/trials#trial-limitations). For a side-by-side comparison of plan features, refer to the [plans comparison table](https://vercel.com/docs/accounts/plans#plans-comparison).\n\n### Get started with Vercel Pro for free\n\nExperience the power of Pro features during your trial. Unlock unlimited Serverless Function requests, 1000 GB-hours of execution, boosted application bandwidth, and enjoy free access to Speed Insights throughout your trial period.\n\nTo upgrade from a Hobby plan:\n\n1.  Go to your [dashboard](https://vercel.com/dashboard). If you're upgrading a team, make sure to select the team you want to upgrade\n2.  Go to the Settings tab and select Billing\n3.  Under Plan, if your team is eligible for an upgrade, you can click the Upgrade button. Or, you may need to create or select a team to upgrade. In that case, you can click Create a Team or Upgrade a Team\n4.  Optionally, add team members. Each member incurs a $20 per user / month charge\n5.  Enter your card details\n6.  Click Confirm and Upgrade\n\nIf you are on a Pro plan trial, you'll need to add a credit card to your account to continue on a Pro plan. See [Upgrade to a paid Pro plan](https://vercel.com/docs/accounts/plans/pro/trials#upgrade-to-a-paid-pro-plan) for more information.\n\nIf you are on an expired Pro trial or would like to end your paid plan, you can [downgrade to Hobby](https://vercel.com/docs/accounts/plans/hobby#downgrading-to-hobby).\n\n### Interested in the Enterprise plan?\n\nMaximize your enterprise with Vercel's tailored plan. Experience high performance, advanced security, and dedicated support. Access empowering features",
  "title": "Vercel Pro Plan",
  "description": "Learn about the Pro plan, which is tailored for professional developers, freelancers, and small businesses. It offers more resources and advanced features at a monthly subscription cost.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/secure-backend-access/oidc/reference",
  "markdown": "# OIDC Federation Reference\n\nVercel provides helper libraries to make it easier to exchange the OIDC token for short-lived credentials with your cloud provider. They are available from the [@vercel/functions package on npmjs.com](https://www.npmjs.com/package/@vercel/functions).\n\n`awsCredentialsProvider()` is a helper function that returns a function that can be used as the `credentials` property of the AWS SDK client. It exchanges the OIDC token for short-lived credentials with AWS by calling the `AssumeRoleWithWebIdentity` operation.\n\n```\nimport { awsCredentialsProvider } from '@vercel/functions/oidc';\nimport * as s3 from '@aws-sdk/client-s3';\n \nconst s3client = new s3.S3Client({\n  region: proces.env.AWS_REGION!,\n  credentials: awsCredentialsProvider({\n    roleArn: process.env.AWS_ROLE_ARN!,\n  }),\n});\n```\n\n`getVercelOidcToken()` returns the OIDC token from the `VERCEL_OIDC_TOKEN` environment variable in builds and local development environments or the `x-vercel-oidc-token` in serverless functions.\n\n```\nimport { getVercelOidcToken } from '@vercel/functions/oidc';\nimport { ClientAssertionCredential } from '@azure/identity';\nimport { CosmosClient } from '@azure/cosmos';\n \nconst credentialsProvider = new ClientAssertionCredential(\n  process.env.AZURE_TENANT_ID,\n  process.env.AZURE_CLIENT_ID,\n  getVercelOidcToken,\n);\n \nconst cosmosClient = new CosmosClient({\n  endpoint: process.env.COSMOS_DB_ENDPOINT,\n  aadCredentials: credentialsProvider,\n});\n```\n\nIn the serverless function environments, you cannot execute the `getVercelOidcToken()` function directly at the module level because the token is only available in the `Request` object as the `x-vercel-oidc-token` header.\n\nIf you change the name of your team or project, the claims within the OIDC token will reflect the new names. This can affect your trust and access control policies. You should consider this when you plan to rename your team or project and update your policies accordingly.\n\nAWS roles can support multiple conditions so you can allow access to both the old and new team and project names. Here is an example:\n\n```\n{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Effect\": \"Allow\",\n      \"Principal\": {\n        \"Federated\": \"arn:aws:iam::[YOUR AWS ACCOUNT ID]:oidc-provider/oidc.vercel.com\"\n      },\n      \"Action\": \"sts:AssumeRoleWithWebIdentity\",\n      \"Condition\": {\n        \"StringEquals\": {\n          \"oidc.vercel.com:aud\": [\n            \"https://vercel.com/[OLD_TEAM_SLUG]\",\n            \"https://vercel.com/[NEW_TEAM_SLUG]\"\n          ],\n          \"oidc.vercel.com:sub\": [\n            \"owner:[OLD_TEAM_SLUG]:project:[OLD_PROJECT_NAME]:environment:production\",\n            \"owner:[NEW_TEAM_SLUG]:project:[NEW_PROJECT_NAME]:environment:production\"\n          ]\n        }\n      }\n    }\n  ]\n}\n```\n\nYou can validate OpenID Connect tokens by using the issuer's OpenID Connect Discovery Well Known location, which is `https://oidc.vercel.com/.well-known/openid-configuration` for Vercel. There, you can find a property called `jwks_uri` which provides a URI to Vercel's public JSON Web Keys (JWKs). You can use the corresponding JWK identified by `kid` to verify tokens that are signed with the same `kid` in the token's header.\n\n```\n// Header:\n{\n  \"typ\": \"JWT\",\n  \"alg\": \"RS256\",\n  \"kid\": \"example-key-id\"\n}\n// Claims:\n{\n  \"iss\": \"https://vercel.com\",\n  \"aud\": \"https://vercel.com/acme\",\n  \"sub\": \"owner:acme:project:acme_website:environment:production\",\n  \"iat\": 1718885593,\n  \"nfb\": 1718885593,\n  \"exp\": 1718889193,\n  \"owner\": \"acme\",\n  \"owner_id\": \"team_7Gw5ZMzpQA8h90F832KGp7nwbuh3\",\n  \"project\": \"acme_website\",\n  \"project_id\": \"prj_7Gw5ZMBpQA8h9GF832KGp7nwbuh3\",\n  \"environment\": \"production\"\n}\n```\n\nThis is a list of standard tokens that you can expect from an OpenID Connect JWT:\n\n| Claim | Kind | Description |\n| --- | --- | --- |\n| `iss` | Issuer | The issuer of the token is set to `https://vercel.com` |\n| `aud` | Audience | The audience is set to `https://vercel.com/[TEAM_SLUG]` |\n| `sub` | Subject | The subject is set to `owner:[TEAM_SLUG]:project:[PROJECT_NAME]:environment:[ENVIRONMENT]` |\n| `iat` | Issued at | The time the token was created |\n| `nbf` | Not before | The token is not valid before this time |\n| `exp` | Expires at | The time the token has or will expire. `preview` and `production` tokens expire one hour after creation, `development` tokens expire in 12 hours. |\n\nThese claims provide more granular access control:\n\n| Claim | Description |\n| --- | --- |\n| `owner` | The team slug, e.g. `acme` |\n| `owner_id` | The team ID, e.g. `team_7Gw5ZMzpQA8h90F832KGp7nwbuh3` |\n| `project` | The project name, e.g. `acme_website` |\n| `project_id` | The project ID, e.g. `prj_7Gw5ZMBpQA8h9GF832KGp7nwbuh3` |\n| `environment` | The environment: `development` or `preview` or `production` |\n\nThese headers are standard to the JWT tokens:\n\n| Header | Kind | Description |\n| --- | --- | --- |\n| `alg` | Algorithm | The algorithm used by the issuer |\n| `kid` | Key ID | The identifier of the key used to sign the token |\n| `typ` | Type | The type of token, this is set to `jwt`. |",
  "title": "OIDC Federation Reference",
  "description": "Review helper libraries to help you connect with your backend and understand the structure of an OIDC token.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/secure-backend-access/oidc",
  "markdown": "# OpenID Connect (OIDC) Federation\n\nWhen you create long-lived, persistent credentials in your backend to allow access from your web applications, you increase the security risk of these credentials being leaked and hacked. You can mitigate this risk with OpenID Connect (OIDC) federation which issues short-lived, non-persistent tokens that are signed by Vercel's OIDC Identity Provider (IdP).\n\nCloud providers such as Amazon Web Services, Google Cloud Platform, and Microsoft Azure can trust these tokens and exchange them for short-lived credentials. This way, you can avoid storing long-lived credentials as Vercel environment variables.\n\n*   No persisted credentials: There is no need to copy and paste long-lived access tokens from your cloud provider into your Vercel environment variables. Instead, you can exchange the OIDC token for short-lived access tokens with your trusted cloud provider\n*   Granular access control: You can configure your cloud providers to grant different permissions depending on project or environment. For instance, you can separate your development, preview and production environments on your cloud provider and only grant Vercel issued OIDC tokens access to the necessary environment(s)\n*   Local development access: You can configure your cloud provider to trust local development environments so that long-lived credentials do not need to be stored locally\n\nIn order to allow your deployment to connect with your backend securely, start by enabling OIDC federation for your Vercel project:\n\n*   Open your project from the Vercel dashboard\n*   Select the Settings tab\n*   From the Security section, enable the Secure backend access with OIDC federation toggle\n\nThen, configure your backend to trust Vercel's OIDC Identity Provider and connect to it from your Vercel deployment:\n\nWhen you run a build, Vercel automatically generates a new token and assigns it to the `VERCEL_OIDC_TOKEN` environment variable. You can then exchange the token for short-lived access tokens with your cloud provider.\n\nWhen your application invokes a serverless function, the OIDC token is set to the `x-vercel-oidc-token` header on the function's `Request` object.\n\nVercel does not generate a fresh OIDC token for each execution but caches the token for a maximum of 45 minutes. While the token has a Time to Live (TTL) of 60 minutes, Vercel provides the difference to ensure the token doesn't expire within the lifecycle of a function's maximum execution duration.\n\nYou can download the `VERCEL_OIDC_TOKEN` straight to your local development environment using the CLI command `vercel env pull`.\n\nThis writes the `VERCEL_OIDC_TOKEN` environment variable and other environment variables targeted to `development` to the `.env.local` file of your project folder. See the [CLI docs](https://vercel.com/docs/cli/env) for more information.",
  "title": "OpenID Connect (OIDC) Federation",
  "description": "Secure the access to your backend using OIDC Federation to enable auto-generated, short-lived, and non-persistent credentials.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/deployment-protection-exceptions",
  "markdown": "# Deployment Protection Exception\n\nYou can use [Deployment Protection Exceptions](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/deployment-protection-exceptions#adding-a-deployment-protection-exception) to disable Deployment Protection (including [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection), and [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips)) for a list of preview domains.\n\nWhen you add a domain to Deployment Protection Exceptions, it will automatically become publicly accessible and will no longer be covered by Deployment Protection features. When you remove a domain from Deployment Protection Exceptions, the domain becomes protected again with the project's Deployment Protection settings.\n\n![Deployment Protection Exceptions.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933546%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-exception-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Deployment Protection Exceptions.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933545%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-exception-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDeployment Protection Exceptions.\n\nDeployment Protection Exceptions is designed for Preview Deployment domains, if you wish to make a Production Deployment domain public, see [Configuring Deployment Protection](https://vercel.com/docs/security/deployment-protection#configuring-deployment-protection).\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Password Protection for\n    2.  Go to the Settings tab, and then to Deployment Protection\n2.  From the Deployment Protection Exceptions section, select Add Domain:\n    \n    ![Add Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-exception-no-domain-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Add Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-exception-no-domain-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Add Deployment Protection Exception.\n    \n3.  From the Unprotect Domain modal:\n    \n    1.  Enter the domain that you wish to unprotect in the input\n    2.  Select Continue\n    \n    ![Add Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603556%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-protection-exceptions-add-domain-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Add Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603555%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-protection-exceptions-add-domain-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Add Deployment Protection Exception.\n    \n4.  From the Unprotect Domain modal:\n    \n    1.  Confirm the domain by entering it again in the first input\n    2.  Enter `unprotect my domain` in the second input\n    3.  Select Confirm\n    \n    All your existing and future deployments for that domain will be unprotected.\n    \n    ![Add Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603556%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-protection-exceptions-confirm-add-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Add Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603555%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-protection-exceptions-confirm-add-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Add Deployment Protection Exception.\n    \n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Password Protection for\n    2.  Go to the Settings tab, and then to Deployment Protection\n2.  From the Deployment Protection Exceptions section:\n    \n    1.  From the domain row in the Unprotected Domains table\n    2.  Select the dot menu at the end of the row\n    3.  From the context menu, select Remove\n    \n    ![Removing Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933835%2Ffront%2Fdocs%2Fsecurity%2Fremove-deployment-exception-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Removing Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933836%2Ffront%2Fdocs%2Fsecurity%2Fremove-deployment-exception-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Removing Deployment Protection Exception.\n    \n3.  From the Reprotect Domain modal:\n    \n    1.  In the modal, type the domain in the first input\n    2.  Type `reprotect my domain` in the second input\n    3.  Select Confirm\n    \n    All your existing and future deployments for that domain will be protected.\n    \n    ![Removing Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603556%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-protection-exceptions-remove-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Removing Deployment Protection Exception.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603555%2Ffront%2Fdocs%2Fsecurity%2Fdeployment-protection-exceptions-remove-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Removing Deployment Protection Exception.\n    \n\nYou can view and manage all the existing Deployment Protection Exceptions for your team in the following way\n\n1.  From your [dashboard](https://vercel.com/dashboard) go to the Settings tab\n2.  Select Deployment Protection and then choose the Access tab\n3.  Click the All Access button and select `Unprotected Previews`\n\n![Dashboard > Settings > Deployment Protection > Access](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fdeployment-protection-exceptions-list.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Dashboard > Settings > Deployment Protection > Access](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fdeployment-protection-exceptions-list-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDashboard > Settings > Deployment Protection > Access",
  "title": "Deployment Protection Exception",
  "description": "Learn how to disable Deployment Protection for a list of preview domains.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members",
  "markdown": "# Managing Team Members\n\nAs the team owner, you have the ability to manage your team's composition and the roles of its members, controlling the actions they can perform. These role assignments, governed by Role-Based Access Control (RBAC) permissions, define the access level each member has across all projects within the team's scope. Details on the various roles and the permissions they entail can be found in the [Access Roles section](https://vercel.com/docs/accounts/team-members-and-roles/access-roles).\n\n1.  From the dashboard, select your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n    \n2.  Select the Settings tab and go to the Members section\n    \n3.  Enter the email address of the person you would like to invite, assign their [role](https://vercel.com/docs/accounts/team-members-and-roles/access-roles), and select the Invite button. You can invite multiple people at once using the Add more button:\n    \n    ![Inviting new members to your team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603284%2Ffront%2Fdocs%2Frbac%2Frbac-settings-members-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Inviting new members to your team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603283%2Ffront%2Fdocs%2Frbac%2Frbac-settings-members-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Inviting new members to your team.\n    \n4.  By default only the team level roles are visible in the dropdown. If you choose to assign the [contributor role](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#contributor-role) to the new member, a second dropdown will be accessible by selecting the Assign Project Roles button. You can then select the project, and their role on that project you want to assign the contributor to:\n    \n    ![Assigning a contributor role to a new member.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603556%2Ffront%2Fdocs%2Frbac%2Frbac-settings-assign-contributor-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Assigning a contributor role to a new member.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694603555%2Ffront%2Fdocs%2Frbac%2Frbac-settings-assign-contributor-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Assigning a contributor role to a new member.\n    \n5.  You can view all pending invites in the Pending Invitations tab. Once a member has accepted an invitation to the team, they'll be displayed as team members with their assigned role\n    \n6.  Once a member has been accepted onto the team, you can edit their role using the Manage Role button located alongside their assigned role in the Team Members tab.\n    \n    ![Changing a member's role.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695042808%2Ffront%2Fdocs%2Frbac%2Fproject-rbac-settings-manage-team-role-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Changing a member's role.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695042839%2Ffront%2Fdocs%2Frbac%2Fproject-rbac-settings-manage-team-role-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Changing a member's role.\n    \n\nTeam owners can also share an invite link with others to allow them to join the team without needing to be invited individually. To generate an invite link:\n\n1.  Ensure you have selected your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Select the Settings tab and go to the Members section\n3.  Select the Invite Link button and use the icon to copy the invite link:\n    \n    ![Adding members to team using the Invite Link.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695042612%2Ffront%2Fdocs%2Frbac%2Fproject-rbac-invite-link-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Adding members to team using the Invite Link.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695042588%2Ffront%2Fdocs%2Frbac%2Fproject-rbac-invite-link-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Adding members to team using the Invite Link.\n    \n4.  Optionally, you can select Reset Invite Link to generate a new link. After doing this, all other invite links will become invalid.\n5.  Share the link with others. Those who join from an invite link will be given the lowest permissions for that team. For the Enterprise plan, they will be assigned the [Viewer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#viewer-role) role. For the Pro plan, they will be assigned the [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) role.\n\nIf you are interested in joining one of the [suggested teams](https://vercel.com/docs/accounts/create-a-team#suggested-teams), then you can request access to join.\n\nThe team owner can accept, decline or change role permissions for your request from the Pending Invitations list. You can select the Leave Team button accessible through the ellipsis next to your team role to [Leave a Team](https://vercel.com/docs/accounts/create-a-team#leaving-the-team).\n\nTeam [owners](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) can assign project roles to team members with the [contributor role](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#contributor-role), enabling control over their project-related actions. You can assign these roles during team invitations or to existing members.\n\n1.  Ensure you have selected your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Select the project you want to assign a member to\n3.  Select Access from the left navigation, then inside the Project Access section select the team members email from the dropdown\n4.  Select the role you want to assign to the member on the project\n    \n    ![Assigning a project role to a member.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695043112%2Ffront%2Fdocs%2Frbac%2Frbac-project-settings-assign-role-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Assigning a project role to a member.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695043106%2Ffront%2Fdocs%2Frbac%2Frbac-project-settings-assign-role-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Assigning a project role to a member.\n    \n\nTeam owners can delete members from a team. You can also remove yourself from a team.\n\n1.  Ensure you have selected your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Select the Settings tab and go to the Members section\n3.  Next to the name of the person you'd like to remove, select the ellipses (…) and then select Remove from Team from the menu\n\nVercel is also SCIM compliant. This means that if you are using SAML SSO, de-provisioning from the third-party provider will also off board the member from Vercel.",
  "title": "Managing Team Members",
  "description": "Learn how to manage team members on Vercel, and how to assign roles to each member with role-based access control (RBAC).",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/team-members-and-roles/access-roles",
  "markdown": "# Access Roles\n\nVercel distinguishes between different roles to help manage team members' access levels and permissions. These roles are categorized into two groups: team level and project level roles. Team level roles are applicable to the entire team, affecting all projects within that team. Project level roles are confined to individual projects.\n\n![Team and project roles relationship diagram](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694093182%2Ffront%2Fdocs%2Frbac%2Fproject-rbac-diagram-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Team and project roles relationship diagram](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694093183%2Ffront%2Fdocs%2Frbac%2Fproject-rbac-diagram-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nTeam and project roles relationship diagram\n\nThe two groups are further divided into specific roles, each with its own set of permissions and responsibilities. These roles are designed to provide a balance between autonomy and security, ensuring that team members have the access they need to perform their tasks while maintaining the integrity of the team and its resources.\n\n*   [Team level roles](#team-level-roles): Users who have access to all projects within a team\n    *   [Owner](#owner-role)\n    *   [Member](#member-role)\n    *   [Developer](#developer-role)\n    *   [Billing](#billing-role)\n    *   [Viewer](#viewer-role)\n    *   [Contributor](#contributor-role)\n*   [Project level roles](#project-level-roles): Users who have restricted access at the project level. Only contributors can have configurable project roles\n    *   [Project Administrator](#project-administrators)\n    *   [Project Developer](#project-developer)\n    *   [Project Viewer](#project-viewer)\n\nTeam level roles are designed to provide a broad level of control and access to the team as a whole. These roles are assigned to individuals and apply to all projects within the team, ensuring centralized control and access while upholding the team's security and integrity.\n\n*   [Owner](#owner-role) and [Member](#member-role): Have the highest level of control. They can manage, modify, and oversee the team's settings, and all projects\n*   [Developer](#developer-role): Can deploy to projects and manage environment settings but lacks the comprehensive team oversight that an owner or member possesses\n*   [Billing](#billing-role): Primarily responsible for the team's financial management and oversight. The billing role also gets read-only access to every project\n*   [Viewer](#viewer-role): Has read-only access to the team's resources and projects\n*   [Contributor](#contributor-role): A unique role that can be configured to have any of the project level roles or none. If a contributor has no assigned project role, they won't be able to access that specific project. Only contributors can have configurable project roles\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nThe owner role is the highest level of authority within a team, possessing comprehensive access and control over all team and [project settings](https://vercel.com/docs/projects/overview#project-settings).\n\nKey responsibilities\n\n*   Oversee and manage all team resources and projects\n*   Modify team settings, including [billing](#billing-role) and [member](#member-role) roles\n*   Grant or revoke access to team projects and determine project-specific roles for members\n*   Access and modify all projects, including their settings and deployments\n\nAccess and permissions\n\nOwners have unrestricted access to all team functionalities, can modify all settings, and change other members' roles.\n\nTeam owners inherently act as [project administrators](#project-administrators) for every project within the team, ensuring that they can manage individual projects' settings and deployments.\n\nAdditional information\n\nTeams can have more than one owner. For continuity, we recommend that at least two individuals have owner permissions. Additional owners can be added without any impact on existing ownership. Keep in mind that role changes, including assignment and revocation of team member roles, are an exclusive capability of those with the owner role.\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nMembers play a pivotal role in team operations and project management.\n\nKey responsibilities\n\n*   Create [deployments](https://vercel.com/docs/deployments/overview) and manage projects\n*   Set up [integrations](https://vercel.com/docs/integrations) and manage project-specific [domains](https://vercel.com/docs/projects/domains)\n*   Handle [deploy hooks](https://vercel.com/docs/deployments/deploy-hooks) and adjust [Serverless Function](https://vercel.com/docs/functions/serverless-functions) settings\n*   Administer security settings for their assigned projects\n\nAccess and permissions\n\nCertain team-level settings remain exclusive to owners. Members cannot edit critical team settings like billing information or [invite new users to the team](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members), this keeps a clear boundary between the responsibilities of members and owners.\n\nAdditional information\n\nTo assign the member role to a team member, refer to our [Adding team members and assigning roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#adding-team-members-and-assigning-roles) documentation.\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nCentral to the team's operational functionality, developers ensure a balance between project autonomy and the safeguarding of essential settings.\n\nKey responsibilities\n\n*   Create [deployments](https://vercel.com/docs/deployments/overview) and manage projects\n*   Control [environment variables](https://vercel.com/docs/projects/environment-variables), particularly for preview and development environments\n*   Manage project [domains](https://vercel.com/docs/projects/domains)\n*   Create a [production build](https://vercel.com/docs/deployments/environments#production) by committing to the `main` branch of a project. Note that developers can create preview branches and [preview deployments](https://vercel.com/docs/deployments/preview-deployments) by committing to any branch other than `main`\n\nAccess and permissions\n\nWhile Developers have significant access to project functionalities, they are restricted from altering production environment variables and team-specific settings. They are also unable to invite new team members. Note that the capability to become a project administrator is reserved for the contributor role. Those with the developer role cannot be assigned [project level roles](#project-level-roles).\n\nDevelopers can deploy to production through merging to the production branch for Git projects.\n\nAdditional information\n\nTo assign the developer role to a team member, refer to our [Adding team members and assigning roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#adding-team-members-and-assigning-roles) documentation.\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nContributors offer flexibility in access control at the project level. To limit team members' access at the project level, they must first be assigned the contributor role. Only after being assigned the contributor role can they receive project-level roles. Contributors have no access to projects unless explicitly assigned.\n\nContributors may have project-specific role assignments, with the potential for comprehensive control over assigned projects only.\n\nKey responsibilities\n\n*   Typically assigned to specific projects based on expertise and needs\n*   Initiate [deployments](https://vercel.com/docs/deployments/overview) - _Depending on their assigned [project role](#project-level-roles)_\n*   Manage [domains](https://vercel.com/docs/projects/domains) and set up [integrations](https://vercel.com/docs/integrations) for projects if they have the [project administrator](#project-administrators) role assigned\n*   Adjust [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and oversee [deploy hooks](https://vercel.com/docs/deployments/deploy-hooks)\n\nAccess and permissions\n\nContributors can be assigned to specific projects and have the same permissions as [project administrators](#project-administrators), [project developers](#project-developer), or [project viewers](#project-viewer). They can also be assigned no project role, which means they won't be able to access that specific project.\n\nSee the [Project level roles](#project-level-roles) section for more information on project roles.\n\nAdditional information\n\nTo assign the contributor role to a team member, refer to our [Adding team members and assigning roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#adding-team-members-and-assigning-roles) documentation.\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nSpecialized for financial operations, the billing role oversees financial operations and team resources management.\n\nKey responsibilities\n\n*   Oversee and manage the team's billing information\n*   Review and manage team and project costs\n*   Handle the team's payment methods\n\nAccess and permissions\n\nThe billing role is designed to provide financial oversight and management, with access to the team's billing information and payment methods. This role also has read-only access to all projects within the team.\n\nAdditional information\n\nFor [Pro teams](https://vercel.com/docs/accounts/plans/pro), the billing role can be assigned at no extra cost but is limited to one member. For [Enterprise teams](https://vercel.com/docs/accounts/plans/enterprise), the billing role can be assigned to multiple members.\n\nTo assign the billing role to a team member, refer to our [Adding team members and assigning roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#adding-team-members-and-assigning-roles) documentation.\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nAn observational role, viewers are informed on team activities without direct intervention.\n\nKey responsibilities\n\n*   Monitor and inspect all team [projects](https://vercel.com/docs/projects/overview)\n*   Review shared team resources\n*   Observe team settings and configurations\n\nAccess and permissions\n\nViewers have broad viewing privileges but are restricted from making changes.\n\nAdditional information\n\nTo assign the viewer role to a team member, refer to our [Adding team members and assigning roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#adding-team-members-and-assigning-roles) documentation.\n\nSee the [Team Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) for a complete list of roles and their permissions.\n\nProject level roles provide fine-grained control and access to specific projects within a team. These roles are assigned to individuals and are restricted to the projects they're assigned to, allowing for precise access control while preserving the overarching security and integrity of the team.\n\n*   [Project Administrator](#project-administrators): Team owners and members inherently act as project administrators for every project. Project administrators can create production deployments, manage all [project settings](https://vercel.com/docs/projects/overview#project-settings), and manage production [environment variables](https://vercel.com/docs/projects/environment-variables)\n*   [Project Developer](#project-developer): Can deploy to the project and manage its environment settings. Team developers inherently act as project developers\n*   [Project Viewer](#project-viewer): Has read-only access to a specific project. Both team billing and viewer members automatically act as project viewers for every project\n\nSee the [Project Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/project-level-roles) for a complete list of roles and their permissions.\n\nProject administrators hold significant authority at the project level, operating as the project-level counterparts to team [members](#owner-role) and [owners](#owner-role).\n\nKey responsibilities\n\nAccess and permissions\n\nTheir authority doesn't extend across all [projects](https://vercel.com/docs/projects/overview) within the team. Project administrators are restricted to the projects they're assigned to.\n\nAdditional information\n\nTo assign the project administrator role to a team member, refer to our [Assigning project roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#assigning-project-roles) documentation.\n\nSee the [Project Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/project-level-roles) for a complete list of roles and their permissions.\n\nProject developers play a key role in working on projects, mirroring the functions of [team developers](#developer-role), but with a narrowed project focus.\n\nKey responsibilities\n\nAdditional information\n\nTo assign the project developer role to a team member, refer to our [Assigning project roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#assigning-project-roles) documentation.\n\nSee the [Project Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/project-level-roles) for a complete list of roles and their permissions.\n\nAdopting an observational role within the project scope, they ensure transparency and understanding across projects.\n\nKey responsibilities\n\n*   View and inspect all [deployments](https://vercel.com/docs/deployments/overview)\n*   Review [project settings](https://vercel.com/docs/projects/overview#project-settings)\n*   Examine [environment variables](https://vercel.com/docs/projects/environment-variables) across all environments and view project [domains](https://vercel.com/docs/projects/domains)\n\nAccess and permissions\n\nThey have a broad view but can't actively make changes.\n\nAdditional information\n\nTo assign the project viewer role to a team member, refer to our [Assigning project roles](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#assigning-project-roles) documentation.\n\nSee the [Project Level Roles Reference](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/project-level-roles) for a complete list of roles and their permissions.",
  "title": "Access Roles",
  "description": "Learn about the different roles available for team members on a Vercel account.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/certs",
  "markdown": "# vercel certs\n\nThe `vercel certs` command is used to manage certificates for domains, providing functionality to list, issue, and remove them. Vercel manages certificates for domains automatically.\n\nUsing the `vercel certs` command to list all certificates under the current scope.\n\n```\nvercel certs issue [domain1, domain2, domain3]\n```\n\nUsing the `vercel certs` command to issue certificates for multiple domains.\n\n```\nvercel certs rm [certificate-id]\n```\n\nUsing the `vercel certs` command to remove a certificate by ID.\n\nThese are options that only apply to the `vercel certs` command.\n\nThe `--challenge-only` option can be used to only show the challenges needed to issue a certificate.\n\n```\nvercel certs issue foo.com --challenge-only\n```\n\nUsing the `vercel certs` command with the `--challenge-only` option.\n\nThe `--limit` option can be used to specify the maximum number of certs returned when using `ls`. The default value is `20` and the maximum is `100`.\n\n```\nvercel certs ls --limit 100\n```\n\nUsing the `vercel certs ls` command with the `--limit` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel certs` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel certs",
  "description": "Learn how to manage certificates for your domains using the vercel certs CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/deploy-hooks",
  "markdown": "# Creating & Triggering Deploy Hooks\n\nDeploy Hooks allow you to create URLs that accept HTTP `POST` requests in order to trigger deployments and re-run the [Build Step](https://vercel.com/docs/deployments/configure-a-build). These URLs are uniquely linked to your project, repository, and branch, so there is no need to use any authentication mechanism or provide any payload to the `POST` request.\n\nThis feature allows you to integrate Vercel deployments with other systems. For example, you can set up:\n\n*   Automatic deployments on content changes from a Headless CMS\n*   Scheduled deployments by configuring third-party cron job services to trigger the Deploy Hook\n*   Forced deployments from the command line\n\nTo create a Deploy Hook for your project, make sure your project is [connected to a Git repository](https://vercel.com/docs/projects/overview#git).\n\nOnce your project is connected, navigate to its Settings page and then select the Git menu item.\n\nIn the \"Deploy Hooks\" section, choose a name for your Deploy Hook and select the branch that will be deployed when the generated URL is requested.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fdeploy-hooks-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fdeploy-hooks-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nCreating a new Deploy Hook.\n\nWe suggest you use a name that easily identifies the Deploy Hook so you will be able to understand when it triggers a deployment. We also suggest creating only one Deploy Hook per branch unless you’re using multiple data sources.\n\nAfter submitting the form, you will see a URL that you can copy and use.\n\nTo trigger a Deploy Hook, send a GET or POST request to the provided URL.\n\nDeploy Hooks will not be triggered if you have the `github.enabled = false` [configuration](https://vercel.com/docs/project-configuration#git-configuration/github-enabled) present in a `vercel.json` file.\n\nHere's an example request and response you can use for testing:\n\n```\ncurl -X POST https://api.vercel.com/v1/integrations/deploy/prj_98g22o5YUFVHlKOzj9vKPTyN2SDG/tKybBxqhQs\n```\n\n```\n{\n  \"job\": {\n    \"id\": \"okzCd50AIap1O31g0gne\",\n    \"state\": \"PENDING\",\n    \"createdAt\": 1662825789999\n  }\n}\n```\n\nYou do not need to add an authorization header. See [Security](#security) to learn more.\n\nAfter sending a request, you can see that it triggered a deployment on your project dashboard.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fdeploy-hook-deployed-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fdeploy-hook-deployed-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDeployments triggered by a Deploy Hook are marked in the list.\n\nWhen you create a Deploy Hook, a unique identifier is generated in the URL. This allows anyone with the URL to deploy your project, so treat it with the same security as you would any other token or password.\n\nIf you believe your Deploy Hook URL has been compromised, you can revoke it and create a new one.\n\nBuilds triggered by a Deploy Hook are automatically provided with an appropriate [Build Cache](https://vercel.com/docs/deployments/troubleshoot-a-build#what-is-cached) by default, if it exists.\n\nCaching helps speed up the [Build Step](https://vercel.com/docs/deployments/configure-a-build), so we encourage you to keep the default behaviour. However, if you explicitly want to opt out of using a Build Cache, you can disable it by appending `?buildCache=false` to the Deploy Hook URL.\n\nHere is an example request that explicitly disables the Build Cache:\n\n```\ncurl -X POST https://api.vercel.com/v1/integrations/deploy/prj_98g22o5YUFVHlKOzj9vKPTyN2SDG/tKybBxqhQs?buildCache=false\n```\n\nDeploy Hooks created before May 11th, 2021 do not have the Build Cache enabled by default. To change it, you can either explicitly append `?buildCache=true` to the Deploy Hook URL, or replace your existing Deploy Hook with a newly created one.\n\nIf you send multiple requests to deploy the same version of your project, previous deployments for the same Deploy Hook will be canceled to reduce build times.\n\n*   Hobby and Pro accounts have a limit of 5 deploy hooks per project. Enterprise accounts have a limit of 10 deploy hooks per project.",
  "title": "Creating & Triggering Deploy Hooks",
  "description": "Learn how to create and trigger deploy hooks to integrate Vercel deployments with other systems.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/alias",
  "markdown": "# vercel alias\n\nThe `vercel alias` command allows you to apply [custom domains](https://vercel.com/docs/projects/custom-domains) to your deployments.\n\nWhen a new deployment is created (with our [Git Integration](https://vercel.com/docs/deployments/git), Vercel CLI, or the [REST API](https://vercel.com/docs/rest-api)), the platform will automatically apply any [custom domains](https://vercel.com/docs/projects/custom-domains) configured in the project settings.\n\nAny custom domain that doesn't have a [custom preview branch](https://vercel.com/docs/projects/domains/assign-domain-to-a-git-branch) configured (there can only be one Production Branch and it's [configured separately](https://vercel.com/docs/deployments/git#production-branch) in the project settings) will be applied to production deployments created through any of the available sources.\n\nCustom domains that do have a custom preview branch configured, however, only get applied when using the [Git Integration](https://vercel.com/docs/deployments/git).\n\nIf you're not using the [Git Integration](https://vercel.com/docs/deployments/git), `vercel alias` is a great solution if you still need to apply custom domains based on Git branches, or other heuristics.\n\nThe `vercel alias` command is not the recommended way to promote production deployments to specific domains. Instead, you can use the following commands:\n\n*   [`vercel --prod --skip-domain`](https://vercel.com/docs/cli/deploy#prod): Use to skip custom domain assignment when deploying to production and creating a staged deployment\n*   [`vercel promote [deployment-id or url]`](https://vercel.com/docs/cli/promote): Use to promote your staged deployment to your custom domains\n*   [`vercel rollback [deployment-id or url]`](https://vercel.com/docs/cli/rollback): Use to alias an earlier production deployment to your custom domains\n\nIn general, the command allows for assigning custom domains to any deployment.\n\nMake sure to not include the HTTP protocol (e.g. `https://`) for the `[custom-domain]` parameter.\n\n```\nvercel alias set [deployment-url] [custom-domain]\n```\n\nUsing the `vercel alias` command to assign a custom domain to a deployment.\n\n```\nvercel alias rm [custom-domain]\n```\n\nUsing the `vercel alias` command to remove a custom domain from a deployment.\n\nUsing the `vercel alias` command to list custom domains that were assigned to deployments.\n\nThese are options that only apply to the `vercel alias` command.\n\nThe `--yes` option can be used to bypass the confirmation prompt when removing an alias.\n\n```\nvercel alias rm [custom-domain] --yes\n```\n\nUsing the `vercel alias rm` command with the `--yes` option.\n\nThe `--limit` option can be used to specify the maximum number of aliases returned when using `ls`. The default value is `20` and the maximum is `100`.\n\n```\nvercel alias ls --limit 100\n```\n\nUsing the `vercel alias ls` command with the `--limit` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel alias` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel alias",
  "description": "Learn how to apply custom domain aliases to your Vercel deployments using the vercel alias CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/secrets",
  "markdown": "# vercel secrets\n\nLearn how to list, add, remove, and manage secrets used in environment variables with the vercel secrets CLI command.\n\nOn May 1st, 2024 secrets will be automatically converted to sensitive Environment Variables for Preview and Production environments. Secrets attached to Development environments will not be migrated. [Learn more](https://vercel.com/changelog/legacy-environment-variable-secrets-are-being-sunset).\n\nThe `vercel secrets` command is used to manage Secrets used in [Environment Variables](https://vercel.com/docs/projects/environment-variables) under the current scope, providing functionality to list, add, rename, and remove Secrets.\n\nUsing the `vercel secrets` command to list all Secrets under the current scope.\n\n```\nvercel secrets add [secret-name] [secret-value]\n```\n\nUsing the `vercel secrets` command to add a Secret to the current scope.\n\n```\nvercel secrets rename [old-name] [new-name]\n```\n\nUsing the `vercel secrets` command to rename a Secret under the current scope.\n\n```\nvercel secrets remove [secret-name]\n```\n\nUsing the `vercel secrets` command to remove a Secret from the current scope.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel secrets` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel secrets",
  "description": "Learn how to list, add, remove, and manage secrets used in environment variables with the vercel secrets CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/create-a-team",
  "markdown": "# Create a Team\n\nTeams on the [Pro](https://vercel.com/docs/accounts/plans/pro) and [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans can collaborate with teammates, share resources, and manage projects on Vercel.\n\nIf you're on the [Hobby](https://vercel.com/docs/accounts/plans/hobby) plan, you can [upgrade to the Pro plan](https://vercel.com/docs/accounts/plans/pro#upgrading-to-pro) to start adding team members.\n\n### Get started with Vercel Pro for free\n\nExperience the power of Pro features during your trial. Unlock unlimited Serverless Function requests, 1000 GB-hours of execution, boosted application bandwidth, and enjoy free access to Speed Insights throughout your trial period.\n\nAfter [creating a new trial](https://vercel.com/docs/accounts/plans/pro/trials), you'll have 14 days of Pro premium features and collaboration for free.\n\n1.  Click on the scope selector at the top left of the nav bar\n2.  Choose to create a new team\n3.  Name your team\n4.  Depending on the types of team plans that you have already created, you'll be able to select a team plan option:\n\n![Selecting a team plan.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694786173%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fnew-team-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting a team plan.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694786173%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fnew-team-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting a team plan.\n\nYou can join a Vercel team through an invitation from a [team owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role), automatic addition by a team's [identity provider](https://vercel.com/docs/security/saml), or by requesting access yourself. To request access, you can push a commit to a private Git repository owned by the team, or interact with the [suggested teams](#suggested-teams) on the Vercel dashboard.\n\nVercel creates a list of teams you might want to join based on your email domain, membership in [GitHub](https://vercel.com/docs/deployments/git/vercel-for-github) organizations, [GitLab](https://vercel.com/docs/deployments/git/vercel-for-gitlab) groups, or [Bitbucket](https://vercel.com/docs/deployments/git/vercel-for-bitbucket) workspaces connected to a team project.\n\nIf there are suggested teams for your Hobby account, you'll see those appear in the scope selector on the top left of the dashboard, and on the teams page within your Hobby account settings.\n\nYou can't leave a team if you are the last remaining [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) or the last confirmed [member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) .\n\nTo leave a team:\n\n1.  If there isn't another owner for your team, you must assign a different confirmed member as the team owner\n2.  Go to your team's dashboard and select the Settings tab\n3.  Scroll to the Leave Team section and select the Leave Team button\n4.  Click Confirm\n5.  If you are the only remaining member, you should delete the team instead\n\nTo delete a team:\n\n1.  Remove all team domains\n2.  Go to your team's dashboard and select the Settings tab\n3.  Scroll to the Delete Team section and select the Delete Team button\n4.  Click Confirm\n\nIf you'd prefer to cease payment instead of deleting your team, you can [downgrade to Hobby](https://vercel.com/docs/accounts/plans/hobby#downgrading-to-hobby).\n\nDefault teams apply only to accounts created after this feature was enabled in September 2023.\n\nYour default team will be used when you make a request through the [API](https://vercel.com/docs/rest-api) or [CLI](https://vercel.com/docs/cli) and don’t specify a specific team. It will also be the team shown whenever you first log in to Vercel or navigate to `/dashboard`. The first Hobby or Pro team you create will automatically be nominated as the default team.\n\nIf you delete, leave, or are removed from your default team, Vercel will automatically choose a new default team for you. However, you may want to choose a default team yourself. To do that:\n\n1.  Navigate to [vercel.com/account](https://vercel.com/account)\n2.  Under Default Team, select your new default team from the dropdown\n3.  Press Save\n\nYour Team ID is a unique and unchangeable identifier that's automatically assigned when your team is created.\n\nThere are a couple of methods you can use to locate your Team ID:\n\n*   Vercel API: Use the [Vercel API](https://vercel.com/docs/rest-api#endpoints/teams/list-all-teams) to retrieve your Team ID\n*   Dashboard: Find your Team ID directly from your team's Dashboard on Vercel:\n    *   Navigate to the following URL, replacing `your_team_name_here` with your actual team's name: `https://vercel.com/teams/your_team_name_here/settings#team-id`. If you're unable to locate your Team ID using the URL method, follow these steps:\n    *   Open your team's dashboard and head over to the Settings tab\n    *   Choose General from the left-hand navigation\n    *   Scroll down to the Team ID section and your Team ID will be there ready for you to copy\n\nConfiguring a team email domain will permit users with a matching and verified email address to request access to your team without requiring an invitation. For example, if your team email domain is `acme.com`, a user with the email address `john@acme.com` will be able to request access to join your team.\n\nThis is useful if you would like employees, or those you work with, to request access to join your team instead of sending them an invitation.\n\nTo allow this feature, you must add the email domain to the Vercel [Domains](https://vercel.com/docs/projects/domains/view-and-search-domains) section. Given the example above, you would add `acme.com`.\n\n![Setting the Team Email Domain for a Team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fteam-email-domain-fieldset.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Setting the Team Email Domain for a Team.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fteam-email-domain-fieldset-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSetting the Team Email Domain for a Team.",
  "title": "Create a Team",
  "description": "Teams on Vercel allow you to collaborate with members on projects, and grant you access to additional resources. Learn how to create or join a team on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/team-members-and-roles",
  "markdown": "# Team Members & Roles\n\nLearn how to manage team members on Vercel, and how to assign roles to each member with role-based access control (RBAC).\n\nTeams consist of members, and each member of a team can get assigned a role. These roles define what you can and cannot do within a team on Vercel.\n\nAs your project scales and you add more team members, you can assign them roles to ensure that they have the right permissions to work on your projects.\n\nVercel offers a range of roles for your team members. When deciding what role a member should have on your team, consider the following:\n\n*   What projects does this team member need to access?\n*   What actions does this team member need to perform on these projects?\n*   What actions does this team member need to perform on the team itself?\n\nSee the [Managing team members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) section for information on setting up and managing team members.\n\nFor specific information on the different access roles available on each plan, see the [Access Roles](https://vercel.com/docs/accounts/team-members-and-roles/access-roles) section.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Team Members & Roles",
  "description": "Learn how to manage team members on Vercel, and how to assign roles to each member with role-based access control (RBAC).",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/environment-variables/shared-environment-variables",
  "markdown": "# Shared Environment Variables\n\nYou need [Vercel CLI](https://vercel.com/docs/cli) version 28.4.14 or higher to use the features described below.\n\nShared Environment Variables are [Environment Variables](https://vercel.com/docs/projects/environment-variables) that you define at the level of a Vercel Team and can link to multiple Projects.\n\nIn the past, when you need to use the same [Project Environment Variable](https://vercel.com/docs/projects/environment-variables) in another Project, you will re-create it in that Project. If the value of the Environment Variable changes, you must update the value on both Projects.\n\nShared Environment Variables help streamline the management of Environment Variables across multiple Projects. These allow you to define an Environment Variable at the Team level and link it to multiple Projects. When a Shared Environment Variable is updated, the change is applied to all linked Projects.\n\nWhen a Project level Environment Variable and a Shared Environment Variable share the same key and environment, the Project level Environment Variable always overrides the Shared Environment Variable.\n\nShared Environment Variables are created on the [Team Settings page](https://vercel.com/docs/accounts/create-a-team). To create a new Shared Environment Variable, follow these steps:\n\n1.  From the [scope selector](https://vercel.com/docs/accounts/create-a-team), select the Team where you would like to create the Environment Variable. Click on the Settings tab and then select Environment Variables from the left navigation.\n    \n2.  ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-form.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-form-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    1.  Key: Fill in the `key` of the environment variable\n        \n    2.  Value: Fill in the `value` of the environment variable\n        \n        To add multiple environment variables, you have the following options:\n        \n        *   Click Add another to add another key-value pair\n        *   Paste the contents of a `.env` file inside any key field\n        *   Import the contents of a `.env` file by clicking the Import button at the bottom of the form\n        \n    3.  Environment: Select the [Environments](https://vercel.com/docs/projects/environment-variables#environments) where you want to include it\n        \n    4.  Link to Projects: Select one or more [Projects](https://vercel.com/docs/projects/overview) in succession to link the new Shared Environment Variable by using the searchable drop-down. You can keep this empty and link to Projects later as shown in [Linking to Projects](#linking-to-projects)\n        \n    5.  Click Save to save your new Shared Environment Variable\n        \n    \n    The environment(s) chosen for the Shared Environment Variable is used when linked to a Project.\n    \n\nA Shared Environment Variable is activated once it is linked to at least one Project. As shown above, you can link an Environment Variable to a Project during the creation process.\n\nYou can link an existing Shared Environment Variable to a Project either at the Project level or the Team level.\n\nFor Project-level linking, go to Project Settings → Environment Variables.\n\n1.  Click on the Link Shared Environment Variables tab\n2.  Select one or more Shared Environment Variables using the search box\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-project-search.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-project-search-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n3.  Click the Link button\n\nFor the Team where the Environment Variables are defined, go to Team Settings → Environment Variables.\n\n1.  Scroll down below the Shared Environment Variable creation form\n    \n2.  Find the variable you would like to link. You can use the Search box, the Environments drop-down filter and sort by last updated date, name or type to more easily find the variable\n    \n3.  Open the context menu for the specific Shared Environment Variable using the vertical ellipsis icon on the right hand side of the row, and click Edit\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-team-link.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-team-link-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n4.  From the Environment Variable form, you can link additional Projects using the Link to Projects field\n    \n5.  Click Save when you are done\n    \n\nThere are two ways to remove a Shared Environment Variable from a Project:\n\n*   Unlinking: It is disassociated from the selected Project(s) but continues to exist at the level of the Team\n*   Deleting: It is permanently removed from the Team and disconnected from all Projects it was previously linked to\n\nFor the Project that you would like to unlink from, go to Project Settings → Environment Variables.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-project-unlink.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-project-unlink-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n1.  Scroll down to the Shared Environment Variables section\n2.  Open the context menu for the specific shared environment variable you would like to unlink using the vertical ellipsis icon on the right hand side\n3.  Click Unlink from this Project\n\nFor the Team where the Environment Variables are defined, go to Team Settings → Environment Variables.\n\n1.  Scroll down below the Environment Variable creation form\n    \n2.  Find the variable you would like to link. You can use the Search box, the Environments drop-down filter and sort by last updated date, name or type to more easily find the variable\n    \n3.  Open the context menu for the specific shared environment variable using the vertical ellipsis icon on the right hand side of the row, and click Edit\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-team-link.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fshared-environment-variables%2Fshared-envs-team-link-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n4.  From the Environment Variable form, click the minus icon to unlink existing Projects\n    \n5.  Click the Save button when you are done\n    \n\nFor the Team where the Environment Variables are defined, go to Team Settings → Environment Variables.\n\n1.  Scroll down below the Environment Variable creation form\n2.  Use the context menu on the specific Shared Environment Variable by clicking the vertical ellipsis icon on the right side of the row\n3.  Click the Delete button\n\nThis action will remove the Shared Environment Variable from the Vercel Team. It will also unlink the Environment Variable from ALL previously linked Projects.\n\n*   [Branch-specific variables](https://vercel.com/docs/projects/environment-variables#preview-environment-variables) are not currently supported with Shared Environment Variables",
  "title": "Shared Environment Variables",
  "description": "Learn how to use Shared Environment Variables, which are Environment Variables that you define at the Team level and can link to multiple Projects.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/options-allowlist",
  "markdown": "# OPTIONS Allowlist\n\nYou can use OPTIONS Allowlist to disable Deployment Protection (including [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection), and [Trusted IPs](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/trusted-ips)) on any incoming CORS preflight `OPTIONS` request for a list of paths.\n\nWhen you add a path to OPTIONS Allowlist, any incoming request with the method `OPTIONS` that starts with the path will no longer be covered by Deployment Protection. When you remove a path from OPTIONS Allowlist, the path becomes protected again with the project's Deployment Protection settings.\n\nFor example, if you specify `/api`, all requests to paths that start with `/api` (such as `/api/v1/users` and `/api/v2/projects`) will be unprotected for any `OPTIONS` request.\n\n![OPTIONS Allowlist.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![OPTIONS Allowlist.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nOPTIONS Allowlist.\n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Password Protection for\n    2.  Go to the Settings tab, and then to Deployment Protection\n2.  From the OPTIONS Allowlist section, enable the toggle labelled Disabled:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-disabled-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-disabled-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n3.  Specify a path to add to the OPTIONS Allowlist:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-add-path-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-add-path-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n4.  To add more paths, select Add path:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-add-another-path-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-add-another-path-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n5.  Once all the paths are added, select Save\n    \n\n1.  From your Vercel [dashboard](https://vercel.com/dashboard):\n    \n    1.  Select the project that you wish to enable Password Protection for\n    2.  Go to the Settings tab, and then to Deployment Protection\n2.  From the OPTIONS Allowlist section, select the toggle labelled Enabled:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1698933637%2Ffront%2Fdocs%2Fsecurity%2Foptions-allowlist-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n3.  Once all the paths are added, select Save",
  "title": "OPTIONS Allowlist",
  "description": "Learn how to disable Deployment Protection for CORS preflight requests for a list of paths.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/attack-challenge-mode",
  "markdown": "# Attack Challenge Mode\n\nAttack Challenge Mode is a way for Vercel customers to ensure more control when under DDoS attacks. When enabled, all visitors to your site will see a [challenge](https://vercel.com/docs/security/attack-challenge-mode#what-is-a-challenge) before allowed through.\n\nThe Vercel Firewall automatically [mitigates against DDoS attacks](https://vercel.com/docs/security/ddos-mitigation), but sometimes you may want an extra layer of control to ensure that all traffic to your site is legitimate.\n\nAttack Challenge Mode is available for [free](#pricing) on all [plans](https://vercel.com/docs/accounts/plans) and any requests blocked by challenge mode will not count towards your usage limits.\n\nEnabling Attack Challenge Mode on your Vercel deployment may prevent cron jobs from running for the duration that Attack Challenge Mode is active. Consider this potential impact before enabling Attack Challenge Mode.\n\nWhen you enable Attack Challenge Mode, Vercel will issue every request made to your site with an automatic challenge that's solvable by the end-user's browser. This verifies the visitor is a real person before they can access your site.\n\nTo end-users, this will appear as a page showing the Vercel Security Checkpoint that will only appear on their first visit. They will not need to interact with this page, but it will delay their experience for a few seconds:\n\n![Vercel Challenge Page](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1720563709%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fchallenge-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Vercel Challenge Page](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1720563833%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fchallenge-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVercel Challenge Page\n\nThe challenge page text is localized to [22 languages](#supported-languages), based on the visitor's browser settings, and will also automatically respect the visitor's preferred color scheme.\n\nWhile Vercel's Firewall will [always monitor for and mitigate attacks](https://vercel.com/docs/security/ddos-mitigation#what-to-do-in-case-of-a-ddos-attack), you can temporarily enable Attack Challenge Mode when you are under attack and want to provide another layer of security.\n\nTo enable:\n\n1.  Select your project from the [Dashboard](https://vercel.com/dashboard)\n2.  Navigate to the Settings tab and then the Security section\n3.  Toggle the Attack Challenge Mode switch to Enabled\n\nAll traffic initiated by a web browser, including API traffic, is supported. For example, a Next.js frontend calling a Next.js API in the same project.\n\nStandalone APIs, other backend frameworks, and web crawlers may not be able to pass challenges and may be blocked. You should only enable Attack Challenge temporarily, as needed. If you need further control, you can define a [Custom Rule with the Vercel WAF](https://vercel.com/docs/security/vercel-waf/custom-rules).\n\nAttack Challenge Mode is designed to be an extra layer of control for your site, in addition to Vercel's Firewall. It is meant to be configured temporarily in order to help control access to your site when under attack. Once the attack has subsided, you can disable Attack Challenge Mode.\n\nTo disable:\n\n1.  Select your project from the [Dashboard](https://vercel.com/dashboard)\n2.  Navigate to the Settings tab and then the Security section\n3.  Toggle the Attack Challenge Mode switch to Disabled\n\nYou can challenge web traffic with more granularity by defining a [Custom Rule with the Vercel WAF](https://vercel.com/docs/security/vercel-waf/custom-rules).\n\nIndexing by web crawlers like the Google crawler can be affected by Attack Challenge Mode if it's kept on for more than 48 hours.\n\n*   English\n*   Arabic\n*   Bengali\n*   Chinese\n*   French\n*   German\n*   Hindi\n*   Italian\n*   Japanese\n*   Javanese\n*   Korean\n*   Marathi\n*   Polish\n*   Portuguese\n*   Punjabi\n*   Russian\n*   Spanish\n*   Tamil\n*   Telugu\n*   Turkish\n*   Urdu\n*   Vietnamese\n\nAttack Challenge Mode is available for free on all plans.\n\nAll mitigations by Attack Challenge Mode are free and unlimited, and there are zero costs associated with traffic blocked by Attack Challenge Mode.",
  "title": "Attack Challenge Mode",
  "description": "Learn how to use Attack Challenge Mode to help control who has access to your site when it's under attack.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/vercel-waf",
  "markdown": "# Vercel WAF\n\nThe Vercel WAF, part of the [Firewall](https://vercel.com/docs/security/vercel-firewall), provides security controls to [monitor](#traffic-monitoring) and [control](#traffic-control) the internet traffic to your site through logging, blocking and challenging. When you apply a configuration change to the firewall, it takes effect globally within 300ms and can be instantly [rolled back](#instant-rollback) to prior configurations.\n\nIn the Firewall tab of your project, you can see a line graph that displays the total incoming web traffic over a specific period of time for your production deployment. The default view shows an Overview of the traffic for a live 10-minute window.\n\n![Web traffic monitoring view with default live 10-minute graph](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fvercel-waf-overview-graph-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Web traffic monitoring view with default live 10-minute graph](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fvercel-waf-overview-graph-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nWeb traffic monitoring view with default live 10-minute graph\n\nUse the following settings to change the monitoring view:\n\n*   Traffic grouping:\n    *   Overview: The default option shows the traffic grouped by Category (of [traffic control](#traffic-control) rules) or Action (Allow, challenge, deny, or log) applied to the traffic with the firewall rules\n    *   The remaining options show the traffic for the selected set by Region, IP Address, User Agent, Request Path, Target Path, [JA4](https://vercel.com/docs/security/tls-fingerprints#ja4) Digest, or Country\n        *   Default web traffic\n        *   Custom Rule list: A list of your enabled custom rules\n        *   Managed Ruleset list (Enterprise plan): A list of your enabled managed rulesets\n*   Time period: Select Live (10 minute live window) or Past Day (24 hours)\n\nYou can control the internet traffic to your website in the following ways:\n\n*   IP blocking: Learn how to [configure IP blocking](https://vercel.com/docs/security/vercel-waf/ip-blocking)\n*   Custom rules: Learn how to [configure custom rules](https://vercel.com/docs/security/vercel-waf/custom-rules) for your project\n*   Managed rulesets: Learn how to [enable managed rulesets](https://vercel.com/docs/security/vercel-waf/managed-rulesets) for your project (Enterprise plan)\n\nThe rules obey the following order of execution by default:\n\n1.  IP blocking\n2.  Custom rules\n3.  Managed Rulesets\n\nWhen you have more than one custom rule, you can customize their order in the Firewall tab of the project.\n\nYou can quickly revert to a previous version of your firewall configuration. This can be useful in situations that require a quick recovery from unexpected behavior or rule creation.\n\nTo restore to a previous version:\n\n1.  From your dashboard, select the project that you'd like to configure a rule for and then select the Firewall tab\n2.  Select the View Activity button\n3.  Find the version that you would like to restore to by using the date and time selectors\n4.  Select Restore and then Restore Configuration on the confirmation modal\n\nDepending on your plan, there are limits for each Vercel WAF feature.\n\n*   For Account-level IP Blocking, CIDR rules are limited to `/16` for IPv4 and `/48` for IPv6\n*   For Custom Rule Parameters, JA3 (Legacy) is available on Enterprise plans\n\n**Note:** If your project needs more than these limits or for managed rulesets, contact us to discuss the Enterprise plan.\n\n[Contact Sales](https://vercel.com/contact/sales)",
  "title": "Vercel WAF",
  "description": "Learn how to secure your website with the Vercel Web Application Firewall (WAF)",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/vercel-waf/ip-blocking",
  "markdown": "# WAF IP Blocking\n\nYou can create custom rules to block a specific IP address or multiple IP addresses by CIDR, effectively preventing unauthorized access or unwanted traffic. This security measure allows you to restrict access to your applications or websites based on the IP addresses of incoming requests.\n\nCommon use cases for IP blocking on Vercel include:\n\n*   Blocking known malicious IP addresses\n*   Preventing competitors or scrapers from accessing your content\n\nIn cases such as blocking based on complying with specific laws and regulations or to restrict access to or from a particular geographic area, we recommend using [Custom Rules](https://vercel.com/docs/security/vercel-waf/custom-rules).\n\n*   You need to be a [Developer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#developer-role) or [Viewer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#viewer-role) in the team to view the Firewall overview page and list the rules\n*   You need to be a [Project administrator](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#project-administrators) or [Team member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) to configure, save and apply any rule and configuration\n\nTo block an IP address, navigate to the Firewall tab of your project and follow these steps:\n\n1.  Select Configure on the top right of the Firewall overview page\n2.  Scroll down to the IP Blocking section\n3.  Select the \\+ Add IP button\n4.  Complete the required IP Address Or CIDR and Host fields in the Configure New Domain Protection modal\n    *   The host is the domain name of the site you want to block the IP address from accessing. It should match the domain(s) associated with your project\n    *   You can copy this value from the URL of the site you want to block without the `https` prefix\n    *   It must match the exact domain you want to block, for example `my-site.com`, `www.my-site.com` or `docs.my-site.com`\n    *   You should add an entry for all subdomains that you wish block, such as `blog.my-site.com` and `docs.my-site.com`\n5.  Select the Create IP Block Rule button\n6.  Apply the changes:\n    *   When you make any change, you will see a Review Changes button appear or update on the top right with the number of changes requested\n    *   Select Review Changes and review the changes to be applied\n    *   Select Publish to apply the changes to your production deployment\n\nTo block an IP address, you can create an IP Blocking rule in your dashboard:\n\n1.  On your Team's [dashboard](https://vercel.com/dashboard), navigate to Settings and select the Security tab\n2.  On the IP Blocking section, select Create New Rule to create a new rule set\n3.  Add the IP address you want to block and the host you want to block it from. The host is the domain name of the site you want to block the IP address from accessing\n    *   You can copy this value from the URL of the site you want to block without the `https` prefix\n    *   It must match the exact domain you want to block, for example `my-site.com`, `www.my-site.com` or `docs.my-site.com`\n    *   You should add a separate entry for each subdomain that you wish to block, such as `blog.my-site.com` and `docs.my-site.com`\n4.  Select the Create IP Block Rule button\n\n**Note:** If you need Account-level IP blocking, contact us to discuss Enterprise.\n\n[Contact Sales](https://vercel.com/contact/sales)",
  "title": "WAF IP Blocking",
  "description": "Learn how to customize the Vercel WAF to restrict access to certain IP addresses.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/dashboard-features/notifications",
  "markdown": "# Notifications\n\nVercel sends configurable notifications to you through the [dashboard](https://vercel.com/dashboard) and email. These notifications enable you to view and manage important alerts about your [deployments](https://vercel.com/docs/deployments/overview), [domains](https://vercel.com/docs/projects/domains), [integrations](https://vercel.com/docs/integrations), [account](https://vercel.com/docs/accounts), and [usage](https://vercel.com/docs/limits/usage).\n\nThere are a number of places where you can receive notifications:\n\n*   Web: The Vercel dashboard displays a popover, which contains all relevant notifications\n*   Email: You'll receive an email when any of the alerts that you set either on your Hobby account or team have been triggered\n*   SMS: SMS notifications can only be configured on a per-user basis for [Spend Management](https://vercel.com/docs/accounts/spend-management) notifications.\n\nBy default, you will receive both web and email notifications for all [types of alerts](#types-of-notifications). You can [manage these notifications](#managing-notifications) from the Settings tab, but any changes you make will only affect _your_ notifications.\n\nThere are two main ways to interact with web notifications:\n\n*   Read: Unread notifications are displayed with a counter on the bell icon. When you view a notification on the web, it will be marked as read once you close the popover. Because of this, we also will not send an email if you have already read it on the web.\n*   Archive: You can manage the list of notifications by archiving them. You can view these archived notifications in the archive tab, where they will be visible for 365 days.\n\nYou can manage notifications by going to the Settings tab of your account or team's dashboard, and selecting My Notifications. From here, you can toggle [where](#receiving-notifications) _you_ would like to receive notifications for each different [type of notification](#types-of-notifications). Any changes you make will only be reflected for your Hobby account and not for any other members of the team.\n\nYou can receive feedback on your deployments with the Comments feature. When someone leaves a comment, you'll receive a notification on Vercel. You can see all new comments in the Comments tab of your notifications.\n\n[Learn more in the Comments docs](https://vercel.com/docs/workflow-collaboration/comments/managing-comments#notifications).\n\nYou'll receive notifications when you pass base usage [limits](https://vercel.com/docs/limits/overview#included-usage) for products like Serverless Functions, Edge Functions, Edge Middleware, Image Optimization, Remote Cache, and more.\n\nTeam owners on the Pro plan can customize which usage categories they want to receive notifications for based on percentage thresholds or absolute dollar values.\n\nEmails are sent out at specific usage thresholds which varies based on the feature and plan you are on. The below table outlines the thresholds for each:\n\n| Feature | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Spend Management Alerts | \\-  | 50%, 75%, 100% (SMS alerts only at 100%) | \\-  |\n| Monitoring Metric | \\-  | 100%, 4400%, 8800%, 17600%, 26400%, 44400% | \\-  |\n| Bandwidth Usage | 75%, 100% | 75%, 100%, 125%, 200%, 300%, 500%, 1000% | 75%, 100%, 300% |\n| Serverless Function Execution | 75%, 100% | 75%, 100%, 125%, 200%, 300%, 500%, 1000% | 75%, 100%, 300% |\n| Remote Cache Artifacts | 75%, 100% | 75%, 100%, 1000%, 3000% | 75%, 100%, 300% |\n| Edge Middleware Invocations | 75%, 100% | 75%, 100%, 10000%, 20000%, 50000%, 100000% | 75%, 100%, 3000% |\n| Edge Function Execution Units | \\-  | 75%, 100%, 3000%, 5000% | \\-  |\n| Source Image Usage | 75%, 100% | 75%, 100%, 300%, 500%, 1000%, 3000% | 75%, 100%, 300% |\n| Web Analytics Events | 75%, 100% | 75%, 100%, 1500%, 2000%, 3000%, 4000% | 75%, 100% |\n| Edge Config Reads | 75%, 100% | 75%, 100%, 300% | 75%, 100%, 300% |\n| Edge Config Writes | 75%, 100% | 75%, 100%, 300% | 75%, 100%, 300% |\n\nIf you choose to disable notifications, you won't receive alerts for any excessive charges within that category. This may result in unexpected additional costs on your bill. It is recommended that you carefully consider the implications of turning off notifications for any usage thresholds before making changes to your notification settings.\n\nThe types of notifications available for you to manage depend on the [role](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles) you are assigned within your team. For example, someone with a [Developer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#developer-role) role will only be able to be notified of Deployment failures and Integration updates.\n\nIt is _not_ possible to disable all notifications for alerts that are critical to your Vercel workflow. You can opt-out of [one specific channel](#receiving-notifications), like email, but not both email and web notifications. This is because of the importance of these notifications for using the Vercel platform. The list below provides information on which alerts are critical.\n\n| Notification group | Type of notification | Explanation | [Critical notification?](#critical-notifications) |\n| --- | --- | --- | --- |\n| Account |     |     |     |\n|     | Team join requests | Team owners will be notified when someone requests access to join their team and can follow a link from the notification to manage the request. |     |\n| Deployment |     |     |     |\n|     | Deployment Failures | Deployment owners will be notified about any deployment failures that occur for any Project on your account or team. |     |\n| Domain |     |     |     |\n|     | Configuration - Certificate renewal failed | Team owners will be notified if the SSL Certification renewal for any of their team's domains has failed. For more information, see [When is the SSL Certificate on my Vercel Domain renewed?](https://vercel.com/guides/renewal-of-ssl-certificates-with-a-vercel-domain). |     |\n|     | Configuration - Domain Configured | Team owners will be notified of any domains that have been added to a project. For more information, see [Add a domain](https://vercel.com/docs/projects/domains/add-a-domain). |     |\n|     | Configuration - Domain Misconfigured | Team owners will be notified of any domains that have been added to a project and are misconfigured. These notifications will be batched. For more information, see [Add a domain](https://vercel.com/docs/projects/domains/add-a-domain). |     |\n|     | Configuration - Domain no payment source or payment failure | Team owners will be notified if there were any payment issues while [Adding a domain](https://vercel.com/docs/projects/domains/add-a-domain). Ensure a valid payment option is adding to Settings > Billing |     |\n|     | Renewals - Domain renewals | Team owners will be notified 17 days and 7 days before [renewal attempts](https://vercel.com/docs/projects/domains/renew-a-domain#auto-renewal-on). |     |\n|     | Renewals - Domain expiration | Team owners will be notified 24 and 14 days before a domain is set to expire about, if [auto-renewal is off](https://vercel.com/docs/projects/domains/renew-a-domain#auto-renewal-off). A final email will notify you when the Domain expires. |     |\n|     | Transfers - Domain moves requested or completed | Team owners will be notified when a domain has requested to move or successfully moved in or out of their team. For more information see, [Transfer a domain to another Vercel user or team](https://vercel.com/docs/projects/domains/transfer-your-domain#transfer-a-domain-to-another-vercel-user-or-team) |     |\n|     | Transfers - Domain transfers initiated, cancelled, and completed | Team owners will be notified about any information regarding any [domain transfers](https://vercel.com/docs/projects/domains/transfer-your-domain) in or out of your team. |     |\n|     | Transfers - Domain transfers pending approval | Team owners will be notified when a domain is being [transferred into Vercel](https://vercel.com/docs/projects/domains/transfer-your-domain#transfer-a-domain-to-vercel), but the approval is required from the original registrar. |     |\n| Integrations |     |     |     |\n|     | Integration configuration disabled | Everyone will be notified about integration updates such as a [disabled Integration](https://vercel.com/docs/integrations/install-an-integration#disabled-integrations). |     |\n|     | Integration scope changed | Team owners will be notified if any of the Integrations used on their team have updated their [scope](https://vercel.com/docs/rest-api/vercel-api-integrations#scopes). |     |\n| Usage |     |     |     |\n|     | Usage increased | Team owners will be notified about all [usage alerts](https://vercel.com/docs/limits/overview) regarding billing, and other usage warnings. |     |\n|     | Usage limit reached | Users will be notified when they reach the limits outlined in the [Fair Usage Policy](https://vercel.com/docs/limits/fair-use-guidelines). |     |\n| Non-configurable |     |     |     |\n|     | Email changed confirmation | You will be notified when you have successfully updated the email connected to your Hobby account |     |\n|     | Email changed verification | You will be notified when you have updated the email connected to your Hobby account. You will need to verify this email to confirm. |     |\n|     | User invited | You will be sent this when you have been invited to join a new team. |     |\n|     | Invoice payment failed | Users who can manage billing settings will be notified when they have an [outstanding invoice](https://vercel.com/docs/accounts/plans/enterprise/billing#why-am-i-overdue). |     |\n|     | Project role changed | You will be sent this when your [role](https://vercel.com/docs/accounts/team-members-and-roles) has changed |     |\n|     | User deleted | You will be sent this when you have chosen to delete their account. This notification is sent by email only. |     |\n| Edge Config | Size Limit Alerts | Members will be notified when Edge Config size exceeds its limits for the current plan |     |\n|     | Schema Validation Errors | Members will be notified (at most once per hour) if API updates are rejected by [schema protection](https://vercel.com/docs/storage/edge-config/edge-config-dashboard#schema-validation) |     |",
  "title": "Notifications",
  "description": "Learn how to use Notifications to view and manage important alerts about your deployments, domains, integrations, account, and usage.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/spend-management",
  "markdown": "# Spend Management\n\nSpend management is a way for you to notify or to automatically take action on your account when your team hits a [set spend amount](#what-does-spend-management-include). The actions you can take are:\n\nSetting a spend amount does not automatically stop usage. If you want to pause all your projects at a certain amount, you must [enable the option](#pausing-projects).\n\nThe spend amount is set per billing cycle.\n\nSetting the amount halfway through a billing cycle considers your current spend. You can increase or decrease your spend amount as needed. If you configure it below the current monthly spend, Spend Management will trigger any configured actions (including pausing all projects).\n\nThe spend amount that you set covers [metered resources](https://vercel.com/docs/limits/overview#additional-resources) that go beyond your Pro plan [usage](https://vercel.com/docs/limits/overview#included-usage) for all projects on your team.\n\nIt does not include seats or separate [add-ons](https://vercel.com/docs/accounts/plans/pro#pro-plan-add-ons), which Vercel charges on a monthly basis.\n\nVercel checks your metered resource usage often to determine if you are approaching or have exceeded your spend amount. This check happens every few minutes.\n\n1.  To enable spend management, you must have an [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) or [Billing](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#billing-role) role on your [Pro](https://vercel.com/docs/accounts/plans/pro) team\n2.  From your team's [dashboard](https://vercel.com/dashboard), select the Settings tab\n3.  Select Billing from the list\n4.  Under Spend Management, toggle the switch to enabled:\n    \n    ![Spend Management section with toggle enabled.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1696341951%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fspend-manage-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Spend Management section with toggle enabled.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1696341951%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fspend-manage-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Spend Management section with toggle enabled.\n    \n5.  Set the amount in USD at which you would like to receive a notification or trigger an action\n6.  Select the action(s) to happen when your spend amount is reached: [pause all your projects](#pausing-projects), [send notifications](#managing-alert-threshold-notifications), or [trigger a webhook URL](#configuring-a-webhook)\n\nWhen you set a spend amount, Vercel automatically enables web and email notifications for your team. These get triggered when spending on your team reaches 50%, 75%, and 100% of the spend amount. You can also receive [SMS notifications](https://vercel.com/docs/accounts/spend-management#sms-notifications) when your team reaches 100% of the spend amount. To manage your notifications:\n\n1.  You must have an [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) or [Billing](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#billing-role) role on your [Pro](https://vercel.com/docs/accounts/plans/pro) team\n2.  From your team's [dashboard](https://vercel.com/dashboard), select the Settings tab\n3.  Select My Notifications from the list\n4.  Under Team, ensure that Spend Management is selected\n5.  Select the icon and select the thresholds for which you would like to receive web and email notification, as described in [Notifications](https://vercel.com/docs/dashboard-features/notifications)\n6.  Repeat the previous step for the Web, Email, and SMS notification sections\n\nFollowing these steps only configures **your** notifications. Team members with the Owner or Billing role can configure their own preferences\n\nIn addition to web and email notifications, you can enable SMS notifications for Spend Management. They are only triggered when you reach 100% of your spend amount.\n\nTo enable SMS notifications:\n\n1.  You must have an [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) or [Billing](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#billing-role) role on your [Pro](https://vercel.com/docs/accounts/plans/pro) team. Note that following these steps only configures your SMS notifications. Each member with an Owner or Billing role can configure their own SMS notifications for Spend Management\n2.  Set your [spend amount](#managing-your-spend-amount)\n3.  From your team's [dashboard](https://vercel.com/dashboard), select the Settings tab\n4.  Select My Notifications from the list, scroll to SMS at the bottom of the page and toggle the switch to Enabled. If your personal profile has a phone number associated with it, SMS notifications will be enabled by default\n5.  Under Team, ensure that Spend Management is selected\n6.  Enter your phone number and follow the steps to verify it\n\nVercel provides an option to automatically pause the production deployment for all of your projects when your spend amount is reached. This option is on by default.\n\n1.  In the Spend Management section of your team's settings, enable and set your [spend amount](#managing-your-spend-amount)\n2.  Ensure the Pause production deployment switch is Enabled\n3.  Confirm the action by entering the team name and select Continue. Your changes save automatically\n4.  When your team reaches the spend amount, Vercel automatically pauses the production deployment for all projects on your team\n\nWhen visitors access your production deployment while it is paused, they will see a [503 DEPLOYMENT\\_PAUSED error](https://vercel.com/docs/errors/DEPLOYMENT_PAUSED).\n\nProjects need to be resumed on an individual basis, either [through the dashboard](https://vercel.com/docs/projects/overview#resuming-a-project) or the [Vercel REST API](https://vercel.com/docs/rest-api/endpoints/projects#unpause-a-project).\n\nProjects won't automatically unpause if you increase the spend amount, you must resume each project manually.\n\nYou can configure a webhook URL to trigger events such as serving a static version of your site, [pausing a project](https://vercel.com/docs/projects/overview#pausing-a-project), or sending a Slack notification.\n\nVercel will send a [HTTPS POST request](#webhook-payload) to the URL that you provide when the following events happen:\n\n*   [When a spend amount reaches 100%](#spend-amount)\n*   [At the end of your billing cycle](#end-of-billing-cycle)\n\nTo configure a webhook for spend management:\n\n1.  In the Spend Management section of your team's settings, set your [spend amount](#managing-your-spend-amount)\n2.  Enter the webhook URL for the endpoint that will receive a POST request. In order to be accessible, make sure your endpoints are public\n3.  Secure your webhooks by comparing the [`x-vercel-signature`](https://vercel.com/docs/edge-network/headers#x-vercel-signature) request header to the SHA that is generated when you save your webhook. To learn more, see the [securing webhooks](https://vercel.com/docs/observability/webhooks-overview/webhooks-api#securing-webhooks) documentation\n\nThe webhook URL receives an HTTP POST request with the following JSON payload for each event:\n\nSent when the team hits 100% of their spend amount.\n\n| Parameters | Type | Description |\n| --- | --- | --- |\n| `budgetAmount` | int | The [spend amount](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) that you have set |\n| `currentSpend` | int | The [total cost](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) that your team [has accrued](https://vercel.com/docs/accounts/spend-management#what-does-spend-management-include) during the current billing cycle. |\n| `teamId` | string | Your Vercel Team ID |\n\n```\n{\n  \"budgetAmount\": 500,\n  \"currentSpend\": 500,\n  \"teamId\": \"team_jkT8yZ3oE1u6xLo8h6dxfNc3\"\n}\n```\n\nSent when the billing cycle ends. You can use this event to resume paused projects.\n\n| Parameters | Type | Description |\n| --- | --- | --- |\n| `teamId` | string | Your Vercel Team ID |\n| `type` | string | The type of event |\n\n```\n{\n  \"teamId\": \"team_jkT8yZ3oE1u6xLo8h6dxfNc3\",\n  \"type\": \"endOfBillingCycle\"\n}\n```\n\nVercel displays all spend management activity in the Activity tab of your [team's dashboard](https://vercel.com/docs/observability/activity-log). This includes spend amount creation and updates, and project pausing and unpausing.\n\nFor more information on Vercel's pricing, guidance on optimizing consumption, and invoices, see the following resources:",
  "title": "Spend Management",
  "description": "Learn how to get notified about your account spend and configure a webhook.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/vercel-waf/custom-rules",
  "markdown": "# WAF Custom Rules\n\nYou can [configure](#custom-rule-configuration) specific rules to log, deny, challenge, or bypass traffic to your site. When you apply the configuration, it takes effect immediately and does not require re-deployment.\n\n[Get started](#get-started) by reviewing the [Best practices for applying rules](#best-practices-for-applying-rules) section.\n\n*   You need to be a [Developer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#developer-role) or [Viewer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#viewer-role) in the team to view the Firewall overview page and list the rules\n*   You need to be a [Project administrator](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#project-administrators) or [Team member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) to configure, save and apply any rule and configuration\n\nYou can create multiple Custom Rules for the same project. Each rule can perform a log, deny, challenge, or bypass action according to one or more logical condition(s) that you set based on the value of specific [parameters](https://vercel.com/docs/security/vercel-waf/rule-configuration) in the incoming request.\n\nYou can save, delete, or disable a rule at any time and these actions have immediate effect. You also have the ability to re-order the precedence of each custom rule.\n\nWhen a rule denies or challenges the traffic to your site and the client has not previously solved the challenge (in the case of challenge mode), the rule execution stops and blocks the request.\n\nAfter a Log rule runs, the rule execution continues. If no other rule matches and blocks the request, the Log rule that is last matched is reported.\n\nTo ensure your Custom Rule behaves as intended:\n\n1.  Test a Custom Rule by setting it up with a log action\n2.  Observe the 10-minute live traffic to check the behavior\n3.  Update the Custom Rule condition if needed. Once you're happy with the behavior, update the rule with a challenge, deny, or bypass action\n\nLearn how to create, test, and apply a Custom Rule.\n\n1.  From your dashboard, select the project that you'd like to configure a rule for and then select the Firewall tab\n2.  Select Configure on the top right of the Firewall overview page\n3.  Select \\+ New Rule\n4.  Type a name to help you identify the purpose of this rule for future reference\n5.  In the Configure section, add as many If conditions as needed:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fvercel-waf-custom-rule-configure-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fvercel-waf-custom-rule-configure-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n6.  Select Log for the Then action\n7.  Select Save Rule to apply it\n8.  Apply the changes:\n    *   When you make any change, you will see a Review Changes button appear or update on the top right with the number of changes requested\n    *   Select Review Changes and review the changes to be applied\n    *   Select Publish to apply the changes to your production deployment\n9.  Go to the Firewall overview page, select your Custom Rule from the traffic grouping drop-down and select the paramater(s) related to the condition(s) of your Custom Rule to observe the traffic:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fwaf-overview-custom-rule-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fsecurity%2Fwaf-overview-custom-rule-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n10.  If you are satisfied with the traffic behavior, select Configure\n11.  Select the Custom Rule that you created\n12.  Update the Then action to Challenge, Deny or Bypass as needed\n13.  Select Save Rule to apply it\n14.  Apply the changes with the Review Changes button\n\nReview [Common Examples](https://vercel.com/docs/security/vercel-waf/examples) for the application of specific rules in common situations.",
  "title": "WAF Custom Rules",
  "description": "Learn how to add and manage custom rules to configure the Vercel Web Application Firewall (WAF).",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/whoami",
  "markdown": "# vercel whoami\n\nThe `vercel whoami` command is used to show the username of the user currently logged into [Vercel CLI](https://vercel.com/cli).\n\nUsing the `vercel whoami` command to view the username of the user currently logged into Vercel CLI.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel whoami` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel whoami",
  "description": "Learn how to display the username of the currently logged in user with the vercel whoami CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/switch",
  "markdown": "# vercel switch\n\nThe `vercel switch` command is used to switch to a different team scope when logged in with Vercel CLI. You can choose to select a team from a list of all those you are part of or specify a team when entering the command.\n\nUsing the `vercel switch` command to change team scope with Vercel CLI.\n\n```\nvercel switch [team-name]\n```\n\nUsing the `vercel switch` command to change to a specific team scope with Vercel CLI.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel switch` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel switch",
  "description": "Learn how to switch between different team scopes using the vercel switch CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli-api",
  "markdown": "# CLI & API Reference\n\nLearn how to use the Vercel command-line interface (CLI) to manage and configure your Vercel Projects, Deployments and more from the command line.\n\nLearn how to use the Vercel REST API to interact programmatically with your Vercel Projects and Deployments using HTTP requests.\n\nLearn how you can use the Build Output API to enable your framework to integrate with Vercel's Build System.",
  "title": "CLI & API Reference",
  "description": "Learn how to manage and configure your Vercel projects, builds and deployments from the command line and programmatically.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/project-linking",
  "markdown": "# Linking Projects with Vercel CLI\n\nWhen running `vercel` in a directory for the first time, Vercel CLI needs to know which [scope](#scope) and [Vercel Project](https://vercel.com/docs/projects/overview) you want to [deploy](https://vercel.com/docs/cli/deploy) your directory to. You can choose to either [link](https://vercel.com/docs/cli/link) an existing Vercel Project or to create a new one.\n\n```\nvercel\n? Set up and deploy \"~/web/my-lovely-project\"? [Y/n] y\n? Which scope do you want to deploy to? My Awesome Team\n? Link to existing project? [y/N] y\n? What’s the name of your existing project? my-lovely-project\n🔗 Linked to awesome-team/my-lovely-project (created .vercel and added it to .gitignore)\n```\n\nLinking an existing Vercel Project when running Vercel CLI in a new directory.\n\nOnce set up, a new `.vercel` directory will be added to your directory. The `.vercel` directory contains both the organization and `id` of your Vercel Project. If you want [unlink](https://vercel.com/docs/cli/link) your directory, you can remove the `.vercel` directory.\n\nYou can use the [`--yes` option](https://vercel.com/docs/cli/deploy#yes) to skip these questions.\n\nWhen you create a new Vercel Project, Vercel CLI will [link](https://vercel.com/docs/cli/link) the Vercel Project and automatically detect the framework you are using and offer default Project Settings accordingly.\n\n```\nvercel\n? Set up and deploy \"~/web/my-new-project\"? [Y/n] y\n? Which scope do you want to deploy to? My Awesome Team\n? Link to existing project? [y/N] n\n? What’s your project’s name? my-new-project\n? In which directory is your code located? my-new-project/\nAuto-detected project settings (Next.js):\n- Build Command: \\`next build\\` or \\`build\\` from \\`package.json\\`\n- Output Directory: Next.js default\n- Development Command: next dev --port $PORT\n? Want to override the settings? [y/N]\n```\n\nCreating a new Vercel Project with the `vercel` command.\n\nYou will be provided with default Build Command, Output Directory, and Development Command options.\n\nYou can continue with the default Project Settings or overwrite them. You can also edit your Project Settings later in your Vercel Project dashboard.",
  "title": "Linking Projects with Vercel CLI",
  "description": "Learn how to link existing Vercel Projects with Vercel CLI.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/global-options",
  "markdown": "# Vercel CLI Global Options\n\nGlobal options are commonly available to use with multiple Vercel CLI commands.\n\nThe `--cwd` option can be used to provide a working directory (that can be different from the current directory) when running Vercel CLI commands.\n\nThis option can be a relative or absolute path.\n\n```\nvercel --cwd ~/path-to/project\n```\n\nUsing the `vercel` command with the `--cwd` option.\n\nThe `--debug` option, shorthand `-d`, can be used to provide a more verbose output when running Vercel CLI commands.\n\nUsing the `vercel` command with the `--debug` option.\n\nThe `--global-config` option, shorthand `-Q`, can be used set the path to the [global configuration directory](https://vercel.com/docs/projects/project-configuration/global-configuration).\n\n```\nvercel --global-config /path-to/global-config-directory\n```\n\nUsing the `vercel` command with the `--global-config` option.\n\nThe `--help` option, shorthand `-h`, can be used to display more information about [Vercel CLI](https://vercel.com/cli) commands.\n\nUsing the `vercel` command with the `--help` option.\n\nUsing the `vercel alias` command with the `--help` option.\n\nThe `--local-config` option, shorthand `-A`, can be used to set the path to a local `vercel.json` file.\n\n```\nvercel --local-config /path-to/vercel.json\n```\n\nUsing the `vercel` command with the `--local-config` option.\n\nThe `--scope` option, shorthand `-S`, can be used to execute Vercel CLI commands from a scope that’s not currently active.\n\n```\nvercel --scope my-team-slug\n```\n\nUsing the `vercel` command with the `--scope` option.\n\nThe `--token` option, shorthand `-t`, can be used to execute Vercel CLI commands with an [authorization token](https://vercel.com/account/tokens).\n\n```\nvercel --token iZJb2oftmY4ab12HBzyBXMkp\n```\n\nUsing the `vercel` command with the `--token` option.\n\nThe `--no-color` option, or `NO_COLOR=1` environment variable, can be used to execute Vercel CLI commands with no color or emoji output. This respects the [NO\\_COLOR standard](https://no-color.org/).\n\nUsing the `vercel` command with the `--no-color` option.",
  "title": "Vercel CLI Global Options",
  "description": "Global options are commonly available to use with multiple Vercel CLI commands. Learn about Vercel CLI's global options here.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/deploying-from-cli",
  "markdown": "# Deploying Projects from Vercel CLI\n\nThe `vercel` command is used to [deploy](https://vercel.com/docs/cli/deploy) Vercel Projects and can be used from either the root of the Vercel Project directory or by providing a path.\n\nDeploys the current Vercel project, when run from the Vercel Project root.\n\nYou can alternatively use the [`vercel deploy` command](https://vercel.com/docs/cli/deploy) for the same effect, if you want to be more explicit.\n\nDeploys the Vercel project found at the provided path, when it's a Vercel Project root.\n\nWhen deploying, stdout is always the Deployment URL.\n\n```\nvercel > deployment-url.txt\n```\n\nWrites the Deployment URL output from the `deploy` command to a text file.\n\nBy default, when you promote a deployment to production, your domain will point to that deployment. If you want to create a production deployment without assigning it to your domain, for example to avoid sending all of your traffic to it, you can:\n\n1.  Turn off the auto-assignment of domains for the current production deployment:\n\n```\nvercel --prod --skip-domain\n```\n\n2.  When you are ready, manually promote the staged deployment to production:\n\n```\nvercel promote [deployment-id or url]\n```\n\nYou can build Vercel projects locally to inspect the build outputs before they are [deployed](https://vercel.com/docs/cli/deploy). This is a great option for producing builds for Vercel that do not share your source code with the platform.\n\nIt's also useful for debugging build outputs.\n\nUsing the `vercel` command to deploy and write stdout to a text file.\n\nThis produces `.vercel/output` in the [Build Output API](https://vercel.com/docs/build-output-api/v3) format. You can review the output, then [deploy](https://vercel.com/docs/cli/deploy) with:\n\nDeploy the build outputs in `.vercel/output` produced by `vercel build`.\n\nSee more details at [Build Output API](https://vercel.com/docs/build-output-api/v3).",
  "title": "Deploying Projects from Vercel CLI",
  "description": "Learn how to deploy your Vercel Projects from Vercel CLI using the vercel or vercel deploy commands.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/deploy",
  "markdown": "# vercel deploy\n\nThe `vercel deploy` command deploys Vercel projects, executable from the project's root directory or by specifying a path. You can omit 'deploy' in `vercel deploy`, as `vercel` is the only command that operates without a subcommand. This document will use 'vercel' to refer to `vercel deploy`.\n\nUsing the `vercel` command from the root of a Vercel project directory.\n\n```\nvercel --cwd [path-to-project]\n```\n\nUsing the `vercel` command and supplying a path to the root directory of the Vercel project.\n\nUsing the `vercel` command to deploy a prebuilt Vercel project, typically with `vercel build`. See [vercel build](https://vercel.com/docs/cli/build) and [Build Output API](https://vercel.com/docs/build-output-api/v3) for more details.\n\nWhen deploying, `stdout` is always the Deployment URL.\n\n```\nvercel > deployment-url.txt\n```\n\nUsing the `vercel` command to deploy and write `stdout` to a text file. When deploying, `stdout` is always the Deployment URL.\n\nIn the following example, you create a bash script that you include in your CI/CD workflow. The goal is to have all preview deployments be aliased to a custom domain so that developers can bookmark the preview deployment URL. Note that you may need to [define the scope](https://vercel.com/docs/cli/global-options#scope) when using `vercel alias`\n\n```\n# save stdout and stderr to files\nvercel deploy >deployment-url.txt 2>error.txt\n \n# check the exit code\ncode=$?\nif [ $code -eq 0 ]; then\n    # Now you can use the deployment url from stdout for the next step of your workflow\n    deploymentUrl=`cat deployment-url.txt`\n    vercel alias $deploymentUrl my-custom-domain.com\nelse\n    # Handle the error\n    errorMessage=`cat error.txt`\n    echo \"There was an error: $errorMessage\"\nfi\n```\n\nThe script deploys your project and assigns the deployment URL saved in `stdout` to the custom domain using `vercel alias`.\n\nIf you need to check for errors when the command is executed such as in a CI/CD workflow, use `stderr`. If the exit code is anything other than `0`, an error has occurred. The following example demonstrates a script that checks if the exit code is not equal to 0:\n\n```\n# save stdout and stderr to files\nvercel deploy >deployment-url.txt 2>error.txt\n \n# check the exit code\ncode=$?\nif [ $code -eq 0 ]; then\n    # Now you can use the deployment url from stdout for the next step of your workflow\n    deploymentUrl=`cat deployment-url.txt`\n    echo $deploymentUrl\nelse\n    # Handle the error\n    errorMessage=`cat error.txt`\n    echo \"There was an error: $errorMessage\"\nfi\n```\n\nThese are options that only apply to the `vercel` command.\n\nThe `--build-env` option, shorthand `-b`, can be used to provide environment variables to the [build step](https://vercel.com/docs/deployments/configure-a-build).\n\n```\nvercel --build-env KEY1=value1 --build-env KEY2=value2\n```\n\nUsing the `vercel` command with the `--build-env` option.\n\nThe `--yes` option can be used to skip questions you are asked when setting up a new Vercel project. The questions will be answered with the provided defaults, inferred from `vercel.json` and the folder name.\n\nUsing the `vercel` command with the `--yes` option.\n\nThe `--env` option, shorthand `-e`, can be used to provide [environment variables](https://vercel.com/docs/projects/environment-variables) at runtime.\n\n```\nvercel --env KEY1=value1 --env KEY2=value2\n```\n\nUsing the `vercel` command with the `--env` option.\n\nThe `--name` option has been deprecated in favor of [Vercel project linking](https://vercel.com/docs/cli/project-linking), which allows you to link a Vercel project to your local codebase when you run `vercel`.\n\nThe `--name` option, shorthand `-n`, can be used to provide a Vercel project name for a deployment.\n\nUsing the `vercel` command with the `--name` option.\n\nThe `--prod` option can be used to create a deployment for a production domain specified in the Vercel project dashboard.\n\nUsing the `vercel` command with the `--prod` option.\n\nMust be used with [`--prod`](#prod). The `--skip-domain` option will disable the automatic promotion (aliasing) of the relevant domains to a new production deployment. You can use [`vercel promote`](https://vercel.com/docs/cli/promote) to complete the domain-assignment process later.\n\n```\nvercel --prod --skip-domain\n```\n\nUsing the `vercel` command with the `--skip-domain` option.\n\nThe `--public` option can be used to ensures the source code is publicly available at the `/_src` path.\n\nUsing the `vercel` command with the `--public` option.\n\nThe `--regions` option can be used to specify which [regions](https://vercel.com/docs/edge-network/regions) the deployments [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) should run in.\n\nUsing the `vercel` command with the `--regions` option.\n\nThe `--no-wait` option does not wait for a deployment to finish before exiting from the `deploy` command.\n\nThe `--force` option, shorthand `-f`, is used to force a new deployment without the [build cache](https://vercel.com/docs/deployments/troubleshoot-a-build#what-is-cached).\n\nThe `--with-cache` option is used to retain the [build cache](https://vercel.com/docs/deployments/troubleshoot-a-build#what-is-cached) when using `--force`.\n\n```\nvercel --force --with-cache\n```\n\nThe `--archive` option compresses the deployment code into a single file before uploading it. The only currently supported format is \"tgz\".\n\n```\nvercel deploy --archive=tgz\n```\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel deploy` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel deploy",
  "description": "Learn how to deploy your Vercel projects using the vercel deploy CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/bisect",
  "markdown": "# vercel bisect\n\nThe `vercel bisect` command can be used to perform a [binary search](https://wikipedia.org/wiki/Binary_search_algorithm) upon a set of deployments in a Vercel Project for the purpose of determining when a bug was introduced.\n\nThis is similar to [git bisect](https://git-scm.com/docs/git-bisect) but faster because you don't need to wait to rebuild each commit, as long as there is a corresponding Deployment. The command works by specifing both a _bad_ Deployment and a _good_ Deployment. Then, `vercel bisect` will retrieve all the deployments in between, and step by them one by one. At each step, you will perform your check and specify whether or not the issue you are investigating is present in the Deployment for that step.\n\nNote that if an alias URL is used for either the _good_ or _bad_ deployment, then the URL will be resolved to the current target of the alias URL. So if your Project is currently in promote/rollback state, then the alias URL may not be the newest chronological Deployment.\n\nThe good and bad deployments provided to `vercel bisect` must be production deployments.\n\nUsing the `vercel bisect` command will initiate an interactive prompt where you specify a good deployment, followed by a bad deployment and step through the deployments in between to find the first bad deployment.\n\nThese are options that only apply to the `vercel bisect` command.\n\nThe `--good` option, shorthand `-g`, can be used to specify the initial \"good\" deployment from the command line. When this option is present, the prompt will be skipped at the beginning of the bisect session. A production alias URL may be specified for convenience.\n\n```\nvercel bisect --good https://example.com\n```\n\nUsing the `vercel bisect` command with the `--good` option.\n\nThe `--bad` option, shorthand `-b`, can be used to specify the \"bad\" deployment from the command line. When this option is present, the prompt will be skipped at the beginning of the bisect session. A production alias URL may be specified for convenience.\n\n```\nvercel bisect --bad https://example-s93n1nfa.vercel.app\n```\n\nUsing the `vercel bisect` command with the `--bad` option.\n\nThe `--path` option, shorthand `-p`, can be used to specify a subpath of the deployment where the issue occurs. The subpath will be appended to each URL during the bisect session.\n\n```\nvercel bisect --path /blog/first-post\n```\n\nUsing the `vercel bisect` command with the `--path` option.\n\nThe `--open` option, shorthand `-o`, will attempt to automatically open each deployment URL in your browser window for convenience.\n\nUsing the `vercel bisect` command with the `--open` option.\n\nThe `--run` option, shorthand `-r`, provides the ability for the bisect session to be automated using a shell script or command that will be invoked for each deployment URL. The shell script can run an automated test (for example, using the `curl` command to check the exit code) which the bisect command will use to determine whether each URL is good (exit code 0), bad (exit code non-0), or should be skipped (exit code 125).\n\n```\nvercel bisect --run ./test.sh\n```\n\nUsing the `vercel bisect` command with the `--run` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel bisect` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel bisect",
  "description": "Learn how to perform a binary search on your deployments to help surface issues using the vercel bisect CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/build",
  "markdown": "# vercel build\n\nThe `vercel build` command can be used to build a Vercel Project locally or in your own CI environment. Build artifacts are placed into the `.vercel/output` directory according to the [Build Output API](https://vercel.com/docs/build-output-api/v3).\n\nWhen used in conjunction with the `vercel deploy --prebuilt` command, this allows a Vercel Deployment to be created _without_ sharing the Vercel Project's source code with Vercel.\n\nThis command can also be helpful in debugging a Vercel Project by receiving error messages for a failed build locally, or by inspecting the resulting build artifacts to get a better understanding of how Vercel will create the Deployment.\n\nIt is recommended to run the `vercel pull` command before invoking `vercel build` to ensure that you have the most recent Project Settings and Environment Variables stored locally.\n\nUsing the `vercel build` command to build a Vercel Project.\n\nThese are options that only apply to the `vercel build` command.\n\nThe `--prod` option can be specified when you want to build the Vercel Project using Production Environment Variables. By default, the Preview Environment Variables will be used.\n\nUsing the `vercel build` command with the `--prod` option.\n\nThe `--yes` option can be used to bypass the confirmation prompt and automatically pull environment variables and Project Settings if not found locally.\n\nUsing the `vercel build` command with the `--yes` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel build` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel build",
  "description": "Learn how to build a Vercel Project locally or in your own CI environment using the vercel build CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/dev",
  "markdown": "# vercel dev\n\nThe `vercel dev` command is used to replicate the Vercel deployment environment locally, allowing you to test your [Serverless Functions](https://vercel.com/docs/functions/serverless-functions), [Edge Functions](https://vercel.com/docs/functions/edge-functions), and [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) without requiring you to deploy each time a change is made.\n\nIf the [Development Command](https://vercel.com/docs/deployments/configure-a-build#development-command) is configured in your Project Settings, it will affect the behavior of `vercel dev` for everyone on that team.\n\nBefore running `vercel dev`, make sure to install your dependencies by running `npm install`.\n\nIf you're using a framework and your framework's [Development Command](https://vercel.com/docs/deployments/configure-a-build#development-command) already provides all the features you need, we do not recommend using `vercel dev`.\n\nFor example, [Next.js](https://vercel.com/docs/frameworks/nextjs)'s Development Command (`next dev`) provides native support for Functions, [redirects](https://vercel.com/docs/edge-network/redirects#configuration-redirects), rewrites, headers and more.\n\nUsing the `vercel dev` command from the root of a Vercel Project directory.\n\nThese are options that only apply to the `vercel dev` command.\n\nThe `--listen` option, shorthand `-l`, can be used to specify which port `vercel dev` runs on.\n\nUsing the `vercel dev` command with the `--listen` option.\n\nThe `--yes` option can be used to skip questions you are asked when setting up a new Vercel Project. The questions will be answered with the default scope and current directory for the Vercel Project name and location.\n\nUsing the `vercel dev` command with the `--yes` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel dev` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel dev",
  "description": "Learn how to replicate the Vercel deployment environment locally and test your Vercel Project before deploying using the vercel dev CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/teams",
  "markdown": "# vercel teams\n\nLearn how to list, add, remove, and manage your teams using the vercel teams CLI command.\n\nThe `vercel teams` command is used to manage [Teams](https://vercel.com/docs/accounts/create-a-team), providing functionality to list, add, and invite new [Team Members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members).\n\nYou can manage Teams with further options and greater control from the Vercel Dashboard.\n\nUsing the `vercel teams` command to list all teams you’re a member of.\n\nUsing the `vercel teams` command to create a new team.\n\n```\nvercel teams invite [email]\n```\n\nUsing the `vercel teams` command to invite a new [Team Member](https://vercel.com/docs/accounts/team-members-and-roles) .\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel teams` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel teams",
  "description": "Learn how to list, add, remove, and manage your teams using the vercel teams CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/domains",
  "markdown": "# vercel domains\n\nThe `vercel domains` command is used to manage domains under the current scope, providing functionality to list, inspect, add, remove, purchase, move, transfer-in, and verify domains.\n\nYou can manage domains with further options and greater control under a Vercel Project's Domains tab from the Vercel Dashboard.\n\nUsing the `vercel domains` command to list all domains under the current scope.\n\n```\nvercel domains inspect [domain]\n```\n\nUsing the `vercel domains` command to retrieve information about a specific domain.\n\n```\nvercel domains add [domain] [project]\n```\n\nUsing the `vercel domains` command to add a domain to the current scope or a Vercel Project.\n\n```\nvercel domains rm [domain]\n```\n\nUsing the `vercel domains` command to remove a domain from the current scope.\n\n```\nvercel domains buy [domain]\n```\n\nUsing the `vercel domains` command to buy a domain for the current scope.\n\n```\nvercel domains move [domain] [scope-name]\n```\n\nUsing the `vercel domains` command to move a domain to another scope.\n\n```\nvercel domains transfer-in [domain]\n```\n\nUsing the `vercel domains` command to transfer in a domain to the current scope.\n\nThese are options that only apply to the `vercel domains` command.\n\nThe `--yes` option can be used to bypass the confirmation prompt when removing a domain.\n\n```\nvercel domains rm [domain] --yes\n```\n\nUsing the `vercel domains rm` command with the `--yes` option.\n\nThe `--limit` option can be used to specify the maximum number of domains returned when using `ls`. The default value to `20` and the maximum is `100`.\n\n```\nvercel domains ls --limit 100\n```\n\nUsing the `vercel domains ls` command with the `--limit` option.\n\nThe `--force` option forces a domain on a project, removing it from an existing one.\n\n```\nvercel domains add my-domain.com my-project --force\n```\n\nUsing the `vercel domains add` command with the `--force` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel domains` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel domains",
  "description": "Learn how to buy, sell, transfer, and manage your domains using the vercel domains CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/git",
  "markdown": "# vercel git\n\nThe `vercel git` command is used to manage a Git provider repository for a Vercel Project, enabling deployments to Vercel through Git.\n\nWhen run, Vercel CLI searches for a local `.git` config file containing at least one remote URL. If found, you can connect it to the Vercel Project linked to your directory.\n\n[Learn more about using Git with Vercel](https://vercel.com/docs/deployments/git).\n\nUsing the `vercel git` command to connect a Git provider repository from your local Git config to a Vercel Project.\n\nUsing the `vercel git` command to disconnect a connected Git provider repository from a Vercel Project.\n\nThese are options that only apply to the `vercel git` command.\n\nThe `--yes` option can be used to skip connect confirmation.\n\nUsing the `vercel git connect` command with the `--yes` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel git` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel git",
  "description": "Learn how to manage your Git provider connections using the vercel git CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/inspect",
  "markdown": "# vercel inspect\n\nThe `vercel inspect` command is used to retrieve information about a deployment referenced either by its deployment URL or ID.\n\n```\nvercel inspect [deployment-id or url]\n```\n\nUsing the `vercel inspect` command to retrieve information about a specific deployment.\n\nThese are options that only apply to the `vercel inspect` command.\n\nThe `--timeout` option sets the time to wait for deployment completion. It defaults to 3 minutes.\n\nAny valid time string for the [ms](https://www.npmjs.com/package/ms) package can be used.\n\n```\nvercel inspect https://example-app-6vd6bhoqt.vercel.app --timeout=5m\n```\n\nUsing the `vercel inspect` command with the `--timeout` option.\n\nThe `--wait` option will block the CLI until the specified deployment has completed.\n\n```\nvercel inspect https://example-app-6vd6bhoqt.vercel.app --wait\n```\n\nUsing the `vercel inspect` command with the `--wait` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel inspect` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel inspect",
  "description": "Learn how to retrieve information about your Vercel deployments using the vercel inspect CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/help",
  "markdown": "# vercel help\n\nThe `vercel help` command generates a list of all available Vercel CLI commands and [options](https://vercel.com/docs/cli/global-options) in the terminal. When combined with a second argument - a valid Vercel CLI command - it outputs more detailed information about that command.\n\nAlternatively, the [`--help` global option](https://vercel.com/docs/cli/global-options#help) can be added to commands to get help information about that command.\n\nUsing the `vercel help` command to generate a list of Vercel CLI commands and options.\n\nUsing the `vercel help` command to generate detailed information about a specific Vercel CLI command.",
  "title": "vercel help",
  "description": "Learn how to use the vercel help CLI command to get information about all available Vercel CLI commands.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/init",
  "markdown": "# vercel init\n\nThe `vercel init` command is used to initialize Vercel Projects locally from the examples found in the [Vercel examples repository](https://github.com/vercel/vercel/tree/main/examples).\n\nUsing the `vercel init` command to initialize a Vercel Project locally.\n\n```\nvercel init [project-name]\n```\n\nUsing the `vercel init` command to initialize a specific Vercel Project locally.\n\n```\nvercel init [project-name] [new-project-name]\n```\n\nUsing the `vercel init` command to initialize a specific Vercel Project locally and rename the directory.\n\nThese are options that only apply to the `vercel env` command.\n\nThe `--force` option, shorthand `-f`, is used to forcibly replace an existing local directory.\n\nUsing the `vercel init` command with the `--force` option.\n\n```\nvercel init gatsby my-project-directory --force\n```\n\nUsing the `vercel init` command with the `--force` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel init` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel init",
  "description": "Learn how to initialize example Vercel Projects locally using the vercel init CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/tls-fingerprints",
  "markdown": "# TLS Fingerprints\n\nVercel Firewall supports [JA3](#ja3) and [JA4](#ja4) TLS fingerprints to identify and restrict malicious traffic. TLS fingerprints allow the unique identification of user sessions inspecting details in the Transport Layer Security (TLS) protocol initiation process.\n\nTLS fingerprinting is a process used to identify and categorize encrypted network traffic.\n\nIt creates a unique identifier from the details of a [TLS client hello packet](https://serializethoughts.com/2014/07/27/dissecting-tls-client-hello-message), such as the version of TLS, supported cipher suites, and included extensions.\n\n*   TLS fingerprints allow the unique identification of user session\n*   JA3 and JA4 transform the TLS handshake details into a hash\n*   The hash is used as a fingerprint to monitor and restrict access\n*   The hash can then be read from your Functions through the request headers\n\nControlling access by TLS fingerprint allows us to mitigate malicious actors that use sophisticated methods of attack. For example, a DDoS attack that is spread across multiple user agents, IPs, or geographic locations might share the same TLS fingerprint. With fingerprinting, the Vercel Firewall can block all of the traffic that matches that TLS fingerprint.\n\nJA4 is part of the [JA4+ suite](https://github.com/FoxIO-LLC/ja4?tab=readme-ov-file#ja4-details). It offers a more granular and flexible approach to network fingerprinting, helping to mitigate malicious traffic and prevent bot traffic.\n\nWith JA4, it's possible to identify, track, and categorize server-side encrypted network traffic. This is crucial in detecting and mitigating potential security threats, as it provides a more comprehensive view of the network traffic when used in conjunction with other fields.\n\nJA3 is a tool that uses TLS fingerprinting to track and identify potential security threats. It specifically focuses on the details of the TLS client hello packet, generating a unique hash from it. This [client hello packet](https://serializethoughts.com/2014/07/27/dissecting-tls-client-hello-message) contains specific information such as the TLS version, supported cipher suites, and any extensions used.\n\nIn the Default web traffic view of the [Vercel WAF monitoring page](https://vercel.com/docs/security/vercel-waf#traffic-monitoring), you can group the web traffic by JA4 Digest to review the fingerprints of the live traffic or the past 24 hours.\n\nThe following headers are sent to each deployment and can be used to process the [request](https://developer.mozilla.org/en-US/docs/Web/API/Request) before sending back a response. These headers can be read from the [Request](https://nodejs.org/api/http.html#http_message_headers) object in your [Function](https://vercel.com/docs/functions/functions-api-reference#function-signature).\n\nUnique client fingerprint hash generated by the JA4 algorithm.\n\nUnique client fingerprint hash generated by the JA3 algorithm.",
  "title": "TLS Fingerprints",
  "description": "Learn how to work with JA3 and JA4 TLS fingerprints.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/link",
  "markdown": "# vercel link\n\nThe `vercel link` command links your local directory to a [Vercel Project](https://vercel.com/docs/projects/overview).\n\nUsing the `vercel link` command to link the current directory to a Vercel Project.\n\n```\nvercel link [path-to-directory]\n```\n\nUsing the `vercel link` command and supplying a path to the local directory of the Vercel Project.\n\nThese are options that only apply to the `vercel link` command.\n\nThe `--repo` option can be used to link all projects in your repository to their respective Vercel projects in one command. This command requires that your Vercel projects are using the [Git integration](https://vercel.com/docs/deployments/git#deploying-git-repositories-with-vercel).\n\nUsing the `vercel link` command with the `--repo` option.\n\nThe `--yes` option can be used to skip questions you are asked when setting up a new Vercel Project. The questions will be answered with the default scope and current directory for the Vercel Project name and location.\n\nUsing the `vercel link` command with the `--yes` option.\n\nThe `--project` option can be used to specify a project name. In non-interactive usage, `--project` allows you to set a project name that does not match the name of the current working directory.\n\n```\nvercel link --yes --project foo\n```\n\nUsing the `vercel link` command with the `--project` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel link` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel link",
  "description": "Learn how to link a local directory to a Vercel Project using the vercel link CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/login",
  "markdown": "# vercel login\n\nThe `vercel login` command allows you to login to your Vercel account through Vercel CLI.\n\nUsing the `vercel login` command to login to a Vercel account.\n\nVercel CLI supports the following login methods:\n\n*   GitHub OAuth\n*   GitLab OAuth\n*   Bitbucket OAuth\n*   Email confirmation\n*   SAML Single Sign-On through your Team's identity provider\n\nWhen no arguments are provided, an interactive prompt will be displayed asking the user which login method should be used.\n\nTo skip the interactive prompt, you may also provide your email address, or Team slug (for SAML Single Sign-On), as an argument to `vercel login`.\n\n```\nvercel login me@example.com\n```\n\nUsing the `vercel login` command with an email address.\n\nUsing the `vercel login` command with a Team slug for SAML Single Sign-On.\n\nThese are options that only apply to the `vercel login` command.\n\nThe `--github` option can be used to initiate GitHub OAuth login:\n\nUsing the `vercel login` command with the `--github` option.\n\nThe `--gitlab` option can be used to initiate GitLab OAuth login:\n\nUsing the `vercel login` command with the `--gitlab` option.\n\nThe `--bitbucket` option can be used to initiate Bitbucket OAuth login:\n\nUsing the `vercel login` command with the `--bitbucket` option.\n\nThe `--oob` option can be used to enable to \"out-of-band\" mode during login, which requires the user to copy the \"verification token\" from the web browser after an OAuth login, and paste it back into Vercel CLI to complete the login.\n\nIn most situations this flag is not necessary, since \"out-of-band\" mode is automatically enabled when logging in on a _remote machine_, such as an SSH session or in a Docker container.\n\n```\nvercel login --github --oob\n```\n\nUsing the `vercel login` command with the `--oob` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel login` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel login",
  "description": "Learn how to login into your Vercel account using the vercel login CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/logout",
  "markdown": "# vercel logout\n\nThe `vercel logout` command allows you to logout of your Vercel account through Vercel CLI.\n\nUsing the `vercel logout` command to logout of a Vercel account.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel logout` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel logout",
  "description": "Learn how to logout from your Vercel account using the vercel logout CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/promote",
  "markdown": "# vercel promote\n\nThe `vercel promote` command is used to promote an existing deployment to be the current deployment.\n\nDeployments built for the Production environment are the typical promote target. You can promote Deployments built for the Preview environment, but you will be asked to confirm that action and will result in a new production deployment. You can bypass this prompt by using the `--yes` option.\n\n```\nvercel promote [deployment-id or url]\n```\n\nUsing `vercel promote` will promote an existing deployment to be current.\n\nThese are options that only apply to the `vercel promote` command.\n\nThe `--timeout` option is the time that the `vercel promote` command will wait for the promotion to complete. When a timeout occurs, it does not affect the actual promotion which will continue to proceed.\n\nWhen promoting a deployment, a timeout of `0` will immediately exit after requesting the promotion.\n\n```\nvercel promote https://example-app-6vd6bhoqt.vercel.app --timeout=5m\n```\n\nUsing the `vercel promote` command with the `--timeout` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel promote` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel promote",
  "description": "Learn how to promote an existing deployment using the vercel promote CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/project",
  "markdown": "# vercel project\n\nLearn how to list, add, remove, and manage your Vercel Projects using the vercel project CLI command.\n\nThe `vercel project` command is used to manage your Vercel Projects, providing functionality to list, add, and remove.\n\nUsing the `vercel project` command to list all Vercel Project.\n\n```\nvercel project ls --update-required\n```\n\nUsing the `vercel project` command to list all Vercel Project that are affected by an upcoming Node.js runtime deprecation.\n\nUsing the `vercel project` command to create a new Vercel Project.\n\nUsing the `vercel project` command to remove a Vercel Project.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel project` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel project",
  "description": "Learn how to list, add, remove, and manage your Vercel Projects using the vercel project CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/pull",
  "markdown": "# vercel pull\n\nThe `vercel pull` command is used to store [Environment Variables](https://vercel.com/docs/projects/environment-variables) and Project Settings in a local cache (under `.vercel/.env.$target.local.`) for offline use of `vercel build` and `vercel dev`. If you aren't using those commands, you don't need to run `vercel pull`.\n\nWhen environment variables or project settings are updated on Vercel, remember to use `vercel pull` again to update your local environment variable and project settings values under `.vercel/`.\n\nUsing the `vercel pull` fetches the latest \"development\" Environment Variables and Project Settings from the cloud.\n\n```\nvercel pull --environment=preview\n```\n\nUsing the `vercel pull` fetches the latest \"preview\" Environment Variables and Project Settings from the cloud.\n\n```\nvercel pull --environment=preview --git-branch=feature-branch\n```\n\nUsing the `vercel pull` fetches the \"feature-branch\" Environment Variables and Project Settings from the cloud.\n\n```\nvercel pull --environment=production\n```\n\nUsing the `vercel pull` fetches the latest \"production\" Environment Variables and Project Settings from the cloud.\n\nThese are options that only apply to the `vercel pull` command.\n\nThe `--yes` option can be used to skip questions you are asked when setting up a new Vercel Project. The questions will be answered with the default scope and current directory for the Vercel Project name and location.\n\nUsing the `vercel pull` command with the `--yes` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel pull` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel pull",
  "description": "Learn how to update your local project with remote environment variables using the vercel pull CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/remove",
  "markdown": "# vercel remove\n\nThe `vercel remove` command, which can be shortened to `vercel rm`, is used to remove deployments either by ID or for a specific Vercel Project.\n\nYou can also remove deployments from the Project Overview page on the Vercel Dashboard.\n\n```\nvercel remove [deployment-url]\n```\n\nUsing the `vercel remove` command to remove a deployment from the Vercel platform.\n\n```\nvercel remove [deployment-url-1 deployment-url-2]\n```\n\nUsing the `vercel remove` command to remove multiple deployments from the Vercel platform.\n\n```\nvercel remove [project-name]\n```\n\nUsing the `vercel remove` command to remove all deployments for a Vercel Project from the Vercel platform.\n\nBy using the [project name](https://vercel.com/docs/projects/overview), the entire Vercel Project will be removed from the current scope unless the `--safe` is used.\n\nThese are options that only apply to the `vercel remove` command.\n\nThe `--safe` option, shorthand `-s`, can be used to skip the removal of deployments with an active preview URL or production domain when a Vercel Project is provided as the parameter.\n\n```\nvercel remove my-project --safe\n```\n\nUsing the `vercel remove` command with the `--safe` option.\n\nThe `--yes` option, shorthand `-y`, can be used to skip the confirmation step for a deployment or Vercel Project removal.\n\n```\nvercel remove my-deployment.com --yes\n```\n\nUsing the `vercel remove` command with the `--yes` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel remove` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel remove",
  "description": "Learn how to remove a deployment using the vercel remove CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/rollback",
  "markdown": "# vercel rollback\n\nThe `vercel rollback` command is used to [roll back production deployments](https://vercel.com/docs/deployments/instant-rollback) to previous deployments.\n\nUsing `vercel rollback` fetches the status of any rollbacks in progress.\n\n```\nvercel rollback [deployment-id or url]\n```\n\nUsing `vercel rollback` rolls back to previous deployment.\n\nOn the hobby plan, you can only [roll back](https://vercel.com/docs/deployments/instant-rollback#who-can-roll-back-deployments) to the previous production deployment. If you attempt to pass in a deployment id or url from an earlier deployment, you will be given an error:\n\n`   To roll back further than the previous production deployment, upgrade to pro   `\n\n.\n\nThese are options that only apply to the `vercel rollback` command.\n\nThe `--timeout` option is the time that the `vercel rollback` command will wait for the rollback to complete. It does not affect the actual rollback which will continue to proceed.\n\nWhen rolling back a deployment, a timeout of `0` will immediately exit after requesting the rollback.\n\n```\nvercel rollback https://example-app-6vd6bhoqt.vercel.app\n```\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel rollback` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel rollback",
  "description": "Learn how to roll back your production deployments to previous deployments using the vercel rollback CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/redeploy",
  "markdown": "# vercel redeploy\n\nThe `vercel redeploy` command is used to rebuild and [redeploy an existing deployment](https://vercel.com/docs/deployments/managing-deployments).\n\n```\nvercel redeploy [deployment-id or url]\n```\n\nUsing `vercel redeploy` will rebuild and deploys an existing deployment.\n\nWhen redeploying, `stdout` is always the Deployment URL.\n\n```\nvercel redeploy https://example-app-6vd6bhoqt.vercel.app > deployment-url.txt\n```\n\nUsing the `vercel redeploy` command to redeploy and write `stdout` to a text file. When redeploying, `stdout` is always the Deployment URL.\n\nIf you need to check for errors when the command is executed such as in a CI/CD workflow, use `stderr`. If the exit code is anything other than `0`, an error has occurred. The following example demonstrates a script that checks if the exit code is not equal to 0:\n\n```\n# save stdout and stderr to files\nvercel redeploy https://example-app-6vd6bhoqt.vercel.app >deployment-url.txt 2>error.txt\n \n# check the exit code\ncode=$?\nif [ $code -eq 0 ]; then\n    # Now you can use the deployment url from stdout for the next step of your workflow\n    deploymentUrl=`cat deployment-url.txt`\n    echo $deploymentUrl\nelse\n    # Handle the error\n    errorMessage=`cat error.txt`\n    echo \"There was an error: $errorMessage\"\nfi\n```\n\nThese are options that only apply to the `vercel redeploy` command.\n\nThe `--no-wait` option does not wait for a deployment to finish before exiting from the `redeploy` command.\n\n```\nvercel redeploy https://example-app-6vd6bhoqt.vercel.app --no-wait\n```\n\nUsing the `vercel redeploy` command with the `--no-wait` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel redeploy` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel redeploy",
  "description": "Learn how to redeploy your project using the vercel redeploy CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/getting-started-with-vercel/collaborate",
  "markdown": "# Collaborate on Vercel\n\nCollaboration is key in successful development projects, and Vercel offers robust features to enhance collaboration among developers. From seamless code collaboration to real-time previews with Comments, Vercel empowers your team to work together effortlessly.\n\nNow that your project is publicly available on your domain of choice, it’s time to begin making changes to it. With Vercel's automatic deployments, this won't require any extra effort. By default, when your Vercel project is connected to a Git repository, Vercel will deploy every commit that is pushed to the Git repository, regardless of which branch you're pushing it to.\n\nA Production environment is one built from the `main` or development branch of your Git repository. A preview environment is created when you deploy from any other branch.\n\nVercel provides a [URL](https://vercel.com/docs/deployments/generated-urls#url-with-git-branch) that reflects the latest pushes to that branch. You can find this either on your dashboard, or in a pull request, which you'll see in the next step\n\nThis connection was established for you automatically, so all you have to do is push commits, and you will start receiving links to deployments right on your Git provider.\n\n1.  Create a new branch in your project and make some changes\n    \n2.  Commit those changes and create a pull request. After a few seconds, Vercel picks up the changes and starts to build and deploy your project. You can see the status of the build through the bot comment made on your PR:\n    \n    ![Vercel for GitHub deploying a pull request automatically.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fgithub-comment-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Vercel for GitHub deploying a pull request automatically.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fgithub-comment-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Vercel for GitHub deploying a pull request automatically.\n    \n3.  Select Inspect to explore the build within your dashboard. You can see the build is within the preview environment and additional information about the deployment including: [build information](https://vercel.com/docs/deployments/builds), a [deployment summary](https://vercel.com/docs/deployments/overview#deployment-summary), checks, and [domain assignment](https://vercel.com/docs/projects/domains). These happen for every deployment\n    \n    ![Vercel dashboard showing the preview deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fgetting-started-with-vercel%2Fpreview-dashboard-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Vercel dashboard showing the preview deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fgetting-started-with-vercel%2Fpreview-dashboard-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Vercel dashboard showing the preview deployment.\n    \n4.  Return to your pull request. At this point your build should be deployed and you can select Visit Preview. You can now see your changes and share this preview URL with others.\n    \n\n[Comments](https://vercel.com/docs/workflow-collaboration/comments) provide a way for your team [or friends](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work#sharing) to give direct feedback on [preview deployments](https://vercel.com/docs/deployments/preview-deployments). Share with others by doing the following:\n\n1.  Open the preview deployment that you’d like to share by selecting the Domain from the deployment information as shown in step 3 above. Alternatively, you can find it by selecting your project from the [dashboard](https://vercel.com/dashboard), and selecting the most recent commit under Active Branches:\n    \n    ![Active branch section showing all non-production branches](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fgetting-started-with-vercel%2Factive-branches-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Active branch section showing all non-production branches](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fgetting-started-with-vercel%2Factive-branches-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Active branch section showing all non-production branches\n    \n2.  From the Comments toolbar at the bottom of the screen, select Log in to comment and sign in with your Vercel account.\n    \n3.  Click the Share button on the [Toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar), and then on the Share dialog, either enter the user's email address or select Anyone with the link from the dropdown and copy the link to your clipboard.\n    \n    ![The Share settings modal.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706185875%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fshareable-links-light.png&w=1200&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Share settings modal.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706185874%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fsharable-links-dark.png&w=1200&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    The Share settings modal.\n    \n    To learn more, see [Sharing Deployments](https://vercel.com/docs/deployments/sharing-deployments).\n    \n4.  The person you are sharing the preview with needs to have a Vercel account. To do so, they'll need to select Log in to comment and then enter their email address.\n    \n5.  Once the person you are sharing the preview with goes through the security options, they'll be ready to comment. You'll be notified of new comments through email, or when you visit the deployment.\n    \n\nFor more information on using Comments, see [Using comments](https://vercel.com/docs/workflow-collaboration/comments/using-comments).",
  "title": "Collaborate on Vercel",
  "description": "Amplify collaboration and productivity with Vercel's CI/CD tools, such as Comments. Empower your team to build and deploy together seamlessly.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/getting-started-with-vercel/domains",
  "markdown": "# Add a domain\n\nEasily add a custom domain to your Vercel project. Enhance your brand presence and optimize SEO with just a few clicks.\n\nAssigning a custom domain to your project guarantees that visitors to your application will have a tailored experience that aligns with your brand.\n\nOn Vercel, this domain can have any format of your choosing:\n\n*   `acme.com` ([apex domain](https://vercel.com/docs/projects/domains/working-with-domains#subdomains,-wildcard-domains,-and-apex-domains))\n*   `blog.acme.com` ([subdomain](https://vercel.com/docs/projects/domains/working-with-domains#subdomains,-wildcard-domains,-and-apex-domains))\n*   `*.acme.com` ([wildcard domain](https://vercel.com/docs/projects/domains/working-with-domains#subdomains,-wildcard-domains,-and-apex-domains))\n\nIf you already own a domain, you can point it to Vercel, or transfer it over. If you don't own one yet, you can purchase a new one. For this tutorial, feel free to use that one domain you bought 11 months ago and haven’t got around to using yet!\n\nFor more information on domains at Vercel, see [Domains overview](https://vercel.com/docs/projects/domains).\n\nNow that your site is deployed, you can to personalize it by setting up a custom domain. With Vercel you can either buy a new domain or use an existing domain.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Add a domain",
  "description": "Easily add a custom domain to your Vercel project. Enhance your brand presence and optimize SEO with just a few clicks.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/getting-started-with-vercel/next-steps",
  "markdown": "# Next Steps\n\nDiscover the next steps to take on your Vercel journey. Unlock new possibilities and harness the full potential of your projects.\n\nCongratulations on getting started with Vercel!\n\nNow, let's explore what's next on your journey. At this point, you can either continue learning more about Vercel's many features, or you can dive straight in and get to work. The choice is yours!\n\n[\n\nDive into my dashboard\n\nManage your projects, domains, and more.\n\n![Your Dashboard](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1686348180%2Fdocs-assets%2Fstatic%2Fdocs%2Fgetting-started-with-vercel%2Fdashboard-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n![Your Dashboard](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1686348180%2Fdocs-assets%2Fstatic%2Fdocs%2Fgetting-started-with-vercel%2Fdashboard-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n\n\n\n\n](https://vercel.com/dashboard)\n\nAlternatively, you can start learning about many of the products and features that Vercel provides:\n\nLearn about Vercel's Edge Network and implement scalable infrastructure in your app using Functions. Get started today by implementing an Edge Function in your app:\n\nVercel offers a suite of managed, serverless storage products that integrate with your frontend framework.\n\nLearn more about [which storage option is right for you](https://vercel.com/docs/storage#choosing-a-storage-product) and get started with implementing them:\n\nVercel provides a suite of observability tools to allow you to monitor, analyze, and manage your site.\n\nVercel takes security seriously. It uses HTTPS by default for secure data transmission, regularly updates its platform to mitigate potential vulnerabilities, limits system access for increased safety, and offers built-in DDoS mitigation. This layered approach ensures robust protection for your sites and applications.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Next Steps",
  "description": "Discover the next steps to take on your Vercel journey. Unlock new possibilities and harness the full potential of your projects.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/getting-started-with-vercel/projects-deployments",
  "markdown": "# Projects and deployments\n\nStreamline your workflow with Vercel's project and deployment management. Boost productivity and scale effortlessly.\n\nTo get started with Vercel, it's helpful to understand projects and deployments:\n\n*   Projects: A [project](https://vercel.com/docs/projects/overview) is the application that you have deployed to Vercel. You can have multiple projects connected to a single repository (for example, a [monorepo](https://vercel.com/docs/monorepos)), and multiple [deployments](https://vercel.com/docs/deployments/overview) for each project. You can view all your projects on the [dashboard](https://vercel.com/dashboard), and configure your settings through the [project dashboard](https://vercel.com/docs/projects/project-dashboard).\n*   Deployments: A [deployment](https://vercel.com/docs/deployments/overview) is the result of a successful [build](https://vercel.com/docs/deployments/builds#) of your project. A deployment is triggered when you import an existing project or template, or when you push a Git commit through your [connected integration](https://vercel.com/docs/deployments/git) or use `vercel deploy` from the [CLI](https://vercel.com/docs/cli). Every deployment [generates a URL automatically](https://vercel.com/docs/deployments/generated-urls).\n\nTo get started you’ll create a new project by either deploying a template or importing and deploying an existing project:\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Projects and deployments",
  "description": "Streamline your workflow with Vercel's project and deployment management. Boost productivity and scale effortlessly.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/more-frameworks",
  "markdown": "# Supported Frameworks on Vercel\n\nThe following table shows which features are supported by each framework on Vercel. The framework list is not exhaustive, but a representation of the most popular frameworks deployed on Vercel.\n\nWe're committed to having support for all Vercel features across frameworks, and continue to work with framework authors on adding support. _This table is continually updated over time_.\n\nSupported\n\nNot Supported\n\nNot Applicable\n\nThe frameworks listed below can be deployed to Vercel with minimal configuration. See [our docs on framework presets](https://vercel.com/docs/deployments/configure-a-build#framework-preset) to learn more about configuration.\n\n![Angular](https://api-frameworks.vercel.sh/framework-logos/angular.svg)\n\n### Angular\n\nAngular is a TypeScript-based cross-platform framework from Google.\n\n![Astro](https://assets.vercel.com/image/upload/v1708448642/front/docs/frameworks/astro-logo-dark.svg)![Astro](https://assets.vercel.com/image/upload/v1708448642/front/docs/frameworks/astro-logo-light.svg)\n\n### Astro\n\nAstro is a new kind of static site builder for the modern web. Powerful developer experience meets lightweight output.\n\n![Brunch](https://api-frameworks.vercel.sh/framework-logos/brunch.svg)\n\n### Brunch\n\nBrunch is a fast and simple webapp build tool with seamless incremental compilation for rapid development.\n\n![Create React App](https://api-frameworks.vercel.sh/framework-logos/react.svg)\n\n### React\n\nCreate React App allows you to get going with React in no time.\n\n![Docusaurus (v1)](https://api-frameworks.vercel.sh/framework-logos/docusaurus.svg)\n\n### Docusaurus (v1)\n\nDocusaurus makes it easy to maintain Open Source documentation websites.\n\n![Docusaurus (v2)](https://api-frameworks.vercel.sh/framework-logos/docusaurus.svg)\n\n### Docusaurus (v2)\n\nDocusaurus makes it easy to maintain Open Source documentation websites.\n\n![Dojo](https://vercel.com/_next/image?url=https%3A%2F%2Fapi-frameworks.vercel.sh%2Fframework-logos%2Fdojo.png&w=48&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n### Dojo\n\nDojo is a modern progressive, TypeScript first framework.\n\n![Eleventy](https://api-frameworks.vercel.sh/framework-logos/eleventy.svg)\n\n### Eleventy\n\n11ty is a simpler static site generator written in JavaScript, created to be an alternative to Jekyll.\n\n![Ember.js](https://api-frameworks.vercel.sh/framework-logos/ember.svg)\n\n### Ember.js\n\nEmber.js helps webapp developers be more productive out of the box.\n\n![Gatsby.js](https://api-frameworks.vercel.sh/framework-logos/gatsby.svg)\n\n### Gatsby.js\n\nGatsby helps developers build blazing fast websites and apps with React.\n\n![Gridsome](https://api-frameworks.vercel.sh/framework-logos/gridsome.svg)\n\n### Gridsome\n\nGridsome is a Vue.js-powered framework for building websites & apps that are fast by default.\n\n![Hexo](https://api-frameworks.vercel.sh/framework-logos/hexo.svg)\n\n### Hexo\n\nHexo is a fast, simple & powerful blog framework powered by Node.js.\n\n![Hugo](https://api-frameworks.vercel.sh/framework-logos/hugo.svg)\n\n### Hugo\n\nHugo is the world’s fastest framework for building websites, written in Go.\n\n![Hydrogen (v1)](https://api-frameworks.vercel.sh/framework-logos/hydrogen.svg)\n\n### Hydrogen (v1)\n\nReact framework for headless commerce\n\n![Ionic Angular](https://api-frameworks.vercel.sh/framework-logos/ionic.svg)\n\n### Ionic Angular\n\nIonic Angular allows you to build mobile PWAs with Angular and the Ionic Framework.\n\n![Ionic React](https://api-frameworks.vercel.sh/framework-logos/ionic.svg)\n\n### Ionic React\n\nIonic React allows you to build mobile PWAs with React and the Ionic Framework.\n\n![Jekyll](https://api-frameworks.vercel.sh/framework-logos/jekyll.svg)\n\n### Jekyll\n\nJekyll makes it super easy to transform your plain text into static websites and blogs.\n\n![Middleman](https://api-frameworks.vercel.sh/framework-logos/middleman.svg)\n\n### Middleman\n\nMiddleman is a static site generator that uses all the shortcuts and tools in modern web development.\n\n![Next.js](https://api-frameworks.vercel.sh/framework-logos/next.svg)\n\n### Next.js\n\nNext.js makes you productive with React instantly — whether you want to build static or dynamic sites.\n\n![Nuxt.js](https://api-frameworks.vercel.sh/framework-logos/nuxt.svg)\n\n### Nuxt.js\n\nNuxt.js is the web comprehensive framework that lets you dream big with Vue.js.\n\n![Parcel](https://vercel.com/_next/image?url=https%3A%2F%2Fapi-frameworks.vercel.sh%2Fframework-logos%2Fparcel.png&w=48&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n### Parcel\n\nParcel is a zero configuration build tool for the web that scales to projects of any size and complexity.\n\n![Polymer](https://api-frameworks.vercel.sh/framework-logos/polymer.svg)\n\n### Polymer\n\nPolymer is an open-source webapps library from Google, for building using Web Components.\n\n![Preact](https://api-frameworks.vercel.sh/framework-logos/preact.svg)\n\n### Preact\n\nPreact is a fast 3kB alternative to React with the same modern API.\n\n![RedwoodJS](https://api-frameworks.vercel.sh/framework-logos/redwoodjs.svg)\n\n### RedwoodJS\n\nRedwoodJS is a full-stack framework for the Jamstack.\n\n![Remix](https://api-frameworks.vercel.sh/framework-logos/remix-no-shadow.svg)\n\n### Remix\n\nBuild Better Websites\n\n![Saber](https://api-frameworks.vercel.sh/framework-logos/saber.svg)\n\n### Saber\n\nSaber is a framework for building static sites in Vue.js that supports data from any source.\n\n![Sanity](https://api-frameworks.vercel.sh/framework-logos/sanity.svg)\n\n### Sanity\n\nThe structured content platform.\n\n![Scully](https://vercel.com/_next/image?url=https%3A%2F%2Fapi-frameworks.vercel.sh%2Fframework-logos%2Fscullyio-logo.png&w=48&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n### Scully\n\nScully is a static site generator for Angular.\n\n![SolidStart (v0)](https://api-frameworks.vercel.sh/framework-logos/solid.svg)\n\n### SolidStart (v0)\n\nSimple and performant reactivity for building user interfaces.\n\n![SolidStart (v1)](https://api-frameworks.vercel.sh/framework-logos/solid.svg)\n\n### SolidStart (v1)\n\nSimple and performant reactivity for building user interfaces.\n\n![Stencil](https://api-frameworks.vercel.sh/framework-logos/stencil.svg)\n\n### Stencil\n\nStencil is a powerful toolchain for building Progressive Web Apps and Design Systems.\n\n![Storybook](https://api-frameworks.vercel.sh/framework-logos/storybook.svg)\n\n### Storybook\n\nFrontend workshop for UI development\n\n![SvelteKit (v1)](https://api-frameworks.vercel.sh/framework-logos/svelte.svg)\n\n### SvelteKit (v1)\n\nSvelteKit is a framework for building web applications of all sizes.\n\n![UmiJS](https://api-frameworks.vercel.sh/framework-logos/umi.svg)\n\n### UmiJS\n\nUmiJS is an extensible enterprise-level React application framework.\n\n![Vite](https://api-frameworks.vercel.sh/framework-logos/vite.svg)\n\n### Vite\n\nVite is a new breed of frontend build tool that significantly improves the frontend development experience.\n\n![VitePress](https://api-frameworks.vercel.sh/framework-logos/vite.svg)\n\n### VitePress\n\nVitePress is VuePress' little brother, built on top of Vite.\n\n![Vue.js](https://api-frameworks.vercel.sh/framework-logos/vue.svg)\n\n### Vue.js\n\nVue.js is a versatile JavaScript framework that is as approachable as it is performant.\n\n![VuePress](https://vercel.com/_next/image?url=https%3A%2F%2Fapi-frameworks.vercel.sh%2Fframework-logos%2Fvuepress.png&w=48&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n### VuePress\n\nVue-powered Static Site Generator\n\n![Zola](https://vercel.com/_next/image?url=https%3A%2F%2Fapi-frameworks.vercel.sh%2Fframework-logos%2Fzola.png&w=48&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n### Zola\n\nEverything you need to make a static site engine in one binary.\n\nLearn more about deploying your preferred framework on Vercel with the following resources:",
  "title": "Supported Frameworks on Vercel",
  "description": "Learn about the frameworks that can be deployed to Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/dns",
  "markdown": "# vercel dns\n\nThe `vercel dns` command is used to manage DNS record for domains, providing functionality to list, add, remove, and import records.\n\nWhen adding DNS records, please wait up to 24 hours for new records to propagate.\n\nUsing the `vercel dns` command to list all DNS records under the current scope.\n\n```\nvercel dns add [domain] [subdomain] [A || AAAA || ALIAS || CNAME || TXT] [value]\n```\n\nUsing the `vercel dns` command to add an A record for a subdomain.\n\n```\nvercel dns add [domain] '@' MX [record-value] [priority]\n```\n\nUsing the `vercel dns` command to add an MX record for a domain.\n\n```\nvercel dns add [domain] [name] SRV [priority] [weight] [port] [target]\n```\n\nUsing the `vercel dns` command to add an SRV record for a domain.\n\n```\nvercel dns add [domain] [name] CAA '[flags] [tag] \"[value]\"'\n```\n\nUsing the `vercel dns` command to add a CAA record for a domain.\n\n```\nvercel dns rm [record-id]\n```\n\nUsing the `vercel dns` command to remove a record for a domain.\n\n```\nvercel dns import [domain] [path-to-zonefile]\n```\n\nUsing the `vercel dns` command to import a zonefile for a domain.\n\nThese are options that only apply to the `vercel dns` command.\n\nThe `--limit` option can be used to specify the maximum number of dns records returned when using `ls`. The default value is `20` and the maximum is `100`.\n\n```\nvercel dns ls --limit 100\n```\n\nUsing the `vercel dns ls` command with the `--limit` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel dns` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel dns",
  "description": "Learn how to manage your DNS records for your domains using the vercel dns CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/incremental-migration/technical-guidelines",
  "markdown": "# Technical Guidelines for Migration to Vercel\n\nWhen your application is hosted across multiple servers, maintaining [session](https://developer.mozilla.org/docs/Web/HTTP/Session) information consistency can be challenging.\n\nFor example, if your legacy application is served on a different domain than your new application, the HTTP session cookies will not be shared between the two. If the data that you need to share is not easily calculable and derivable, you will need a central session store as in the use cases below:\n\n*   Using cookies for storing user specific data such as last login time and recent viewed items\n*   Using cookies for tracking the number of items added to the cart\n\nIf you are not currently using a central session store for persisting sessions or are considering moving to one, you can use [Vercel KV](https://vercel.com/docs/storage/vercel-kv).\n\nLearn more about creating a session store and managing session data with [Edge Functions](https://vercel.com/docs/functions/edge-functions) in our [quickstart guide](https://vercel.com/docs/storage/vercel-kv/quickstart).\n\nBy [pointing your domain to Vercel at the start of migration](https://vercel.com/docs/incremental-migration/migration-guide#point-your-domain-to-vercel), all your traffic gets directed to Vercel, affecting your [bandwidth usage](https://vercel.com/docs/limits/usage#bandwidth). Be sure to account for potential additional costs associated with this approach.\n\nThe [Usage](https://vercel.com/docs/limits/usage) tab on your [dashboard](https://vercel.com/docs/dashboard-features) can assist in monitoring your bandwidth usage.\n\nMinimize risk and perform A/B testing by combining your migration by feature with a user group strategy. You can use [Edge Config](https://vercel.com/docs/storage/edge-config) to store user group information and [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) to direct traffic appropriately.\n\n*   Review our [Edge Config feature flag template](https://vercel.com/templates/next.js/feature-flag-apple-store) for a deeper understanding of this approach\n*   You can also consult our [guide on A/B Testing on Vercel](https://vercel.com/guides/ab-testing-on-vercel) for implementing this strategy\n\nConsider using [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) or [Edge Functions](https://vercel.com/docs/functions/edge-functions) as you migrate your application.\n\nThis allows for the implementation of small, specific, and independent functionality units triggered by events, potentially enhancing future performance and reducing the risk of breaking changes. However, it may require refactoring your existing code to be more modular and reusable.\n\nPrevent the loss of indexed pages, links, and duplicate content when creating rewrites to direct part of your traffic to the new Vercel deployment. Consider the following:\n\n*   Write E2E tests to ensure correct setting of canonical tags and robot indexing at each migration step\n*   Account for existing redirects and rewrites on your legacy server, ensuring they are thoroughly tested during migration\n*   Maintain the same routes for migrated feature(s) on Vercel",
  "title": "Technical Guidelines for Migration to Vercel",
  "description": "Learn the key factors in enhancing the effectiveness, performance, and reliability of your migration to Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/incremental-migration/migration-guide",
  "markdown": "# Incremental Migration Guide\n\nFollow these steps to [incrementally migrate](https://vercel.com/docs/incremental-migration) your website to Vercel. Two possible strategies can be applied:\n\n1.  [Point your domain to Vercel from the beginning](#point-your-domain-to-vercel)\n2.  [Keep your domain on the legacy server](#keep-your-domain-on-the-legacy-server)\n\nIt's advisable to peruse the [troubleshooting section](#troubleshooting) before initiating the migration process.\n\nIn this approach, you make Vercel [the entry point for all your production traffic](https://vercel.com/docs/projects/domains/add-a-domain). When you begin, all traffic will be sent to the legacy server with [rewrites](https://vercel.com/docs/edge-network/rewrites) and/or fallbacks. As you migrate different aspects of your site to Vercel, you can remove the rewrites/fallbacks to the migrated paths so that they are now served by Vercel.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fincremental-migration%2Fapproach-1-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fincremental-migration%2Fapproach-1-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nPoint your domain to Vercel approach\n\nUse the [framework](https://vercel.com/docs/frameworks) of your choice to deploy your application to Vercel\n\nSend all traffic to the legacy server using one of the following 3 methods:\n\nUse rewrites [built-in to the framework](https://vercel.com/docs/edge-network/rewrites#using-rewrites-with-supported-frameworks) such as configuring `next.config.js` with [fallbacks and rewrites in Next.js](https://nextjs.org/docs/app/api-reference/next-config-js/rewrites)\n\nThe code example below shows how to configure rewrites with fallback using `next.config.js` to send all traffic to the legacy server:\n\n```\nmodule.exports = {\n  async rewrites() {\n    return {\n      fallback: [\n        {\n          source: '/:path*',\n          destination: 'https://my-legacy-site.com/:path*',\n        },\n      ],\n    };\n  },\n};\n```\n\nUse `vercel.json` for frameworks that do not have rewrite support. See the [how do rewrites work](https://vercel.com/docs/edge-network/rewrites#how-do-rewrites-work) documentation to learn how to rewrite to an external destination, from a specific path.\n\nUse [Edge Config](https://vercel.com/docs/storage/edge-config) with [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) to rewrite requests at the edge with the following benefits:\n\n*   No need to re-deploy your application when rewrite changes are required\n*   Immediately switch back to the legacy server if the new feature implementation is broken\n\nReview this [maintenance page example](https://vercel.com/templates/next.js/maintenance-page) to understand the mechanics of this approach\n\nThis is an example middleware code for executing the rewrites at the edge:\n\n```\nimport { get } from '@vercel/edge-config';\nimport { NextRequest, NextResponse } from 'next/server';\n \nexport const config = {\n  matcher: '/((?!api|_next/static|favicon.ico).*)',\n};\n \nexport default async function middleware(request: NextRequest) {\n  const url = request.nextUrl;\n  const rewrites = await get('rewrites'); // Get rewrites stored in Edge Config\n \n  for (const rewrite of rewrites) {\n    if (rewrite.source === url.pathname) {\n      url.pathname = rewrite.destination;\n      return NextResponse.rewrite(url);\n    }\n  }\n \n  return NextResponse.next();\n}\n```\n\nIn the above example, you use Edge Config to store one key-value pair for each rewrite. In this case, you should consider [Edge Config Limits](https://vercel.com/docs/storage/edge-config/edge-config-limits) (For example, 5000 routes would require around 512KB of storage). You can also rewrite based on [URLPatterns](https://developer.mozilla.org/docs/Web/API/URLPattern) where you would store each URLPattern as a key-value pair in Edge Config and not require one pair for each route.\n\nConnect your [production domain](https://vercel.com/docs/getting-started-with-vercel/domains) to your Vercel Project. All your traffic will now be sent to the legacy server.\n\nDevelop and test the first iteration of your application on Vercel on specific paths.\n\nWith the fallback approach such as with the `next.config.js` example above, Next.js will automatically serve content from your Vercel project as you add new paths to your application. You will therefore not need to make any rewrite configuration changes as you iterate. For specific rewrite rules, you will need to remove/update them as you iterate.\n\nRepeat this process until all the paths are migrated to Vercel and all rewrites are removed.\n\nIn this approach, once you have tested a specific feature on your new Vercel application, you configure your legacy server or proxy to send the traffic on that path to the path on the Vercel deployment where the feature is deployed.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fincremental-migration%2Fapproach-2-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fincremental-migration%2Fapproach-2-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nKeep your domain on the legacy server approach\n\nUse the [framework](https://vercel.com/docs/frameworks) of your choice to deploy your application on Vercel and build the first feature that you would like to migrate.\n\nOnce you have tested the first feature fully on Vercel, add a rewrite or reverse proxy to your existing server to send the traffic on the path for that feature to the Vercel deployment.\n\nFor example, if you are using [nginx](https://nginx.org/), you can use the [`proxy_pass`](https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass) directive to send the traffic to the Vercel deployment.\n\nLet's say you deployed the new feature at the folder `new-feature` of the new Next.js application and set its [`basePath`](https://nextjs.org/docs/app/api-reference/next-config-js/basePath) to `/new-feature`, as shown below:\n\n```\nmodule.exports = {\n  basePath: '/new-feature',\n};\n```\n\nWhen deployed, your new feature will be available at `https://my-new-app.vercel.app/`.\n\nYou can then use the following nginx configuration to send the traffic for that feature from the legacy server to the new implementation:\n\n```\nserver {\n    listen 80;\n    server_name legacy-server.com www.legacy-server.com;\n \n    location /feature-path-on-legacy-server {\n        proxy_pass https://my-new-app.vercel.app/;\n    }\n}\n```\n\nRepeat steps 1 and 2 until all the features have been migrated to Vercel. You can then point your domain to Vercel and remove the legacy server.\n\nVercel has a limit of 1024 routes per deployment for rewrites. If you have more than 1024 routes, you may want to consider creating a custom solution using Middleware. For more information on how to do this in Next.js, see [Managing redirects at scale](https://nextjs.org/docs/app/building-your-application/routing/redirecting#managing-redirects-at-scale-advanced).\n\nIf you're facing unexpected outcomes or cannot find an immediate solution for an unexpected behaviour with a new feature, you can set up a variable in [Edge Config](https://vercel.com/docs/storage/edge-config) that you can turn on and off at any time without having to make any code changes on your deployment. The value of this variable will determine whether you rewrite to the new version or the legacy server.\n\nFor example, with Next.js, you can use the follow [middleware](https://vercel.com/docs/functions/edge-middleware) code example:\n\n```\nimport { NextRequest, NextResponse } from 'next/server';\nimport { get } from '@vercel/edge-config';\n \nexport const config = {\n  matcher: ['/'], // URL to match\n};\n \nexport async function middleware(request: NextRequest) {\n  try {\n    // Check whether the new version should be shown - isNewVersionActive is a boolean value stored in Edge Config that you can update from your Project dashboard without any code changes\n    const isNewVersionActive = await get<boolean>('isNewVersionActive');\n \n    // If `isNewVersionActive` is false, rewrite to the legacy server URL\n    if (!isNewVersionActive) {\n      req.nextUrl.pathname = `/legacy-path`;\n      return NextResponse.rewrite(req.nextUrl);\n    }\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n[Create an Edge Config](https://vercel.com/docs/storage/edge-config/edge-config-dashboard#create-an-edge-config) and set it to `{ \"isNewVersionActive\": true }`. By default, the new feature is active since `isNewVersionActive` is `true`. If you experience any issues, you can fallback to the legacy server by setting `isNewVersionActive` to `false` in the Edge Config from your Vercel dashboard.",
  "title": "Incremental Migration Guide",
  "description": "Discover how to perform a zero downtime migration on Vercel: A guide to incrementally transitioning your site for optimal performance.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/rest-api/errors",
  "markdown": "# Vercel REST API Errors\n\nThese error codes are consistent for all endpoints.\n\nYou're not authorized to use the endpoint. This usually happens due to missing an user token.\n\nSimilar to the HTTP 403 Forbidden error.\n\n```\n{\n  \"error\": {\n    \"code\": \"forbidden\",\n    \"message\": \"Not authorized\"\n  }\n}\n```\n\nYou exceeded the maximum allotted requests.\n\nThe limit of request is per endpoint basis so you could continue using another endpoints even if some of them give you this error.\n\n```\n{\n  \"error\": {\n    \"code\": \"rate_limited\",\n    \"message\": \"The rate limit of 6 exceeded for 'api-www-user-update-username'. Try again in 7 days\",\n    \"limit\": {\n      \"remaining\": 0,\n      \"reset\": 1571432075,\n      \"resetMs\": 1571432075563,\n      \"total\": 6\n    }\n  }\n}\n```\n\nThere was an error with the request, the `error.message` would contain information about the issue.\n\n```\n{\n  \"error\": {\n    \"code\": \"bad_request\",\n    \"message\": \"An english description of the error that just occurred\"\n  }\n}\n```\n\nThis errors is similar to the HTTP 500 Internal Server Error error code.\n\n```\n{\n  \"error\": {\n    \"code\": \"internal_server_error\",\n    \"message\": \"An unexpected internal error occurred\"\n  }\n}\n```\n\nThe requested resource could not be found\n\n```\n{\n  \"error\": {\n    \"code\": \"not_found\",\n    \"message\": \"Could not find the RESOURCE: ID\"\n  }\n}\n```\n\nThe endpoint you're requesting does not handle the method you defined. The error message will contain the methods the endpoint responds to.\n\n```\n{\n  \"error\": {\n    \"code\": \"method_unknown\",\n    \"message\": \"This endpoint only responds to METHOD\"\n  }\n}\n```\n\nThese error code could happen when using any [deployment related endpoint](#endpoints/deployments).\n\nSome of the files you defined when creating the deployment are missing.\n\n```\n{\n  \"error\": {\n    \"code\": \"missing_files\",\n    \"message\": \"Missing files\",\n    \"missing\": []\n  }\n}\n```\n\nYou tried to create an empty deployment.\n\n```\n{\n  \"error\": {\n    \"code\": \"no_files\",\n    \"message\": \"No files in the deployment\"\n  }\n}\n```\n\nThe limit of environment variables per deployment is 100 and you defined more. The error message indicates the amount you define.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_too_many_keys\",\n    \"message\": \"Too many env vars have been supplied (100 max allowed, but got #)\"\n  }\n}\n```\n\n`#` is your number of variables.\n\nSome environment variable name contains an invalid character. The only valid characters are letters, digits and `_`.\n\nThe error message will contain the `KEY` with the problem.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_key_invalid_characters\",\n    \"message\": \"The env key \"KEY\" contains invalid characters. Only letters, digits and \\`_\\` are allowed\",\n    \"key\": KEY\n  }\n}\n```\n\nAn environment variable name is too long, the maximum permitted name is 256 characters.\n\nThe error message contains the environment `KEY`.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_key_invalid_length\",\n    \"message\": \"The env key \"KEY\" exceeds the 256 length limit\",\n    \"key\": KEY\n  }\n}\n```\n\nAn environment variable value contains a value too long, the maximum permitted value is 65536 characters.\n\nThe error message contains the environment `KEY`.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_value_invalid_length\",\n    \"message\": \"The env value for \"KEY\" exceeds the 65536 length limit\",\n    \"key\": KEY,\n    \"value\": VALUE\n  }\n}\n```\n\nThe value of an environment variable is object but it doesn't have a `uid`.\n\nThe error message contains the environment `KEY` which has the error.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_value_invalid_type_missing_uid\",\n    \"message\": \"The env key \"KEY\" passed an object as a value with no \\`uid\\` key\"\n  }\n}\n```\n\nThe value of an environment variable is an object with unknown attributes, it only can have a `uid` key inside the object.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_value_invalid_type_unknown_props\",\n    \"message\": \"The env key \"KEY\" passed an object with unknown properties. Only \\`uid\\` is allowed when passing an object\"\n  }\n}\n```\n\nAn environment variable value passed is of an unsupported type.\n\nThe error message contains the environment `KEY`.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_value_invalid_type\",\n    \"message\": \"The env key \"KEY\" passed an unsupported type for its value\",\n    \"key\": KEY\n  }\n}\n```\n\nYou're trying to use a secret but you don't have access to it.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_secret_forbidden\",\n    \"message\": \"Not allowed to access secret \\\\\"NAME\\\\\"\",\n    \"uid\": UID\n  }\n}\n```\n\nYou're trying to use a secret as an environment value and it doesn't exists.\n\n```\n{\n  \"error\": {\n    \"code\": \"env_secret_missing\",\n    \"message\": \"Could not find a secret by uid \"UID\"\",\n    \"uid\": UID\n  }\n}\n```\n\nThese error code could happen when using any [domains related endpoints](#endpoints/domains).\n\nYou don't have access to the domain, this usually mean this domains is owned by another account or team.\n\nThe domain is specified in the message and the `DOMAIN` key.\n\n```\n{\n  \"error\": {\n    \"code\": \"forbidden\",\n    \"message\": \"You don't have access to \\\\\"DOMAIN\\\\\"\",\n    \"domain\": DOMAIN\n  }\n}\n```\n\nThe domain name could not be found in our system. Try to [add it first](#endpoints/domains/register-or-transfer-in-a-new-domain).\n\n```\n{\n  \"error\": {\n    \"code\": \"not_found\",\n    \"message\": \"Domain name not found\"\n  }\n}\n```\n\nThe domain name wasn't specified in the URL. This means you tried to use an endpoint which require you to define the domain name in the URL but didn't defined it.\n\n```\n{\n  \"error\": {\n    \"code\": \"missing_name\",\n    \"message\": \"The URL was expected to include the domain name. Example: /domains/google.com\"\n  }\n}\n```\n\nYou must [remove the certificates](#endpoints/certificates/delete-a-certificate) described in the error before removing the domains.\n\nThe certificates are specified in the `CERT_CNS` key.\n\n```\n{\n  \"error\": {\n    \"code\": \"conflict_certs\",\n    \"message\": \"The following certificates must be removed before removing the domain: CERT_CNS\",\n    \"certCNs\": CERT_CNS\n  }\n}\n```\n\nYou must [remove the aliases](#endpoints/aliases/delete-an-alias) described in the error before removing the domains.\n\nThe aliases are specified in the `ALIASES` key.\n\n```\n{\n  \"error\": {\n    \"code\": \"conflict_aliases\",\n    \"message\": \"The following aliases must be removed before removing the domain: ALIASES\",\n    \"aliases\": ALIASES\n  }\n}\n```\n\nWhen trying to modify a domain nothing was required to change.\n\n```\n{\n  \"error\": {\n    \"code\": \"not_modified\",\n    \"message\": \"Nothing to do\"\n  }\n}\n```\n\nWhen trying to add a domain the name wasn't present in the request body.\n\n```\n{\n  \"error\": {\n    \"code\": \"missing_name\",\n    \"message\": \"The `name` field in the body was expected but is not present in the body payload. Example value: `example.com`\"\n  }\n}\n```\n\nThe domain name defined in the request body is invalid.\n\nThe name is specified in the error as the `NAME` key.\n\n```\n{\n  \"error\": {\n    \"code\": \"invalid_name\",\n    \"message\": \"The \\`name\\` field contains an invalid domain name (\"NAME\")\",\n    \"name\": NAME\n  }\n}\n```\n\nIn order to add a custom domain to your account or team you need to upgrade to a paid plan.\n\n```\n{\n  \"error\": {\n    \"code\": \"custom_domain_needs_upgrade\",\n    \"message\": \"Domain name creation requires a premium account.\"\n  }\n}\n```\n\nThe domain name you're trying to add already exists.\n\nThe domain name and its current ID are received in the `NAME` and `DOMAIN_ID` keys.\n\n```\n{\n  \"error\": {\n    \"code\": \"not_modified\",\n    \"message\": \"The domain \"NAME\" already exists\",\n    \"name\": NAME,\n    \"uid\": DOMAIN_ID\n  }\n}\n```\n\nThe domain name can't be created. Most probably it couldn't be verified.\n\n```\n{\n  \"error\": {\n    \"code\": \"forbidden\",\n    \"message\": \"You don't have permission to create a domain\"\n  }\n}\n```\n\nWe were able to purchase a domain for you but we had an error when trying to add it to your account. Please contact us on [Contact Support](https://vercel.com/help).\n\n```\n{\n  \"error\": {\n    \"code\": \"failed_to_add_domain\",\n    \"message\": \"The domain was bought but couldn't be added.\n  }\n}\n```\n\nWe're unable to determine the domain price of a domain.\n\n```\n{\n  \"error\": {\n    \"code\": \"service_unavailable\",\n    \"message\": \"Failed to determine the domain price\"\n  }\n}\n```\n\nThe `expectedPrice` supplied in the request body does not match the actual domain price, which is specified in the `actualPrice` key.\n\n```\n{\n  \"error\": {\n    \"code\": \"price_mismatch\",\n    \"message\": \"The expected price does not match the actual price\",\n    \"price\": ACTUAL_PRICE\n  }\n}\n```\n\nThe domain name is not available to be purchased.\n\n```\n{\n  \"error\": {\n    \"code\": \"not_available\",\n    \"message\": \"Domain is not available\"\n  }\n}\n```\n\nThe domain name or TLD is invalid or not supported.\n\n```\n{\n  \"error\": {\n    \"code\": \"invalid_domain\",\n    \"message\": \"Invalid domain or TLD\"\n  }\n}\n```\n\nThe DNS record key `name` is required and was not provided. It could be [any valid DNS record](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n\n```\n{\n  \"error\": {\n    \"code\": \"missing_type\",\n    \"message\": \"Missing `type` parameter\"\n  }\n}\n```\n\nThese error code could happen when using any [DNS related endpoint](#endpoints/dns).\n\nThe DNS record key `name` is required and was not provided. It should be either a subdomain or `@` for the domain itself.\n\n```\n{\n  \"error\": {\n    \"code\": \"missing_name\",\n    \"message\": \"Missing `name` parameter\"\n  }\n}\n```\n\nThe DNS record key `name` is required and was not provided. It could be [any valid DNS record](https://en.wikipedia.org/wiki/List_of_DNS_record_types).\n\n```\n{\n  \"error\": {\n    \"code\": \"missing_type\",\n    \"message\": \"Missing `type` parameter\"\n  }\n}\n```\n\nThese errors could occur when using any [OAuth2 related endpoint](https://vercel.com/docs/integrations#using-the-vercel-api/getting-an-access-token).\n\nThe OAuth2 client ID could not be found or doesn't exist.\n\n```\n{\n  \"error\": {\n    \"code\": \"not_found\",\n    \"message\": \"OAuth client doesn't not found: CLIENT_ID\"\n  }\n}\n```",
  "title": "Vercel REST API Errors",
  "description": "The Vercel REST API is a REST-styled API that gives full control over the entire Vercel platform.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/rest-api/endpoints",
  "markdown": "# Vercel REST API Endpoints\n\n*   [\n    \n    ## Creates an access group\n    \n    Allows to create an access group\n    \n    postaccess-groups\n    \n    `/v1/access-groups`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#creates-an-access-group)\n*   [\n    \n    ## Deletes an access group\n    \n    Allows to delete an access group\n    \n    deleteaccess-groups\n    \n    `/v1/access-groups/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#deletes-an-access-group)\n*   [\n    \n    ## List members of an access group\n    \n    List members of an access group\n    \n    getaccess-groups\n    \n    `/v1/access-groups/{idOrName}/members`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#list-members-of-an-access-group)\n*   [\n    \n    ## List projects of an access group\n    \n    List projects of an access group\n    \n    getaccess-groups\n    \n    `/v1/access-groups/{idOrName}/projects`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#list-projects-of-an-access-group)\n*   [\n    \n    ## List access groups for a team, project or member\n    \n    List access groups\n    \n    getaccess-groups\n    \n    `/v1/access-groups`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#list-access-groups-for-a-team-project-or-member)\n*   [\n    \n    ## Reads an access group\n    \n    Allows to read an access group\n    \n    getaccess-groups\n    \n    `/v1/access-groups/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#reads-an-access-group)\n*   [\n    \n    ## Update an access group\n    \n    Allows to update an access group metadata\n    \n    postaccess-groups\n    \n    `/v1/access-groups/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/access-groups#update-an-access-group)\n*   [\n    \n    ## Assign an Alias\n    \n    Creates a new alias for the deployment with the given deployment ID. The authenticated user or team must own this deployment. If the desired alias is already assigned to another deployment, then it will be removed from the old deployment and assigned to the new one.\n    \n    postaliases\n    \n    `/v2/deployments/{id}/aliases`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/aliases#assign-an-alias)\n*   [\n    \n    ## Delete an Alias\n    \n    Delete an Alias with the specified ID.\n    \n    deletealiases\n    \n    `/v2/aliases/{aliasId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/aliases#delete-an-alias)\n*   [\n    \n    ## Get an Alias\n    \n    Retrieves an Alias for the given host name or alias ID.\n    \n    getaliases\n    \n    `/v4/aliases/{idOrAlias}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/aliases#get-an-alias)\n*   [\n    \n    ## List aliases\n    \n    Retrieves a list of aliases for the authenticated User or Team. When `domain` is provided, only aliases for that domain will be returned. When `projectId` is provided, it will only return the given project aliases.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/aliases#list-aliases)\n*   [\n    \n    ## List Deployment Aliases\n    \n    Retrieves all Aliases for the Deployment with the given ID. The authenticated user or team must own the deployment.\n    \n    getaliases\n    \n    `/v2/deployments/{id}/aliases`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/aliases#list-deployment-aliases)\n*   [\n    \n    ## Check if a cache artifact exists\n    \n    Check that a cache artifact with the given `hash` exists. This request returns response headers only and is equivalent to a `GET` request to this endpoint where the response contains no body.\n    \n    headartifacts\n    \n    `/v8/artifacts/{hash}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/artifacts#check-if-a-cache-artifact-exists)\n*   [\n    \n    ## Query information about an artifact\n    \n    Query information about an array of artifacts.\n    \n    postartifacts\n    \n    `/v8/artifacts`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/artifacts#query-information-about-an-artifact)\n*   [\n    \n    ## Download a cache artifact\n    \n    Downloads a cache artifact indentified by its `hash` specified on the request path. The artifact is downloaded as an octet-stream. The client should verify the content-length header and response body.\n    \n    getartifacts\n    \n    `/v8/artifacts/{hash}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/artifacts#download-a-cache-artifact)\n*   [\n    \n    ## Record an artifacts cache usage event\n    \n    Records an artifacts cache usage event. The body of this request is an array of cache usage events. The supported event types are `HIT` and `MISS`. The source is either `LOCAL` the cache event was on the users filesystem cache or `REMOTE` if the cache event is for a remote cache. When the event is a `HIT` the request also accepts a number `duration` which is the time taken to generate the artifact in the cache.\n    \n    postartifacts\n    \n    `/v8/artifacts/events`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/artifacts#record-an-artifacts-cache-usage-event)\n*   [\n    \n    ## Get status of Remote Caching for this principal\n    \n    Check the status of Remote Caching for this principal. Returns a JSON-encoded status indicating if Remote Caching is enabled, disabled, or disabled due to usage limits.\n    \n    getartifacts\n    \n    `/v8/artifacts/status`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/artifacts#get-status-of-remote-caching-for-this-principal)\n*   [\n    \n    ## Upload a cache artifact\n    \n    Uploads a cache artifact identified by the `hash` specified on the path. The cache artifact can then be downloaded with the provided `hash`.\n    \n    putartifacts\n    \n    `/v8/artifacts/{hash}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/artifacts#upload-a-cache-artifact)\n*   [\n    \n    ## Create an Auth Token\n    \n    Creates and returns a new authentication token for the currently authenticated User. The `bearerToken` property is only provided once, in the response body, so be sure to save it on the client for use with API requests.\n    \n    postauthentication\n    \n    `/v3/user/tokens`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/authentication#create-an-auth-token)\n*   [\n    \n    ## Delete an authentication token\n    \n    Invalidate an authentication token, such that it will no longer be valid for future HTTP requests.\n    \n    deleteauthentication\n    \n    `/v3/user/tokens/{tokenId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/authentication#delete-an-authentication-token)\n*   [\n    \n    ## Login with email\n    \n    Request a new login for a user to get a token. This will respond with a verification token and send an email to confirm the request. Once confirmed you can use the verification token to get an authentication token.\n    \n    postauthentication\n    \n    `/registration`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/authentication#login-with-email)\n*   [\n    \n    ## Get Auth Token Metadata\n    \n    Retrieve metadata about an authentication token belonging to the currently authenticated User.\n    \n    getauthentication\n    \n    `/v5/user/tokens/{tokenId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/authentication#get-auth-token-metadata)\n*   [\n    \n    ## List Auth Tokens\n    \n    Retrieve a list of the current User's authentication tokens.\n    \n    getauthentication\n    \n    `/v5/user/tokens`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/authentication#list-auth-tokens)\n*   [\n    \n    ## Verify a login request to get an authentication token\n    \n    Verify the user accepted the login request and get a authentication token. The user email address and the token received after requesting the login must be added to the URL as a query string with the names `email` and `token`.\n    \n    getauthentication\n    \n    `/registration/verify`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/authentication#verify-a-login-request-to-get-an-authentication-token)\n*   [\n    \n    ## Get cert by id\n    \n    Get cert by id\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/certs#get-cert-by-id)\n*   [\n    \n    ## Issue a new cert\n    \n    Issue a new cert\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/certs#issue-a-new-cert)\n*   [\n    \n    ## Remove cert\n    \n    Remove cert\n    \n    deletecerts\n    \n    `/v7/certs/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/certs#remove-cert)\n*   [\n    \n    ## Upload a cert\n    \n    Upload a cert\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/certs#upload-a-cert)\n*   [\n    \n    ## Creates a new Check\n    \n    Creates a new check. This endpoint must be called with an OAuth2 or it will produce a 400 error.\n    \n    postchecks\n    \n    `/v1/deployments/{deploymentId}/checks`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/checks#creates-a-new-check)\n*   [\n    \n    ## Retrieve a list of all checks\n    \n    List all of the checks created for a deployment.\n    \n    getchecks\n    \n    `/v1/deployments/{deploymentId}/checks`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/checks#retrieve-a-list-of-all-checks)\n*   [\n    \n    ## Get a single check\n    \n    Return a detailed response for a single check.\n    \n    getchecks\n    \n    `/v1/deployments/{deploymentId}/checks/{checkId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/checks#get-a-single-check)\n*   [\n    \n    ## Rerequest a check\n    \n    Rerequest a selected check that has failed.\n    \n    postchecks\n    \n    `/v1/deployments/{deploymentId}/checks/{checkId}/rerequest`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/checks#rerequest-a-check)\n*   [\n    \n    ## Update a check\n    \n    Update an existing check. This endpoint must be called with an OAuth2 or it will produce a 400 error.\n    \n    patchchecks\n    \n    `/v1/deployments/{deploymentId}/checks/{checkId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/checks#update-a-check)\n*   [\n    \n    ## Cancel a deployment\n    \n    This endpoint allows you to cancel a deployment which is currently building, by supplying its `id` in the URL.\n    \n    patchdeployments\n    \n    `/v12/deployments/{id}/cancel`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#cancel-a-deployment)\n*   [\n    \n    ## Create a new deployment\n    \n    Create a new deployment with all the required and intended data. If the deployment is not a git deployment, all files must be provided with the request, either referenced or inlined. Additionally, a deployment id can be specified to redeploy a previous deployment.\n    \n    postdeployments\n    \n    `/v13/deployments`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#create-a-new-deployment)\n*   [\n    \n    ## Delete a Deployment\n    \n    This API allows you to delete a deployment, either by supplying its `id` in the URL or the `url` of the deployment as a query parameter. You can obtain the ID, for example, by listing all deployments.\n    \n    deletedeployments\n    \n    `/v13/deployments/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#delete-a-deployment)\n*   [\n    \n    ## Get a deployment by ID or URL\n    \n    Retrieves information for a deployment either by supplying its ID (`id` property) or Hostname (`url` property). Additional details will be included when the authenticated user or team is an owner of the deployment.\n    \n    getdeployments\n    \n    `/v13/deployments/{idOrUrl}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#get-a-deployment-by-id-or-url)\n*   [\n    \n    ## Get deployment events\n    \n    Get the build logs of a deployment by deployment ID and build ID. It can work as an infinite stream of logs or as a JSON endpoint depending on the input parameters.\n    \n    getdeployments\n    \n    `/v3/deployments/{idOrUrl}/events`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#get-deployment-events)\n*   [\n    \n    ## Get Deployment File Contents\n    \n    Allows to retrieve the content of a file by supplying the file identifier and the deployment unique identifier. The response body will contain a JSON response containing the contents of the file encoded as base64.\n    \n    getdeployments\n    \n    `/v7/deployments/{id}/files/{fileId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#get-deployment-file-contents)\n*   [\n    \n    ## List deployments\n    \n    List deployments under the authenticated user or team. If a deployment hasn't finished uploading (is incomplete), the `url` property will have a value of `null`.\n    \n    getdeployments\n    \n    `/v6/deployments`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#list-deployments)\n*   [\n    \n    ## List Deployment Files\n    \n    Allows to retrieve the file structure of a deployment by supplying the deployment unique identifier.\n    \n    getdeployments\n    \n    `/v6/deployments/{id}/files`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#list-deployment-files)\n*   [\n    \n    ## Upload Deployment Files\n    \n    Before you create a deployment you need to upload the required files for that deployment. To do it, you need to first upload each file to this endpoint. Once that's completed, you can create a new deployment with the uploaded files. The file content must be placed inside the body of the request. In the case of a successful response you'll receive a status code 200 with an empty body.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/deployments#upload-deployment-files)\n*   [\n    \n    ## Create a DNS record\n    \n    Creates a DNS record for a domain.\n    \n    postdns\n    \n    `/v2/domains/{domain}/records`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/dns#create-a-dns-record)\n*   [\n    \n    ## List existing DNS records\n    \n    Retrieves a list of DNS records created for a domain name. By default it returns 20 records if no limit is provided. The rest can be retrieved using the pagination options.\n    \n    getdns\n    \n    `/v4/domains/{domain}/records`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/dns#list-existing-dns-records)\n*   [\n    \n    ## Delete a DNS record\n    \n    Removes an existing DNS record from a domain name.\n    \n    deletedns\n    \n    `/v2/domains/{domain}/records/{recordId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/dns#delete-a-dns-record)\n*   [\n    \n    ## Update an existing DNS record\n    \n    Updates an existing DNS record for a domain name.\n    \n    patchdns\n    \n    `/v1/domains/records/{recordId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/dns#update-an-existing-dns-record)\n*   [\n    \n    ## Purchase a domain\n    \n    Allows to purchase the specified domain.\n    \n    postdomains\n    \n    `/v5/domains/buy`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#purchase-a-domain)\n*   [\n    \n    ## Check the price for a domain\n    \n    Check the price to purchase a domain and how long a single purchase period is.\n    \n    getdomains\n    \n    `/v4/domains/price`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#check-the-price-for-a-domain)\n*   [\n    \n    ## Check a Domain Availability\n    \n    Check if a domain name is available for purchase.\n    \n    getdomains\n    \n    `/v4/domains/status`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#check-a-domain-availability)\n*   [\n    \n    ## Register or transfer-in a new Domain\n    \n    This endpoint is used for adding a new apex domain name with Vercel for the authenticating user. Can also be used for initiating a domain transfer request from an external Registrar to Vercel.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#register-or-transfer-in-a-new-domain)\n*   [\n    \n    ## Remove a domain by name\n    \n    Delete a previously registered domain name from Vercel. Deleting a domain will automatically remove any associated aliases.\n    \n    deletedomains\n    \n    `/v6/domains/{domain}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#remove-a-domain-by-name)\n*   [\n    \n    ## Get Information for a Single Domain\n    \n    Get information for a single domain in an account or team.\n    \n    getdomains\n    \n    `/v5/domains/{domain}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#get-information-for-a-single-domain)\n*   [\n    \n    ## Get a Domain's configuration\n    \n    Get a Domain's configuration.\n    \n    getdomains\n    \n    `/v6/domains/{domain}/config`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#get-a-domain's-configuration)\n*   [\n    \n    ## Get domain transfer info.\n    \n    Fetch domain transfer availability or transfer status if a transfer is in progress.\n    \n    getdomains\n    \n    `/v1/domains/{domain}/registry`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#get-domain-transfer-info.)\n*   [\n    \n    ## List all the domains\n    \n    Retrieves a list of domains registered for the authenticated user or team. By default it returns the last 20 domains if no limit is provided.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#list-all-the-domains)\n*   [\n    \n    ## Update or move apex domain\n    \n    Update or move apex domain.\n    \n    patchdomains\n    \n    `/v3/domains/{domain}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/domains#update-or-move-apex-domain)\n*   [\n    \n    ## Create an Edge Config\n    \n    Creates an Edge Config.\n    \n    postedge-config\n    \n    `/v1/edge-config`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#create-an-edge-config)\n*   [\n    \n    ## Create an Edge Config token\n    \n    Adds a token to an existing Edge Config.\n    \n    postedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/token`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#create-an-edge-config-token)\n*   [\n    \n    ## Delete an Edge Config\n    \n    Delete an Edge Config by id.\n    \n    deleteedge-config\n    \n    `/v1/edge-config/{edgeConfigId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#delete-an-edge-config)\n*   [\n    \n    ## Delete an Edge Config's schema\n    \n    Deletes the schema of existing Edge Config.\n    \n    deleteedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/schema`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#delete-an-edge-config's-schema)\n*   [\n    \n    ## Delete one or more Edge Config tokens\n    \n    Deletes one or more tokens of an existing Edge Config.\n    \n    deleteedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/tokens`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#delete-one-or-more-edge-config-tokens)\n*   [\n    \n    ## Get an Edge Config\n    \n    Returns an Edge Config.\n    \n    getedge-config\n    \n    `/v1/edge-config/{edgeConfigId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-an-edge-config)\n*   [\n    \n    ## Get an Edge Config item\n    \n    Returns a specific Edge Config Item.\n    \n    getedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/item/{edgeConfigItemKey}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-an-edge-config-item)\n*   [\n    \n    ## Get Edge Config items\n    \n    Returns all items of an Edge Config.\n    \n    getedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/items`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-edge-config-items)\n*   [\n    \n    ## Get Edge Config schema\n    \n    Returns the schema of an Edge Config.\n    \n    getedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/schema`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-edge-config-schema)\n*   [\n    \n    ## Get Edge Config token meta data\n    \n    Return meta data about an Edge Config token.\n    \n    getedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/token/{token}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-edge-config-token-meta-data)\n*   [\n    \n    ## Get all tokens of an Edge Config\n    \n    Returns all tokens of an Edge Config.\n    \n    getedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/tokens`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-all-tokens-of-an-edge-config)\n*   [\n    \n    ## Get Edge Configs\n    \n    Returns all Edge Configs.\n    \n    getedge-config\n    \n    `/v1/edge-config`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#get-edge-configs)\n*   [\n    \n    ## Update Edge Config items in batch\n    \n    Update multiple Edge Config Items in batch.\n    \n    patchedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/items`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#update-edge-config-items-in-batch)\n*   [\n    \n    ## Update Edge Config schema\n    \n    Update an Edge Config's schema.\n    \n    postedge-config\n    \n    `/v1/edge-config/{edgeConfigId}/schema`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#update-edge-config-schema)\n*   [\n    \n    ## Update an Edge Config\n    \n    Updates an Edge Config.\n    \n    putedge-config\n    \n    `/v1/edge-config/{edgeConfigId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/edge-config#update-an-edge-config)\n*   [\n    \n    ## Delete an integration configuration\n    \n    Allows to remove the configuration with the `id` provided in the parameters. The configuration and all of its resources will be removed. This includes Webhooks, LogDrains and Project Env variables.\n    \n    deleteintegrations\n    \n    `/v1/integrations/configuration/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/integrations#delete-an-integration-configuration)\n*   [\n    \n    ## Retrieve an integration configuration\n    \n    Allows to retrieve a the configuration with the provided id in case it exists. The authenticated user or team must be the owner of the config in order to access it.\n    \n    getintegrations\n    \n    `/v1/integrations/configuration/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/integrations#retrieve-an-integration-configuration)\n*   [\n    \n    ## Get configurations for the authenticated user or team\n    \n    Allows to retrieve all configurations for an authenticated integration. When the `project` view is used, configurations generated for the authorization flow will be filtered out of the results.\n    \n    getintegrations\n    \n    `/v1/integrations/configurations`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/integrations#get-configurations-for-the-authenticated-user-or-team)\n*   [\n    \n    ## List git namespaces by provider\n    \n    Lists git namespaces for a supported provider. Supported providers are `github`, `gitlab` and `bitbucket`. If the provider is not provided, it will try to obtain it from the user that authenticated the request.\n    \n    getintegrations\n    \n    `/v1/integrations/git-namespaces`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/integrations#list-git-namespaces-by-provider)\n*   [\n    \n    ## List git repositories linked to namespace by provider\n    \n    Lists git repositories linked to a namespace `id` for a supported provider. A specific namespace `id` can be obtained via the `git-namespaces` endpoint. Supported providers are `github`, `gitlab` and `bitbucket`. If the provider or namespace is not provided, it will try to obtain it from the user that authenticated the request.\n    \n    getintegrations\n    \n    `/v1/integrations/search-repo`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/integrations#list-git-repositories-linked-to-namespace-by-provider)\n*   [\n    \n    ## Creates a Configurable Log Drain\n    \n    Creates a configurable log drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed)\n    \n    postlogDrains\n    \n    `/v1/log-drains`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#creates-a-configurable-log-drain)\n*   [\n    \n    ## Creates a new Integration Log Drain\n    \n    Creates an Integration log drain. This endpoint must be called with an OAuth2 client (integration), since log drains are tied to integrations. If it is called with a different token type it will produce a 400 error.\n    \n    postlogDrains\n    \n    `/v2/integrations/log-drains`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#creates-a-new-integration-log-drain)\n*   [\n    \n    ## Deletes a Configurable Log Drain\n    \n    Deletes a Configurable Log Drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated team can be deleted.\n    \n    deletelogDrains\n    \n    `/v1/log-drains/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#deletes-a-configurable-log-drain)\n*   [\n    \n    ## Deletes the Integration log drain with the provided \\`id\\`\n    \n    Deletes the Integration log drain with the provided `id`. When using an OAuth2 Token, the log drain can be deleted only if the integration owns it.\n    \n    deletelogDrains\n    \n    `/v1/integrations/log-drains/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#deletes-the-integration-log-drain-with-the-provided-%60id%60)\n*   [\n    \n    ## Retrieves a list of all the Log Drains\n    \n    Retrieves a list of all the Log Drains owned by the account. This endpoint must be called with an account AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated account can be accessed.\n    \n    getlogDrains\n    \n    `/v1/log-drains`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#retrieves-a-list-of-all-the-log-drains)\n*   [\n    \n    ## Retrieves a Configurable Log Drain\n    \n    Retrieves a Configurable Log Drain. This endpoint must be called with a team AccessToken (integration OAuth2 clients are not allowed). Only log drains owned by the authenticated team can be accessed.\n    \n    getlogDrains\n    \n    `/v1/log-drains/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#retrieves-a-configurable-log-drain)\n*   [\n    \n    ## Retrieves a list of Integration log drains\n    \n    Retrieves a list of all Integration log drains that are defined for the authenticated user or team. When using an OAuth2 token, the list is limited to log drains created by the authenticated integration.\n    \n    getlogDrains\n    \n    `/v2/integrations/log-drains`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/logDrains#retrieves-a-list-of-integration-log-drains)\n*   [\n    \n    ## Adds a new member to a project.\n    \n    Adds a new member to the project.\n    \n    postprojectMembers\n    \n    `/v1/projects/{idOrName}/members`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projectMembers#adds-a-new-member-to-a-project.)\n*   [\n    \n    ## List project members\n    \n    Lists all members of a project.\n    \n    getprojectMembers\n    \n    `/v1/projects/{idOrName}/members`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projectMembers#list-project-members)\n*   [\n    \n    ## Remove a Project Member\n    \n    Remove a member from a specific project\n    \n    deleteprojectMembers\n    \n    `/v1/projects/{idOrName}/members/{uid}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projectMembers#remove-a-project-member)\n*   [\n    \n    ## Add a domain to a project\n    \n    Add a domain to the project by passing its domain name and by specifying the project by either passing the project `id` or `name` in the URL. If the domain is not yet verified to be used on this project, the request will return `verified = false`, and the domain will need to be verified according to the `verification` challenge via `POST /projects/:idOrName/domains/:domain/verify`. If the domain already exists on the project, the request will fail with a `400` status code.\n    \n    postprojects\n    \n    `/v10/projects/{idOrName}/domains`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#add-a-domain-to-a-project)\n*   [\n    \n    ## Create a new project\n    \n    Allows to create a new project with the provided configuration. It only requires the project `name` but more configuration can be provided to override the defaults.\n    \n    postprojects\n    \n    `/v10/projects`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#create-a-new-project)\n*   [\n    \n    ## Create one or more environment variables\n    \n    Create one ore more environment variables for a project by passing its `key`, `value`, `type` and `target` and by specifying the project by either passing the project `id` or `name` in the URL.\n    \n    postprojects\n    \n    `/v10/projects/{idOrName}/env`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#create-one-or-more-environment-variables)\n*   [\n    \n    ## Delete a Project\n    \n    Delete a specific project by passing either the project `id` or `name` in the URL.\n    \n    deleteprojects\n    \n    `/v9/projects/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#delete-a-project)\n*   [\n    \n    ## Edit an environment variable\n    \n    Edit a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.\n    \n    patchprojects\n    \n    `/v9/projects/{idOrName}/env/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#edit-an-environment-variable)\n*   [\n    \n    ## Retrieve the environment variables of a project by id or name\n    \n    Retrieve the environment variables for a given project by passing either the project `id` or `name` in the URL.\n    \n    getprojects\n    \n    `/v9/projects/{idOrName}/env`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#retrieve-the-environment-variables-of-a-project-by-id-or-name)\n*   [\n    \n    ## Find a project by id or name\n    \n    Get the information for a specific project by passing either the project `id` or `name` in the URL.\n    \n    getprojects\n    \n    `/v9/projects/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#find-a-project-by-id-or-name)\n*   [\n    \n    ## Get a project domain\n    \n    Get project domain by project id/name and domain name.\n    \n    getprojects\n    \n    `/v9/projects/{idOrName}/domains/{domain}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#get-a-project-domain)\n*   [\n    \n    ## Retrieve project domains by project by id or name\n    \n    Retrieve the domains associated with a given project by passing either the project `id` or `name` in the URL.\n    \n    getprojects\n    \n    `/v9/projects/{idOrName}/domains`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#retrieve-project-domains-by-project-by-id-or-name)\n*   [\n    \n    ## Retrieve the decrypted value of an environment variable of a project by id\n    \n    Retrieve the environment variable for a given project.\n    \n    getprojects\n    \n    `/v1/projects/{idOrName}/env/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#retrieve-the-decrypted-value-of-an-environment-variable-of-a-project-by-id)\n*   [\n    \n    ## Retrieve a list of projects\n    \n    Allows to retrieve the list of projects of the authenticated user or team. The list will be paginated and the provided query parameters allow filtering the returned projects.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#retrieve-a-list-of-projects)\n*   [\n    \n    ## Gets a list of aliases with status for the current promote\n    \n    Get a list of aliases related to the last promote request with their mapping status\n    \n    getprojects\n    \n    `/v1/projects/{projectId}/promote/aliases`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#gets-a-list-of-aliases-with-status-for-the-current-promote)\n*   [\n    \n    ## Pause a project\n    \n    Pause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project disables auto assigning custom production domains and blocks the active Production Deployment then the request will return with 200 status code.\n    \n    postprojects\n    \n    `/v1/projects/{projectId}/pause`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#pause-a-project)\n*   [\n    \n    ## Remove a domain from a project\n    \n    Remove a domain from a project by passing the domain name and by specifying the project by either passing the project `id` or `name` in the URL.\n    \n    deleteprojects\n    \n    `/v9/projects/{idOrName}/domains/{domain}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#remove-a-domain-from-a-project)\n*   [\n    \n    ## Remove an environment variable\n    \n    Delete a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.\n    \n    deleteprojects\n    \n    `/v9/projects/{idOrName}/env/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#remove-an-environment-variable)\n*   [\n    \n    ## Points all production domains for a project to the given deploy\n    \n    Allows users to promote a deployment to production. Note: This does NOT rebuild the deployment. If you need that, then call create-deployments endpoint.\n    \n    postprojects\n    \n    `/v10/projects/{projectId}/promote/{deploymentId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#points-all-production-domains-for-a-project-to-the-given-deploy)\n*   [\n    \n    ## Unpause a project\n    \n    Unpause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project enables auto assigning custom production domains and unblocks the active Production Deployment then the request will return with 200 status code.\n    \n    postprojects\n    \n    `/v1/projects/{projectId}/unpause`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#unpause-a-project)\n*   [\n    \n    ## Update an existing project\n    \n    Update the fields of a project using either its `name` or `id`.\n    \n    patchprojects\n    \n    `/v9/projects/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#update-an-existing-project)\n*   [\n    \n    ## Update the data cache feature\n    \n    Update the data cache feature on a project.\n    \n    patchprojects\n    \n    `/v1/data-cache/projects/{projectId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#update-the-data-cache-feature)\n*   [\n    \n    ## Update a project domain\n    \n    Update a project domain's configuration, including the name, git branch and redirect of the domain.\n    \n    patchprojects\n    \n    `/v9/projects/{idOrName}/domains/{domain}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#update-a-project-domain)\n*   [\n    \n    ## Update Protection Bypass for Automation\n    \n    Update the deployment protection automation bypass for a project\n    \n    patchprojects\n    \n    `/v1/projects/{idOrName}/protection-bypass`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#update-protection-bypass-for-automation)\n*   [\n    \n    ## Verify project domain\n    \n    Attempts to verify a project domain with `verified = false` by checking the correctness of the project domain's `verification` challenge.\n    \n    postprojects\n    \n    `/v9/projects/{idOrName}/domains/{domain}/verify`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/projects#verify-project-domain)\n*   [\n    \n    ## Create a new secret\n    \n    Allows to create a new secret.\n    \n    postsecrets\n    \n    `/v2/secrets/{name}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/secrets#create-a-new-secret)\n*   [\n    \n    ## Delete a secret\n    \n    This deletes the user or team’s secret defined in the URL.\n    \n    deletesecrets\n    \n    `/v2/secrets/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/secrets#delete-a-secret)\n*   [\n    \n    ## Get a single secret\n    \n    Retrieves the information for a specific secret by passing either the secret id or name in the URL.\n    \n    getsecrets\n    \n    `/v3/secrets/{idOrName}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/secrets#get-a-single-secret)\n*   [\n    \n    ## List secrets\n    \n    Retrieves the active Vercel secrets for the authenticated user or team. By default it returns 20 secrets. The rest can be retrieved using the pagination options. The body will contain an entry for each secret.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/secrets#list-secrets)\n*   [\n    \n    ## Change secret name\n    \n    Enables to edit the name of a secret. The name has to be unique to the user or team’s secrets.\n    \n    patchsecrets\n    \n    `/v2/secrets/{name}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/secrets#change-secret-name)\n*   [\n    \n    ## Create a Team\n    \n    Create a new Team under your account. You need to send a POST request with the desired Team slug, and optionally the Team name.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#create-a-team)\n*   [\n    \n    ## Delete a Team\n    \n    Delete a team under your account. You need to send a `DELETE` request with the desired team `id`. An optional array of reasons for deletion may also be sent.\n    \n    deleteteams\n    \n    `/v1/teams/{teamId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#delete-a-team)\n*   [\n    \n    ## Delete a Team invite code\n    \n    Delete an active Team invite code.\n    \n    deleteteams\n    \n    `/v1/teams/{teamId}/invites/{inviteId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#delete-a-team-invite-code)\n*   [\n    \n    ## Get a Team\n    \n    Get information for the Team specified by the `teamId` parameter.\n    \n    getteams\n    \n    `/v2/teams/{teamId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#get-a-team)\n*   [\n    \n    ## Get access request status\n    \n    Check the status of a join request. It'll respond with a 404 if the request has been declined. If no `userId` path segment was provided, this endpoint will instead return the status of the authenticated user.\n    \n    getteams\n    \n    `/v1/teams/{teamId}/request/{userId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#get-access-request-status)\n*   [\n    \n    ## List team members\n    \n    Get a paginated list of team members for the provided team.\n    \n    getteams\n    \n    `/v2/teams/{teamId}/members`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#list-team-members)\n*   [\n    \n    ## List all teams\n    \n    Get a paginated list of all the Teams the authenticated User is a member of.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#list-all-teams)\n*   [\n    \n    ## Invite a user\n    \n    Invite a user to join the team specified in the URL. The authenticated user needs to be an `OWNER` in order to successfully invoke this endpoint. The user can be specified with an email or an ID. If both email and ID are provided, ID will take priority.\n    \n    postteams\n    \n    `/v1/teams/{teamId}/members`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#invite-a-user)\n*   [\n    \n    ## Join a team\n    \n    Join a team with a provided invite code or team ID.\n    \n    postteams\n    \n    `/v1/teams/{teamId}/members/teams/join`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#join-a-team)\n*   [\n    \n    ## Update a Team\n    \n    Update the information of a Team specified by the `teamId` parameter. The request body should contain the information that will be updated on the Team.\n    \n    patchteams\n    \n    `/v2/teams/{teamId}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#update-a-team)\n*   [\n    \n    ## Remove a Team Member\n    \n    Remove a Team Member from the Team, or dismiss a user that requested access, or leave a team.\n    \n    deleteteams\n    \n    `/v1/teams/{teamId}/members/{uid}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#remove-a-team-member)\n*   [\n    \n    ## Request access to a team\n    \n    Request access to a team as a member. An owner has to approve the request. Only 10 users can request access to a team at the same time.\n    \n    postteams\n    \n    `/v1/teams/{teamId}/request`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#request-access-to-a-team)\n*   [\n    \n    ## Update a Team Member\n    \n    Update the membership of a Team Member on the Team specified by `teamId`, such as changing the \\_role\\_ of the member, or confirming a request to join the Team for an unconfirmed member. The authenticated user must be an `OWNER` of the Team.\n    \n    patchteams\n    \n    `/v1/teams/{teamId}/members/{uid}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/teams#update-a-team-member)\n*   [\n    \n    ## Get the User\n    \n    Retrieves information related to the currently authenticated User.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/user#get-the-user)\n*   [\n    \n    ## List User Events\n    \n    Retrieves a list of \"events\" generated by the User on Vercel. Events are generated when the User performs a particular action, such as logging in, creating a deployment, and joining a Team (just to name a few). When the `teamId` parameter is supplied, then the events that are returned will be in relation to the Team that was specified.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/user#list-user-events)\n*   [\n    \n    ## Delete User Account\n    \n    Initiates the deletion process for the currently authenticated User, by sending a deletion confirmation email. The email contains a link that the user needs to visit in order to proceed with the deletion process.\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/user#delete-user-account)\n*   [\n    \n    ## Creates a webhook\n    \n    Creates a webhook\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/webhooks#creates-a-webhook)\n*   [\n    \n    ## Deletes a webhook\n    \n    Deletes a webhook\n    \n    deletewebhooks\n    \n    `/v1/webhooks/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/webhooks#deletes-a-webhook)\n*   [\n    \n    ## Get a webhook\n    \n    Get a webhook\n    \n    getwebhooks\n    \n    `/v1/webhooks/{id}`\n    \n    \n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/webhooks#get-a-webhook)\n*   [\n    \n    ## Get a list of webhooks\n    \n    Get a list of webhooks\n    \n    \n    \n    ](https://vercel.com/docs/rest-api/endpoints/webhooks#get-a-list-of-webhooks)",
  "title": "Vercel REST API Endpoints",
  "description": "The Vercel REST API is a REST-styled API that gives full control over the entire Vercel platform.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/rest-api/vercel-api-integrations",
  "markdown": "# Building Integrations with Vercel REST API\n\nSee the following API reference documentation for how to use Vercel REST API to create integrations:\n\nTo use Vercel REST API, you need to authenticate with an [access token](https://vercel.com/docs/rest-api#introduction/api-basics/authentication) that contains the necessary [scope](#scopes). You can then provide the API token through the [`Authorization` header](https://vercel.com/docs/rest-api#authentication).\n\nWhen you create an integration, you define a [redirect URL](https://vercel.com/docs/integrations/create-integration#redirect-url) that can have query parameters attached.\n\nOne of these parameters is the `code` parameter. This short-lived parameter is valid for 30 minutes and can be exchanged once for a long-lived access token using the following API endpoint:\n\n```\n{`POST https://api.vercel.com/v2/oauth/access_token`}\n```\n\nPass the following values to the request body in the form of `application/x-www-form-urlencoded`.\n\n| Key | [Type](#api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| client\\_id | [ID](#api-basics/types) | Yes | ID of your application. |\n| client\\_secret | [String](#api-basics/types) | Yes | Secret of your application. |\n| code | [String](#api-basics/types) | Yes | The code you received. |\n| redirect\\_uri | [String](#api-basics/types) | Yes | The Redirect URL you configured on the Integration Console. |\n\nThe response of your `code` exchange request includes a `team_id` property. If `team_id` is not null, you know that this integration was installed on a team.\n\nIf your integration is installed on a team, append the `teamId` query parameter to each API request. See [Accessing Resources Owned by a Team](https://vercel.com/docs/rest-api#accessing-resources-owned-by-a-team) for more details.\n\nEach installation of your integration is stored and tracked as a configuration.\n\nSometimes it makes sense to fetch the configuration in order to get more insights about the current scope or the projects your integration has access to.\n\nTo see which endpoints are available, see the [Configurations](https://vercel.com/docs/projects/project-configuration) documentation for more details.\n\nIf an owner(s) of an integration leaves the team that's responsible for the integration, the integration will be flagged as disabled. The team will receive an email to take action (transfer ownership) within 30 days, otherwise the integration will be deleted.\n\nWhen integration configurations are disabled:\n\n*   Any API requests will fail with a `403` HTTP status code and a `code` of `integration_configuration_disabled`\n*   We continue to send `project.created`, `project.removed` and `integration-configuration.removed` webhooks, as these will allow the integration configuration to operate correctly when re-activated. All other webhook delivery will be paused\n*   Log drains will not receive any logs\n\nDeployments made with Vercel are grouped into Projects. This means that each deployment is assigned a name and is grouped into a project with other deployments using that same name.\n\nUsing the Vercel REST API, you can modify Projects that the Integration has access to. Here are some examples:\n\nWhen building a Vercel Integration, you may want to expose an API token or a configuration URL for deployments within a [Project](https://vercel.com/docs/projects/overview).\n\nYou can do so by [Creating a Project Environment Variable](https://vercel.com/docs/rest-api/endpoints#create-one-or-more-environment-variables) using the API.\n\nWhen creating integrations the following scopes can be updated within the Integration Console:\n\nWrite permissions are required for both `project` and `domain` when updating the domain of a project.\n\n| Scope | Description |\n| --- | --- |\n| integration-configuration | Interact with the installation of your integration |\n| deployment | Interact with deployments |\n| deployment-check | Verify deployments with Checks |\n| edge-config | Create and manage Edge Configs and their tokens |\n| project | Access project details and settings |\n| project-env-vars | Create and manage integration-owned project environment variables |\n| global-project-env-vars | Create and manage all account project environment variables |\n| team | Access team details |\n| user | Get information about the current user |\n| log-drain | Create and manage log drains to forward logs |\n| domain | Manage and interact with domains and certificates. Write permissions are required for both `project` and `domain` when updating the domain of a project. |\n\nInteract with an installation of your integration.\n\nInteract with deployments.\n\nVerify deployments with Checks.\n\nCreate and manage Edge Configs and their tokens.\n\nAccess project details and settings.\n\nCreate and manage integration-owned project environment variables.\n\nCreate and manage all account project environment variables.\n\nGet information about the current user.\n\nCreate and manage log drains to forward logs.\n\nManage and interact with domains and certificates.\n\nAs the Vercel REST API evolves, you'll need to update your scopes based on your integration's endpoint usage.\n\n![Confirming Scope changes.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687479153%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fconsole%2Fconfirm-scope-change.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Confirming Scope changes.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687479153%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fconsole%2Fconfirm-scope-change-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nConfirming Scope changes.\n\nAdditions and upgrades always require a review and confirmation. To ensure this, every affected user and team owner will be informed through email to undergo this process. Please make sure you provide a meaningful, short, and descriptive note for your changes.\n\nScope removals and downgrades won't require user confirmation and will be applied immediately to confirmed scopes and pending requested scope changes.\n\nUser and Teams will always confirm all pending changes with one confirmation. That means that if you have requested new scopes multiple times over the past year, the users will see a summary of all pending changes with their respective provided note.\n\nOnce a user confirms these changes, scopes get directly applied to the installation. You will also get notified through the new `integration-configuration.scope-change-confirmed` event.\n\nWhen using the Vercel REST API with Integrations, you might come across some errors which you can address immediately.\n\nTo avoid CORS issues, make sure you only interact with the Vercel REST API on the server side.\n\nSince the token grants access to resources of the Team or Personal Account, you should never expose it on the client side.\n\nFor more information on using CORS with Vercel, see [How can I enable CORS on Vercel?](https://vercel.com/guides/how-to-enable-cors).\n\nEnsure you are not missing the `teamId` [query parameter](https://vercel.com/docs/integrations/create-integration#redirect-url). `teamId` is required if the integration installation is for a Team. Ensure the Scope of Your [Access Token](https://vercel.com/docs/rest-api/vercel-api-integrations#using-the-vercel-api/scopes/teams) is properly set.",
  "title": "Building Integrations with Vercel REST API",
  "description": "Learn how to use Vercel REST API to build your integrations and work with redirect URLs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/rest-api/interfaces",
  "markdown": "# Vercel REST API Interfaces\n\n```\n1{2  \"properties\": {3    \"createdAt\": {4      \"type\": \"number\",5      \"description\": \"UNIX timestamp (in milliseconds) when the User account was created.\",6      \"example\": 16307485233957    },8    \"softBlock\": {9      \"nullable\": true,10      \"properties\": {11        \"blockedAt\": { \"type\": \"number\" },12        \"reason\": {13          \"type\": \"string\",14          \"enum\": [15            \"SUBSCRIPTION_CANCELED\",16            \"SUBSCRIPTION_EXPIRED\",17            \"UNPAID_INVOICE\",18            \"ENTERPRISE_TRIAL_ENDED\",19            \"FAIR_USE_LIMITS_EXCEEDED\",20            \"BLOCKED_FOR_PLATFORM_ABUSE\"21          ]22        },23        \"blockedDueToOverageType\": {24          \"type\": \"string\",25          \"enum\": [26            \"analyticsUsage\",27            \"artifacts\",28            \"bandwidth\",29            \"blobStores\",30            \"blobTotalAdvancedRequests\",31            \"blobTotalAvgSizeInBytes\",32            \"blobTotalGetResponseObjectSizeInBytes\",33            \"blobTotalSimpleRequests\",34            \"buildMinute\",35            \"dataCacheRead\",36            \"dataCacheRevalidation\",37            \"dataCacheWrite\",38            \"edgeConfigRead\",39            \"edgeConfigWrite\",40            \"edgeFunctionExecutionUnits\",41            \"edgeMiddlewareInvocations\",42            \"edgeRequest\",43            \"edgeRequestAdditionalCpuDuration\",44            \"fastDataTransfer\",45            \"fastOriginTransfer\",46            \"functionDuration\",47            \"functionInvocation\",48            \"logDrainsVolume\",49            \"monitoringMetric\",50            \"postgresComputeTime\",51            \"postgresDataStorage\",52            \"postgresDataTransfer\",53            \"postgresDatabase\",54            \"postgresWrittenData\",55            \"serverlessFunctionExecution\",56            \"sourceImages\",57            \"storageRedisTotalBandwidthInBytes\",58            \"storageRedisTotalCommands\",59            \"storageRedisTotalDailyAvgStorageInBytes\",60            \"storageRedisTotalDatabases\",61            \"wafOwaspExcessBytes\",62            \"wafOwaspRequests\",63            \"webAnalyticsEvent\"64          ]65        }66      },67      \"required\": [\"blockedAt\", \"reason\"],68      \"type\": \"object\",69      \"description\": \"When the User account has been \\\"soft blocked\\\", this property will contain the date when the restriction was enacted, and the identifier for why.\"70    },71    \"billing\": {72      \"nullable\": true,73      \"properties\": {74        \"currency\": { \"type\": \"string\", \"enum\": [\"usd\", \"eur\"] },75        \"cancelation\": { \"nullable\": true, \"type\": \"number\" },76        \"period\": {77          \"nullable\": true,78          \"properties\": {79            \"start\": { \"type\": \"number\" },80            \"end\": { \"type\": \"number\" }81          },82          \"required\": [\"start\", \"end\"],83          \"type\": \"object\"84        },85        \"contract\": {86          \"nullable\": true,87          \"properties\": {88            \"start\": { \"type\": \"number\" },89            \"end\": { \"type\": \"number\" }90          },91          \"required\": [\"start\", \"end\"],92          \"type\": \"object\"93        },94        \"plan\": { \"type\": \"string\", \"enum\": [\"pro\", \"enterprise\", \"hobby\"] },95        \"planIteration\": { \"type\": \"string\" },96        \"platform\": { \"type\": \"string\", \"enum\": [\"stripe\", \"stripeTestMode\"] },97        \"orbCustomerId\": { \"type\": \"string\" },98        \"syncedAt\": { \"type\": \"number\" },99        \"programType\": { \"type\": \"string\", \"enum\": [\"startup\", \"agency\"] },100        \"trial\": {101          \"nullable\": true,102          \"properties\": {103            \"start\": { \"type\": \"number\" },104            \"end\": { \"type\": \"number\" }105          },106          \"required\": [\"start\", \"end\"],107          \"type\": \"object\"108        },109        \"email\": { \"nullable\": true, \"type\": \"string\" },110        \"tax\": {111          \"nullable\": true,112          \"properties\": {113            \"type\": { \"type\": \"string\" },114            \"id\": { \"type\": \"string\" }115          },116          \"required\": [\"type\", \"id\"],117          \"type\": \"object\"118        },119        \"language\": { \"nullable\": true, \"type\": \"string\" },120        \"address\": {121          \"nullable\": true,122          \"properties\": {123            \"line1\": { \"type\": \"string\" },124            \"line2\": { \"type\": \"string\" },125            \"postalCode\": { \"type\": \"string\" },126            \"city\": { \"type\": \"string\" },127            \"country\": { \"type\": \"string\" },128            \"state\": { \"type\": \"string\" }129          },130          \"type\": \"object\"131        },132        \"name\": { \"nullable\": true, \"type\": \"string\" },133        \"invoiceItems\": {134          \"nullable\": true,135          \"properties\": {136            \"concurrentBuilds\": {137              \"properties\": {138                \"tier\": { \"type\": \"number\" },139                \"price\": { \"type\": \"number\" },140                \"quantity\": { \"type\": \"number\" },141                \"highestQuantity\": {142                  \"type\": \"number\",143                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"144                },145                \"name\": { \"type\": \"string\" },146                \"hidden\": { \"type\": \"boolean\" },147                \"createdAt\": { \"type\": \"number\" },148                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },149                \"frequency\": {150                  \"properties\": {151                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },152                    \"intervalCount\": {153                      \"type\": \"number\",154                      \"enum\": [1, 2, 3, 6, 12]155                    }156                  },157                  \"required\": [\"interval\", \"intervalCount\"],158                  \"type\": \"object\"159                },160                \"maxQuantity\": { \"type\": \"number\" }161              },162              \"required\": [\"price\", \"quantity\", \"hidden\"],163              \"type\": \"object\",164              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"165            },166            \"webAnalytics\": {167              \"properties\": {168                \"tier\": { \"type\": \"number\" },169                \"price\": { \"type\": \"number\" },170                \"quantity\": { \"type\": \"number\" },171                \"highestQuantity\": {172                  \"type\": \"number\",173                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"174                },175                \"name\": { \"type\": \"string\" },176                \"hidden\": { \"type\": \"boolean\" },177                \"createdAt\": { \"type\": \"number\" },178                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },179                \"frequency\": {180                  \"properties\": {181                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },182                    \"intervalCount\": {183                      \"type\": \"number\",184                      \"enum\": [1, 2, 3, 6, 12]185                    }186                  },187                  \"required\": [\"interval\", \"intervalCount\"],188                  \"type\": \"object\"189                },190                \"maxQuantity\": { \"type\": \"number\" }191              },192              \"required\": [\"price\", \"quantity\", \"hidden\"],193              \"type\": \"object\",194              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"195            },196            \"pro\": {197              \"properties\": {198                \"tier\": { \"type\": \"number\" },199                \"price\": { \"type\": \"number\" },200                \"quantity\": { \"type\": \"number\" },201                \"highestQuantity\": {202                  \"type\": \"number\",203                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"204                },205                \"name\": { \"type\": \"string\" },206                \"hidden\": { \"type\": \"boolean\" },207                \"createdAt\": { \"type\": \"number\" },208                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },209                \"frequency\": {210                  \"properties\": {211                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },212                    \"intervalCount\": {213                      \"type\": \"number\",214                      \"enum\": [1, 2, 3, 6, 12]215                    }216                  },217                  \"required\": [\"interval\", \"intervalCount\"],218                  \"type\": \"object\"219                },220                \"maxQuantity\": { \"type\": \"number\" }221              },222              \"required\": [\"price\", \"quantity\", \"hidden\"],223              \"type\": \"object\",224              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"225            },226            \"enterprise\": {227              \"properties\": {228                \"tier\": { \"type\": \"number\" },229                \"price\": { \"type\": \"number\" },230                \"quantity\": { \"type\": \"number\" },231                \"highestQuantity\": {232                  \"type\": \"number\",233                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"234                },235                \"name\": { \"type\": \"string\" },236                \"hidden\": { \"type\": \"boolean\" },237                \"createdAt\": { \"type\": \"number\" },238                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },239                \"frequency\": {240                  \"properties\": {241                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },242                    \"intervalCount\": {243                      \"type\": \"number\",244                      \"enum\": [1, 2, 3, 6, 12]245                    }246                  },247                  \"required\": [\"interval\", \"intervalCount\"],248                  \"type\": \"object\"249                },250                \"maxQuantity\": { \"type\": \"number\" }251              },252              \"required\": [\"price\", \"quantity\", \"hidden\"],253              \"type\": \"object\",254              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"255            },256            \"analytics\": {257              \"properties\": {258                \"tier\": { \"type\": \"number\" },259                \"price\": { \"type\": \"number\" },260                \"quantity\": { \"type\": \"number\" },261                \"highestQuantity\": {262                  \"type\": \"number\",263                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"264                },265                \"name\": { \"type\": \"string\" },266                \"hidden\": { \"type\": \"boolean\" },267                \"createdAt\": { \"type\": \"number\" },268                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },269                \"frequency\": {270                  \"properties\": {271                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },272                    \"intervalCount\": {273                      \"type\": \"number\",274                      \"enum\": [1, 2, 3, 6, 12]275                    }276                  },277                  \"required\": [\"interval\", \"intervalCount\"],278                  \"type\": \"object\"279                },280                \"maxQuantity\": { \"type\": \"number\" }281              },282              \"required\": [\"price\", \"quantity\", \"hidden\"],283              \"type\": \"object\",284              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"285            },286            \"developerExperiencePlatform\": {287              \"properties\": {288                \"tier\": { \"type\": \"number\" },289                \"price\": { \"type\": \"number\" },290                \"quantity\": { \"type\": \"number\" },291                \"highestQuantity\": {292                  \"type\": \"number\",293                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"294                },295                \"name\": { \"type\": \"string\" },296                \"hidden\": { \"type\": \"boolean\" },297                \"createdAt\": { \"type\": \"number\" },298                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },299                \"frequency\": {300                  \"properties\": {301                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },302                    \"intervalCount\": {303                      \"type\": \"number\",304                      \"enum\": [1, 2, 3, 6, 12]305                    }306                  },307                  \"required\": [\"interval\", \"intervalCount\"],308                  \"type\": \"object\"309                },310                \"maxQuantity\": { \"type\": \"number\" }311              },312              \"required\": [\"price\", \"quantity\", \"hidden\"],313              \"type\": \"object\",314              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"315            },316            \"includedAllocationMiu\": {317              \"properties\": {318                \"tier\": { \"type\": \"number\" },319                \"price\": { \"type\": \"number\" },320                \"quantity\": { \"type\": \"number\" },321                \"highestQuantity\": {322                  \"type\": \"number\",323                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"324                },325                \"name\": { \"type\": \"string\" },326                \"hidden\": { \"type\": \"boolean\" },327                \"createdAt\": { \"type\": \"number\" },328                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },329                \"frequency\": {330                  \"properties\": {331                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },332                    \"intervalCount\": {333                      \"type\": \"number\",334                      \"enum\": [1, 2, 3, 6, 12]335                    }336                  },337                  \"required\": [\"interval\", \"intervalCount\"],338                  \"type\": \"object\"339                },340                \"maxQuantity\": { \"type\": \"number\" }341              },342              \"required\": [\"price\", \"quantity\", \"hidden\"],343              \"type\": \"object\",344              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"345            },346            \"managedInfrastructureCommitment\": {347              \"properties\": {348                \"tier\": { \"type\": \"number\" },349                \"price\": { \"type\": \"number\" },350                \"quantity\": { \"type\": \"number\" },351                \"highestQuantity\": {352                  \"type\": \"number\",353                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"354                },355                \"name\": { \"type\": \"string\" },356                \"hidden\": { \"type\": \"boolean\" },357                \"createdAt\": { \"type\": \"number\" },358                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },359                \"frequency\": {360                  \"properties\": {361                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },362                    \"intervalCount\": {363                      \"type\": \"number\",364                      \"enum\": [1, 2, 3, 6, 12]365                    }366                  },367                  \"required\": [\"interval\", \"intervalCount\"],368                  \"type\": \"object\"369                },370                \"maxQuantity\": { \"type\": \"number\" }371              },372              \"required\": [\"price\", \"quantity\", \"hidden\"],373              \"type\": \"object\",374              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"375            },376            \"monitoring\": {377              \"properties\": {378                \"tier\": { \"type\": \"number\" },379                \"price\": { \"type\": \"number\" },380                \"quantity\": { \"type\": \"number\" },381                \"highestQuantity\": {382                  \"type\": \"number\",383                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"384                },385                \"name\": { \"type\": \"string\" },386                \"hidden\": { \"type\": \"boolean\" },387                \"createdAt\": { \"type\": \"number\" },388                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },389                \"frequency\": {390                  \"properties\": {391                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },392                    \"intervalCount\": {393                      \"type\": \"number\",394                      \"enum\": [1, 2, 3, 6, 12]395                    }396                  },397                  \"required\": [\"interval\", \"intervalCount\"],398                  \"type\": \"object\"399                },400                \"maxQuantity\": { \"type\": \"number\" }401              },402              \"required\": [\"price\", \"quantity\", \"hidden\"],403              \"type\": \"object\",404              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"405            },406            \"passwordProtection\": {407              \"properties\": {408                \"tier\": { \"type\": \"number\" },409                \"price\": { \"type\": \"number\" },410                \"quantity\": { \"type\": \"number\" },411                \"highestQuantity\": {412                  \"type\": \"number\",413                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"414                },415                \"name\": { \"type\": \"string\" },416                \"hidden\": { \"type\": \"boolean\" },417                \"createdAt\": { \"type\": \"number\" },418                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },419                \"frequency\": {420                  \"properties\": {421                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },422                    \"intervalCount\": {423                      \"type\": \"number\",424                      \"enum\": [1, 2, 3, 6, 12]425                    }426                  },427                  \"required\": [\"interval\", \"intervalCount\"],428                  \"type\": \"object\"429                },430                \"maxQuantity\": { \"type\": \"number\" }431              },432              \"required\": [\"price\", \"quantity\", \"hidden\"],433              \"type\": \"object\",434              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"435            },436            \"previewDeploymentSuffix\": {437              \"properties\": {438                \"tier\": { \"type\": \"number\" },439                \"price\": { \"type\": \"number\" },440                \"quantity\": { \"type\": \"number\" },441                \"highestQuantity\": {442                  \"type\": \"number\",443                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"444                },445                \"name\": { \"type\": \"string\" },446                \"hidden\": { \"type\": \"boolean\" },447                \"createdAt\": { \"type\": \"number\" },448                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },449                \"frequency\": {450                  \"properties\": {451                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },452                    \"intervalCount\": {453                      \"type\": \"number\",454                      \"enum\": [1, 2, 3, 6, 12]455                    }456                  },457                  \"required\": [\"interval\", \"intervalCount\"],458                  \"type\": \"object\"459                },460                \"maxQuantity\": { \"type\": \"number\" }461              },462              \"required\": [\"price\", \"quantity\", \"hidden\"],463              \"type\": \"object\",464              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"465            },466            \"saml\": {467              \"properties\": {468                \"tier\": { \"type\": \"number\" },469                \"price\": { \"type\": \"number\" },470                \"quantity\": { \"type\": \"number\" },471                \"highestQuantity\": {472                  \"type\": \"number\",473                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"474                },475                \"name\": { \"type\": \"string\" },476                \"hidden\": { \"type\": \"boolean\" },477                \"createdAt\": { \"type\": \"number\" },478                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },479                \"frequency\": {480                  \"properties\": {481                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },482                    \"intervalCount\": {483                      \"type\": \"number\",484                      \"enum\": [1, 2, 3, 6, 12]485                    }486                  },487                  \"required\": [\"interval\", \"intervalCount\"],488                  \"type\": \"object\"489                },490                \"maxQuantity\": { \"type\": \"number\" }491              },492              \"required\": [\"price\", \"quantity\", \"hidden\"],493              \"type\": \"object\",494              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"495            },496            \"teamSeats\": {497              \"properties\": {498                \"tier\": { \"type\": \"number\" },499                \"price\": { \"type\": \"number\" },500                \"quantity\": { \"type\": \"number\" },501                \"highestQuantity\": {502                  \"type\": \"number\",503                  \"description\": \"The highest quantity in the current period. Used to render the correct enable/disable UI for add-ons.\"504                },505                \"name\": { \"type\": \"string\" },506                \"hidden\": { \"type\": \"boolean\" },507                \"createdAt\": { \"type\": \"number\" },508                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },509                \"frequency\": {510                  \"properties\": {511                    \"interval\": { \"type\": \"string\", \"enum\": [\"month\"] },512                    \"intervalCount\": {513                      \"type\": \"number\",514                      \"enum\": [1, 2, 3, 6, 12]515                    }516                  },517                  \"required\": [\"interval\", \"intervalCount\"],518                  \"type\": \"object\"519                },520                \"maxQuantity\": { \"type\": \"number\" }521              },522              \"required\": [\"price\", \"quantity\", \"hidden\"],523              \"type\": \"object\",524              \"description\": \"Will be used to create an invoice item. The price must be in cents: 2000 for $20.\"525            },526            \"analyticsUsage\": {527              \"properties\": {528                \"matrix\": {529                  \"properties\": {530                    \"defaultUnitPrice\": { \"type\": \"string\" },531                    \"dimensionPrices\": {532                      \"additionalProperties\": { \"type\": \"string\" },533                      \"type\": \"object\"534                    }535                  },536                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],537                  \"type\": \"object\"538                },539                \"tier\": { \"type\": \"number\" },540                \"price\": { \"type\": \"number\" },541                \"batch\": { \"type\": \"number\" },542                \"threshold\": { \"type\": \"number\" },543                \"name\": { \"type\": \"string\" },544                \"hidden\": { \"type\": \"boolean\" },545                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },546                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }547              },548              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],549              \"type\": \"object\"550            },551            \"artifacts\": {552              \"properties\": {553                \"matrix\": {554                  \"properties\": {555                    \"defaultUnitPrice\": { \"type\": \"string\" },556                    \"dimensionPrices\": {557                      \"additionalProperties\": { \"type\": \"string\" },558                      \"type\": \"object\"559                    }560                  },561                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],562                  \"type\": \"object\"563                },564                \"tier\": { \"type\": \"number\" },565                \"price\": { \"type\": \"number\" },566                \"batch\": { \"type\": \"number\" },567                \"threshold\": { \"type\": \"number\" },568                \"name\": { \"type\": \"string\" },569                \"hidden\": { \"type\": \"boolean\" },570                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },571                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }572              },573              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],574              \"type\": \"object\"575            },576            \"bandwidth\": {577              \"properties\": {578                \"matrix\": {579                  \"properties\": {580                    \"defaultUnitPrice\": { \"type\": \"string\" },581                    \"dimensionPrices\": {582                      \"additionalProperties\": { \"type\": \"string\" },583                      \"type\": \"object\"584                    }585                  },586                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],587                  \"type\": \"object\"588                },589                \"tier\": { \"type\": \"number\" },590                \"price\": { \"type\": \"number\" },591                \"batch\": { \"type\": \"number\" },592                \"threshold\": { \"type\": \"number\" },593                \"name\": { \"type\": \"string\" },594                \"hidden\": { \"type\": \"boolean\" },595                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },596                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }597              },598              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],599              \"type\": \"object\"600            },601            \"blobStores\": {602              \"properties\": {603                \"matrix\": {604                  \"properties\": {605                    \"defaultUnitPrice\": { \"type\": \"string\" },606                    \"dimensionPrices\": {607                      \"additionalProperties\": { \"type\": \"string\" },608                      \"type\": \"object\"609                    }610                  },611                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],612                  \"type\": \"object\"613                },614                \"tier\": { \"type\": \"number\" },615                \"price\": { \"type\": \"number\" },616                \"batch\": { \"type\": \"number\" },617                \"threshold\": { \"type\": \"number\" },618                \"name\": { \"type\": \"string\" },619                \"hidden\": { \"type\": \"boolean\" },620                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },621                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }622              },623              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],624              \"type\": \"object\"625            },626            \"blobTotalAdvancedRequests\": {627              \"properties\": {628                \"matrix\": {629                  \"properties\": {630                    \"defaultUnitPrice\": { \"type\": \"string\" },631                    \"dimensionPrices\": {632                      \"additionalProperties\": { \"type\": \"string\" },633                      \"type\": \"object\"634                    }635                  },636                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],637                  \"type\": \"object\"638                },639                \"tier\": { \"type\": \"number\" },640                \"price\": { \"type\": \"number\" },641                \"batch\": { \"type\": \"number\" },642                \"threshold\": { \"type\": \"number\" },643                \"name\": { \"type\": \"string\" },644                \"hidden\": { \"type\": \"boolean\" },645                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },646                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }647              },648              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],649              \"type\": \"object\"650            },651            \"blobTotalAvgSizeInBytes\": {652              \"properties\": {653                \"matrix\": {654                  \"properties\": {655                    \"defaultUnitPrice\": { \"type\": \"string\" },656                    \"dimensionPrices\": {657                      \"additionalProperties\": { \"type\": \"string\" },658                      \"type\": \"object\"659                    }660                  },661                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],662                  \"type\": \"object\"663                },664                \"tier\": { \"type\": \"number\" },665                \"price\": { \"type\": \"number\" },666                \"batch\": { \"type\": \"number\" },667                \"threshold\": { \"type\": \"number\" },668                \"name\": { \"type\": \"string\" },669                \"hidden\": { \"type\": \"boolean\" },670                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },671                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }672              },673              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],674              \"type\": \"object\"675            },676            \"blobTotalGetResponseObjectSizeInBytes\": {677              \"properties\": {678                \"matrix\": {679                  \"properties\": {680                    \"defaultUnitPrice\": { \"type\": \"string\" },681                    \"dimensionPrices\": {682                      \"additionalProperties\": { \"type\": \"string\" },683                      \"type\": \"object\"684                    }685                  },686                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],687                  \"type\": \"object\"688                },689                \"tier\": { \"type\": \"number\" },690                \"price\": { \"type\": \"number\" },691                \"batch\": { \"type\": \"number\" },692                \"threshold\": { \"type\": \"number\" },693                \"name\": { \"type\": \"string\" },694                \"hidden\": { \"type\": \"boolean\" },695                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },696                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }697              },698              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],699              \"type\": \"object\"700            },701            \"blobTotalSimpleRequests\": {702              \"properties\": {703                \"matrix\": {704                  \"properties\": {705                    \"defaultUnitPrice\": { \"type\": \"string\" },706                    \"dimensionPrices\": {707                      \"additionalProperties\": { \"type\": \"string\" },708                      \"type\": \"object\"709                    }710                  },711                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],712                  \"type\": \"object\"713                },714                \"tier\": { \"type\": \"number\" },715                \"price\": { \"type\": \"number\" },716                \"batch\": { \"type\": \"number\" },717                \"threshold\": { \"type\": \"number\" },718                \"name\": { \"type\": \"string\" },719                \"hidden\": { \"type\": \"boolean\" },720                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },721                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }722              },723              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],724              \"type\": \"object\"725            },726            \"buildMinute\": {727              \"properties\": {728                \"matrix\": {729                  \"properties\": {730                    \"defaultUnitPrice\": { \"type\": \"string\" },731                    \"dimensionPrices\": {732                      \"additionalProperties\": { \"type\": \"string\" },733                      \"type\": \"object\"734                    }735                  },736                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],737                  \"type\": \"object\"738                },739                \"tier\": { \"type\": \"number\" },740                \"price\": { \"type\": \"number\" },741                \"batch\": { \"type\": \"number\" },742                \"threshold\": { \"type\": \"number\" },743                \"name\": { \"type\": \"string\" },744                \"hidden\": { \"type\": \"boolean\" },745                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },746                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }747              },748              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],749              \"type\": \"object\"750            },751            \"dataCacheRead\": {752              \"properties\": {753                \"matrix\": {754                  \"properties\": {755                    \"defaultUnitPrice\": { \"type\": \"string\" },756                    \"dimensionPrices\": {757                      \"additionalProperties\": { \"type\": \"string\" },758                      \"type\": \"object\"759                    }760                  },761                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],762                  \"type\": \"object\"763                },764                \"tier\": { \"type\": \"number\" },765                \"price\": { \"type\": \"number\" },766                \"batch\": { \"type\": \"number\" },767                \"threshold\": { \"type\": \"number\" },768                \"name\": { \"type\": \"string\" },769                \"hidden\": { \"type\": \"boolean\" },770                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },771                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }772              },773              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],774              \"type\": \"object\"775            },776            \"dataCacheRevalidation\": {777              \"properties\": {778                \"matrix\": {779                  \"properties\": {780                    \"defaultUnitPrice\": { \"type\": \"string\" },781                    \"dimensionPrices\": {782                      \"additionalProperties\": { \"type\": \"string\" },783                      \"type\": \"object\"784                    }785                  },786                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],787                  \"type\": \"object\"788                },789                \"tier\": { \"type\": \"number\" },790                \"price\": { \"type\": \"number\" },791                \"batch\": { \"type\": \"number\" },792                \"threshold\": { \"type\": \"number\" },793                \"name\": { \"type\": \"string\" },794                \"hidden\": { \"type\": \"boolean\" },795                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },796                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }797              },798              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],799              \"type\": \"object\"800            },801            \"dataCacheWrite\": {802              \"properties\": {803                \"matrix\": {804                  \"properties\": {805                    \"defaultUnitPrice\": { \"type\": \"string\" },806                    \"dimensionPrices\": {807                      \"additionalProperties\": { \"type\": \"string\" },808                      \"type\": \"object\"809                    }810                  },811                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],812                  \"type\": \"object\"813                },814                \"tier\": { \"type\": \"number\" },815                \"price\": { \"type\": \"number\" },816                \"batch\": { \"type\": \"number\" },817                \"threshold\": { \"type\": \"number\" },818                \"name\": { \"type\": \"string\" },819                \"hidden\": { \"type\": \"boolean\" },820                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },821                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }822              },823              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],824              \"type\": \"object\"825            },826            \"edgeConfigRead\": {827              \"properties\": {828                \"matrix\": {829                  \"properties\": {830                    \"defaultUnitPrice\": { \"type\": \"string\" },831                    \"dimensionPrices\": {832                      \"additionalProperties\": { \"type\": \"string\" },833                      \"type\": \"object\"834                    }835                  },836                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],837                  \"type\": \"object\"838                },839                \"tier\": { \"type\": \"number\" },840                \"price\": { \"type\": \"number\" },841                \"batch\": { \"type\": \"number\" },842                \"threshold\": { \"type\": \"number\" },843                \"name\": { \"type\": \"string\" },844                \"hidden\": { \"type\": \"boolean\" },845                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },846                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }847              },848              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],849              \"type\": \"object\"850            },851            \"edgeConfigWrite\": {852              \"properties\": {853                \"matrix\": {854                  \"properties\": {855                    \"defaultUnitPrice\": { \"type\": \"string\" },856                    \"dimensionPrices\": {857                      \"additionalProperties\": { \"type\": \"string\" },858                      \"type\": \"object\"859                    }860                  },861                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],862                  \"type\": \"object\"863                },864                \"tier\": { \"type\": \"number\" },865                \"price\": { \"type\": \"number\" },866                \"batch\": { \"type\": \"number\" },867                \"threshold\": { \"type\": \"number\" },868                \"name\": { \"type\": \"string\" },869                \"hidden\": { \"type\": \"boolean\" },870                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },871                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }872              },873              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],874              \"type\": \"object\"875            },876            \"edgeFunctionExecutionUnits\": {877              \"properties\": {878                \"matrix\": {879                  \"properties\": {880                    \"defaultUnitPrice\": { \"type\": \"string\" },881                    \"dimensionPrices\": {882                      \"additionalProperties\": { \"type\": \"string\" },883                      \"type\": \"object\"884                    }885                  },886                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],887                  \"type\": \"object\"888                },889                \"tier\": { \"type\": \"number\" },890                \"price\": { \"type\": \"number\" },891                \"batch\": { \"type\": \"number\" },892                \"threshold\": { \"type\": \"number\" },893                \"name\": { \"type\": \"string\" },894                \"hidden\": { \"type\": \"boolean\" },895                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },896                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }897              },898              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],899              \"type\": \"object\"900            },901            \"edgeMiddlewareInvocations\": {902              \"properties\": {903                \"matrix\": {904                  \"properties\": {905                    \"defaultUnitPrice\": { \"type\": \"string\" },906                    \"dimensionPrices\": {907                      \"additionalProperties\": { \"type\": \"string\" },908                      \"type\": \"object\"909                    }910                  },911                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],912                  \"type\": \"object\"913                },914                \"tier\": { \"type\": \"number\" },915                \"price\": { \"type\": \"number\" },916                \"batch\": { \"type\": \"number\" },917                \"threshold\": { \"type\": \"number\" },918                \"name\": { \"type\": \"string\" },919                \"hidden\": { \"type\": \"boolean\" },920                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },921                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }922              },923              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],924              \"type\": \"object\"925            },926            \"edgeRequest\": {927              \"properties\": {928                \"matrix\": {929                  \"properties\": {930                    \"defaultUnitPrice\": { \"type\": \"string\" },931                    \"dimensionPrices\": {932                      \"additionalProperties\": { \"type\": \"string\" },933                      \"type\": \"object\"934                    }935                  },936                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],937                  \"type\": \"object\"938                },939                \"tier\": { \"type\": \"number\" },940                \"price\": { \"type\": \"number\" },941                \"batch\": { \"type\": \"number\" },942                \"threshold\": { \"type\": \"number\" },943                \"name\": { \"type\": \"string\" },944                \"hidden\": { \"type\": \"boolean\" },945                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },946                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }947              },948              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],949              \"type\": \"object\"950            },951            \"edgeRequestAdditionalCpuDuration\": {952              \"properties\": {953                \"matrix\": {954                  \"properties\": {955                    \"defaultUnitPrice\": { \"type\": \"string\" },956                    \"dimensionPrices\": {957                      \"additionalProperties\": { \"type\": \"string\" },958                      \"type\": \"object\"959                    }960                  },961                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],962                  \"type\": \"object\"963                },964                \"tier\": { \"type\": \"number\" },965                \"price\": { \"type\": \"number\" },966                \"batch\": { \"type\": \"number\" },967                \"threshold\": { \"type\": \"number\" },968                \"name\": { \"type\": \"string\" },969                \"hidden\": { \"type\": \"boolean\" },970                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },971                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }972              },973              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],974              \"type\": \"object\"975            },976            \"fastDataTransfer\": {977              \"properties\": {978                \"matrix\": {979                  \"properties\": {980                    \"defaultUnitPrice\": { \"type\": \"string\" },981                    \"dimensionPrices\": {982                      \"additionalProperties\": { \"type\": \"string\" },983                      \"type\": \"object\"984                    }985                  },986                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],987                  \"type\": \"object\"988                },989                \"tier\": { \"type\": \"number\" },990                \"price\": { \"type\": \"number\" },991                \"batch\": { \"type\": \"number\" },992                \"threshold\": { \"type\": \"number\" },993                \"name\": { \"type\": \"string\" },994                \"hidden\": { \"type\": \"boolean\" },995                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },996                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }997              },998              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],999              \"type\": \"object\"1000            },1001            \"fastOriginTransfer\": {1002              \"properties\": {1003                \"matrix\": {1004                  \"properties\": {1005                    \"defaultUnitPrice\": { \"type\": \"string\" },1006                    \"dimensionPrices\": {1007                      \"additionalProperties\": { \"type\": \"string\" },1008                      \"type\": \"object\"1009                    }1010                  },1011                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1012                  \"type\": \"object\"1013                },1014                \"tier\": { \"type\": \"number\" },1015                \"price\": { \"type\": \"number\" },1016                \"batch\": { \"type\": \"number\" },1017                \"threshold\": { \"type\": \"number\" },1018                \"name\": { \"type\": \"string\" },1019                \"hidden\": { \"type\": \"boolean\" },1020                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1021                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1022              },1023              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1024              \"type\": \"object\"1025            },1026            \"functionDuration\": {1027              \"properties\": {1028                \"matrix\": {1029                  \"properties\": {1030                    \"defaultUnitPrice\": { \"type\": \"string\" },1031                    \"dimensionPrices\": {1032                      \"additionalProperties\": { \"type\": \"string\" },1033                      \"type\": \"object\"1034                    }1035                  },1036                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1037                  \"type\": \"object\"1038                },1039                \"tier\": { \"type\": \"number\" },1040                \"price\": { \"type\": \"number\" },1041                \"batch\": { \"type\": \"number\" },1042                \"threshold\": { \"type\": \"number\" },1043                \"name\": { \"type\": \"string\" },1044                \"hidden\": { \"type\": \"boolean\" },1045                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1046                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1047              },1048              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1049              \"type\": \"object\"1050            },1051            \"functionInvocation\": {1052              \"properties\": {1053                \"matrix\": {1054                  \"properties\": {1055                    \"defaultUnitPrice\": { \"type\": \"string\" },1056                    \"dimensionPrices\": {1057                      \"additionalProperties\": { \"type\": \"string\" },1058                      \"type\": \"object\"1059                    }1060                  },1061                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1062                  \"type\": \"object\"1063                },1064                \"tier\": { \"type\": \"number\" },1065                \"price\": { \"type\": \"number\" },1066                \"batch\": { \"type\": \"number\" },1067                \"threshold\": { \"type\": \"number\" },1068                \"name\": { \"type\": \"string\" },1069                \"hidden\": { \"type\": \"boolean\" },1070                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1071                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1072              },1073              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1074              \"type\": \"object\"1075            },1076            \"logDrainsVolume\": {1077              \"properties\": {1078                \"matrix\": {1079                  \"properties\": {1080                    \"defaultUnitPrice\": { \"type\": \"string\" },1081                    \"dimensionPrices\": {1082                      \"additionalProperties\": { \"type\": \"string\" },1083                      \"type\": \"object\"1084                    }1085                  },1086                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1087                  \"type\": \"object\"1088                },1089                \"tier\": { \"type\": \"number\" },1090                \"price\": { \"type\": \"number\" },1091                \"batch\": { \"type\": \"number\" },1092                \"threshold\": { \"type\": \"number\" },1093                \"name\": { \"type\": \"string\" },1094                \"hidden\": { \"type\": \"boolean\" },1095                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1096                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1097              },1098              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1099              \"type\": \"object\"1100            },1101            \"monitoringMetric\": {1102              \"properties\": {1103                \"matrix\": {1104                  \"properties\": {1105                    \"defaultUnitPrice\": { \"type\": \"string\" },1106                    \"dimensionPrices\": {1107                      \"additionalProperties\": { \"type\": \"string\" },1108                      \"type\": \"object\"1109                    }1110                  },1111                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1112                  \"type\": \"object\"1113                },1114                \"tier\": { \"type\": \"number\" },1115                \"price\": { \"type\": \"number\" },1116                \"batch\": { \"type\": \"number\" },1117                \"threshold\": { \"type\": \"number\" },1118                \"name\": { \"type\": \"string\" },1119                \"hidden\": { \"type\": \"boolean\" },1120                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1121                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1122              },1123              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1124              \"type\": \"object\"1125            },1126            \"postgresComputeTime\": {1127              \"properties\": {1128                \"matrix\": {1129                  \"properties\": {1130                    \"defaultUnitPrice\": { \"type\": \"string\" },1131                    \"dimensionPrices\": {1132                      \"additionalProperties\": { \"type\": \"string\" },1133                      \"type\": \"object\"1134                    }1135                  },1136                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1137                  \"type\": \"object\"1138                },1139                \"tier\": { \"type\": \"number\" },1140                \"price\": { \"type\": \"number\" },1141                \"batch\": { \"type\": \"number\" },1142                \"threshold\": { \"type\": \"number\" },1143                \"name\": { \"type\": \"string\" },1144                \"hidden\": { \"type\": \"boolean\" },1145                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1146                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1147              },1148              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1149              \"type\": \"object\"1150            },1151            \"postgresDataStorage\": {1152              \"properties\": {1153                \"matrix\": {1154                  \"properties\": {1155                    \"defaultUnitPrice\": { \"type\": \"string\" },1156                    \"dimensionPrices\": {1157                      \"additionalProperties\": { \"type\": \"string\" },1158                      \"type\": \"object\"1159                    }1160                  },1161                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1162                  \"type\": \"object\"1163                },1164                \"tier\": { \"type\": \"number\" },1165                \"price\": { \"type\": \"number\" },1166                \"batch\": { \"type\": \"number\" },1167                \"threshold\": { \"type\": \"number\" },1168                \"name\": { \"type\": \"string\" },1169                \"hidden\": { \"type\": \"boolean\" },1170                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1171                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1172              },1173              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1174              \"type\": \"object\"1175            },1176            \"postgresDataTransfer\": {1177              \"properties\": {1178                \"matrix\": {1179                  \"properties\": {1180                    \"defaultUnitPrice\": { \"type\": \"string\" },1181                    \"dimensionPrices\": {1182                      \"additionalProperties\": { \"type\": \"string\" },1183                      \"type\": \"object\"1184                    }1185                  },1186                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1187                  \"type\": \"object\"1188                },1189                \"tier\": { \"type\": \"number\" },1190                \"price\": { \"type\": \"number\" },1191                \"batch\": { \"type\": \"number\" },1192                \"threshold\": { \"type\": \"number\" },1193                \"name\": { \"type\": \"string\" },1194                \"hidden\": { \"type\": \"boolean\" },1195                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1196                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1197              },1198              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1199              \"type\": \"object\"1200            },1201            \"postgresDatabase\": {1202              \"properties\": {1203                \"matrix\": {1204                  \"properties\": {1205                    \"defaultUnitPrice\": { \"type\": \"string\" },1206                    \"dimensionPrices\": {1207                      \"additionalProperties\": { \"type\": \"string\" },1208                      \"type\": \"object\"1209                    }1210                  },1211                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1212                  \"type\": \"object\"1213                },1214                \"tier\": { \"type\": \"number\" },1215                \"price\": { \"type\": \"number\" },1216                \"batch\": { \"type\": \"number\" },1217                \"threshold\": { \"type\": \"number\" },1218                \"name\": { \"type\": \"string\" },1219                \"hidden\": { \"type\": \"boolean\" },1220                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1221                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1222              },1223              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1224              \"type\": \"object\"1225            },1226            \"postgresWrittenData\": {1227              \"properties\": {1228                \"matrix\": {1229                  \"properties\": {1230                    \"defaultUnitPrice\": { \"type\": \"string\" },1231                    \"dimensionPrices\": {1232                      \"additionalProperties\": { \"type\": \"string\" },1233                      \"type\": \"object\"1234                    }1235                  },1236                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1237                  \"type\": \"object\"1238                },1239                \"tier\": { \"type\": \"number\" },1240                \"price\": { \"type\": \"number\" },1241                \"batch\": { \"type\": \"number\" },1242                \"threshold\": { \"type\": \"number\" },1243                \"name\": { \"type\": \"string\" },1244                \"hidden\": { \"type\": \"boolean\" },1245                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1246                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1247              },1248              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1249              \"type\": \"object\"1250            },1251            \"serverlessFunctionExecution\": {1252              \"properties\": {1253                \"matrix\": {1254                  \"properties\": {1255                    \"defaultUnitPrice\": { \"type\": \"string\" },1256                    \"dimensionPrices\": {1257                      \"additionalProperties\": { \"type\": \"string\" },1258                      \"type\": \"object\"1259                    }1260                  },1261                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1262                  \"type\": \"object\"1263                },1264                \"tier\": { \"type\": \"number\" },1265                \"price\": { \"type\": \"number\" },1266                \"batch\": { \"type\": \"number\" },1267                \"threshold\": { \"type\": \"number\" },1268                \"name\": { \"type\": \"string\" },1269                \"hidden\": { \"type\": \"boolean\" },1270                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1271                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1272              },1273              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1274              \"type\": \"object\"1275            },1276            \"sourceImages\": {1277              \"properties\": {1278                \"matrix\": {1279                  \"properties\": {1280                    \"defaultUnitPrice\": { \"type\": \"string\" },1281                    \"dimensionPrices\": {1282                      \"additionalProperties\": { \"type\": \"string\" },1283                      \"type\": \"object\"1284                    }1285                  },1286                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1287                  \"type\": \"object\"1288                },1289                \"tier\": { \"type\": \"number\" },1290                \"price\": { \"type\": \"number\" },1291                \"batch\": { \"type\": \"number\" },1292                \"threshold\": { \"type\": \"number\" },1293                \"name\": { \"type\": \"string\" },1294                \"hidden\": { \"type\": \"boolean\" },1295                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1296                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1297              },1298              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1299              \"type\": \"object\"1300            },1301            \"storageRedisTotalBandwidthInBytes\": {1302              \"properties\": {1303                \"matrix\": {1304                  \"properties\": {1305                    \"defaultUnitPrice\": { \"type\": \"string\" },1306                    \"dimensionPrices\": {1307                      \"additionalProperties\": { \"type\": \"string\" },1308                      \"type\": \"object\"1309                    }1310                  },1311                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1312                  \"type\": \"object\"1313                },1314                \"tier\": { \"type\": \"number\" },1315                \"price\": { \"type\": \"number\" },1316                \"batch\": { \"type\": \"number\" },1317                \"threshold\": { \"type\": \"number\" },1318                \"name\": { \"type\": \"string\" },1319                \"hidden\": { \"type\": \"boolean\" },1320                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1321                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1322              },1323              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1324              \"type\": \"object\"1325            },1326            \"storageRedisTotalCommands\": {1327              \"properties\": {1328                \"matrix\": {1329                  \"properties\": {1330                    \"defaultUnitPrice\": { \"type\": \"string\" },1331                    \"dimensionPrices\": {1332                      \"additionalProperties\": { \"type\": \"string\" },1333                      \"type\": \"object\"1334                    }1335                  },1336                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1337                  \"type\": \"object\"1338                },1339                \"tier\": { \"type\": \"number\" },1340                \"price\": { \"type\": \"number\" },1341                \"batch\": { \"type\": \"number\" },1342                \"threshold\": { \"type\": \"number\" },1343                \"name\": { \"type\": \"string\" },1344                \"hidden\": { \"type\": \"boolean\" },1345                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1346                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1347              },1348              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1349              \"type\": \"object\"1350            },1351            \"storageRedisTotalDailyAvgStorageInBytes\": {1352              \"properties\": {1353                \"matrix\": {1354                  \"properties\": {1355                    \"defaultUnitPrice\": { \"type\": \"string\" },1356                    \"dimensionPrices\": {1357                      \"additionalProperties\": { \"type\": \"string\" },1358                      \"type\": \"object\"1359                    }1360                  },1361                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1362                  \"type\": \"object\"1363                },1364                \"tier\": { \"type\": \"number\" },1365                \"price\": { \"type\": \"number\" },1366                \"batch\": { \"type\": \"number\" },1367                \"threshold\": { \"type\": \"number\" },1368                \"name\": { \"type\": \"string\" },1369                \"hidden\": { \"type\": \"boolean\" },1370                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1371                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1372              },1373              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1374              \"type\": \"object\"1375            },1376            \"storageRedisTotalDatabases\": {1377              \"properties\": {1378                \"matrix\": {1379                  \"properties\": {1380                    \"defaultUnitPrice\": { \"type\": \"string\" },1381                    \"dimensionPrices\": {1382                      \"additionalProperties\": { \"type\": \"string\" },1383                      \"type\": \"object\"1384                    }1385                  },1386                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1387                  \"type\": \"object\"1388                },1389                \"tier\": { \"type\": \"number\" },1390                \"price\": { \"type\": \"number\" },1391                \"batch\": { \"type\": \"number\" },1392                \"threshold\": { \"type\": \"number\" },1393                \"name\": { \"type\": \"string\" },1394                \"hidden\": { \"type\": \"boolean\" },1395                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1396                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1397              },1398              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1399              \"type\": \"object\"1400            },1401            \"wafOwaspExcessBytes\": {1402              \"properties\": {1403                \"matrix\": {1404                  \"properties\": {1405                    \"defaultUnitPrice\": { \"type\": \"string\" },1406                    \"dimensionPrices\": {1407                      \"additionalProperties\": { \"type\": \"string\" },1408                      \"type\": \"object\"1409                    }1410                  },1411                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1412                  \"type\": \"object\"1413                },1414                \"tier\": { \"type\": \"number\" },1415                \"price\": { \"type\": \"number\" },1416                \"batch\": { \"type\": \"number\" },1417                \"threshold\": { \"type\": \"number\" },1418                \"name\": { \"type\": \"string\" },1419                \"hidden\": { \"type\": \"boolean\" },1420                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1421                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1422              },1423              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1424              \"type\": \"object\"1425            },1426            \"wafOwaspRequests\": {1427              \"properties\": {1428                \"matrix\": {1429                  \"properties\": {1430                    \"defaultUnitPrice\": { \"type\": \"string\" },1431                    \"dimensionPrices\": {1432                      \"additionalProperties\": { \"type\": \"string\" },1433                      \"type\": \"object\"1434                    }1435                  },1436                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1437                  \"type\": \"object\"1438                },1439                \"tier\": { \"type\": \"number\" },1440                \"price\": { \"type\": \"number\" },1441                \"batch\": { \"type\": \"number\" },1442                \"threshold\": { \"type\": \"number\" },1443                \"name\": { \"type\": \"string\" },1444                \"hidden\": { \"type\": \"boolean\" },1445                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1446                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1447              },1448              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1449              \"type\": \"object\"1450            },1451            \"webAnalyticsEvent\": {1452              \"properties\": {1453                \"matrix\": {1454                  \"properties\": {1455                    \"defaultUnitPrice\": { \"type\": \"string\" },1456                    \"dimensionPrices\": {1457                      \"additionalProperties\": { \"type\": \"string\" },1458                      \"type\": \"object\"1459                    }1460                  },1461                  \"required\": [\"defaultUnitPrice\", \"dimensionPrices\"],1462                  \"type\": \"object\"1463                },1464                \"tier\": { \"type\": \"number\" },1465                \"price\": { \"type\": \"number\" },1466                \"batch\": { \"type\": \"number\" },1467                \"threshold\": { \"type\": \"number\" },1468                \"name\": { \"type\": \"string\" },1469                \"hidden\": { \"type\": \"boolean\" },1470                \"disabledAt\": { \"nullable\": true, \"type\": \"number\" },1471                \"enabledAt\": { \"nullable\": true, \"type\": \"number\" }1472              },1473              \"required\": [\"price\", \"batch\", \"threshold\", \"hidden\"],1474              \"type\": \"object\"1475            }1476          },1477          \"type\": \"object\"1478        },1479        \"invoiceSettings\": {1480          \"properties\": { \"footer\": { \"type\": \"string\" } },1481          \"type\": \"object\"1482        },1483        \"subscriptions\": {1484          \"nullable\": true,1485          \"items\": {1486            \"properties\": {1487              \"id\": { \"type\": \"string\" },1488              \"trial\": {1489                \"nullable\": true,1490                \"properties\": {1491                  \"start\": { \"type\": \"number\" },1492                  \"end\": { \"type\": \"number\" }1493                },1494                \"required\": [\"start\", \"end\"],1495                \"type\": \"object\"1496              },1497              \"period\": {1498                \"properties\": {1499                  \"start\": { \"type\": \"number\" },1500                  \"end\": { \"type\": \"number\" }1501                },1502                \"required\": [\"start\", \"end\"],1503                \"type\": \"object\"1504              },1505              \"frequency\": {1506                \"properties\": {1507                  \"interval\": {1508                    \"type\": \"string\",1509                    \"enum\": [\"month\", \"day\", \"week\", \"year\"]1510                  },1511                  \"intervalCount\": { \"type\": \"number\" }1512                },1513                \"required\": [\"interval\", \"intervalCount\"],1514                \"type\": \"object\"1515              },1516              \"discount\": {1517                \"nullable\": true,1518                \"properties\": {1519                  \"id\": { \"type\": \"string\" },1520                  \"coupon\": {1521                    \"properties\": {1522                      \"id\": { \"type\": \"string\" },1523                      \"name\": { \"nullable\": true, \"type\": \"string\" },1524                      \"amountOff\": { \"nullable\": true, \"type\": \"number\" },1525                      \"percentageOff\": { \"nullable\": true, \"type\": \"number\" },1526                      \"durationInMonths\": {1527                        \"nullable\": true,1528                        \"type\": \"number\"1529                      },1530                      \"duration\": {1531                        \"type\": \"string\",1532                        \"enum\": [\"forever\", \"repeating\", \"once\"]1533                      }1534                    },1535                    \"required\": [1536                      \"id\",1537                      \"name\",1538                      \"amountOff\",1539                      \"percentageOff\",1540                      \"durationInMonths\",1541                      \"duration\"1542                    ],1543                    \"type\": \"object\"1544                  }1545                },1546                \"required\": [\"id\", \"coupon\"],1547                \"type\": \"object\"1548              },1549              \"items\": {1550                \"items\": {1551                  \"properties\": {1552                    \"id\": { \"type\": \"string\" },1553                    \"priceId\": { \"type\": \"string\" },1554                    \"productId\": { \"type\": \"string\" },1555                    \"amount\": { \"type\": \"number\" },1556                    \"quantity\": { \"type\": \"number\" }1557                  },1558                  \"required\": [1559                    \"id\",1560                    \"priceId\",1561                    \"productId\",1562                    \"amount\",1563                    \"quantity\"1564                  ],1565                  \"type\": \"object\"1566                },1567                \"type\": \"array\"1568              }1569            },1570            \"required\": [1571              \"id\",1572              \"trial\",1573              \"period\",1574              \"frequency\",1575              \"discount\",1576              \"items\"1577            ],1578            \"type\": \"object\"1579          },1580          \"type\": \"array\"1581        },1582        \"controls\": {1583          \"nullable\": true,1584          \"properties\": {1585            \"analyticsSampleRateInPercent\": {1586              \"nullable\": true,1587              \"type\": \"number\"1588            },1589            \"analyticsSpendLimitInDollars\": {1590              \"nullable\": true,1591              \"type\": \"number\"1592            }1593          },1594          \"type\": \"object\"1595        },1596        \"purchaseOrder\": { \"nullable\": true, \"type\": \"string\" },1597        \"status\": {1598          \"type\": \"string\",1599          \"enum\": [\"active\", \"trialing\", \"overdue\", \"expired\", \"canceled\"]1600        },1601        \"pricingExperiment\": { \"type\": \"string\", \"enum\": [\"august-2022\"] },1602        \"orbMigrationScheduledAt\": { \"nullable\": true, \"type\": \"number\" },1603        \"forceOrbMigration\": { \"nullable\": true, \"type\": \"boolean\" },1604        \"awsMarketplace\": {1605          \"nullable\": true,1606          \"properties\": {1607            \"productCode\": { \"type\": \"string\" },1608            \"offerId\": { \"type\": \"string\" },1609            \"customerId\": { \"type\": \"string\" }1610          },1611          \"required\": [\"productCode\", \"customerId\"],1612          \"type\": \"object\"1613        }1614      },1615      \"required\": [\"period\", \"plan\"],1616      \"type\": \"object\",1617      \"description\": \"An object containing billing infomation associated with the User account.\"1618    },1619    \"resourceConfig\": {1620      \"properties\": {1621        \"blobStores\": {1622          \"type\": \"number\",1623          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1624        },1625        \"nodeType\": {1626          \"type\": \"string\",1627          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1628        },1629        \"concurrentBuilds\": {1630          \"type\": \"number\",1631          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1632        },1633        \"awsAccountType\": {1634          \"type\": \"string\",1635          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1636        },1637        \"awsAccountIds\": {1638          \"items\": { \"type\": \"string\" },1639          \"type\": \"array\",1640          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1641        },1642        \"cfZoneName\": {1643          \"type\": \"string\",1644          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1645        },1646        \"imageOptimizationType\": {1647          \"type\": \"string\",1648          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1649        },1650        \"edgeConfigs\": {1651          \"type\": \"number\",1652          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1653        },1654        \"edgeConfigSize\": {1655          \"type\": \"number\",1656          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1657        },1658        \"edgeFunctionMaxSizeBytes\": {1659          \"type\": \"number\",1660          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1661        },1662        \"edgeFunctionExecutionTimeoutMs\": {1663          \"type\": \"number\",1664          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1665        },1666        \"serverlessFunctionDefaultMaxExecutionTime\": {1667          \"type\": \"number\",1668          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1669        },1670        \"kvDatabases\": {1671          \"type\": \"number\",1672          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1673        },1674        \"postgresDatabases\": {1675          \"type\": \"number\",1676          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1677        },1678        \"integrationStores\": {1679          \"type\": \"number\",1680          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1681        },1682        \"cronJobs\": {1683          \"type\": \"number\",1684          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1685        },1686        \"cronJobsPerProject\": {1687          \"type\": \"number\",1688          \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1689        }1690      },1691      \"type\": \"object\",1692      \"description\": \"An object containing infomation related to the amount of platform resources may be allocated to the User account.\"1693    },1694    \"stagingPrefix\": {1695      \"type\": \"string\",1696      \"description\": \"Prefix that will be used in the URL of \\\"Preview\\\" deployments created by the User account.\"1697    },1698    \"activeDashboardViews\": {1699      \"items\": {1700        \"properties\": {1701          \"scopeId\": { \"type\": \"string\" },1702          \"viewPreference\": { \"type\": \"string\", \"enum\": [\"list\", \"cards\"] },1703          \"favoritesViewPreference\": {1704            \"type\": \"string\",1705            \"enum\": [\"open\", \"closed\"]1706          },1707          \"recentsViewPreference\": {1708            \"type\": \"string\",1709            \"enum\": [\"open\", \"closed\"]1710          }1711        },1712        \"required\": [\"scopeId\"],1713        \"type\": \"object\",1714        \"description\": \"set of dashboard view preferences (cards or list) per scopeId\"1715      },1716      \"type\": \"array\",1717      \"description\": \"set of dashboard view preferences (cards or list) per scopeId\"1718    },1719    \"importFlowGitNamespace\": {1720      \"nullable\": true,1721      \"oneOf\": [{ \"type\": \"string\" }, { \"type\": \"number\" }]1722    },1723    \"importFlowGitNamespaceId\": {1724      \"nullable\": true,1725      \"oneOf\": [{ \"type\": \"string\" }, { \"type\": \"number\" }]1726    },1727    \"importFlowGitProvider\": {1728      \"type\": \"string\",1729      \"enum\": [\"github\", \"gitlab\", \"bitbucket\"]1730    },1731    \"preferredScopesAndGitNamespaces\": {1732      \"items\": {1733        \"properties\": {1734          \"scopeId\": { \"type\": \"string\" },1735          \"gitNamespaceId\": {1736            \"nullable\": true,1737            \"oneOf\": [{ \"type\": \"string\" }, { \"type\": \"number\" }]1738          }1739        },1740        \"required\": [\"scopeId\", \"gitNamespaceId\"],1741        \"type\": \"object\"1742      },1743      \"type\": \"array\"1744    },1745    \"dismissedToasts\": {1746      \"items\": {1747        \"properties\": {1748          \"name\": { \"type\": \"string\" },1749          \"dismissals\": {1750            \"items\": {1751              \"properties\": {1752                \"scopeId\": { \"type\": \"string\" },1753                \"createdAt\": { \"type\": \"number\" }1754              },1755              \"required\": [\"scopeId\", \"createdAt\"],1756              \"type\": \"object\"1757            },1758            \"type\": \"array\"1759          }1760        },1761        \"required\": [\"name\", \"dismissals\"],1762        \"type\": \"object\",1763        \"description\": \"A record of when, under a certain scopeId, a toast was dismissed\"1764      },1765      \"type\": \"array\",1766      \"description\": \"A record of when, under a certain scopeId, a toast was dismissed\"1767    },1768    \"favoriteProjectsAndSpaces\": {1769      \"items\": {1770        \"oneOf\": [1771          {1772            \"properties\": {1773              \"projectId\": { \"type\": \"string\" },1774              \"scopeSlug\": { \"type\": \"string\" },1775              \"scopeId\": { \"type\": \"string\" }1776            },1777            \"required\": [\"projectId\", \"scopeSlug\", \"scopeId\"],1778            \"type\": \"object\",1779            \"description\": \"A list of projects and spaces across teams that a user has marked as a favorite.\"1780          },1781          {1782            \"properties\": {1783              \"spaceId\": { \"type\": \"string\" },1784              \"scopeSlug\": { \"type\": \"string\" },1785              \"scopeId\": { \"type\": \"string\" }1786            },1787            \"required\": [\"spaceId\", \"scopeSlug\", \"scopeId\"],1788            \"type\": \"object\",1789            \"description\": \"A list of projects and spaces across teams that a user has marked as a favorite.\"1790          }1791        ]1792      },1793      \"type\": \"array\",1794      \"description\": \"A list of projects and spaces across teams that a user has marked as a favorite.\"1795    },1796    \"hasTrialAvailable\": {1797      \"type\": \"boolean\",1798      \"description\": \"Whether the user has a trial available for a paid plan subscription.\"1799    },1800    \"remoteCaching\": {1801      \"properties\": { \"enabled\": { \"type\": \"boolean\" } },1802      \"type\": \"object\",1803      \"description\": \"remote caching settings\"1804    },1805    \"dataCache\": {1806      \"properties\": { \"excessBillingEnabled\": { \"type\": \"boolean\" } },1807      \"type\": \"object\",1808      \"description\": \"data cache settings\"1809    },1810    \"featureBlocks\": {1811      \"properties\": {1812        \"webAnalytics\": {1813          \"properties\": {1814            \"blockedFrom\": { \"type\": \"number\" },1815            \"blockedUntil\": { \"type\": \"number\" },1816            \"isCurrentlyBlocked\": { \"type\": \"boolean\" }1817          },1818          \"required\": [\"isCurrentlyBlocked\"],1819          \"type\": \"object\"1820        }1821      },1822      \"type\": \"object\",1823      \"description\": \"Feature blocks for the user\"1824    },1825    \"northstarMigration\": {1826      \"properties\": {1827        \"teamId\": {1828          \"type\": \"string\",1829          \"description\": \"The ID of the team we created for this user.\"1830        },1831        \"projects\": {1832          \"type\": \"number\",1833          \"description\": \"The number of projects migrated for this user.\"1834        },1835        \"stores\": {1836          \"type\": \"number\",1837          \"description\": \"The number of stores migrated for this user.\"1838        },1839        \"integrationConfigurations\": {1840          \"type\": \"number\",1841          \"description\": \"The number of integration configurations migrated for this user.\"1842        },1843        \"integrationClients\": {1844          \"type\": \"number\",1845          \"description\": \"The number of integration clients migrated for this user.\"1846        },1847        \"startTime\": {1848          \"type\": \"number\",1849          \"description\": \"The migration start time timestamp for this user.\"1850        },1851        \"endTime\": {1852          \"type\": \"number\",1853          \"description\": \"The migration end time timestamp for this user.\"1854        }1855      },1856      \"required\": [1857        \"teamId\",1858        \"projects\",1859        \"stores\",1860        \"integrationConfigurations\",1861        \"integrationClients\",1862        \"startTime\",1863        \"endTime\"1864      ],1865      \"type\": \"object\"1866    },1867    \"id\": {1868      \"type\": \"string\",1869      \"description\": \"The User's unique identifier.\",1870      \"example\": \"AEIIDYVk59zbFF2Sxfyxxmua\"1871    },1872    \"email\": {1873      \"type\": \"string\",1874      \"description\": \"Email address associated with the User account.\",1875      \"example\": \"me@example.com\"1876    },1877    \"name\": {1878      \"nullable\": true,1879      \"type\": \"string\",1880      \"description\": \"Name associated with the User account, or `null` if none has been provided.\",1881      \"example\": \"John Doe\"1882    },1883    \"username\": {1884      \"type\": \"string\",1885      \"description\": \"Unique username associated with the User account.\",1886      \"example\": \"jdoe\"1887    },1888    \"avatar\": {1889      \"nullable\": true,1890      \"type\": \"string\",1891      \"description\": \"SHA1 hash of the avatar for the User account. Can be used in conjuction with the ... endpoint to retrieve the avatar image.\",1892      \"example\": \"22cb30c85ff45ac4c72de8981500006b28114aa1\"1893    },1894    \"defaultTeamId\": {1895      \"nullable\": true,1896      \"type\": \"string\",1897      \"description\": \"The user's default team. Only applies if the user's `version` is `'northstar'`.\"1898    },1899    \"version\": {1900      \"nullable\": true,1901      \"type\": \"string\",1902      \"enum\": [\"northstar\"],1903      \"description\": \"The user's version. Will either be unset or `northstar`.\"1904    }1905  },1906  \"required\": [1907    \"createdAt\",1908    \"softBlock\",1909    \"billing\",1910    \"resourceConfig\",1911    \"stagingPrefix\",1912    \"hasTrialAvailable\",1913    \"id\",1914    \"email\",1915    \"name\",1916    \"username\",1917    \"avatar\",1918    \"defaultTeamId\",1919    \"version\"1920  ],1921  \"type\": \"object\",1922  \"description\": \"Data for the currently authenticated User.\"1923}\n```",
  "title": "Vercel REST API Interfaces",
  "description": "Shared interfaces referenced across multiple endpoints.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/log-drains",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/deployments/checks",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/edge-network/headers",
  "markdown": "# Headers Included with Deployments\n\nHeaders are small pieces of information that are sent between the client (usually a web browser) and the server. They contain metadata about the request and response, such as the content type, cache-control directives, and authentication tokens. [HTTP headers](https://developer.mozilla.org/docs/Web/HTTP/Headers) can be found in both the HTTP Request and HTTP Response.\n\nBy using headers effectively, you can optimize the performance and security of your application on Vercel's edge network. Here are some tips for using headers on Vercel:\n\n1.  [Use caching headers](#cache-control-header): Caching headers instruct the client and server to cache resources like images, CSS files, and JavaScript files, so they don't need to be reloaded every time a user visits your site. By using caching headers, you can significantly reduce the time it takes for your site to load.\n2.  [Use compression headers](https://vercel.com/docs/edge-network/compression#compression-with-vercel-edge-network): Use the `Accept-Encoding` header to tell the client and server to compress data before it's sent over the network. By using compression, you can reduce the amount of data that needs to be sent, resulting in faster load times.\n3.  Use custom headers: You can also use custom headers in your `vercel.json` file to add metadata specific to your application. For example, you could add a header that indicates the user's preferred language or the version of your application. See [Project Configuration](https://vercel.com/docs/projects/project-configuration#headers) docs for more information.\n\nThe following headers are sent to each Vercel deployment and can be used to process the request before sending back a response. These headers can be read from the [Request](https://nodejs.org/api/http.html#http_message_headers) object in your [Serverless Function](https://vercel.com/docs/functions/serverless-functions).\n\nThis header represents the domain name as it was accessed by the client. If the deployment has been assigned to a preview URL or production domain and the client visits the domain URL, it contains the custom domain instead of the underlying deployment URL.\n\nThis header contains a list of [Edge regions](https://vercel.com/docs/edge-network/regions) your request hit, as well as the region the function was executed in (for both Edge and Serverless).\n\nIt also allows Vercel to automatically prevent infinite loops.\n\nThis header is identical to the `host` header.\n\nThis header represents the protocol of the forwarded server, typically `https` in production and `http`in development.\n\nThe public IP address of the client that made the request.\n\nIf you are trying to use Vercel behind a proxy, we currently overwrite the [`X-Forwarded-For`](https://developer.mozilla.org/docs/Web/HTTP/Headers/X-Forwarded-For) header and do not forward external IPs. This restriction is in place to prevent IP spoofing.\n\nEnterprise customers can purchase and enable a trusted proxy to allow your custom `X-Forwarded-For` IP. [Contact us](https://vercel.com/contact/sales) for more information.\n\nThis header is identical to the `x-forwarded-for` header. However, `x-forwarded-for` could be overwritten if you're using a proxy on top of Vercel.\n\nThis header is identical to the `x-forwarded-for` header.\n\nThis header represents the unique deployment, not the preview URL or production domain. For example, `*.vercel.app`.\n\nA two-character [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) code representing the continent associated with the location of the requester's public IP address. Codes used to identify continents are as follows:\n\n*   `AF` for Africa\n*   `AN` for Antarctica\n*   `AS` for Asia\n*   `EU` for Europe\n*   `NA` for North America\n*   `OC` for Oceania\n*   `SA` for South America\n\nA two-character [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) country code for the country associated with the location of the requester's public IP address.\n\nA string of up to three characters containing the region-portion of the [ISO 3166-2](https://en.wikipedia.org/wiki/ISO_3166-2) code for the first level region associated with the requester's public IP address. Some countries have two levels of subdivisions, in which case this is the least specific one. For example, in the United Kingdom this will be a country like \"England\", not a county like \"Devon\".\n\nThe city name for the location of the requester's public IP address. Non-ASCII characters are encoded according to [RFC3986](https://tools.ietf.org/html/rfc3986).\n\nThe latitude for the location of the requester's public IP address. For example, `37.7749`.\n\nThe longitude for the location of the requester's public IP address. For example, `-122.4194`.\n\nThe name of the time zone for the location of the requester’s public IP address in ICANN Time Zone Database name format such as `America/Chicago`.\n\nThe signature of the request. This header is used to verify that the request was sent by Vercel, and contains a hash signature you can use to validate the request body.\n\nThe following headers are included in Vercel deployment responses and indicate certain factors of the environment. These headers can be viewed from the Browser's Dev Tools or using an HTTP client such as `curl -I <DEPLOYMENT_URL>`.\n\nUsed to specify directives for caching mechanisms in both the [Network layer cache](https://vercel.com/docs/edge-network/caching) and the browser cache. See the [Cache Control Headers](https://vercel.com/docs/edge-network/headers#cache-control-header) section for more detail.\n\nIf you use this header to instruct the Edge Network to cache data, such as with the [`s-maxage`](#s-maxage) directive, Vercel returns the following `cache-control` header to the client:\n\n\\-`cache-control: public, max-age=0, must-revalidate`\n\nAn integer that indicates the number of bytes in the response.\n\nThe [media type](https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/MIME_types) that describes the nature and format of the response.\n\nA timestamp indicating when the response was generated.\n\nShows where the request came from. This header can be overridden by other proxies (e.g., Cloudflare).\n\nA header often abbreviated as [HSTS](https://developer.mozilla.org/docs/Glossary/HSTS) that tells browsers that the resource should only be requested over HTTPS. The default value is `strict-transport-security: max-age=63072000` (2 years)\n\nPresent only on:\n\n*   [Preview Deployments](https://vercel.com/docs/deployments/preview-deployments)\n*   Outdated [Production Deployments](https://vercel.com/docs/deployments/overview). When you [promote a new deployment to production](https://vercel.com/docs/deployments/managing-deployments#promote-deployment-to-production), the `x-robots-tag` header will be sent to requests for outdated production deployments\n\nWe add this header automatically with a value of `noindex` to prevent search engines from crawling your Preview Deployments and outdated Production Deployments, which could cause them to penalize your site for duplicate content.\n\nYou can prevent this header from being added to your Preview Deployment by:\n\nThis header's value indicates whether the response was served from Vercel's edge cache.\n\nThe following values are possible when the content being served [is static](https://vercel.com/docs/edge-network/caching#static-files-caching) or uses [a Cache-Control header](https://vercel.com/docs/edge-network/headers#cache-control-header):\n\n[`MISS`](#miss): The response was not found in the edge cache and was fetched from the origin server\n\nShow Diagram\n\n[`HIT`](#hit): The response was served from the edge cache.\n\nShow Diagram\n\n[`STALE`](#stale): The response was served from the edge cache. A background request to the origin server was made to update the content.\n\nShow Diagram\n\n[`PRERENDER`](#prerender): The response was served from static storage.\n\nShow Diagram\n\nThis header contains a list of [Edge regions](https://vercel.com/docs/edge-network/regions) your request hit, as well as the region the function was executed in (for both Edge and Serverless).\n\nIt also allows Vercel to automatically prevent infinite loops.\n\nYou can control how Vercel's Edge Network caches your Function responses by setting a [Cache-Control](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) header.\n\nThe default value is `cache-control: public, max-age=0, must-revalidate` which instructs both the Edge Network and the browser not to cache.\n\nWe recommend that you set your cache to`max-age=0, s-maxage=86400`, adjusting 86400 to the number of seconds you want the response cached. This configuration tells browsers not to cache, allowing Vercel's Edge Network to cache responses and invalidate them when deployments update.\n\nThis directive sets the number of seconds a response is considered \"fresh\" by the Edge Network. After this period ends, Vercel's Edge Network will serve the \"stale\" response from the edge until the response is asynchronously revalidated with a \"fresh\" response to your Serverless Function.\n\n`s-maxage` is consumed by Vercel's proxy and not included as part the final HTTP response to the client.\n\nThe following example instructs the Edge Network to cache the response for 60 seconds. A response can be cached a minimum of `1` second and maximum of `31536000` seconds (1 year).\n\n```\nCache-Control: s-maxage=60\n```\n\nThis `cache-control` directive allows you to serve content from the Edge cache while simultaneously updating the cache in the background with the response from your function. It is useful when:\n\n*   Your content changes frequently, but regeneration is slow, such as content that relies on an expensive database query or upstream API request\n*   Your content changes infrequently but you want to have the flexibility to update it without waiting for the cache to expire\n\n`stale-while-revalidate` is consumed by Vercel's proxy and not included as part the final HTTP response to the client. This allows you to deliver the latest content to your visitors right after creating a new deployment (as opposed to waiting for browser cache to expire). It also prevents content-flash.\n\nThe following example instructs the Edge Network to:\n\n*   Serve content from the Edge cache for 1 second\n*   Return a stale request (if requested after 1 second)\n*   Update the cache in the background asynchronously (if requested after 1 second)\n\n```\nCache-Control: s-maxage=1, stale-while-revalidate=59\n```\n\nThe first request is served synchronously. Subsequent requests are served from the cache and revalidated asynchronously if the cache is \"stale\".\n\nIf you need to do a _synchronous_ revalidation you can set the `pragma: no-cache` header along with the `cache-control` header. This can be used to understand how long the background revalidation took. It sets the `x-vercel-cache` header to `REVALIDATED`.\n\nMany browser developer tools set `pragma: no-cache` by default, which reveals the true load time of the page with the synchronous update to the cache.\n\nThis directive is currently not supported. `stale-if-error` is consumed by Vercel's proxy, and will not be included in the HTTP response sent to the client.\n\nThis directive is currently not supported.\n\nUsing the `private` directive specifies that the response can only be cached by the client and not by Vercel's Edge Network. Use this directive when you want to cache content on the user's browser, but prevent caching on Vercel's Edge Network.\n\nWhen Vercel's Edge Network CDN receives a request with `Pragma: no-cache` (such as when the browser devtools are open), it will revalidate any stale resource synchronously, instead of in the background.\n\nSometimes the directives you set in a `Cache-Control` header can be interpreted differently by the different CDNs and proxies your content passes through between the origin server and a visitor's browser. To explicitly control caching you can use targeted cache control headers.\n\nThe `CDN-Cache-Control` and `Vercel-CDN-Cache-Control` headers are response headers that can be used to specify caching behavior on the Edge Network and/or CDNs.\n\nYou can use the same directives as [`Cache-Control`](#cache-control-header), but `CDN-Cache-Control` is only used by the Edge Network and CDNs.\n\nOrigins can set the following headers:\n\n*   `Vercel-CDN-Cache-Control`\n*   `CDN-Cache-Control`\n*   `Cache-Control`\n\nWhen multiple of the above headers are set, Vercel's Edge Network will use the following priority to determine the caching behavior:\n\n`Vercel-CDN-Cache-Control` is exclusive to Vercel and has top priority, whether it's defined in a Vercel Function response or a `vercel.json` file. It controls caching behavior only within Vercel's Edge Cache. It is removed from the response and not sent to the client or any CDNs.\n\n`CDN-Cache-Control` is second in priority after `Vercel-CDN-Cache-Control`, and always overrides `Cache-Control` headers, whether defined in a Vercel Function response or a `vercel.json` file.\n\nBy default, `CDN-Cache-Control` configures Vercel's Edge Cache and is used by other CDNs, allowing you to configure intermediary caches. If `Vercel-CDN-Cache-Control` is also set, `CDN-Cache-Control` only influences other CDN caches.\n\n`Cache-Control` is a web standard header and last in priority. If neither `CDN-Cache-Control` nor `Vercel-CDN-Cache-Control` are set, this header will be used by Vercel's Edge Cache before being forwarded to the client.\n\nYou can still set `Cache-Control` while using the other two, and it will be forwarded to the client as is.\n\nIf only `Cache-Control` is used, Vercel strips the `s-maxage` directive from the header before it's sent to the client.\n\nThe following tables demonstrate how Vercel's Edge Cache behaves in different scenarios:\n\n`Cache-Control` headers returned from Vercel Functions take priority over `Cache-Control` headers from `next.config.js` or `vercel.json` files.\n\n| Parameter | Value |\n| --- | --- |\n| Vercel Function response headers | `Cache-Control: s-maxage=60` |\n| `vercel.json` or `next.config.js` headers | `Cache-Control: s-maxage: 120` |\n| Cache behavior | 60s TTL |\n| Headers sent to the client | `Cache-Control: public, max-age: 0` |\n\n`CDN-Cache-Control` has priority over `Cache-Control`, even if defined in `vercel.json` or `next.config.js`.\n\n| Parameter | Value |\n| --- | --- |\n| Vercel Function response headers | `Cache-Control: s-maxage=60` |\n| `vercel.json` or `next.config.js` headers | `CDN-Cache-Control: max-age=120` |\n| Cache behavior | 120s TTL |\n| Headers sent to the client | `Cache-Control: s-maxage=60 CDN-Cache-Control: max-age=120` |\n\n`Vercel-CDN-Cache-Control` has priority over both `CDN-Cache-Control` and `Cache-Control`. It only applies to Vercel, so it is not returned with the other headers, which will control cache behavior on the browser and other CDNs.\n\n| Parameter | Value |\n| --- | --- |\n| Vercel Function response headers | `CDN-Cache-Control: max-age=120` |\n| `vercel.json` or `next.config.js` headers | `Cache-Control: s-maxage=60 Vercel-CDN-Cache-Control: max-age=300` |\n| Cache behavior | 300s TTL |\n| Headers sent to the client | `Cache-Control: s-maxage=60 CDN-Cache-Control: max-age=120` |\n\n*   If you want to control caching similarly on Vercel, CDNs, and the client, use `Cache-Control`\n*   If you want to control caching on Vercel and also on other CDNs, use `CDN-Cache-Control`\n*   If you want to control caching only on Vercel, use `Vercel-CDN-Cache-Control`\n*   If you want to specify different caching behaviors for Vercel, other CDNs, and the client, you can set all three headers\n\nThe following example demonstrates `Cache-Control` headers that instruct:\n\n*   Vercel's Edge Cache to have a [TTL](https://en.wikipedia.org/wiki/Time_to_live) of `3600` seconds\n*   Downstream CDNs to have a TTL of `60` seconds\n*   Clients to have a TTL of `10` seconds\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'Cache-Control': 'max-age=10',\n      'CDN-Cache-Control': 'max-age=60',\n      'Vercel-CDN-Cache-Control': 'max-age=3600',\n    },\n  });\n}\n```\n\nUsing configuration, you can assign custom headers to each response.\n\nCustom headers can be configured with the `headers` property in [`next.config.js`](https://nextjs.org/docs/api-reference/next.config.js/headers) for Next.js projects, or it can be configured in [`vercel.json`](https://vercel.com/docs/projects/project-configuration#headers) for all other projects.\n\nAlternatively, a [Serverless Function](https://vercel.com/docs/functions/serverless-functions) can assign headers to the [Response](https://nodejs.org/api/http.html#http_response_setheader_name_value) object.\n\nResponse headers `x-matched-path`, `server`, and `content-length` are reserved and cannot be modified.",
  "title": "Headers Included with Deployments",
  "description": "This reference covers the list of request, response, cache-control, and custom response headers included with deployments with Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/nextjs",
  "markdown": "# Next.js on Vercel\n\n[Next.js](https://nextjs.org/) is a fullstack React framework for the web, maintained by Vercel.\n\nWhile Next.js works when self-hosting, deploying to Vercel is zero-configuration and provides additional enhancements for scalability, availability, and performance globally.\n\nTo get started with Next.js on Vercel:\n\n*   If you already have a project with Next.js, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our Next.js example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your Next.js project.\n\n[Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) allows you to create or update content _without_ redeploying your site. ISR has three main benefits for developers: better performance, improved security, and faster build times.\n\nWhen self-hosting, (ISR) is limited to a single region workload. Statically generated pages are not distributed closer to visitors by default, without additional configuration or vendoring of a CDN. By default, self-hosted ISR does _not_ persist generated pages to durable storage. Instead, these files are located in the Next.js cache (which expires).\n\nTo enable ISR with Next.js in the `app` router, add an options object with a `revalidate` property to your `fetch` requests:\n\n```\nawait fetch('https://api.vercel.app/blog', {\n  next: { revalidate: 10 }, // Seconds\n});\n```\n\nTo summarize, using ISR with Next.js on Vercel:\n\n*   Better performance with our global [Edge Network](https://vercel.com/docs/edge-network/overview)\n*   Zero-downtime rollouts to previously statically generated pages\n*   Framework-aware infrastructure enables global content updates in 300ms\n*   Generated pages are both cached and persisted to durable storage\n\n[Learn more about Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration)\n\nServer-Side Rendering (SSR) allows you to render pages dynamically on the server. This is useful for pages where the rendered data needs to be unique on every request. For example, checking authentication or looking at the location of an incoming request.\n\nOn Vercel, you can server-render Next.js applications in either the Node.js runtime (default) with [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) or the Edge runtime with [Edge Functions](https://vercel.com/docs/functions/edge-functions). This allows you to pick the best rendering strategy on a per-page basis.\n\nTo summarize, SSR with Next.js on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Has zero-configuration support for [`Cache-Control` headers](https://vercel.com/docs/edge-network/caching), including `stale-while-revalidate`\n*   Framework-aware infrastructure enables switching rendering between Edge/Node.js runtimes\n\n[Learn more about SSR](https://nextjs.org/docs/app/building-your-application/rendering#static-and-dynamic-rendering-on-the-server)\n\nVercel supports streaming in Next.js projects with any of the following:\n\n*   [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/router-handlers)\n*   Edge Functions\n*   React Server Components\n\nStreaming data allows you to fetch information in chunks rather than all at once, speeding up Function responses. You can use streams to improve your app's user experience and prevent your Serverless and Edge Functions from failing when fetching large files.\n\nSee the [streaming quickstart](https://vercel.com/docs/functions/streaming/quickstart) to start streaming with Next.js on Vercel.\n\nIn Next.js 13 (using the `app` directory), you can use the `loading` file convention or a `Suspense` component to show an instant loading state from the server while the content of a route segment loads.\n\nThe `loading` file provides a way to show a loading state for a whole route or route-segment, instead of just particular sections of a page. This file affects all its child elements, including layouts and pages. It continues to display its contents until the data fetching process in the route segment completes.\n\nThe following example demonstrates a basic `loading` file:\n\n```\nexport default function Loading() {\n  return <p>Loading...</p>;\n}\n```\n\nLearn more about loading in the [Next.js docs](https://nextjs.org/docs/app/building-your-application/routing/loading-ui-and-streaming).\n\nThe `Suspense` component, introduced in React 18, enables you to display a fallback until components nested within it have finished loading. Using `Suspense` is more granular than showing a loading state for an entire route, and is useful when only sections of your UI need a loading state.\n\nYou can specify a component to show during the loading state with the `fallback` prop on the `Suspense` component as shown below:\n\n```\nimport { Suspense } from 'react';\nimport { PostFeed, Weather } from './components';\n \nexport default function Posts() {\n  return (\n    <section>\n      <Suspense fallback={<p>Loading feed...</p>}>\n        <PostFeed />\n      </Suspense>\n      <Suspense fallback={<p>Loading weather...</p>}>\n        <Weather />\n      </Suspense>\n    </section>\n  );\n}\n```\n\nTo summarize, using Streaming with Next.js on Vercel:\n\n*   Speeds up Function response times, improving your app's user experience\n*   Allows you to fetch large data without exceeding Edge and Serverless Function file size limits\n*   Display initial loading UI with incremental updates from the server as new data becomes available\n\nLearn more about [Streaming](https://vercel.com/docs/functions/streaming) with Vercel Functions.\n\n[Next.js 14](https://nextjs.org/blog/next-14) introduces Partial Prerendering as an experimental feature. It is currently **not suitable for production** environments and is incompatible with the [Edge Runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) .\n\nPartial Prerendering (PPR) is an experimental feature in Next.js 14 that allows the static portions of a page to be pre-generated and served from the cache, while the dynamic portions are streamed in a single HTTP request.\n\nWhen a user visits a route:\n\n*   A static route _shell_ is served immediately, this makes the initial load fast.\n*   The shell leaves _holes_ where dynamic content will be streamed in to minimize the perceived overall page load time.\n*   The async holes are loaded in parallel, reducing the overall load time of the page.\n\nThis approach is useful for pages like dashboards, where unique, per-request data coexists with static elements such as sidebars or layouts. This is different from how your application behaves today, where entire routes are either fully static or dynamic.\n\nSee the [Partial Prerendering docs](https://nextjs.org/docs/app/api-reference/next-config-js/partial-prerendering) to learn more.\n\n[Image Optimization](https://vercel.com/docs/image-optimization) helps you achieve faster page loads by reducing the size of images and using modern image formats.\n\nWhen deploying to Vercel, images are automatically optimized on demand, keeping your build times fast while improving your page load performance and [Core Web Vitals](https://vercel.com/docs/speed-insights).\n\nWhen self-hosting, Image Optimization uses the default Next.js server for optimization. This server manages the rendering of pages and serving of static files.\n\nTo use Image Optimization with Next.js on Vercel, import the `next/image` component into the component you'd like to add an image to, as shown in the following example:\n\n```\nimport Image from 'next/image'\n \ninterface ExampleProps {\n  name: string;\n}\n \nconst ExampleComponent = (props: ExampleProps) : => {\n  return (\n    <>\n      <Image\n        src=\"example.png\"\n        alt=\"Example picture\"\n        width={500}\n        height={500}\n      />\n      <span>{props.name}</span>\n    </>\n  )\n}\n```\n\nTo summarize, using Image Optimization with Next.js on Vercel:\n\n*   Zero-configuration Image Optimization when using `next/image`\n*   Helps your team ensure great performance by default\n*   Keeps your builds fast by optimizing images on-demand\n*   Requires No additional services needed to procure or set up\n\n[Learn more about Image Optimization](https://vercel.com/docs/image-optimization)\n\n[`next/font`](https://nextjs.org/docs/app/building-your-application/optimizing/fonts) enables built-in automatic self-hosting for any font file. This means you can optimally load web fonts with zero [layout shift](https://vercel.com/docs/speed-insights#cumulative-layout-shift-cls), thanks to the underlying CSS [`size-adjust`](https://developer.mozilla.org/docs/Web/CSS/@font-face/size-adjust) property.\n\nThis also allows you to use all [Google Fonts](https://fonts.google.com/) with performance and privacy in mind. CSS and font files are downloaded at build time and self-hosted with the rest of your static files. No requests are sent to Google by the browser.\n\n```\nimport { Inter } from 'next/font/google';\n \n// If loading a variable font, you don't need to specify the font weight\nconst inter = Inter({\n  subsets: ['latin'],\n  display: 'swap',\n});\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className={inter.className}>\n      <body>{children}</body>\n    </html>\n  );\n}\n```\n\nTo summarize, using Font Optimization with Next.js on Vercel:\n\n*   Enables built-in, automatic self-hosting for font files\n*   Loads web fonts with zero layout shift\n*   Allows for CSS and font files to be downloaded at build time and self-hosted with the rest of your static files\n*   Ensures that no requests are sent to Google by the browser\n\n[Learn more about Font Optimization](https://nextjs.org/docs/app/building-your-application/optimizing/fonts)\n\nDynamic social card images (using the [Open Graph protocol](https://vercel.com/docs/functions/edge-functions/og-image-generation)) allow you to create a unique image for every page of your site. This is useful when sharing links on the web through social platforms or through text message.\n\nThe [Vercel OG](https://vercel.com/docs/functions/edge-functions/og-image-generation) image generation library allows you generate fast, dynamic social card images using Next.js API Routes.\n\nOn Vercel, your Next.js API Routes using Vercel OG are automatically optimized using Vercel Edge Functions and WebAssembly. This enables social card images to be generated faster, cheaper, and more scalable than self-hosted Next.js.\n\nThe following example demonstrates using OG image generation in both the Next.js Pages and App Router:\n\n```\nimport { ImageResponse } from 'next/og';\n// App router includes @vercel/og.\n// No need to install it.\n \nexport const runtime = 'edge';\n \nexport async function GET(request: Request) {\n  return new ImageResponse(\n    (\n      <div\n        style={{\n          fontSize: 128,\n          background: 'white',\n          width: '100%',\n          height: '100%',\n          display: 'flex',\n          textAlign: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        Hello world!\n      </div>\n    ),\n    {\n      width: 1200,\n      height: 600,\n    },\n  );\n}\n```\n\nTo see your generated image, run `npm run dev` in your terminal and visit the `/api/og` route in your browser (most likely `http://localhost:3000/api/og`).\n\nTo summarize, the benefits of using Vercel OG with Next.js include:\n\n*   Instant, dynamic social card images without needing headless browsers\n*   Generated images are automatically cached on the Vercel Edge Network\n*   Image generation is co-located with the rest of your frontend codebase\n\n[Learn more about OG Image Generation](https://vercel.com/docs/functions/edge-functions/og-image-generation)\n\n[Middleware](https://vercel.com/docs/functions/edge-middleware) is code that executes before a request is processed. Because Middleware runs before the cache, it's an effective way of providing personalization to statically generated content.\n\nWhen deploying middleware with Next.js on Vercel, you get access to built-in helpers that expose each request's geolocation information. You also get access to the `NextRequest` and `NextResponse` objects, which enable rewrites, continuing the middleware chain, and more.\n\nSee [the Middleware API docs](https://vercel.com/docs/functions/edge-middleware/middleware-api#middleware-helper-methods) for more information.\n\nTo summarize, Middleware with Next.js on Vercel:\n\n*   Runs using [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) which are deployed globally\n*   Replaces needing additional services for customizable routing rules\n*   Helps you achieve the best performance for serving content globally\n\n[Learn more about Edge Middleware](https://vercel.com/docs/functions/edge-middleware)\n\n[Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode) enables you to view draft content from your [Headless CMS](https://vercel.com/docs/solutions/cms) immediately, while still statically generating pages in production.\n\nSee [our Draft Mode docs](https://vercel.com/docs/workflow-collaboration/draft-mode#using-draft-mode-with-next.js) to learn how to use it with Next.js.\n\nWhen self-hosting, every request using Draft Mode hits the Next.js server, potentially incurring extra load or cost. Further, by spoofing the cookie, malicious users could attempt to gain access to your underlying Next.js server.\n\nDeployments on Vercel automatically secure Draft Mode behind the same authentication used for Preview Comments. In order to enable or disable Draft Mode, the viewer must be logged in as a member of the [Team](https://vercel.com/docs/teams-and-accounts). Once enabled, Vercel's Edge Network will bypass the ISR cache automatically and invoke the underlying [Serverless Function](https://vercel.com/docs/functions/serverless-functions).\n\nYou and your team members can toggle Draft Mode in the Vercel Toolbar in [production](https://vercel.com/docs/workflow-collaboration/comments/in-production-and-localhost#using-@vercel/toolbar-in-production), [localhost](https://vercel.com/docs/workflow-collaboration/comments/in-production-and-localhost#using-@vercel/toolbar-in-localhost), and [Preview Deployments](https://vercel.com/docs/deployments/preview-deployments#comments). When you do so, the toolbar will become purple to indicate Draft Mode is active.\n\n![The Vercel toolbar when Draft Mode is enabled.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fdraft-mode%2Fdraft-toolbar1-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Vercel toolbar when Draft Mode is enabled.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fdraft-mode%2Fdraft-toolbar1-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Vercel toolbar when Draft Mode is enabled.\n\nUsers outside your Vercel team cannot toggle Draft Mode.\n\nTo summarize, the benefits of using Draft Mode with Next.js on Vercel include:\n\n*   Easily server-render previews of static pages\n*   Adds additional security measures to prevent malicious usage\n*   Integrates with any headless provider of your choice\n*   You can enable and disable Draft Mode in [the comments toolbar](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work) on Preview Deployments\n\n[Learn more about Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode)\n\nVercel's Web Analytics features enable you to visualize and monitor your application's performance over time. The Analytics tab in your project's dashboard offers detailed insights into your website's visitors, with metrics like top pages, top referrers, and user demographics.\n\nTo use Web Analytics, navigate to the Analytics tab of your project dashboard on Vercel and select Enable in the modal that appears.\n\nTo track visitors and page views, we recommend first installing our `@vercel/analytics` package by running the terminal command below in the root directory of your Next.js project:\n\nThen, follow the instructions below to add the `Analytics` component to your app either using the `pages` directory or the `app` directory.\n\nThe `Analytics` component is a wrapper around the tracking script, offering more seamless integration with Next.js.\n\nAdd the following component to the root layout.\n\n```\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics />\n      </body>\n    </html>\n  );\n}\n```\n\nTo summarize, Web Analytics with Next.js on Vercel:\n\n*   Enables you to track traffic and see your top-performing pages\n*   Offers you detailed breakdowns of visitor demographics, including their OS, browser, geolocation, and more\n\n[Learn more about Web Analytics](https://vercel.com/docs/analytics)\n\nYou can see data about your project's [Core Web Vitals](https://vercel.com/docs/speed-insights#core-web-vitals-explained) performance in your dashboard on Vercel. Doing so will allow you to track your web application's loading speed, responsiveness, and visual stability so you can improve the overall user experience.\n\nOn Vercel, you can track your Next.js app's Core Web Vitals in your project's dashboard.\n\nIf you're self-hosting your app, you can use the [`useWebVitals`](https://nextjs.org/docs/advanced-features/measuring-performance#build-your-own) hook to send metrics to any analytics provider. The following example demonstrates a custom `WebVitals` component that you can use in your app's root `layout` file:\n\n```\n'use client';\n \nimport { useReportWebVitals } from 'next/web-vitals';\n \nexport function WebVitals() {\n  useReportWebVitals((metric) => {\n    console.log(metric);\n  });\n}\n```\n\nYou could then reference your custom `WebVitals` component like this:\n\n```\nimport { WebVitals } from './_components/web-vitals';\n \nexport default function Layout({ children }) {\n  return (\n    <html>\n      <body>\n        <WebVitals />\n        {children}\n      </body>\n    </html>\n  );\n}\n```\n\nNext.js uses [Google's `web-vitals` library](https://github.com/GoogleChrome/web-vitals#web-vitals) to measure the Web Vitals metrics available in `reportWebVitals`.\n\nTo summarize, tracking Web Vitals with Next.js on Vercel:\n\n*   Enables you to track traffic performance metrics, such as [First Contentful Paint](https://vercel.com/docs/speed-insights#first-contentful-paint-fcp), or [First Input Delay](https://vercel.com/docs/speed-insights#first-input-delay-fid)\n*   Enables you to view performance analytics by page name and URL for more granular analysis\n*   Shows you [a score for your app's performance](https://vercel.com/docs/speed-insights#how-the-scores-are-determined) on each recorded metric, which you can use to track improvements or regressions\n\n[Learn more about Speed Insights](https://vercel.com/docs/speed-insights)\n\nVercel has partnered with popular service providers, such as MongoDB and Sanity, to create integrations that make using those services with Next.js easier. There are many integrations across multiple categories, such as [Commerce](https://vercel.com/integrations#commerce), [Databases](https://vercel.com/integrations#databases), and [Logging](https://vercel.com/integrations#logging).\n\nTo summarize, Integrations on Vercel:\n\n*   Simplify the process of connecting your preferred services to a Vercel project\n*   Help you achieve the optimal setup for a Vercel project using your preferred service\n*   Configure your environment variables for you\n\n[Learn more about Integrations](https://vercel.com/integrations)\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying Next.js projects on Vercel with the following resources:",
  "title": "Next.js on Vercel",
  "description": "Vercel is the native Next.js platform, designed to enhance the Next.js experience.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/create-react-app",
  "markdown": "# Create React App on Vercel\n\nCreate React App (CRA) is a development environment for building single-page applications with the React framework. It sets up and configures a new React project with the latest JavaScript features, and optimizes your app for production.\n\nTo get started with CRA on Vercel:\n\n*   If you already have a project with CRA, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our CRA example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your CRA project.\n\nYou can also use CRA in [our Edge Runtime](https://vercel.com/docs/functions/edge-functions/edge-functions-api) with our [React on the Edge](https://vercel.com/templates/react/react-edge-functions) example project.\n\nOn Vercel, static files are [replicated and deployed to every region in our global Edge Network after the first request](https://vercel.com/docs/edge-network/caching#static-files-caching). This ensures that static files are served from the closest location to the visitor, improving performance and reducing latency.\n\nStatic files are cached for up to 31 days. If a file is unchanged, it can persist across deployments, as their hash caches static files. However, the cache is effectively invalidated when you redeploy, so we always serve the latest version.\n\nTo summarize, using Static Files with CRA on Vercel:\n\n*   Automatically optimizes and caches assets for the best performance\n*   Makes files easily accessible through the `public` folder\n*   Supports zero-downtime rollouts\n*   Requires no additional services needed to procure or set up\n\n[Learn more about Static Files Caching](https://vercel.com/docs/edge-network/caching#static-files-caching)\n\nWhen you deploy your CRA app to Vercel and connect your git repo, every pull request will generate a [Preview Deployment](https://vercel.com/docs/deployments/preview-deployments).\n\nPreview Deployments allow you to preview changes to your app in a live deployment. They are available by default for all projects, and are generated when you commit changes to a Git branch with an open pull request, or you create a deployment [using Vercel CLI](https://vercel.com/docs/cli/deploy#usage).\n\nYou can use the comments feature to receive feedback on your Preview Deployments from Vercel Team members and [people you share the Preview URL with](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work#sharing).\n\nComments allow you to start discussion threads, share screenshots, send notifications, and more.\n\nTo summarize, Preview Deployments with CRA on Vercel:\n\n*   Enable you to share previews of pull request changes in a live environment\n*   Come with a comment feature for improved collaboration and feedback\n*   Experience changes to your product without merging them to your deployment branch\n\n[Learn more about Preview Deployments](https://vercel.com/docs/deployments/preview-deployments)\n\nEdge Functions are a fast, scalable solution for delivering dynamic content to users. By default, Edge Functions are deployed globally, and will be invoked in one of Vercel's datacenters near your site's visitors.\n\nEdge Functions are ideal when you need to interact with data over the network as fast as possible, such as executing OAuth callbacks, responding to webhook requests, or interacting with an API that fails if a request is not completed within a short time limit.\n\nYou can't use Edge Functions with CRA without using our Build Output API, which we do not recommend. We recommend using Edge Functions with a framework such as [Next.js](https://vercel.com/docs/frameworks/nextjs), [SvelteKit](https://vercel.com/docs/frameworks/sveltekit), Nuxt, or [any of the popular frameworks we support](https://vercel.com/docs/frameworks/more-frameworks).\n\nIf you are a framework builder, or you're interested in implementing our Build Output API spec, you can see an example of Edge Functions working in React with [our React on the Edge example project](https://vercel.com/templates/react/react-edge-functions).\n\nTo summarize, Edge Functions with CRA on Vercel:\n\n*   Enable you to respond to user requests with dynamic content at low latency, at scale\n*   Offer cost savings by using fewer resources than Serverless Functions\n*   Can execute in the region nearest to your users or nearest to data sources they depend on, based on your configuration\n*   Have access to the geolocation and IP address of visitors, enabling location-based personalization\n\n[Learn more about Edge Functions](https://vercel.com/docs/functions/edge-functions)\n\nVercel's Web Analytics features enable you to visualize and monitor your application's performance over time. The Analytics tab in your project's dashboard offers detailed insights into your website's visitors, with metrics like top pages, top referrers, and user demographics.\n\nTo use Web Analytics, navigate to the Analytics tab of your project dashboard on Vercel and select Enable in the modal that appears.\n\nTo track visitors and page views, we recommend first installing our `@vercel/analytics` package.\n\nYou can then import the `inject` function from the package, which will add the tracking script to your app. This should only be called once in your app.\n\nAdd the following code to your main app file:\n\n```\nimport { inject } from '@vercel/analytics';\n \ninject();\n```\n\nThen, [ensure you've enabled Web Analytics in your dashboard on Vercel](https://vercel.com/docs/analytics/quickstart). You should start seeing usage data in your Vercel dashboard.\n\nTo summarize, using Web Analytics with CRA on Vercel:\n\n*   Enables you to track traffic and see your top-performing pages\n*   Offers you detailed breakdowns of visitor demographics, including their OS, browser, geolocation and more\n\n[Learn more about Web Analytics](https://vercel.com/docs/analytics)\n\nYou can see data about your CRA project's [Core Web Vitals](https://vercel.com/docs/speed-insights#core-web-vitals-explained) performance in your dashboard on Vercel. Doing so will allow you to track your web application's loading speed, responsiveness, and visual stability so you can improve the overall user experience.\n\nOn Vercel, you can track your app's Core Web Vitals in your project's dashboard by enabling Speed Insights.\n\nTo summarize, using Speed Insights with CRA on Vercel:\n\n*   Enables you to track traffic performance metrics, such as [First Contentful Paint](https://vercel.com/docs/speed-insights#first-contentful-paint-fcp), or [First Input Delay](https://vercel.com/docs/speed-insights#first-input-delay-fid)\n*   Enables you to view performance analytics by page name and URL for more granular analysis\n*   Shows you [a score for your app's performance](https://vercel.com/docs/speed-insights#how-the-scores-are-determined) on each recorded metric, which you can use to track improvements or regressions\n\n[Learn more about Speed Insights](https://vercel.com/docs/speed-insights)\n\nVercel's observability features help you monitor, analyze, and manage your projects. From your project's dashboard on Vercel, you can track website usage and performance, record team members' activities, and visualize real-time data from logs.\n\n[Activity Logs](https://vercel.com/docs/observability/activity-log), which you can see in the Activity tab of your project dashboard, are available on all account plans. The following observability products are available for Enterprise teams:\n\n*   [Monitoring](https://vercel.com/docs/observability/monitoring): A query editor that allows you to visualize, explore, and monitor your usage and traffic\n*   [Runtime Logs](https://vercel.com/docs/observability/runtime-logs): An interface that allows you to search and filter logs from static requests and Serverless or Edge Function invocations\n*   [Audit Logs](https://vercel.com/docs/observability/audit-log): An interface that enables your team owners to track and analyze their team members' activity\n\nFor Pro (and Enterprise) accounts:\n\n*   [Log drains](https://vercel.com/docs/observability/log-drains): Export your log data for better debugging and analyzing, either from the dashboard, or using one of [our integrations](https://vercel.com/integrations#logging)\n*   [OpenTelemetry (OTEL) collector](https://vercel.com/docs/observability/audit-log): Send OTEL traces from your Serverless Functions to application performance monitoring (APM) vendors\n\nTo summarize, using Vercel's observability features with CRA enable you to:\n\n*   Visualize website usage data, performance metrics, and logs\n*   Search and filter logs for static, Serverless, and Edge Function requests\n*   Use queries to see in-depth information about your website's usage and traffic\n*   Send your metrics and data to other observability services through our integrations\n*   Track and analyze team members' activity\n\n[Learn more about Observability](https://vercel.com/docs/observability)\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying CRA projects on Vercel with the following resources:",
  "title": "Create React App on Vercel",
  "description": "Learn how to use Vercel's features with Create React App",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/astro",
  "markdown": "# Astro on Vercel\n\nAstro is an all-in-one web framework that enables you to build performant static websites. People choose Astro when they want to build content-rich experiences with as little JavaScript as possible.\n\nYou can deploy a static Astro app to Vercel with zero configuration.\n\nTo get started with Astro on Vercel:\n\n*   If you already have a project with Astro, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our Astro example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your Astro project.\n\nTo deploy a server-rendered Astro app, or a static Astro site with Vercel features like Web Analytics and Image Optimization, you must:\n\n1.  Add [Astro's Vercel adapter](https://docs.astro.build/en/guides/integrations-guide/vercel) to your project. There are two ways to do so:\n    \n    *   Using `astro add`, which configures the adapter for you with default settings. Using `astro add` will generate a preconfigured `astro.config.ts` with opinionated default settings\n    *   Or, manually installing the [`@astrojs/vercel`](https://www.npmjs.com/package/@astrojs/vercel) package. You should manually install the adapter if you don't want an opinionated initial configuration\n2.  Configure your project. In your `astro.config.ts` file, import either the `serverless` or `static` plugin, and set the output to `server` or `static` respectively:\n    \n    ```\n    import { defineConfig } from 'astro/config';\n    // Import /serverless for a Serverless SSR site\n    import vercelServerless from '@astrojs/vercel/serverless';\n     \n    export default defineConfig({\n      output: 'server',\n      adapter: vercelServerless(),\n    });\n    ```\n    \n3.  Enable Vercel's features using Astro's [configuration options](#configuration-options). The following example `astro.config.ts` enables Web Analytics and adds a maximum duration to Serverless Function routes:\n    \n    ```\n    import { defineConfig } from 'astro/config';\n    // Also can be @astrojs/vercel/static\n    import vercel from '@astrojs/vercel/serverless';\n     \n    export default defineConfig({\n      // Also can be 'static' or 'hybrid'\n      output: 'server',\n      adapter: vercel({\n        webAnalytics: {\n          enabled: true,\n        },\n        maxDuration: 8,\n      }),\n    });\n    ```\n    \n\nThe following configuration options enable Vercel's features for Astro deployments.\n\n| Option | type | Rendering | Purpose |\n| --- | --- | --- | --- |\n| [`maxDuration`](https://vercel.com/docs/functions/serverless-functions/runtimes#max-duration) | `number` | Serverless | Extends or limits the maximum duration (in seconds) that Serverless Functions can run before timing out. |\n| [`webAnalytics`](https://vercel.com/docs/analytics) | `{enabled: boolean}` | Static, Serverless | Enables Vercel's [Web Analytics](https://vercel.com/docs/analytics). See [the quickstart](https://vercel.com/docs/analytics/quickstart) to set up analytics on your account. |\n| [`imageService`](https://docs.astro.build/en/guides/integrations-guide/vercel/#imageservice) | `boolean` | Static, Serverless | For astro versions `3` and up. Enables an automatically [configured service](https://docs.astro.build/en/reference/image-service-reference/#what-is-an-image-service) to optimize your images. |\n| [`devImageService`](https://docs.astro.build/en/guides/integrations-guide/vercel/#devimageservice) | `string` | Static, Serverless | For astro versions `3` and up. Configure the [image service](https://docs.astro.build/en/reference/image-service-reference/#what-is-an-image-service) used to optimize your images in your dev environment. |\n| [`imagesConfig`](https://vercel.com/docs/build-output-api/v3/configuration#images) | `VercelImageConfig` | Static, Serverless | Defines the behavior of the Image Optimization API, allowing on-demand optimization at runtime. See [the Build Output API docs](https://vercel.com/docs/build-output-api/v3/configuration#images) for required options. |\n| [`functionPerRoute`](https://docs.astro.build/en/guides/integrations-guide/vercel/#function-bundling-configuration) | `boolean` | Serverless | API routes are bundled into one function by default. Set this to true to split each route into separate functions. |\n| [`edgeMiddleware`](https://docs.astro.build/en/guides/integrations-guide/vercel/#vercel-edge-middleware-with-astro-middleware) | `boolean` | Serverless | Set to `true` to automatically convert Astro middleware to Edge Middleware, eliminating the need for a `middleware.ts` file. |\n| [`includeFiles`](https://docs.astro.build/en/guides/integrations-guide/vercel/#includefiles) | `string[]` | Serverless | Force files to be bundled with your Serverless functions. |\n| [`excludeFiles`](https://docs.astro.build/en/guides/integrations-guide/vercel/#excludefiles) | `string[]` | Serverless | Exclude files from being bundled with your Serverless functions. Also available with [`.vercelignore`](https://vercel.com/docs/deployments/vercel-ignore#) |\n\nFor more details on the configuration options, see [Astro's docs](https://docs.astro.build/en/guides/integrations-guide/vercel/#configuration).\n\nUsing SSR, or [on-demand rendering](https://docs.astro.build/en/guides/server-side-rendering/) as Astro calls it, enables you to deploy your routes as Serverless Functions on Vercel. This allows you to add dynamic elements to your app, such as user logins and personalized content.\n\nYou can enable SSR by [adding the Vercel adapter to your project](#using-vercel's-features-with-astro).\n\nIf your Astro project is statically rendered, you can opt individual routes. To do so:\n\n1.  Set your `output` option to `hybrid` in your `<PreferredExtension filename=\"astro.config\" mjs />`:\n    \n    ```\n    import { defineConfig } from 'astro/config';\n    import vercel from '@astrojs/vercel/serverless';\n     \n    export default defineConfig({\n      output: 'hybrid',\n      adapter: vercel({\n        edgeMiddleware: true,\n      }),\n    });\n    ```\n    \n2.  Add `export const prerender = false;` to your components:\n    \n    ```\n    ---\n    export const prerender = false;\n    // ...\n    ---\n    <html>\n      <!-- Server-rendered page here... -->\n    </html>\n    ```\n    \n\nSSR with Astro on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Has zero-configuration support for [`Cache-Control` headers](https://vercel.com/docs/edge-network/caching), including `stale-while-revalidate`\n\n[Learn more about Astro SSR](https://docs.astro.build/en/guides/server-side-rendering/)\n\nStatically rendered, or pre-rendered, Astro apps can be deployed to Vercel with zero configuration. To enable Vercel features like Image Optimization or Web Analytics, see [Using Vercel's features with Astro](#using-vercel's-features-with-astro).\n\nYou can opt individual routes into static rendering with `export const prerender = true` as shown below:\n\n```\n---\nexport const prerender = true;\n// ...\n---\n<html>\n  <!-- Static, pre-rendered page here... -->\n</html>\n```\n\nStatically rendered Astro sites on Vercel:\n\n*   Require zero configuration to deploy\n*   Can use Vercel features with `astro.config.ts`\n\n[Learn more about Astro Static Rendering](https://docs.astro.build/en/core-concepts/rendering-modes/#pre-rendered)\n\n[Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) allows you to create or update content without redeploying your site. ISR has two main benefits for developers: better performance and faster build times.\n\nTo enable ISR in Astro, you need to use the [Vercel adapter](https://docs.astro.build/en/guides/integrations-guide/vercel/) and set `isr` to `true` in your configuration in `astro.config.mjs`:\n\nISR function requests do not include search params, similar to requests in static mode.\n\nUsing ISR with Astro on Vercel offers:\n\n*   Better performance with our global [Edge Network](https://vercel.com/docs/edge-network/overview)\n*   Zero-downtime rollouts to previously statically generated pages\n*   Global content updates in 300ms\n*   Generated pages are both cached and persisted to durable storage\n\n[Learn more about ISR with Astro.](https://docs.astro.build/en/guides/integrations-guide/vercel/#isr)\n\n[Serverless Functions](https://vercel.com/docs/functions/serverless-functions) use resources that scale up and down based on traffic demands. This makes them reliable during peak hours, but low cost during slow periods.\n\nWhen you [enable SSR with Astro's Vercel adapter](#using-vercel's-features-with-astro), all of your routes will be server-rendered as Serverless Functions by default. Astro's [Server Endpoints](https://docs.astro.build/en/core-concepts/endpoints/#server-endpoints-api-routes) are the best way to define Serverless API routes with Astro on Vercel.\n\nWhen defining an Endpoint, you must name each function after the HTTP method it represents. The following example defines basic HTTP methods in a Server Endpoint:\n\n```\nimport { APIRoute } from 'astro/dist/@types/astro';\n \nexport const GET: APIRoute = ({ params, request }) => {\n  return new Response(\n    JSON.stringify({\n      message: 'This was a GET!',\n    }),\n  );\n};\n \nexport const POST: APIRoute = ({ request }) => {\n  return new Response(\n    JSON.stringify({\n      message: 'This was a POST!',\n    }),\n  );\n};\n \nexport const DELETE: APIRoute = ({ request }) => {\n  return new Response(\n    JSON.stringify({\n      message: 'This was a DELETE!',\n    }),\n  );\n};\n \n// ALL matches any method that you haven't implemented.\nexport const ALL: APIRoute = ({ request }) => {\n  return new Response(\n    JSON.stringify({\n      message: `This was a ${request.method}!`,\n    }),\n  );\n};\n```\n\nAstro removes the final file during the build process, so the name of the file should include the extension of the data you want serve (for example `example.png.js` will become `/example.png`).\n\nServerless Functions with Astro on Vercel:\n\n*   Scale to zero when not in use\n*   Scale automatically as traffic increases\n\n[Learn more about Serverless Functions](https://vercel.com/docs/functions/serverless-functions)\n\n[Edge Functions](https://vercel.com/docs/functions/edge-functions) are a fast, scalable solution for delivering dynamic content to users. By default, Edge Functions are deployed globally, and will be invoked in one of Vercel's [Edge regions](https://vercel.com/docs/edge-network/regions) near your site's visitors.\n\nAstro does not currently support Edge Functions natively, however you can use the `/api` directory to define Edge Functions with any framework on Vercel. See [the Edge Functions quickstart](https://vercel.com/docs/functions/edge-functions/quickstart) to get started.\n\nEdge Functions with Nuxt on Vercel:\n\n*   Offer cost savings by using fewer resources than Serverless Functions\n*   Can execute in the region nearest to your users or nearest to data sources they depend on, based on your configuration\n*   Have access to the geolocation and IP address of visitors, enabling location-based personalization\n\n[Learn more about Edge Functions](https://vercel.com/docs/functions/edge-functions)\n\n[Image Optimization](https://vercel.com/docs/image-optimization) helps you achieve faster page loads by reducing the size of images and using modern image formats. When deploying to Vercel, images are automatically optimized on demand, keeping your build times fast while improving your page load performance and [Core Web Vitals](https://vercel.com/docs/speed-insights/metrics#core-web-vitals-explained).\n\nImage Optimization with Astro on Vercel is supported out of the box with Astro's `Image` component. See [the Image Optimization quickstart](https://vercel.com/docs/image-optimization/quickstart) to learn more.\n\nImage Optimization with Astro on Vercel:\n\n*   Requires zero-configuration for Image Optimization when using Astro's `Image` component\n*   Helps your team ensure great performance by default\n*   Keeps your builds fast by optimizing images on-demand\n\n[Learn more about Image Optimization](https://vercel.com/docs/image-optimization)\n\n[Edge Middleware](https://vercel.com/docs/functions/edge-middleware) is code that executes before a request is processed on a site, enabling you to modify the response. Because it runs before the cache, Edge Middleware is an effective way to personalize statically generated content.\n\n[Astro middleware](https://docs.astro.build/en/guides/middleware/#basic-usage) allows you to set and share information across your endpoints and pages with a `middleware.ts` file in your `src` directory. The following example edits the global `locals` object, adding data which will be available in any `.astro` file:\n\n```\n// This helper automatically types middleware params\nimport { defineMiddleware } from 'astro:middleware';\n \nexport const onRequest = defineMiddleware(({ locals }, next) => {\n  // intercept data from a request\n  // optionally, modify the properties in `locals`\n  locals.title = 'New title';\n \n  // return a Response or the result of calling `next()`\n  return next();\n});\n```\n\n**Astro middleware is not the same as Vercel's Edge Middleware**, which has to be placed at the root directory of your project, outside `src`.\n\nTo add custom properties to `locals` in `middleware.ts`, you must declare a global namespace in your `env.d.ts` file:\n\n```\ndeclare namespace App {\n  interface Locals {\n    title?: string;\n  }\n}\n```\n\nYou can then access the data you added to `locals` in any `.astro` file, like so:\n\n```\n---\nconst { title } = Astro.locals;\n---\n<h1>{title}</h1>\n<p>The name of this page is from middleware.</p>\n```\n\nYou can deploy Astro's middleware at the Edge, giving you access to data in the `RequestContext` and `Request`, and enabling you to use [Vercel's Edge Middleware helpers](https://vercel.com/docs/functions/edge-middleware/middleware-api#middleware-helper-methods), such as [`geolocation()`](https://vercel.com/docs/functions/edge-middleware/middleware-api#geolocation) or [`ipAddress()`](https://vercel.com/docs/functions/edge-middleware/middleware-api#geolocation).\n\nTo use Astro's middleware at the Edge, set `edgeMiddleware: true` in your `astro.config.ts` file:\n\n```\nimport { defineConfig } from 'astro/config';\nimport vercel from '@astrojs/vercel/serverless';\n \nexport default defineConfig({\n  output: 'server',\n  adapter: vercel({\n    edgeMiddleware: true,\n  }),\n});\n```\n\nIf you're using [Vercel's Edge Middleware](#using-vercel's-edge-middleware), you do not need to set `edgeMiddleware: true` in your `astro.config.ts` file.\n\nSee Astro's docs on [the limitations and constraints](https://docs.astro.build/en/guides/integrations-guide/vercel/#limitations-and-constraints) for using middleware at the Edge, as well as [their troubleshooting tips](https://docs.astro.build/en/guides/integrations-guide/vercel/#troubleshooting).\n\nThe `Astro.locals` object exposes data to your `.astro` components, allowing you to dynamically modify your content with middleware. To make changes to `Astro.locals` in Astro's middleware at the edge:\n\n1.  Add a new middleware file next to your `src/middleware.ts` and name it `src/vercel-edge-middleware.ts`. This file name is required to make changes to [`Astro.locals`](https://docs.astro.build/en/reference/api-reference/#astrolocals). If you don't want to update `Astro.locals`, this step is not required\n    \n2.  Return an object with the properties you want to add to `Astro.locals`. :\n    \n    For TypeScript, you must install [the `@vercel/edge` package](https://vercel.com/docs/functions/edge-middleware/middleware-api#middleware-helper-methods):\n    \n    Then, type your middleware function like so:\n    \n    ```\n    import type { RequestContext } from '@vercel/edge';\n     \n    // Note the parameters are different from standard Astro middleware\n    export default function ({\n      request,\n      context,\n    }: {\n      request: Request;\n      context: RequestContext;\n    }) {\n      // Return an Astro.locals object with a title property\n      return {\n        title: \"Spider-man's blog\",\n      };\n    }\n    ```\n    \n\nAstro's middleware, which should be in `src/middleware.ts`, is distinct from Vercel Edge Middleware, which should be a `middleware.ts` file at the root of your project.\n\nVercel recommends using framework-native solutions. You should use Astro's middleware over Vercel's Edge Middleware wherever possible.\n\nIf you still want to use Vercel's Edge Middleware, see [the Quickstart](https://vercel.com/docs/functions/edge-middleware/quickstart) to learn how.\n\nRewrites only work for static files with Astro. You must use [Vercel's Edge Middleware](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-conditional-statements) for rewrites. You should not use `vercel.json` to rewrite URL paths with astro projects; doing so produces inconsistent behavior, and is not officially supported.\n\nIn general, Vercel recommends using framework-native solutions, and Astro has [built-in support for redirects](https://docs.astro.build/en/core-concepts/routing/#redirects). That said, you can also do redirects with [Vercel's Edge Middleware](https://vercel.com/docs/functions/edge-middleware/quickstart).\n\nYou can do redirects on Astro with `astro.config.ts` the `redirects` config option as shown below:\n\n```\nimport { defineConfig } from 'astro/config';\n \nexport default defineConfig({\n  redirects: {\n    '/old-page': '/new-page',\n  },\n});\n```\n\nYou can also return a redirect from a Server Endpoint using the [`redirect`](https://docs.astro.build/en/core-concepts/endpoints/#redirects) utility:\n\n```\nexport async function GET({ params, redirect }): APIRoute {\n  return redirect('/redirect-path', 307);\n}\n```\n\nYou can redirect from within Astro components with [`Astro.redirect()`](https://docs.astro.build/en/reference/api-reference/#astroredirect):\n\n```\n---\nimport { isLoggedIn } from '../utils';\n \nconst cookie = Astro.request.headers.get('cookie');\n \n// If the user is not logged in, redirect them to the login page\nif (!isLoggedIn(cookie)) {\n  return Astro.redirect('/login');\n}\n---\n \n<h1>You can only see this page while logged in</h1>\n```\n\nAstro Middleware on Vercel:\n\n*   Executes before a request is processed on a site, allowing you to modify responses to user requests\n*   Runs on _all_ requests, but can be scoped to specific paths [through a `matcher` config](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-custom-matcher-config)\n*   Uses Vercel's lightweight Edge Runtime to keep costs low and responses fast\n\n[Learn more about Edge Middleware](https://vercel.com/docs/functions/edge-middleware)\n\nVercel automatically caches static files at the Edge after the first request, and stores them for up to 31 days on Vercel's Edge Network. Dynamic content can also be cached, and both dynamic and static caching behavior can be configured with [Cache-Control headers](https://vercel.com/docs/edge-network/headers#cache-control-header).\n\nThe following Astro component will show a new time every 10 seconds. It does by setting a 10 second max age on the contents of the page, then serving stale content while new content is being rendered on the server when that age is exceeded.\n\n[Learn more about Cache Control options](https://vercel.com/docs/edge-network/headers#cache-control-header).\n\n```\n---\nAstro.response.headers.set('Cache-Control', 's-maxage=10, stale-while-revalidate');\nconst time = new Date().toLocaleTimeString();\n---\n \n<h1>{time}</h1>\n```\n\nYou can also control how the cache behaves on any CDNs you may be using outside of Vercel's Edge Network with CDN Cache-Control Headers.\n\nThe following example tells downstream CDNs to cache the content for 60 seconds, and Vercel's Edge Network to cache it for 3600 seconds:\n\n```\n---\nAstro.response.headers.set('Vercel-CDN-Cache-Control', 'max-age=3600',);\nAstro.response.headers.set('CDN-Cache-Control', 'max-age=60',);\nconst time = new Date().toLocaleTimeString();\n---\n \n<h1>{time}</h1>\n```\n\n[Learn more about CDN Cache-Control headers](https://vercel.com/docs/edge-network/headers#cdn-cache-control-header).\n\nCaching on Vercel:\n\n*   Automatically optimizes and caches assets for the best performance\n*   Requires no additional services to procure or set up\n*   Supports zero-downtime rollouts\n\n[Vercel Speed Insights](https://vercel.com/docs/speed-insights) provides you with a detailed view of your website's performance metrics, facilitating informed decisions for its optimization. By [enabling Speed Insights](https://vercel.com/docs/speed-insights/quickstart), you gain access to the Speed Insights dashboard, which offers in-depth information about scores and individual metrics without the need for code modifications or leaving the dashboard.\n\nTo enable Speed Insights with Astro, see [the Speed Insights quickstart](https://vercel.com/docs/speed-insights/quickstart).\n\nTo summarize, using Speed Insights with Astro on Vercel:\n\n*   Enables you to track traffic performance metrics, such as [First Contentful Paint](https://vercel.com/docs/speed-insights#first-contentful-paint-fcp), or [First Input Delay](https://vercel.com/docs/speed-insights#first-input-delay-fid)\n*   Enables you to view performance metrics by page name and URL for more granular analysis\n*   Shows you [a score for your app's performance](https://vercel.com/docs/speed-insights#how-the-scores-are-determined) on each recorded metric, which you can use to track improvements or regressions\n\n[Learn more about Speed Insights](https://vercel.com/docs/speed-insights)\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying Astro projects on Vercel with the following resources:",
  "title": "Astro on Vercel",
  "description": "Learn how to use Vercel's features with Astro",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/sveltekit",
  "markdown": "# SvelteKit on Vercel\n\nSvelteKit is a frontend framework that enables you to build Svelte applications with modern techniques, such as Server-Side Rendering, automatic code splitting, and advanced routing.\n\nYou can deploy your SvelteKit projects to Vercel with zero configuration, enabling you to use [Preview Deployments](https://vercel.com/docs/deployments/preview-deployments), [Web Analytics](#web-analytics), [Serverless Functions](https://vercel.com/docs/functions/serverless-functions), and more.\n\nTo get started with SvelteKit on Vercel:\n\n*   If you already have a project with SvelteKit, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our SvelteKit example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your SvelteKit project.\n\nWhen you create a new SvelteKit project with `npm create svelte@latest`, it installs `adapter-auto` by default. This adapter detects that you're deploying on Vercel and installs the `@sveltejs/adapter-vercel` plugin for you at build time.\n\nWe recommend installing the `@sveltejs/adapter-vercel` package yourself. Doing so will ensure version stability, slightly speed up your CI process, and [allows you to configure default deployment options for all routes in your project](#configure-your-sveltekit-deployment).\n\nThe following instructions will guide you through adding the Vercel adapter to your SvelteKit project.\n\n1.  You can add [the Vercel adapter](https://kit.svelte.dev/docs/adapter-vercel) to your SvelteKit project by running the following command:\n    \n    ```\n    pnpm i @sveltejs/adapter-vercel\n    ```\n    \n2.  Add the Vercel adapter to your `svelte.config.js` file, [which should be at the root of your project directory](https://kit.svelte.dev/docs/configuration).\n    \n    In your `svelte.config.js` file, import `adapter` from `@sveltejs/adapter-vercel`, and add your preferred options. The following example shows the default configuration, which uses the Node.js runtime (which run on Vercel Serverless Functions).\n    \n    ```\n    import adapter from '@sveltejs/adapter-vercel';\n     \n    export default {\n      kit: {\n        adapter: adapter(),\n      },\n    };\n    ```\n    \n    [Learn more about configuring your Vercel deployment in our configuration section below](#configure-your-sveltekit-deployment).\n    \n\nYou can configure how your SvelteKit project gets deployed to Vercel at the project-level and at the route-level.\n\nChanges to the `config` object you define in `svelte.config.js` will affect the default settings for routes across your whole project. To override this, you can export a `config` object in any route file.\n\nThe following is an example of a `svelte.config.js` file that will deploy using server-side rendering in Vercel's Node.js 18.x serverless runtime:\n\n```\nimport adapter from '@sveltejs/adapter-vercel';\n \n/** @type {import('@sveltejs/kit').Config} */\nconst config = {\n  kit: {\n    adapter: adapter({\n      runtime: 'nodejs18.x',\n    }),\n  },\n};\n \nexport default config;\n```\n\nYou can also configure how individual routes deploy by exporting a `config` object. The following is an example of a route that will deploy on Vercel's Edge runtime:\n\n```\nimport { PageServerLoad } from './$types';\n \nexport const config = {\n  runtime: 'edge',\n};\n \nexport const load = ({ cookies }): PageServerLoad<any> => {\n  // Load function code here\n};\n```\n\n[Learn about all the config options available in the SvelteKit docs](https://kit.svelte.dev/docs/adapter-vercel#deployment-configuration). You can also see the type definitions for config object properties in [the SvelteKit source code](https://github.com/sveltejs/kit/blob/master/packages/adapter-vercel/index.d.ts#L38).\n\nSvelteKit's docs have [a comprehensive list of all config options available to you](https://kit.svelte.dev/docs/adapter-vercel#deployment-configuration). This section will cover a select few options which may be easier to use with more context.\n\nBy default, your SvelteKit routes get bundled into one Serverless or Edge Function when you deploy your project to Vercel. This configuration typically reduces how often your users encounter [cold starts](https://vercel.com/docs/infrastructure/compute#cold-and-hot-boots).\n\nIn most cases, there is no need to modify this option.\n\nSetting `split: true` in your Svelte config will cause your SvelteKit project's routes to get split into separate Edge or Serverless Functions.\n\nSplitting your Functions is not typically better than bundling them. You may want to consider setting `split: true` if you're experiencing either of the following issues:\n\n*   You have exceeded the Function size limit for the runtime you're using. Batching too many routes into a single Function could cause you to exceed Function size limits for your Vercel account. See our [Serverless Function size limits](https://vercel.com/docs/limits/overview#serverless-function-size) and [Edge Function size limits](https://vercel.com/docs/limits/overview#edge-middleware-and-edge-functions-size) to learn more.\n*   Your app is experiencing abnormally long cold start times. Batching Serverless Functions into one Function will reduce how often users experience cold starts. It can also increase the latency they experience when a cold start is required, since larger functions tend to require more resources. This can result in slower responses to user requests that occur after your Function spins down.\n\nYour SvelteKit routes get [deployed to Vercel's Node.js (Serverless) runtime](https://vercel.com/docs/functions/serverless-functions/runtimes/node-js) by default.\n\nYou can edit your config to deploy as Edge Functions instead by setting `runtime: 'edge'` in your config object.\n\nEdge and Serverless functions offer a cost-effective, scalable solution for serving personalized content to your visitors, both dynamically and statically.\n\n[See our Functions comparison table](https://vercel.com/docs/functions/serverless-functions/runtimes) to better understand which runtime you should choose.\n\nChoosing a region allows you to reduce latency for requests to Serverless and Edge routes. If you choose a Function region geographically near dependencies, or nearest to your visitor, you can reduce your Functions' latency.\n\nBy default, your Serverless Functions will be deployed in _Washington, D.C., USA_, or `iad1`. Adding a region ID to the `regions` array will deploy your Serverless Functions there. [See our Serverless Function regions docs to learn how to override this settings](https://vercel.com/docs/functions/serverless-functions/regions#select-a-default-serverless-region). Only Enterprise customers can deploy Serverless Functions to multiple regions.\n\nEdge Functions get deployed globally, and will invoke in the region nearest to each visitor by default. If your Edge Functions depend on data sources far from the user, this can add latency to the request.\n\nAdding [a valid region ID](https://vercel.com/docs/edge-network/regions) to your `regions` array will cause your Edge Function to always invoke in the specified region, preventing them from triggering far away from their dependencies. Support for multiple edge regions is in progress.\n\n[See our Edge Function regions docs to learn more](https://vercel.com/docs/functions/edge-functions).\n\nVercel supports streaming API responses over time with SvelteKit, allowing you to render parts of the UI early, then render the rest as data becomes available. Doing so lets users interact with your app before the full page loads, improving their perception of your app's speed. Here's how it works:\n\n*   SvelteKit enables you to use a `+page.server.ts` file to fetch data on the server, which you can access from a `+page.svelte` file located in the same folder\n*   You fetch data in a [`load`](https://kit.svelte.dev/docs/load) function defined in `+page.server.ts`. This function returns an object\n    *   Top-level properties that return a promise will resolve before the page renders\n    *   Nested properties that return a promise [will stream](https://kit.svelte.dev/docs/load#streaming-with-promises)\n\nThe following example demonstrates a `load` function that will stream its response to the client. To simulate delayed data returned from a promise, it uses a `sleep` method.\n\n```\nexport const config = {\n  // Use 'nodejs18.x' for Serverless\n  runtime: 'edge',\n};\nfunction sleep(value: any, ms: number) {\n  // Use this sleep function to simulate\n  // a delayed API response.\n  return new Promise((fulfill) => {\n    setTimeout(() => {\n      fulfill(value);\n    }, ms);\n  });\n}\nexport function load(event): PageServerLoad<any> {\n  // Get some location data about the visitor\n  const ip = event.getClientAddress();\n  const city = decodeURIComponent(\n    event.request.headers.get('x-vercel-ip-city') ?? 'unknown',\n  );\n  return {\n    topLevelExample: sleep({ data: \"This won't be streamed\" }, 2000)\n    // Stream the location data to the client\n    locationData: {\n      details: sleep({ ip, city }, 1000),\n    },\n  };\n}\n```\n\nYou could then display this data by creating the following `+page.svelte` file in the same directory:\n\n```\n<script lang=\"ts\">\n  import type { PageData } from './$types'\n  export let data: PageData;\n</script>\n \n<h1><span>Hello!</span></h1>\n \n<div class=\"info\">\n  {#await data.locationData.details}\n    <p>streaming delayed data from the server...</p>\n  {:then details}\n    <div>\n      <p>City is {details.city}</p>\n      <p>And IP is: {details.ip} </p>\n    </div>\n  {/await}\n</div>\n```\n\nTo summarize, Streaming with SvelteKit on Vercel:\n\n*   Enables you to stream UI elements as data loads\n*   Supports Edge and Serverless streaming\n*   Improves perceived speed of your app\n\n[Learn more about Streaming on Vercel](https://vercel.com/docs/functions/streaming).\n\nServer-Side Rendering (SSR) allows you to render pages dynamically on the server. This is useful for pages where the rendered data needs to be unique on every request. For example, verifying authentication or checking the geolocation of an incoming request.\n\nVercel offers SSR that scales down resource consumption when traffic is low, and scales up with traffic surges. This protects your site from accruing costs during periods of no traffic or losing business during high-traffic periods.\n\nSvelteKit projects are server-side rendered by default. You can configure individual routes to prerender with the `prerender` page option, or use the same option in your app's root `+layout.js` or `+layout.server.js` file to make all your routes prerendered by default.\n\nWhile server-side rendered SvelteKit apps do support middleware, SvelteKit does not support URL rewrites from middleware.\n\n[See the SvelteKit docs on prerendering to learn more](https://kit.svelte.dev/docs/page-options#prerender).\n\nTo summarize, SSR with SvelteKit on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Has zero-configuration support for [`Cache-Control` headers](https://vercel.com/docs/edge-network/caching), including `stale-while-revalidate`\n*   Framework-aware infrastructure enables switching rendering between Edge/Node.js runtimes\n\n[Learn more about SSR](https://kit.svelte.dev/docs/page-options#ssr)\n\nVercel provides a set of System Environment Variables that our platform automatically populates. For example, the `VERCEL_GIT_PROVIDER` variable exposes the Git provider that triggered your project's deployment on Vercel.\n\nThese environment variables will be available to your project automatically, and you can enable or disable them in your project settings on Vercel. [See our Environment Variables docs to learn how](https://vercel.com/docs/projects/environment-variables/system-environment-variables).\n\nSvelteKit allows you to import environment variables, but separates them into different modules based on whether they're dynamic or static, and whether they're private or public. For example, the `'$env/static/private'` module exposes environment variables that don't change, and that you should not share publicly.\n\n[System Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables) are private and you should never expose them to the frontend client. This means you can only import them from `'$env/static/private'` or `'$env/dynamic/private'`.\n\nThe example below exposes `VERCEL_COMMIT_REF`, a variable that exposes the name of the branch associated with your project's deployment, to [a `load` function](https://kit.svelte.dev/docs/load) for a Svelte layout:\n\n```\nimport { LayoutServerLoad } from './types';\nimport { VERCEL_COMMIT_REF } from '$env/static/private';\n \ntype DeploymentInfo = {\n  deploymentGitBranch: string;\n};\n \nexport function load(): LayoutServerLoad<DeploymentInfo> {\n  return {\n    deploymentGitBranch: 'Test',\n  };\n}\n```\n\nYou could reference that variable in [a corresponding layout](https://kit.svelte.dev/docs/load#layout-data) as shown below:\n\n```\n<script>\n  /** @type {import('./$types').LayoutData} */\n  export let data;\n</script>\n \n<p>This staging environment was deployed from {data.deploymentGitBranch}.</p>\n```\n\nSvelteKit projects with `edge: true` enabled can only use Environment Variables listed in the `envVarsInUse` config property.\n\nTo summarize, the benefits of using Environment Variables with SvelteKit on Vercel include:\n\n*   Access to vercel deployment information, dynamically or statically, with our preconfigured System Environment Variables\n*   Access to automatically-configured environment variables provided by [integrations for your preferred services](https://vercel.com/docs/projects/environment-variables#integration-environment-variables)\n*   Searching and filtering environment variables by name and environment in Vercel's dashboard\n\n[Learn more about Environment Variables](https://vercel.com/docs/projects/environment-variables)\n\nIncremental Static Regeneration allows you to create or update content without redeploying your site. When you deploy a route with ISR, Vercel caches the page to serve it to visitors statically, and rebuilds it on a time interval of your choice. ISR has three main benefits for developers: better performance, improved security, and faster build times.\n\n[See our ISR docs to learn more](https://vercel.com/docs/incremental-static-regeneration).\n\nTo deploy a SvelteKit route with ISR:\n\n*   Export a `config` object with an `isr` property. Its value will be the number of seconds to wait before revalidating\n*   To enable on-demand revalidation, add the `bypassToken` property to the `config` object. Its value gets checked when `GET` or `HEAD` requests get sent to the route. If the request has a `x-prerender-revalidate` header with the same value as `bypassToken`, the cache will be revalidated immediately\n\nThe following example demonstrates a SvelteKit route that Vercel will deploy with ISR, revalidating the page every 60 seconds, with on-demand revalidation enabled:\n\n```\nexport const config = {\n  isr: {\n    expiration: 60,\n    bypassToken: 'REPLACE_ME_WITH_SECRET_VALUE',\n  },\n};\n```\n\n[Learn more about ISR with SvelteKit](https://kit.svelte.dev/docs/adapter-vercel#incremental-static-regeneration).\n\nTo summarize, the benefits of using ISR with SvelteKit on Vercel include:\n\n*   Better performance with our global [Edge Network](https://vercel.com/docs/edge-network/overview)\n*   Zero-downtime rollouts to previously statically generated pages\n*   Framework-aware infrastructure enables global content updates in 300ms\n*   Generated pages are both cached and persisted to durable storage\n\n[Learn more about ISR](https://vercel.com/docs/incremental-static-regeneration)\n\nNew project deployments can lead to version skew. This can happen when your users are using your app and a new version gets deployed. Their deployment version requests assets from an older version. And those assets from the previous version got replaced. This can cause errors when those active users navigate or interact with your project.\n\nSvelteKit has a skew protection solution. When it detects version skew, it triggers a hard reload of a page to sync to the latest version. This does mean the client-side state gets lost. With Vercel skew protection, client requests get routed to their original deployment. No client-side state gets lost. To enable it, visit the Advanced section of your project settings on Vercel.\n\n[Learn more about skew protection with SvelteKit](https://kit.svelte.dev/docs/adapter-vercel#skew-protection).\n\nTo summarize, the benefits of using ISR with SvelteKit on Vercel include:\n\n*   Mitigates the risk of your active users encountering version skew\n*   Avoids hard reloads for current active users on your project\n\n[Learn more about skew protection on Vercel](https://vercel.com/docs/deployments/skew-protection).\n\n[Image Optimization](https://vercel.com/docs/image-optimization) helps you achieve faster page loads by reducing the size of images and using modern image formats.\n\nWhen deploying to Vercel, you can optimize your images on demand, keeping your build times fast while improving your page load performance and [Core Web Vitals](https://vercel.com/docs/speed-insights/metrics#core-web-vitals-explained).\n\nTo use Image Optimization with SvelteKit on Vercel, use the [`@sveltejs/adapter-vercel`](#use-vercel-features-with-svelte) within your `svelte.config.ts` file.\n\n```\nimport adapter from '@sveltejs/adapter-vercel';\n \nexport default {\n  kit: {\n    adapter({\n      images: {\n        sizes: [640, 828, 1200, 1920, 3840],\n        formats: ['image/avif', 'image/webp'],\n        minimumCacheTTL: 300,\n        domains: ['example-app.vercel.app'],\n      }\n    })\n  }\n};\n```\n\nThis allows you to specify [configuration options](https://vercel.com/docs/build-output-api/v3/configuration#images) for Vercel's native image optimization API.\n\nTo use image optimization with SvelteKit, you have to construct your own `srcset` URLs. You can create a library function that will optimize `srcset` URLs in production for you like this:\n\n```\nimport { dev } from '$app/environment';\n \nexport function optimize(src: string, widths = [640, 960, 1280], quality = 90) {\n  if (dev) return src;\n \n  return widths\n    .slice()\n    .sort((a, b) => a - b)\n    .map((width, i) => {\n      const url = `/_vercel/image?url=${encodeURIComponent(src)}&w=${width}&q=${quality}`;\n      const descriptor = i < widths.length - 1 ? ` ${width}w` : '';\n      return url + descriptor;\n    })\n    .join(', ');\n}\n```\n\nUse an `img` or any other image component with an optimized `srcset` generated by the `optimize` function:\n\n```\n<script lang=\"ts\">\n  import { optimize } from '$lib/image';\n  import type { Photo } from '$lib/types';\n \n  export let photo: Photo;\n</script>\n \n<img\n  class=\"absolute left-0 top-0 w-full h-full\"\n  srcset={optimize(photo.url)}\n  alt={photo.description}\n/>\n```\n\nTo summarize, using Image Optimization with SvelteKit on Vercel:\n\n*   Configure image optimization with `@sveltejs/adapter-vercel`\n*   Optimize for production with a function that constructs optimized `srcset` for your images\n*   Helps your team ensure great performance by default\n*   Keeps your builds fast by optimizing images on-demand\n\n[Learn more about Image Optimization](https://vercel.com/docs/image-optimization)\n\nVercel's Web Analytics features enable you to visualize and monitor your application's performance over time. The Analytics tab in your project's dashboard offers detailed insights into your website's visitors, with metrics like top pages, top referrers, and user demographics.\n\nTo use Web Analytics, navigate to the Analytics tab of your project dashboard on Vercel and select Enable in the modal that appears.\n\nTo track visitors and page views, we recommend first installing our `@vercel/analytics` package by running the terminal command below in the root directory of your SvelteKit project:\n\nIn your SvelteKit project's main `+layout.svelte` file, add the following `<script>`:\n\nWith the above script added to your project, you'll be able to view detailed user insights in your dashboard on Vercel under the Analytics tab. [See our docs to learn more about the user metrics you can track with Vercel's Web Analytics](https://vercel.com/docs/analytics).\n\nYour project must be deployed on Vercel to take advantage of the Web Analytics feature. Work on making this feature more broadly available is in progress.\n\nTo summarize, using Web Analytics with SvelteKit on Vercel:\n\n*   Enables you to track traffic and see your top-performing pages\n*   Offers you detailed breakdowns of visitor demographics, including their OS, browser, geolocation, and more\n\n[Learn more about Web Analytics](https://vercel.com/docs/analytics)\n\nYou can see data about your project's [Core Web Vitals](https://vercel.com/docs/speed-insights#core-web-vitals-explained) performance in your dashboard on Vercel. Doing so will allow you to track your web application's loading speed, responsiveness, and visual stability so you can improve the user experience.\n\n[See our Speed Insights docs to learn more](https://vercel.com/docs/speed-insights).\n\nTo summarize, using Speed Insights with SvelteKit on Vercel:\n\n*   Enables you to track traffic performance metrics, such as [First Contentful Paint](https://vercel.com/docs/speed-insights#first-contentful-paint-fcp), or [First Input Delay](https://vercel.com/docs/speed-insights#first-input-delay-fid)\n*   Enables you to view performance metrics by page name and URL for more granular analysis\n*   Shows you [a score for your app's performance](https://vercel.com/docs/speed-insights#how-the-scores-are-determined) on each recorded metric, which you can use to track improvements or regressions\n\n[Learn more about Speed Insights](https://vercel.com/docs/speed-insights)\n\n[Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode) enables you to view draft content from your [Headless CMS](https://vercel.com/docs/solutions/cms) immediately, while still statically generating pages in production.\n\nTo use a SvelteKit route in Draft Mode, you must:\n\n1.  Export a `config` object [that enables Incremental Static Regeneration](https://kit.svelte.dev/docs/adapter-vercel#incremental-static-regeneration) from the route's `+page.server` file:\n\n```\nimport { BYPASS_TOKEN } from '$env/static/private';\n \nexport const config = {\n  isr: {\n    // Random token that can be provided to bypass the cached version of the page with a __prerender_bypass=<token> cookie. Allows rendering content at request time for this route.\n    bypassToken: BYPASS_TOKEN,\n \n    // Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function.\n    // Setting the value to `false` means it will never expire.\n    expiration: 60,\n  },\n};\n```\n\n2.  Send a `__prerender_bypass` cookie with the same value as `bypassToken` in your config.\n\nTo render the draft content, SvelteKit will check for `__prerender_bypass`. If its value matches the value of `bypassToken`, it will render content fetched at request time rather than prebuilt content.\n\nWe recommend using a cryptographically secure random number generator at build time as your `bypassToken` value. If a malicious actor guesses your `bypassToken`, they can view your pages in Draft Mode.\n\nDeployments on Vercel automatically secure Draft Mode behind the same authentication used for Preview Comments. In order to enable or disable Draft Mode, the viewer must be logged in as a member of the [Team](https://vercel.com/docs/teams-and-accounts). Once enabled, Vercel's Edge Network will bypass the ISR cache automatically and invoke the underlying [Serverless Function](https://vercel.com/docs/functions/serverless-functions).\n\nYou and your team members can toggle Draft Mode in the Vercel Toolbar in [production](https://vercel.com/docs/workflow-collaboration/comments/in-production-and-localhost#using-@vercel/toolbar-in-production), [localhost](https://vercel.com/docs/workflow-collaboration/comments/in-production-and-localhost#using-@vercel/toolbar-in-localhost), and [Preview Deployments](https://vercel.com/docs/deployments/preview-deployments#comments). When you do so, the toolbar will become purple to indicate Draft Mode is active.\n\n![The Vercel toolbar when Draft Mode is enabled.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fdraft-mode%2Fdraft-toolbar1-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Vercel toolbar when Draft Mode is enabled.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fworkflow-collaboration%2Fdraft-mode%2Fdraft-toolbar1-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Vercel toolbar when Draft Mode is enabled.\n\nUsers outside your Vercel team cannot toggle Draft Mode.\n\nTo summarize, the benefits of using Draft Mode with SvelteKit on Vercel include:\n\n*   Easily server-render previews of static pages\n*   Adds security measures to prevent malicious usage\n*   Integrates with any headless provider of your choice\n*   You can enable and disable Draft Mode in [the comments toolbar](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work) on Preview Deployments\n\n[Learn more about Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode)\n\nEdge Middleware is useful for modifying responses before they're sent to a user. We recommend [using SvelteKit's server hooks](https://kit.svelte.dev/docs/hooks) to modify responses. Due to SvelteKit's client-side rendering, you cannot use Vercel's Edge Middleware with SvelteKit.\n\nAdding a [`vercel.json`](https://vercel.com/docs/projects/project-configuration) file to the root directory of your project enables you to rewrite your app's routes.\n\nWe do not recommend using `vercel.json` rewrites with SvelteKit.\n\nRewrites from `vercel.json` only apply to the Vercel proxy. At runtime, SvelteKit doesn't have access to the rewritten URL, which means it has no way of rendering the intended rewritten route.\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying SvelteKit projects on Vercel with the following resources:",
  "title": "SvelteKit on Vercel",
  "description": "Learn how to use Vercel's features with SvelteKit",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/nuxt",
  "markdown": "# Nuxt on Vercel\n\nNuxt is an open-source framework that streamlines the process of creating modern Vue apps. It offers server-side rendering, SEO features, automatic code splitting, prerendering, and more out of the box. It also has [an extensive catalog of community-built modules](https://nuxt.com/modules), which allow you to integrate popular tools with your projects.\n\nYou can deploy Nuxt static and server-side rendered sites on Vercel with no configuration required.\n\nTo get started with Nuxt on Vercel:\n\n*   If you already have a project with Nuxt, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our Nuxt example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your Nuxt project.\n\nThe following table outlines the differences between `nuxt build` and `nuxt generate` on Vercel:\n\n| Feature | `nuxt build` | `nuxt generate` |\n| --- | --- | --- |\n| Default build command | Yes | No  |\n| Supports all Vercel features out of the box | Yes | No, [must set `nitro.static` to `true`](#static-rendering) |\n| [Supports SSR](#server-side-rendering-ssr) | Yes | No  |\n| [Supports SSG](#static-rendering) | Yes, [with nuxt config](#static-rendering) | Yes |\n| [Supports ISR](#incremental-static-regeneration-isr) | Yes | No  |\n\nIn general, `nuxt build` is likely best for most use cases. Consider using `nuxt generate` to build [fully static sites](#static-rendering).\n\nYou can configure your Nuxt deployment by creating a Nuxt config file in your project's root directory. It can be a TypeScript, JavaScript, or MJS file, but [the Nuxt team recommends using TypeScript](https://nuxt.com/docs/getting-started/configuration#nuxt-configuration). Using TypeScript will allow your editor to suggest the correct names for configuration options, which can help mitigate typos.\n\nYour Nuxt config file should default export `defineNuxtConfig` by default, which you can add an options object to.\n\nThe following is an example of a Nuxt config file with no options defined:\n\n```\nexport default defineNuxtConfig({\n  // Config options here\n});\n```\n\n[See the Nuxt Configuration Reference docs for a list of available options](https://nuxt.com/docs/api/configuration/nuxt-config/#nuxt-configuration-reference).\n\nWith the `routeRules` config option, you can:\n\n*   Create redirects\n*   Modify a route's response headers\n*   Enable ISR\n*   Deploy specific routes statically\n*   Deploy specific routes with SSR\n*   and more\n\nAt the moment, there is no way to configure route deployment options within your page components, but development of this feature is in progress.\n\nThe following is an example of a Nuxt config that:\n\n*   Creates a redirect\n*   Modifies a route's response headers\n*   Opts a set of routes into client-side rendering\n\n```\nexport default defineNuxtConfig({\n  routeRules: {\n    '/examples/*': { redirect: '/redirect-route' },\n    '/modify-headers-route': { headers: { 'x-magic-of': 'nuxt and vercel' } },\n    // Enables client-side rendering\n    '/spa': { ssr: false },\n  },\n});\n```\n\nTo learn more about `routeRules`:\n\n[Serverless Functions](https://vercel.com/docs/functions/serverless-functions) enable developers to write functions that uses resources that scale up and down based on traffic demands. This prevents them from failing during peak hours, but keeps them from running up high costs during periods of low activity.\n\nNuxt deploys routes defined in `/server/api`, `/server/routes`, and `/server/middleware` as one server-rendered Serverless Function by default. Nuxt Pages, APIs, and Middleware routes get bundled into a single Vercel Function.\n\nThe following is an example of a basic API Route in Nuxt:\n\n```\nexport default defineEventHandler(() => 'Hello World!');\n```\n\nYou can test your API Routes with `nuxt dev`.\n\n[Edge Functions](https://vercel.com/docs/functions/edge-functions) are a fast, scalable solution for delivering dynamic content to users. By default, Edge Functions get deployed globally, and invoked in one of Vercel's [Edge regions](https://vercel.com/docs/edge-network/regions) near your site's visitors.\n\nTo use Edge Functions with Nuxt SSR routes on Vercel, you can:\n\n*   Create a `NITRO_PRESET` environment variable and set its value to `vercel-edge`\n*   Or add `nitro: { preset: 'vercel-edge' }` to your `nuxt.config.ts`:\n    \n    ```\n    export default defineNuxtConfig({\n      nitro: {\n        preset: 'vercel-edge',\n      },\n    });\n    ```\n    \n\nYou cannot enable Edge Functions for individual routes.\n\nThe Nuxt team [recommends](https://nitro.unjs.io/deploy/#changing-the-deployment-preset) using environment variables for deployments depending on CI/CD. You can set environment variables in your project's dashboard on Vercel under Settings ➞ Environment Variables. See [Declaring Environment Variables](https://vercel.com/docs/projects/environment-variables#declare-an-environment-variable) to learn more.\n\nYou can specify which regions your Edge Functions should get invoked in with your `nuxt.config.ts`:\n\n```\nexport default defineNuxtConfig({\n  nitro: {\n    preset: 'vercel-edge',\n    vercel: {\n      regions: ['iad1'],\n    },\n  },\n});\n```\n\n[See our runtime comparison table to understand whether Edge or Serverless is best for your use-case](https://vercel.com/docs/functions/serverless-functions/runtimes).\n\nYou can read and write server files with Nuxt on Vercel. One way to do this is by using Nitro with Vercel Functions and the [Vercel KV driver](https://unstorage.unjs.io/drivers/vercel). Use Nitro's [server assets](https://nitro.unjs.io/guide/assets#server-assets) to include files in your project deployment. Assets within `server/assets` get included by default.\n\nTo access server assets, you can use Nitro's [storage API](https://nitro.unjs.io/guide/storage):\n\n```\nexport default defineEventHandler(async () => {\n  // https://nitro.unjs.io/guide/assets#server-assets\n  const assets = useStorage('assets:server');\n  const users = await assets.getItem('users.json');\n  return {\n    users,\n  };\n});\n```\n\nTo write files, mount [KV storage](https://nitro.unjs.io/guide/storage) with the [Vercel KV driver](https://unstorage.unjs.io/drivers/vercel):\n\nUpdate your `nuxt.config.ts` file.\n\n```\nexport default defineNuxtConfig({\n  $production: {\n    nitro: {\n      storage: {\n        data: { driver: 'vercelKV' },\n      },\n    },\n  },\n});\n```\n\nUse with the storage API.\n\n```\nexport default defineEventHandler(async (event) => {\n  const dataStorage = useStorage('data');\n  await dataStorage.setItem('hello', 'world');\n  return {\n    hello: await dataStorage.getItem('hello'),\n  };\n});\n```\n\n[See an example code repository](https://github.com/pi0/nuxt-server-assets/tree/main).\n\nMiddleware is code that executes before a request gets processed. Because Middleware runs before the cache, it's an effective way of providing personalization to statically generated content.\n\nNuxt has two forms of Middleware:\n\n*   [Server middleware](#nuxt-server-middleware-on-vercel)\n*   [Route middleware](#nuxt-route-middleware-on-vercel)\n\nIn Nuxt, modules defined in `/server/middleware` will get deployed as [server middleware](https://nuxt.com/docs/guide/directory-structure/server#server-middleware). Server middleware should not have a return statement or send a response to the request.\n\nServer middleware is best used to read data from or add data to a request's `context`. Doing so allows you to handle authentication or check a request's params, headers, url, [and more](https://www.w3schools.com/nodejs/obj_http_incomingmessage.asp).\n\nThe following example demonstrates Middleware that:\n\n*   Checks for a cookie\n*   Tries to fetch user data from a database based on the request\n*   Adds the user's data and the cookie data to the request's context\n\n```\nimport { getUserFromDBbyCookie } from 'some-orm-package';\n \nexport default defineEventHandler(async (event) => {\n  // The getCookie method is available to all\n  // Nuxt routes by default. No need to import.\n  const token = getCookie(event, 'session_token');\n \n  // getUserFromDBbyCookie is a placeholder\n  // made up for this example. You can fetch\n  // data from wherever you want here\n  const { user } = await getUserFromDBbyCookie(event.request);\n \n  if (user) {\n    event.context.user = user;\n    event.context.session_token = token;\n  }\n});\n```\n\nYou could then access that data in a page on the frontend with the [`useRequestEvent`](https://nuxt.com/docs/api/composables/use-request-event) hook. This hook is only available in routes deployed with SSR. If your page renders in the browser, `useRequestEvent` will return `undefined`.\n\nThe following example demonstrates a page fetching data with `useRequestEvent`:\n\n```\n<script>\n  const event = useRequestEvent();\n  const user = ref(event.context?.user);\n</script>\n \n<template>\n    <div v-if=\"user\">\n      <h1>Hello, {{ user.name }}!</h1>\n    </div>\n    <div v-else>\n      <p>Authentication failed!</p>\n    </div>\n</template>\n```\n\nNuxt's route middleware runs before navigating to a particular route. While server middleware runs in Nuxt's [Nitro engine](https://nitro.unjs.io/), route middleware runs in Vue.\n\nRoute middleware is best used when you want to do things that server middleware can't, such as redirecting users, or preventing them from navigating to a route.\n\nThe following example demonstrates route middleware that redirects users to a secret route:\n\n```\nexport default defineNuxtRouteMiddleware((to) => {\n  console.log(\n    `Heading to ${to.path} - but I think we should go somewhere else...`,\n  );\n \n  return navigateTo('/secret');\n});\n```\n\nBy default, route middleware code will only run on pages that specify them. To do so, within the `<script>` tag for a page, you must call the `definePageMeta` method, passing an object with `middleware: 'middleware-filename'` set as an option.\n\nThe following example demonstrates a page that runs the above redirect middleware:\n\n```\n<script>\ndefinePageMeta({\n  middleware: 'redirect'\n})\n</script>\n \n<template>\n  <div>\n    You should never see this page\n  </div>\n</template>\n```\n\nTo make a middleware global, add the `.global` suffix before the file extension. The following is an example of a basic global middleware file:\n\n```\nexport default defineNuxtRouteMiddleware(() => {\n  console.log('running global middleware');\n});\n```\n\n[See a detailed example of route middleware in Nuxt's Middleware example docs](https://nuxt.com/docs/examples/routing/middleware).\n\nMiddleware with Nuxt on Vercel enables you to:\n\n*   Redirect users, and prevent navigation to routes\n*   Run authentication checks on the server, and pass results to the frontend\n*   Scope middleware to specific routes, or run it on all routes\n\n[Learn more about Middleware](https://nuxt.com/docs/guide/directory-structure/middleware)\n\nServer-Side Rendering (SSR) allows you to render pages dynamically on the server. This is useful for pages where the rendered data needs to be unique on every request. For example, checking authentication or looking at the location of an incoming request.\n\nNuxt allows you to deploy your projects with a strategy called [Universal Rendering](https://nuxt.com/docs/guide/concepts/rendering#universal-rendering). In concrete terms, this allows you to deploy your routes with SSR by default and opt specific routes out [in your Nuxt config](#editing-your-nuxt-config).\n\nWhen you deploy your app with Universal Rendering, it renders on the server once, then your client-side JavaScript code gets interpreted in the browser again once the page loads.\n\nOn Vercel, Nuxt apps are server-rendered by default\n\nSSR with Nuxt on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Allows you to opt individual routes out of SSR [with your Nuxt config](https://nuxt.com/docs/getting-started/deployment#client-side-only-rendering)\n\n[Learn more about SSR](https://nuxt.com/docs/guide/concepts/rendering#universal-rendering)\n\nIf you deploy with `nuxt build`, you can opt nuxt routes into client-side rendering using `routeRules` by setting `ssr: false` as demonstrated below:\n\n```\nexport default defineNuxtConfig({\n  routeRules: {\n    // Use client-side rendering for this route\n    '/client-side-route-example': { ssr: false },\n  },\n});\n```\n\nTo deploy a fully static site on Vercel, build your project with `nuxt generate`. You should set `nitro.static` to `true` to enable Vercel features such as redirects, [Image Optimization](#image-optimization), and more when using `nuxt generate`:\n\n```\nexport default defineNuxtConfig({\n  nitro: {\n    static: true,\n  },\n});\n```\n\nIf you deploy with `nuxt build`, You can statically generate Nuxt routes at build time using the `prerender` option in your `nuxt.config.ts`:\n\n```\nexport default defineNuxtConfig({\n  routeRules: {\n    // prerender index route by default\n    '/': { prerender: true },\n    // prerender this route and all child routes\n    '/prerender-multiple/**': { prerender: true },\n  },\n});\n```\n\n[Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) allows you to create or update content _without_ redeploying your site. ISR has two main benefits for developers: better performance and faster build times.\n\nTo enable ISR in a Nuxt route, add a `routeRules` option to your `nuxt.config.ts`, as shown in the example below:\n\n```\nexport default defineNuxtConfig({\n  routeRules: {\n    // all routes (by default) will be revalidated every 60 seconds, in the background\n    '/**': { isr: 60 },\n    // this page will be generated on demand and then cached permanently\n    '/static': { isr: true },\n    // this page is statically generated at build time and cached permanently\n    '/prerendered': { prerender: true },\n    // this page will be always fresh\n    '/dynamic': { isr: false },\n  },\n});\n```\n\nYou should use the `isr` option rather than `swr` to enable ISR in a route. The `isr` option enables Nuxt to use Vercel's Edge Cache.\n\nusing ISR with Nuxt on Vercel offers:\n\n*   Better performance with our global [Edge Network](https://vercel.com/docs/edge-network/overview)\n*   Zero-downtime rollouts to previously statically generated pages\n*   Global content updates in 300ms\n*   Generated pages are both cached and persisted to durable storage\n\n[Learn more about ISR with Nuxt](https://nuxt.com/docs/guide/concepts/rendering#hybrid-rendering).\n\nYou can define redirects and response headers with Nuxt on Vercel in your `nuxt.config.ts`:\n\n```\nexport default defineNuxtConfig({\n  routeRules: {\n    '/examples/*': { redirect: '/redirect-route' },\n    '/modify-headers-route': { headers: { 'x-magic-of': 'nuxt and vercel' } },\n  },\n});\n```\n\n[Image Optimization](https://vercel.com/docs/image-optimization) helps you achieve faster page loads by reducing the size of images and using modern image formats.\n\nWhen deploying to Vercel, images are automatically optimized on demand, keeping your build times fast while improving your page load performance and [Core Web Vitals](https://vercel.com/docs/speed-insights).\n\nTo use Image Optimization with Nuxt on Vercel, follow [the Image Optimization quickstart](https://vercel.com/docs/image-optimization/quickstart) by selecting Nuxt from the dropdown.\n\nUsing Image Optimization with Nuxt on Vercel:\n\n*   Requires zero-configuration for Image Optimization when using `nuxt/image`\n*   Helps your team ensure great performance by default\n*   Keeps your builds fast by optimizing images on-demand\n\n[Learn more about Image Optimization](https://vercel.com/docs/image-optimization)\n\nDynamic social card images allow you to create a unique image for pages of your site. This is great for sharing links on the web through social platforms or text messages.\n\nTo generate dynamic social card images for Nuxt projects, you can use [`nuxt-og-image`](https://nuxtseo.com/og-image/getting-started/installation). It uses the main Nuxt/Nitro [Server-side rendering(SSR)](#server-side-rendering-ssr) function.\n\nThe following example demonstrates using Open Graph (OG) image generation with [`nuxt-og-image`](https://nuxtseo.com/og-image/getting-started/installation):\n\n1.  Create a new OG template\n\n```\n<script setup lang=\"ts\">\n  withDefaults(defineProps<{\n    title?: string\n  }>(), {\n    title: 'title',\n  })\n</script>\n<template>\n  <div class=\"h-full w-full flex items-start justify-start border-solid border-blue-500 border-[12px] bg-gray-50\">\n    <div class=\"flex items-start justify-start h-full\">\n      <div class=\"flex flex-col justify-between w-full h-full\">\n        <h1 class=\"text-[80px] p-20 font-black text-left\">\n          {{ title }}\n        </h1>\n        <p class=\"text-2xl pb-10 px-20 font-bold mb-0\">\n          acme.com\n        </p>\n      </div>\n    </div>\n  </div>\n</template>\n```\n\n2.  Use that OG image in your pages. Props passed get used in your open graph images.\n\n```\n<script lang=\"ts\" setup>\ndefineOgImageComponent('Template', {\n  title: 'Is this thing on?'\n})\n</script>\n```\n\nTo see your generated image, run your project and use Nuxt DevTools. Or you can visit the image at its URL `/__og-image__/image/og.png`.\n\n[Learn more about OG Image Generation with Nuxt](https://nuxtseo.com/og-image/getting-started/installation).\n\nThe Nuxt team [does not recommend deploying legacy versions of Nuxt (such as Nuxt 2) on Vercel](https://github.com/nuxt/vercel-builder#readme), except as static sites. If your project uses a legacy version of Nuxt, you should either:\n\nIf you still want to use legacy Nuxt versions with Vercel, you should only do so by building a static site with `nuxt generate`. We do not recommend deploying legacy Nuxt projects with server-side rendering.\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying Nuxt projects on Vercel with the following resources:",
  "title": "Nuxt on Vercel",
  "description": "Learn how to use Vercel's features with Nuxt.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cli/list",
  "markdown": "# vercel list\n\nThe `vercel list` command, which can be shortened to `vercel ls`, provides a list of recent deployments for the currently-linked Vercel Project.\n\nUsing the `vercel list` command to retrieve information about multiple deployments for the currently-linked Vercel Project.\n\n```\nvercel list [project-name]\n```\n\nUsing the `vercel list` command to retrieve information about deployments for a specific Vercel Project.\n\n```\nvercel list [project-name] [--meta foo=bar]\n```\n\nUsing the `vercel list` command to retrieve information about deployments filtered by metadata.\n\nThese are options that only apply to the `vercel list` command.\n\nThe `--meta` option, shorthand `-m`, can be used to filter results based on Vercel Project metadata.\n\n```\nvercel list --meta key1=value1 key2=value2\n```\n\nUsing the `vercel list` command with the `--meta` option.\n\nThe `--yes` option can be used to skip questions you are asked when setting up a new Vercel Project. The questions will be answered with the default scope and current directory for the Vercel Project name and location.\n\nUsing the `vercel list` command with the `--yes` option.\n\nThe following [global options](https://vercel.com/docs/cli/global-options) can be passed when using the `vercel list` command:\n\nFor more information on global options and their usage, refer to the [options section](https://vercel.com/docs/cli/global-options).",
  "title": "vercel list",
  "description": "Learn how to list out all recent deployments for the current Vercel Project using the vercel list CLI command.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/remix",
  "markdown": "# Remix on Vercel\n\nRemix is a fullstack, [server-rendered](#server-side-rendering-ssr) React framework. Its built-in features for nested pages, error boundaries, transitions between loading states, and more, enable developers to create modern web apps.\n\nWith Vercel, you can deploy server-rendered Remix and Remix V2 applications to Vercel with zero configuration. When using the [Remix Vite plugin](https://remix.run/docs/en/main/future/vite), static site generation using [SPA mode](https://remix.run/docs/en/main/future/spa-mode) is also supported.\n\nIt is highly recommended that your application uses the Remix Vite plugin, in conjunction with the [Vercel Preset](#vercel-vite-preset), when deploying to Vercel.\n\nTo get started with Remix on Vercel:\n\n*   If you already have a project with Remix, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our Remix example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your Remix project.\n\nThe [`@vercel/remix`](https://www.npmjs.com/package/@vercel/remix) package exposes useful types and utilities for Remix apps deployed on Vercel, such as:\n\nTo best experience Vercel features such as [streaming](#streaming), [Edge Functions](#edge-functions), [Serverless Functions](#serverless-functions), and more, we recommend importing utilities from `@vercel/remix` rather than from standard Remix packages such as `@remix-run/node`.\n\n`@vercel/remix` should be used anywhere in your code that you normally would import utility functions from the following packages:\n\nTo get started, navigate to the root directory of your Remix project with your terminal and install `@vercel/remix` with your preferred package manager:\n\nWhen using the [Remix Vite plugin](https://remix.run/docs/en/main/future/vite) (highly recommended), you should configure the Vercel Preset to enable the full feature set that Vercel offers.\n\nTo configure the Preset, add the following lines to your `vite.config` file:\n\n```\nimport { vitePlugin as remix } from '@remix-run/dev';\nimport { installGlobals } from '@remix-run/node';\nimport { defineConfig } from 'vite';\nimport tsconfigPaths from 'vite-tsconfig-paths';\nimport { vercelPreset } from '@vercel/remix/vite';\n \ninstallGlobals();\n \nexport default defineConfig({\n  plugins: [\n    remix({\n      presets: [vercelPreset()],\n    }),\n    tsconfigPaths(),\n  ],\n});\n```\n\nUsing this Preset enables Vercel-specific functionality such as rendering your Remix application using either Node.js or Edge runtimes.\n\nServer-Side Rendering (SSR) allows you to render pages dynamically on the server. This is useful for pages where the rendered data needs to be unique on every request. For example, checking authentication or looking at the location of an incoming request.\n\nRemix routes defined in `app/routes` are deployed with server-side rendering by default.\n\nThe following example demonstrates a basic route that renders with SSR:\n\n```\nexport default function IndexRoute() {\n  return (\n    <div style={{ fontFamily: 'system-ui, sans-serif', lineHeight: '1.4' }}>\n      <h1>This route is rendered on the server</h1>\n    </div>\n  );\n}\n```\n\nWith Vercel, there are two ways to deploy your server rendered routes:\n\n*   [Serverless Functions](#serverless-functions) (default)\n*   [Edge Functions](#edge-functions)\n\nThe runtime which is used to render your route can be configured on a per-route basis. See below for examples of how to configure your routes.\n\nSee [our Function comparison table](https://vercel.com/docs/functions/serverless-functions/runtimes) to understand whether Edge or Serverless is best for your use-case.\n\nServerless Functions execute using Node.js. They enable developers to write functions that use resources that scale up and down based on traffic demands. This prevents them from failing during peak hours, but keeps them from running up high costs during periods of low activity.\n\nRemix API routes in `app/routes` are deployed as Serverless Functions by default. To learn how to deploy them as Edge Functions instead, [see our section on Edge Functions](#edge-functions).\n\nThe following example demonstrates a basic route that renders a page with the heading, \"Welcome to Remix with Vercel (Serverless)\":\n\n```\nexport default function Serverless() {\n  return <h1>Welcome to Remix with Vercel (Serverless)</h1>;\n}\n```\n\nTo [configure](https://vercel.com/docs/functions/configuring-functions) Serverless Functions on a per-route basis, export a `config` object in the route.\n\nFor example, to configure the [maximum duration of your function](https://vercel.com/docs/functions/configuring-functions/duration), you can use the following configuration:\n\n```\n// This function can run for a maximum of 5 seconds\nexport const config = {\n  maxDuration: 5,\n};\n \nexport default function Serverless() {\n  return <h1>Welcome to Remix with Vercel (Serverless)</h1>;\n}\n```\n\nConfiguration can also be specified in a layout route, and all routes that use that layout will _inherit_ the parent configuration.\n\nFor example, to configure _all_ routes to use a common configuration, export the `config` object in the `app/root` layout:\n\n```\nimport { Outlet } from '@remix-run/react';\n \n// All routes will inherit this configuration,\n// unless a route overrides the config option\nexport const config = {\n  memory: 1024,\n};\n \nexport default function App() {\n  return <Outlet />;\n}\n```\n\nTo summarize, Server-Side Rendering (SSR) with Remix on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Has framework-aware infrastructure that enables switching rendering between Edge/Node.js (Serverless) runtimes\n\nEdge Functions are a fast and reliable solution for delivering dynamic content to users. By default, Edge Functions deploy globally and will be invoked in one of Vercel's [Edge regions](https://vercel.com/docs/edge-network/regions) near your site's visitors.\n\nEdge Functions are ideal when you need to interact with data over the network as fast as possible, such as executing OAuth callbacks, responding to webhook requests, or interacting with an API that fails if a request is not completed within a short time limit.\n\nRemix routes defined in `app/routes` are deployed as Serverless Functions by default. To deploy a route with Edge Functions, you must export a `config` object with `runtime: 'edge'`. For example:\n\n```\n// This route will be rendered using the Edge runtime\nexport const config = { runtime: 'edge' };\n \nexport default function Edge() {\n  return <h1>Welcome to Remix@Edge</h1>;\n}\n```\n\nRoutes inherit the configuration defined in their parent layout route. Therefore, if you would like to for all routes, or a group of routes, to be rendered using the Edge runtime, you can define the configuration in a parent layout route.\n\n```\nimport { Outlet } from '@remix-run/react';\n \n// All routes will be rendered using Edge runtime\nexport const config = { runtime: 'edge' };\n \nexport default function App() {\n  return <Outlet />;\n}\n```\n\nWhen a layout is configured to render using Edge, you can configure a route to use Node.js by exporting a config object with `runtime: 'nodejs'`.\n\nThe following example demonstrates a parent `admin` layout deployed on the Edge Runtime that renders a list of blog posts for an admin user.\n\n```\nimport { Link, Outlet, useLoaderData } from '@remix-run/react';\nimport type { LoaderFunctionArgs } from '@vercel/remix';\nimport { json } from '@vercel/remix';\nimport { getPostListings } from '~/models/post.server';\nimport { requireAdminUser } from '~/session.server';\n \nexport const config = { runtime: 'edge' };\n \nexport async function loader({ request }: LoaderFunctionArgs) {\n  await requireAdminUser(request);\n  return json({ posts: await getPostListings() });\n}\n \nexport default function AdminPostList() {\n  const { posts } = useLoaderData<typeof loader>();\n  return (\n    <div>\n      <h1>Blog Admin</h1>\n      <nav>\n        <ul>\n          {posts.map((post) => (\n            <li key={post.slug}>\n              <Link to={post.slug}>{post.title}</Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n      <main>\n        <Outlet />\n      </main>\n    </div>\n  );\n}\n```\n\nThen, create a nested `$slug` file under `/app/routes/posts/admin/`. This route will deploy as a Vercel Serverless Function:\n\n```\nimport { json } from '@vercel/remix';\nimport type { LoaderFunctionArgs } from '@vercel/remix';\nimport { getPost } from '~/models/post.server';\nimport { requireAdminUser } from '~/session.server';\n \nexport const config = { runtime: 'nodejs' };\n \nexport async function loader({ request, params }: LoaderFunctionArgs) {\n  // Authenticate the user\n  await requireAdminUser(request);\n  // Fetch the post\n  const post = await getPost(params.slug);\n  // Add it to the loader data, which\n  // the component can use\n  return json({ post });\n}\n \nexport default function Post() {\n  const { post } = useLoaderData<typeof loader>();\n  return (\n    <div>\n      <p>{post.title}</p>\n      <p>{post.description}</p>\n    </div>\n  );\n}\n```\n\nIf the parent layout route is _not_ explicitly defined as an Edge Function, that route and its nested routes will deploy as Serverless Functions. In such cases, exporting a `config` object with `runtime: 'nodejs'` is not necessary.\n\nTo summarize, Edge Functions with Remix on Vercel:\n\n*   Offer cost savings by using fewer resources than Serverless Functions\n*   Can execute in the region nearest to your users or nearest to data sources they depend on, based on your configuration\n*   Have access to the geolocation and IP address of visitors, enabling location-based personalization\n\n[Learn more about Edge Functions](https://vercel.com/docs/functions/edge-functions)\n\n[Streaming HTTP responses](https://vercel.com/docs/edge-network/overview#streaming) with Remix on Vercel is supported, in both Edge and Serverless routes. See the [Streaming](https://remix.run/docs/en/main/guides/streaming) page in the Remix docs for general instructions.\n\nThe following example demonstrates a route that simulates a throttled network by delaying a promise's result, and renders a loading state until the promise is resolved:\n\n```\nimport { Suspense } from 'react';\nimport { Await, useLoaderData } from '@remix-run/react';\nimport { defer } from '@vercel/remix';\n \nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n \nexport async function loader({ request }) {\n  const version = process.versions.node;\n \n  return defer({\n    // Don't let the promise resolve for 1 second\n    version: sleep(1000).then(() => version),\n  });\n}\n \nexport default function DeferredRoute() {\n  const { version } = useLoaderData();\n \n  return (\n    <Suspense fallback={'Loading…'}>\n      <Await resolve={version}>{(version) => <strong>{version}</strong>}</Await>\n    </Suspense>\n  );\n}\n```\n\nTo summarize, Streaming with Remix on Vercel:\n\n*   Offers faster Function response times, improving your app's user experience\n*   Allows you to return large amounts of data without exceeding Edge and Serverless Function response size limits\n*   Allows you to display Instant Loading UI from the server with Remix's `defer()` and `Await`\n\n[Learn more about Streaming](https://vercel.com/docs/functions/streaming)\n\nVercel's [Edge Network](https://vercel.com/docs/edge-network/overview) caches your content at the edge in order to serve data to your users as fast as possible. [Static caching](https://vercel.com/docs/edge-network/caching#static-files-caching) works with zero configuration.\n\nBy adding a `Cache-Control` header to responses returned by your Remix routes, you can specify a set of caching rules for both client (browser) requests and server responses. A cache must obey the requirements defined in the Cache-Control header.\n\nRemix supports header modifications with the [`headers`](https://remix.run/docs/en/main/route/headers) function, which you can export in your routes defined in `app/routes`.\n\nThe following example demonstrates a route that adds `Cache Control` headers which instruct the route to:\n\n*   Return cached content for requests repeated within 1 second without revalidating the content\n*   For requests repeated after 1 second, but before 60 seconds have passed, return the cached content and mark it as stale. The stale content will be revalidated in the background with a fresh value from your [`loader`](https://remix.run/docs/en/1.14.0/route/loader) function\n\n```\nimport type { HeadersFunction } from '@vercel/remix';\n \nexport const headers: HeadersFunction = () => ({\n  'Cache-Control': 's-maxage=1, stale-while-revalidate=59',\n});\n \nexport async function loader() {\n  // Fetch data necessary to render content\n}\n```\n\nSee [our docs on cache limits](https://vercel.com/docs/edge-network/caching#limits) to learn the max size and lifetime of caches stored on Vercel.\n\nTo summarize, using `Cache-Control` headers with Remix on Vercel:\n\n*   Allow you to cache responses for server-rendered Remix apps using Edge or Serverless Functions\n*   Allow you to serve content from the cache _while updating the cache in the background_ with `stale-while-revalidate`\n\n[Learn more about Caching](https://vercel.com/docs/edge-network/caching#how-to-cache-responses)\n\nVercel's Analytics features enable you to visualize and monitor your application's performance over time. The Analytics tab in your project's dashboard offers detailed insights into your website's visitors, with metrics like top pages, top referrers, and user demographics.\n\nTo use Analytics, navigate to the Analytics tab of your project dashboard on Vercel and select Enable in the modal that appears.\n\nTo track visitors and page views, we recommend first installing our `@vercel/analytics` package by running the terminal command below in the root directory of your Remix project:\n\nThen, follow the instructions below to add the `Analytics` component to your app. The `Analytics` component is a wrapper around Vercel's tracking script, offering a seamless integration with Remix.\n\nAdd the following component to your `root` file:\n\n```\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function App() {\n  return (\n    <html lang=\"en\">\n      <body>\n        <Analytics />\n      </body>\n    </html>\n  );\n}\n```\n\nTo summarize, Analytics with Remix on Vercel:\n\n*   Enables you to track traffic and see your top-performing pages\n*   Offers you detailed breakdowns of visitor demographics, including their OS, browser, geolocation and more\n\n[Learn more about Analytics](https://vercel.com/docs/analytics)\n\nBy default, Vercel supplies an implementation of the `entry.server` file which is configured for streaming to work on both Edge and Serverless runtimes. This version will be used when no `entry.server` file is found in the project, or when the existing `entry.server` file has not been modified from the base Remix template.\n\nHowever, if your application requires a customized `app/entry.server.jsx` or `app/entry.server.tsx` file (for example, to wrap the `<RemixServer>` component with a React context), you should base it off of this template:\n\n```\nimport { RemixServer } from '@remix-run/react';\nimport { handleRequest, type EntryContext } from '@vercel/remix';\n \nexport default async function (\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext,\n) {\n  let remixServer = <RemixServer context={remixContext} url={request.url} />;\n  return handleRequest(\n    request,\n    responseStatusCode,\n    responseHeaders,\n    remixServer,\n  );\n}\n```\n\nDefining a custom `server` file is not supported when using the Remix Vite plugin on Vercel.\n\nIt's usually not necessary to define a custom server.js file within your Remix application when deploying to Vercel. In general, we do not recommend it.\n\nIf your project requires a custom [`server`](https://remix.run/docs/en/main/file-conventions/remix-config#md-server) file, you will need to [install `@vercel/remix`](#@vercel/remix) and import `createRequestHandler` from `@vercel/remix/server`. The following example demonstrates a basic `server.js` file:\n\n```\nimport { createRequestHandler } from '@vercel/remix/server';\nimport * as build from '@remix-run/dev/server-build';\n \nexport default createRequestHandler({\n  build,\n  mode: process.env.NODE_ENV,\n  getLoadContext() {\n    return {\n      nodeLoadContext: true,\n    };\n  },\n});\n```\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying Remix projects on Vercel with the following resources:",
  "title": "Remix on Vercel",
  "description": "Learn how to use Vercel's features with Remix.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/gatsby",
  "markdown": "# Gatsby on Vercel\n\nGatsby is an open-source static-site generator. It enables developers to build fast and secure websites that integrate different content, APIs, and services.\n\nGatsby also has a large ecosystem of plugins and tools that improve the development experience. Vercel supports many Gatsby features, including [Server-Side Rendering](#server-side-rendering), [Deferred Static Generation](#deferred-static-generation), [API Routes](#api-routes), and more.\n\nTo get started with Gatsby on Vercel:\n\n*   If you already have a project with Gatsby, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our Gatsby example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your Gatsby project.\n\n[Gatsby v4+](https://www.gatsbyjs.com/gatsby-4/) sites deployed to Vercel will automatically detect Gatsby usage and install the `@vercel/gatsby-plugin-vercel-builder` plugin.\n\nTo deploy your Gatsby site to Vercel, do not install the `@vercel/gatsby-plugin-vercel-builder` plugin yourself, or add it to your `gatsby-config.js` file.\n\n[Gatsby v5](https://www.gatsbyjs.com/gatsby-5/) sites require Node.js 18, which is currently the default version used for new Vercel builds.\n\nVercel persists your Gatsby project's `.cache` directory across builds.\n\nServer-Side Rendering (SSR) allows you to render pages dynamically on the server. This is useful for pages where the rendered data needs to be unique on every request. For example, verifying authentication or checking the geolocation of an incoming request.\n\nVercel offers SSR that scales down resource consumption when traffic is low, and scales up with traffic surges. This protects your site from accruing costs during periods of no traffic or losing business during high-traffic periods.\n\nYou can server-render pages in your Gatsby application on Vercel [using Gatsby's native Server-Side Rendering API](https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/). These pages will be deployed to Vercel as [Serverless Functions](https://vercel.com/docs/functions/serverless-functions).\n\nTo server-render a Gatsby page, you must export an `async` function called `getServerData`. The function can return an object with several optional keys, [as listed in the Gatsby docs](https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/#creating-server-rendered-pages). The `props` key will be available in your page's props in the `serverData` property.\n\nThe following example demonstrates a server-rendered Gatsby page using `getServerData`:\n\n```\nimport type { GetServerDataProps, GetServerDataReturn } from 'gatsby';\n \ntype ServerDataProps = {\n  hello: string;\n};\n \nconst Page = (props: PageProps) => {\n  const { name } = props.serverData;\n  return <div>Hello, {name}</div>;\n};\n \nexport async function getServerData(\n  props: GetServerDataProps,\n): GetServerDataReturn<ServerDataProps> {\n  try {\n    const res = await fetch(`https://example-data-source.com/api/some-data`);\n    return {\n      props: await res.json(),\n    };\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    };\n  }\n}\n \nexport default Page;\n```\n\nTo summarize, SSR with Gatsby on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Has zero-configuration support for [`Cache-Control` headers](https://vercel.com/docs/edge-network/caching), including `stale-while-revalidate`\n*   Framework-aware infrastructure enables switching rendering between Edge/Node.js runtimes\n\n[Learn more about SSR](https://www.gatsbyjs.com/docs/how-to/rendering-options/using-server-side-rendering/)\n\nDeferred Static Generation (DSG) allows you to defer the generation of static pages until they are requested for the first time.\n\nTo use DSG, you must set the `defer` option to `true` in the `createPages()` function in your `gatsby-node` file.\n\n```\nimport type { GatsbyNode } from 'gatsby';\n \nexport const createPages: GatsbyNode['createPages'] = async ({ actions }) => {\n  const { createPage } = actions;\n  createPage({\n    defer: true,\n    path: '/using-dsg',\n    component: require.resolve('./src/templates/using-dsg.js'),\n    context: {},\n  });\n};\n```\n\n[See the Gatsby docs on DSG to learn more](https://www.gatsbyjs.com/docs/how-to/rendering-options/using-deferred-static-generation/#introduction).\n\nTo summarize, DSG with Gatsby on Vercel:\n\n*   Allows you to defer non-critical page generation to user request, speeding up build times\n*   Works out of the box when you deploy on Vercel\n*   Can yield dramatic speed increases for large sites with content that is infrequently visited\n\n[Learn more about DSG](https://www.gatsbyjs.com/docs/how-to/rendering-options/using-deferred-static-generation/)\n\nGatsby supports [Deferred Static Generation](#deferred-static-generation).\n\nThe static rendered fallback pages are not generated at build time. This differentiates it from incremental static regeneration (ISR). Instead, a Vercel Function gets invoked upon page request. And the resulting response gets cached for 10 minutes. This is hard-coded and currently not configurable.\n\nSee the documentation for [Deferred Static Generation](#deferred-static-generation).\n\nYou can add API Routes to your Gatsby site using the framework's native support for the `src/api` directory. Doing so will deploy your routes as [Serverless Functions](https://vercel.com/docs/functions/serverless-functions). These Serverless Functions can be used to fetch data from external sources, or to add custom endpoints to your application.\n\nThe following example demonstrates a basic API Route using Serverless Functions:\n\n```\nimport type { VercelRequest, VercelResponse } from '@vercel/node';\n \nexport default function handler(\n  request: VercelRequest,\n  response: VercelResponse,\n) {\n  response.status(200).json({\n    body: request.body,\n    query: request.query,\n    cookies: request.cookies,\n  });\n}\n```\n\nTo view your route locally, run the following command in your terminal:\n\nThen navigate to `http://localhost:8000/api/handler` in your web browser.\n\nVercel does not currently have first-class support for dynamic API routes in Gatsby. For now, using them requires the workaround described in this section.\n\nTo use Gatsby's Dynamic API routes on Vercel, you must:\n\n1.  Define your dynamic routes in a `vercel.json` file at the root directory of your project, as shown below:\n    \n    ```\n    {\n      \"rewrites\": [\n        {\n          \"source\": \"/api/blog/:id\",\n          \"destination\": \"/api/blog/[id]\"\n        }\n      ]\n    }\n    ```\n    \n2.  Read your dynamic parameters from `req.query`, as shown below:\n    \n    ```\n    import type { VercelRequest, VercelResponse } from '@vercel/node';\n     \n    export default function handler(\n      request: VercelRequest & { params: { id: string } },\n      response: VercelResponse,\n    ) {\n      console.log(`/api/blog/${request.query.id}`);\n      response.status(200).json({\n        body: request.body,\n        query: request.query,\n        cookies: request.cookies,\n      });\n    }\n    ```\n    \n\nAlthough typically you'd access the dynamic parameter with `request.param` when using Gatsby, you must use `request.query` on Vercel.\n\nSplat API routes are dynamic wildcard routes that will match anything after the splat (`[...]`). Vercel does not currently have first-class support for splat API routes in Gatsby. For now, using them requires the workaround described in this section.\n\nTo use Gatsby's splat API routes on Vercel, you must:\n\n1.  Define your splat routes in a `vercel.json` file at the root directory of your project, as shown below:\n    \n    ```\n    {\n      \"rewrites\": [\n        {\n          \"source\": \"/api/products/:path*\",\n          \"destination\": \"/api/products/[...]\"\n        }\n      ]\n    }\n    ```\n    \n2.  Read your dynamic parameters from `req.query.path`, as shown below:\n    \n    ```\n    import type { VercelRequest, VercelResponse } from '@vercel/node';\n     \n    export default function handler(\n      request: VercelRequest & { params: { path: string } },\n      response: VercelResponse,\n    ) {\n      console.log(`/api/products/${request.query.path}`);\n      response.status(200).json({\n        body: request.body,\n        query: request.query,\n        cookies: request.cookies,\n      });\n    }\n    ```\n    \n\nTo summarize, API Routes with Gatsby on Vercel:\n\n*   Scale to zero when not in use\n*   Scale automatically with traffic increases\n*   Can be tested as Serverless Functions in your local environment\n\n[Learn more about Gatsby API Routes](https://www.gatsbyjs.com/docs/reference/routing/creating-routes/)\n\nGatsby does not have native support for [Edge Functions](https://vercel.com/docs/functions/edge-functions).\n\nTo use Edge Functions in your Gatsby project on Vercel, you must create an `api` directory at the root of your project. Note that this is different from the `src/api/` directory, which is where Vercel detects and deploys Serverless Functions.\n\nThe following example demonstrates a basic Edge Function:\n\n```\nexport const config = {\n  runtime: 'edge',\n};\n \nexport default (request: Request) => {\n  return new Response(`Hello, from ${request.url} I'm now an Edge Function!`);\n};\n```\n\n[See our Function comparison table to understand whether Edge or Serverless is best for your use-case](https://vercel.com/docs/functions/edge-functions).\n\nTo summarize, Edge Functions with Gatsby on Vercel:\n\n*   Enable you to respond to user requests with dynamic content at low latency, at scale\n*   Offer cost savings by using fewer resources than Serverless Functions\n*   Can execute in the region nearest to your users or nearest to data sources they depend on, based on your configuration\n*   Have access to the geolocation and IP address of visitors, enabling location-based personalization\n\n[Learn more about Edge Functions](https://vercel.com/docs/functions/edge-functions)\n\nGatsby does not have native framework support for using [Edge Middleware](https://vercel.com/docs/functions/edge-middleware).\n\nHowever, you can still use Edge Middleware with your Gatsby site by creating a `middeware.js` or `middeware.ts` file in your project's root directory.\n\nThe following example demonstrates middleware that adds security headers to responses sent to users who visit the `/example` route in your Gatsby application:\n\n```\nimport { next } from '@vercel/edge';\n \nexport const config = {\n  // Only run the middleware on the example route\n  matcher: '/example',\n};\n \nexport default function middleware(request: Request): Response {\n  return next({\n    headers: {\n      'Referrer-Policy': 'origin-when-cross-origin',\n      'X-Frame-Options': 'DENY',\n      'X-Content-Type-Options': 'nosniff',\n      'X-DNS-Prefetch-Control': 'on',\n      'Strict-Transport-Security':\n        'max-age=31536000; includeSubDomains; preload',\n    },\n  });\n}\n```\n\nTo summarize, Edge Middleware with Gatsby on Vercel:\n\n*   Executes before a request is processed on a site, allowing you to modify responses to user requests\n*   Runs on _all_ requests, but can be scoped to specific paths [through a `matcher` config](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-custom-matcher-config)\n*   Uses our lightweight Edge Runtime to keep costs low and responses fast\n\n[Learn more about Edge Middleware](https://vercel.com/docs/functions/edge-middleware)\n\n[Core Web Vitals](https://vercel.com/docs/speed-insights) are supported for Gatsby v4+ projects with no initial configuration necessary.\n\nWhen you deploy a Gatsby v4+ site on Vercel, we automatically install the `@vercel/gatsby-plugin-vercel-analytics` package and add it to the `plugins` array in your `gatsby-config.js` file.\n\nWe do not recommend installing the Gatsby analytics plugin yourself.\n\nTo access your Core Web Vitals data, you must enable Vercel analytics in your project's dashboard. [See our quickstart guide to do so now](https://vercel.com/docs/analytics/quickstart).\n\nTo summarize, using Speed Insights with Gatsby on Vercel:\n\n*   Enables you to track traffic performance metrics, such as [First Contentful Paint](https://vercel.com/docs/speed-insights#first-contentful-paint-fcp), or [First Input Delay](https://vercel.com/docs/speed-insights#first-input-delay-fid)\n*   Enables you to view performance analytics by page name and URL for more granular analysis\n*   Shows you [a score for your app's performance](https://vercel.com/docs/speed-insights#how-the-scores-are-determined) on each recorded metric, which you can use to track improvements or regressions\n\n[Learn more about Speed Insights](https://vercel.com/docs/speed-insights)\n\nWhile Gatsby [does provide an Image plugin](https://www.gatsbyjs.com/plugins/gatsby-plugin-image), it is not currently compatible with Vercel Image Optimization.\n\nIf this is something your team is interested in, [please contact our sales team](https://vercel.com/contact/sales).\n\n[Learn more about Image Optimization](https://vercel.com/docs/image-optimization)\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying Gatsby projects on Vercel with the following resources:",
  "title": "Gatsby on Vercel",
  "description": "Learn how to use Vercel's features with Gatsby.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/frameworks/vite",
  "markdown": "# Vite on Vercel\n\nVite is an opinionated build tool that aims to provide a faster and leaner development experience for modern web projects. Vite provides a dev server with rich feature enhancements such as pre-bundling NPM dependencies and hot module replacement, and a build command that bundles your code and outputs optimized static assets for production.\n\nThese features make Vite more desirable than out-of-the-box CLIs when building larger projects with frameworks for many developers.\n\nVite powers popular frameworks like [SvelteKit](https://vercel.com/docs/frameworks/sveltekit), and is often used in large projects built with [Vue](https://vercel.com/guides/deploying-vuejs-to-vercel), [Svelte](https://vercel.com/docs/frameworks/sveltekit), [React](https://vercel.com/docs/frameworks/create-react-app), [Preact](https://vercel.com/guides/deploying-preact-with-vercel), [and more](https://github.com/vitejs/vite/tree/main/packages/create-vite).\n\nTo get started with Vite on Vercel:\n\n*   If you already have a project with Vite, install [Vercel CLI](https://vercel.com/docs/cli) and run the `vercel` command from your project's root directory\n*   Clone one of our Vite example repos to your favorite git provider and deploy it on Vercel with the button below:\n\nVercel deployments can [integrate with your git provider](https://vercel.com/docs/git) to [generate preview URLs](https://vercel.com/docs/deployments/preview-deployments) for each pull request you make to your Vite project.\n\nAlthough Vite offers modern features like [SSR](#server-side-rendering-ssr) and [Serverless Functions](#serverless-functions) out of the box, implementing those features can sometimes require complex configuration steps. Because of this, many Vite users prefer to use [popular community plugins](https://github.com/vitejs/awesome-vite#readme).\n\nVite's plugins are based on [Rollup's plugin interface](https://rollupjs.org/javascript-api/), giving Vite users access to [many tools from the Rollup ecosystem](https://vite-rollup-plugins.patak.dev/) as well as the [Vite-specific ecosystem](https://github.com/vitejs/awesome-vite#readme).\n\nWe recommend using popular Vite plugins to configure your project when possible.\n\n[`vite-plugin-vercel`](https://github.com/magne4000/vite-plugin-vercel#readme) is a popular community Vite plugin that implements [the Build Output API spec](https://vercel.com/docs/build-output-api/v3). It enables your Vite apps to use the following Vercel features:\n\n[`vite-plugin-ssr`](https://vite-plugin-ssr.com/) is another popular community Vite plugin that implements [the Build Output API spec](https://vercel.com/docs/build-output-api/v3). It enables your Vite apps to do the following:\n\n*   [Server-Side Rendering (SSR)](#server-side-rendering-ssr)\n*   [Serverless Functions](#serverless-functions)\n*   [Edge Functions](#edge-functions)\n*   [Static Site Generation](https://vercel.com/docs/build-output-api/v3/primitives#static-files)\n\nVercel provides a set of [System Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables) that our platform automatically populates. For example, the `VERCEL_GIT_PROVIDER` variable exposes the Git provider that triggered your project's deployment on Vercel.\n\nThese environment variables will be available to your project automatically, and you can enable or disable them in your project settings on Vercel. See [our Environment Variables docs](https://vercel.com/docs/projects/environment-variables) to learn how.\n\nTo access Vercel's System Environment Variables in Vite during the build process, prefix the variable name with `VITE`. For example, `VITE_VERCEL_ENV` will return `preview`, `production`, or `development` depending on which environment the app is running in.\n\nThe following example demonstrates a Vite config file that sets `VITE_VERCEL_ENV` as a global constant available throughout the app:\n\n```\nexport default defineConfig(() => {\n  return {\n    define: {\n      __APP_ENV__: process.env.VITE_VERCEL_ENV,\n    },\n  };\n});\n```\n\nIf you want to read environment variables from a `.env` file, additional configuration is required. See [the Vite config docs](https://vitejs.dev/config/#using-environment-variables-in-config) to learn more.\n\nTo summarize, the benefits of using System Environment Variables with Vite on Vercel include:\n\n*   Access to Vercel deployment information, dynamically or statically, with our preconfigured System Environment Variables\n*   Access to automatically-configured environment variables provided by [integrations for your preferred services](https://vercel.com/docs/projects/environment-variables#integration-environment-variables)\n*   Searching and filtering environment variables by name and environment in Vercel's dashboard\n\n[Learn more about System Environment Variables](https://vercel.com/docs/projects/environment-variables/system-environment-variables)\n\nEdge Functions are a fast, scalable solution for delivering dynamic content to users. By default, Edge Functions are deployed globally, and will be invoked in one of Vercel's datacenters near your site's visitors.\n\nEdge Functions are ideal when you need to interact with data over the network as fast as possible, such as executing OAuth callbacks, responding to webhook requests, or interacting with an API that fails if a request is not completed within a short time limit.\n\nIf your project uses [a Vite community plugin](#using-vite-community-plugins), such as [`vite-plugin-ssr`](https://vite-plugin-ssr.com/), you should follow that plugin's documentation for using Edge Functions.\n\nIf you're using a framework built on Vite, check that framework's official documentation or [our dedicated framework docs](https://vercel.com/docs/frameworks). Some frameworks built on Vite, such as [SvelteKit](https://vercel.com/docs/frameworks/sveltekit), support Edge Functions natively. We recommend using that framework's method for implementing Edge Functions.\n\nIf you're not using a framework or plugin that supports Edge Functions, you can still use them in your project by creating route modules in an `api` directory at the root of your project.\n\nThe following example demonstrates a basic `api/handler` Edge Function route:\n\n```\nexport const config = {\n  runtime: 'edge',\n};\n \nexport default (request: Request) => {\n  return new Response(`Hello, from ${request.url} I'm now an Edge Function!`);\n};\n```\n\nYou can test your Edge Function routes locally using [Vercel CLI](https://vercel.com/docs/cli) with the `vercel dev` command.\n\nSee our [Function comparison table](https://vercel.com/docs/functions/serverless-functions/runtimes) to understand whether Edge or Serverless is best for your use-case.\n\nTo summarize, Edge Functions with Vite on Vercel:\n\n*   Offer cost savings by using fewer resources than Serverless Functions\n*   Can execute in the region nearest to your users or nearest to data sources they depend on, based on your configuration\n*   Have access to the geolocation and IP address of visitors, enabling location-based personalization\n\n[Learn more about Edge Functions](https://vercel.com/docs/functions/edge-functions)\n\nServerless Functions scale up and down their resource consumption based on traffic demands. This scaling prevents them from failing during peak hours, but keeps them from running up high costs during periods of low activity.\n\nIf your project uses [a Vite community plugin](#using-vite-community-plugins), such as [`vite-plugin-ssr`](https://vite-plugin-ssr.com/), you should follow that plugin's documentation for using Serverless Functions.\n\nIf you're using a framework built on Vite, check that framework's official documentation or [our dedicated framework docs](https://vercel.com/docs/frameworks). Some frameworks built on Vite, such as [SvelteKit](https://vercel.com/docs/frameworks/sveltekit), support Serverless Functions natively. We recommend using that framework's method for implementing Serverless Functions.\n\nIf you're not using a framework or plugin that supports Serverless Functions, you can still use them in your project by creating routes in an `api` directory at the root of your project.\n\nSee [our Edge Functions section](#edge-functions) to learn how to deploy your routes as Edge Functions instead.\n\nThe following example demonstrates a basic Serverless Function defined in an `api` directory:\n\n```\nimport type { VercelRequest, VercelResponse } from '@vercel/node';\n \nexport default function handler(\n  request: VercelRequest,\n  response: VercelResponse,\n) {\n  response.status(200).json({\n    body: request.body,\n    query: request.query,\n    cookies: request.cookies,\n  });\n}\n```\n\nSee our [Function comparison table](https://vercel.com/docs/functions/serverless-functions/runtimes) to understand whether Edge or Serverless is best for your use-case.\n\nTo summarize, Serverless Functions on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Support standard [Web APIs](https://developer.mozilla.org/docs/Web/API), such as `URLPattern`, `Response`, and more\n\n[Learn more about Serverless Functions](https://vercel.com/docs/functions/serverless-functions)\n\nServer-Side Rendering (SSR) allows you to render pages dynamically on the server. This is useful for pages where the rendered data needs to be unique on every request. For example, checking authentication or looking at the location of an incoming request.\n\nVite exposes [a low-level API for implementing SSR](https://vitejs.dev/guide/ssr.html#server-side-rendering), but in most cases, we recommend [using a Vite community plugin](#using-vite-community-plugins).\n\nSee [the SSR section of Vite's plugin repo](https://github.com/vitejs/awesome-vite#ssr) for a more comprehensive list of SSR plugins.\n\nTo summarize, SSR with Vite on Vercel:\n\n*   Scales to zero when not in use\n*   Scales automatically with traffic increases\n*   Has zero-configuration support for [`Cache-Control`](https://vercel.com/docs/edge-network/caching) headers, including `stale-while-revalidate`\n\n[Learn more about SSR](https://vitejs.dev/guide/ssr.html)\n\nIf your Vite app is [configured to deploy as a Single Page Application (SPA)](https://vitejs.dev/config/shared-options.html#apptype), deep linking won't work out of the box.\n\nTo enable deep linking in SPA Vite apps, create a `vercel.json` file at the root of your project, and add the following code:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/(.*)\",\n      \"destination\": \"/index.html\"\n    }\n  ]\n}\n```\n\nDeploying your app in Multi-Page App mode is recommended for production builds.\n\nLearn more about [Mutli-Page App mode](https://vitejs.dev/guide/build.html#multi-page-app) in the Vite docs.\n\nSee [our Frameworks documentation page](https://vercel.com/docs/frameworks) to learn about the benefits available to all frameworks when you deploy on Vercel.\n\nLearn more about deploying Vite projects on Vercel with the following resources:",
  "title": "Vite on Vercel",
  "description": "Learn how to use Vercel's features with Vite.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/runtimes",
  "markdown": "# Choosing a Runtime\n\nVercel supports multiple runtimes for your functions. Each runtime has its own set of libraries, APIs, and functionality that provides different trade-offs and benefits.\n\nRuntimes transform your source code into [Functions](https://vercel.com/docs/functions), which are served by our [Edge Network](https://vercel.com/docs/edge-network/overview).\n\nRuntime configuration is usually only necessary when you want to use the Edge runtime.\n\nVercel supports these official runtimes:\n\n| Runtime | Description |\n| --- | --- |\n| [Node.js](https://vercel.com/docs/functions/runtimes/node-js) | The Node.js runtime takes an entrypoint of a Node.js function, builds its dependencies (if any) and bundles them into a Serverless Function. |\n| [Edge](https://vercel.com/docs/functions/edge-functions/edge-runtime) | The Edge runtime is a lightweight JavaScript runtime that exposes a set of Web Standard APIs that make sense on the server. |\n| [Go](https://vercel.com/docs/functions/runtimes/go) | The Go runtime takes in a Go program that defines a singular HTTP handler and outputs it as a Serverless Function. |\n| [Python](https://vercel.com/docs/functions/runtimes/python) | The Python runtime takes in a Python program that defines a singular HTTP handler and outputs it as a Serverless Function. |\n| [Ruby](https://vercel.com/docs/functions/runtimes/ruby) | The Ruby runtime takes in a Ruby program that defines a singular HTTP handler and outputs it as a Serverless Function. |\n\nIf you would like to use a language that Vercel does not support by default, you can use a community runtime by setting the [`functions` property](https://vercel.com/docs/projects/project-configuration#functions) in `vercel.json`. For more information on configuring other runtimes, see [Configuring your function runtime](https://vercel.com/docs/functions/configuring-functions/runtime#other-runtimes).\n\nThe following community runtimes are recommended by Vercel:\n\nYou can create a community runtime by using the [Runtime API](https://github.com/vercel/vercel/blob/main/DEVELOPING_A_RUNTIME.md). Alternatively, you can use the [Build Output API](https://vercel.com/docs/build-output-api/v3).\n\nA runtime can retain an archive of up to 100 MB of the filesystem at build time. The cache key is generated as a combination of:\n\n*   Project name\n*   [Team ID](https://vercel.com/docs/accounts/create-a-team#find-your-team-id) or User ID\n*   Entrypoint path (e.g., `api/users/index.go`)\n*   Runtime identifier including version (e.g.: `@vercel/go@0.0.1`)\n\nThe cache will be invalidated if any of those items changes. You can bypass the cache by running `vercel -f`.\n\nWhen using functions on Vercel, you can choose what runtime you want to use:\n\n*   [Node.js (Serverless)](#node.js)\n*   [Edge](#edge)\n*   [Go, Python, Ruby](https://vercel.com/docs/functions/runtimes) - These runtimes are available in Beta for use with [Serverless Functions](https://vercel.com/docs/functions).\n\nUsually, when writing TypeScript or JavaScript functions, you'll be deciding between the Node.js or Edge runtime. The following sections provide information on the trade-offs and benefits of each.\n\n[Node.js](https://vercel.com/docs/functions/runtimes/node-js)\\-powered functions are suited to computationally intense or large functions and provide benefits like:\n\n*   More RAM and CPU power – For computationally intense workloads, or functions that have bundles up to 250 MB in size, this runtime is ideal\n*   Complete Node.js compatibility - The Node.js runtime offers access to all Node.js APIs, making it a powerful tool for many applications, although it may take them longer to boot than those using the Edge runtime\n\nIn our documentation and this guide, we mention **Serverless Functions**. These are [Node.js](https://vercel.com/docs/functions/runtimes/node-js) \\-powered Vercel Functions. To learn how to implement these functions, see the [quickstart](https://vercel.com/docs/functions/quickstart) .\n\n[Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime)\\-powered functions can be a cost-effective option and provide benefits like:\n\n*   Lightweight with a slim runtime - With a smaller API surface area and using V8 isolates, Edge runtime-powered functions have a slim runtime. However, only a subset of Node.js APIs are exposed\n*   Globally distributed by default – Vercel deploys all Edge Functions globally across its Edge Network, which means your site's visitors will get API responses from data centers geographically near them, typically reducing the overall response time\n*   Pricing is based on compute time – You're charged for time processing any requests and not for your function is fetching data. This is ideal for querying databases or AI services that may have longer request times\n\nResponses from Edge Functions can be _cached_ and _streamed_ in real time.\n\nIn our documentation and this guide, we mention **Edge Functions**. These are [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) \\-powered Vercel Functions. To learn how to implement these functions, see the [quickstart](https://vercel.com/docs/functions/edge-functions/quickstart) .\n\nRuntime is the environment in which your functions execute. Vercel supports [several runtimes](https://vercel.com/docs/functions/runtimes) for Serverless Functions ([Node.js](https://vercel.com/docs/functions/runtimes/node-js), [Go](https://vercel.com/docs/functions/runtimes/go), [Ruby](https://vercel.com/docs/functions/runtimes/ruby), [Python](https://vercel.com/docs/functions/runtimes/python)), while Edge Functions use the lightweight [Edge](https://vercel.com/docs/functions/edge-functions/edge-runtime) runtime.\n\nThis means that with Serverless Functions you have access to all Node.js APIs. With Edge Functions you get access to a subset of the most important browser APIs.\n\nLocation refers to where your functions are executed. Serverless Functions are region-first, while Edge Functions are executed close to the end-users across Vercel's global network.\n\nWhen you deploy Edge Functions, there are considerations you need to make about where it's deployed and executes. Edge Functions are executed globally and in a region close to the user's request. However, if your [data source](https://vercel.com/docs/storage#locate-your-data-close-to-your-functions) is geographically far from this request, any response will be slow. Because of this you can opt to [execute your function closer to your data source](https://vercel.com/docs/functions/configuring-functions/region).\n\nUsers on Enterprise plans can [deploy Serverless Functions](https://vercel.com/docs/functions/configuring-functions/region#set-multiple-regions) to multiple regions. On non-Enterprise plans, deploying to multiple regions will fail before entering the [build step](https://vercel.com/docs/deployments/configure-a-build). Users on any plan can deploy Edge Functions to multiple regions.\n\nVercel's [failover mode](https://vercel.com/docs/security#failover-strategy) refers to the system's behavior when a function fails to execute because of data center downtime.\n\nVercel provides [redundancy](https://vercel.com/docs/edge-network/regions#outage-resiliency) and automatic failover for Edge Functions to ensure high availability. For Serverless Functions, you can use the [`functionFailoverRegions` configuration](https://vercel.com/docs/projects/project-configuration#functionfailoverregions) in your `vercel.json` file to specify which regions the function should automatically failover to.\n\nThe concurrency model on Vercel refers to how many instances of your [functions](https://vercel.com/docs/functions) can run simultaneously. All functions on Vercel scale automatically based on demand to manage increased traffic loads.\n\nWith automatic concurrency scaling, your Vercel Functions can scale to a maximum of 30,000 on Pro or 100,000 on Enterprise, maintaining optimal performance during traffic surges. The scaling is based on the [burst concurrency limit](#burst-concurrency-limits) of 1000 concurrent executions per 10 seconds, per region. Additionally, Enterprise customers can purchase extended concurrency.\n\nVercel's infrastructure monitors your usage and preemptively adjusts the concurrency limit to cater to growing traffic, allowing your applications to scale without your intervention.\n\nAutomatic concurrency scaling is available on [all plans](https://vercel.com/docs/accounts/plans).\n\nBurst concurrency refers to Vercel's ability to temporarily handle a sudden influx of traffic by allowing a higher concurrency limit.\n\nUpon detecting a traffic spike, Vercel temporarily increases the concurrency limit to accommodate the additional load. The initial increase allows for a maximum of 1000 concurrent executions per 10 seconds. After the traffic burst subsides, the concurrency limit gradually returns to its previous state, ensuring a smooth scaling experience.\n\nThe scaling process may take several minutes during traffic surges, especially substantial ones. While this delay aligns with natural traffic curves to minimize potential impact on your application's performance, it's advisable to monitor the scaling process for optimal operation.\n\nYou can monitor burst concurrency events using [Log Drains](https://vercel.com/docs/observability/log-drains), or [Runtime Logs](https://vercel.com/docs/observability/runtime-logs) to help you understand and optimize your application's performance.\n\nIf you exceed the limit, a [`429 FUNCTION_RATE_LIMIT`](https://vercel.com/docs/errors/FUNCTION_RATE_LIMIT) error will trigger. Alternatively, you can explore [Edge Functions](https://vercel.com/docs/functions/runtimes#edge), which do not have concurrency limits.\n\nIn Vercel, the isolation boundary refers to the separation of individual instances of a function to ensure they don't interfere with each other. This provides a secure execution environment for each function.\n\nWith traditional serverless infrastructure, each function uses a microVM for isolation, which provides strong security but also makes them slower to start and more resource intensive. As the Edge runtime is built on the [V8 engine](https://developers.google.com/apps-script/guides/v8-runtime), it uses V8 isolates to separate just the runtime context, allowing for quick startup times and high performance.\n\nFilesystem support refers to a function's ability to read and write to the filesystem. Serverless Functions have a read-only filesystem with writable `/tmp` scratch space up to 500 MB. Edge Functions do not have filesystem access due to their ephemeral nature.\n\nServerless Functions are archived when they are not invoked:\n\nArchived functions will be unarchived when they're invoked, which can make the initial [cold start](https://vercel.com/docs/infrastructure/compute#cold-and-hot-boots) time at least 1 second longer than usual.\n\nEdge Functions are not archived.\n\nWhen using [Next.js](https://vercel.com/docs/frameworks/nextjs) or [SvelteKit](https://vercel.com/docs/frameworks/sveltekit) on Vercel, dynamic code (APIs, server-rendered pages, or dynamic `fetch` requests) will be bundled into the fewest number of Serverless Functions possible, to help reduce cold starts. Because of this, it's unlikely that you'll hit the limit of 12 bundled Serverless Functions per deployment.\n\nWhen using other [frameworks](https://vercel.com/docs/frameworks), or Serverless Functions [directly without a framework](https://vercel.com/docs/functions), every API maps directly to one Serverless Function. For example, having five files inside `api/` would create five Serverless Functions. For Hobby, this approach is limited to 12 Serverless Functions per deployment.\n\n|     | Node.js runtime (and more) | Edge runtime |\n| --- | --- | --- |\n| [Max size](#bundle-size-limits) | 250 MB | Hobby: 1 MB, Pro: 2 MB, Ent: 4 MB |\n| [Max duration](#max-duration) | Hobby: 10s (default) - [configurable](https://vercel.com/docs/functions/configuring-functions/duration) up to 60s, Pro: 15s (default) - [configurable](https://vercel.com/docs/functions/configuring-functions/duration) up to 300s, Ent: 15s (default) - [configurable](https://vercel.com/docs/functions/configuring-functions/duration) up to 900s | 25s (to begin returning a response, but can continue [streaming](https://vercel.com/docs/functions/streaming) data.) |\n| [Max memory](#memory-size-limits) | Hobby: 1024 MB, Pro and Ent: 3009 MB | 128 MB |\n| [Max environment variable size](#environment-variables) | 64 KB | 64 KB |\n| [Max request body size](#request-body-size) | 4.5 MB | 4 MB |\n\nVercel places restrictions on the maximum size of the deployment bundle for functions to ensure that they execute in a timely manner.\n\nFor Serverless Functions, the maximum uncompressed size is 250 MB including layers which are automatically used depending on [runtimes](#runtime). These limits are [enforced by AWS](https://docs.aws.amazon.com/lambda/latest/dg/gettingstarted-limits.html).\n\nYou can use [`includeFiles` and `excludeFiles`](https://vercel.com/docs/projects/project-configuration#functions) to specify items which may affect the function size, however the limits cannot be configured. These configurations are not supported in Next.js, instead use [`outputFileTracingIncludes`](https://nextjs.org/docs/app/api-reference/next-config-js/output).\n\nEdge Functions have plan-dependent size limits. This is the total, compressed size of your function and its dependencies after bundling.\n\nThis refers to the longest time a function can process an HTTP request before responding.\n\nFunctions using the Edge runtime do not have a maximum duration. They must begin sending a response within 25 seconds and can continue [streaming](https://vercel.com/docs/functions/streaming) a response beyond that time.\n\nWhile Serverless Functions have a default duration, this duration can be extended using the [maxDuration config](https://vercel.com/docs/functions/configuring-functions/duration). If a Serverless Function doesn't respond within the duration, a 504 error code ([`FUNCTION_INVOCATION_TIMEOUT`](https://vercel.com/docs/errors/EDGE_FUNCTION_INVOCATION_TIMEOUT)) is returned.\n\nServerless Functions have the following defaults and maximum limits for the duration of a function:\n\n|     | Default | Maximum |\n| --- | --- | --- |\n| Hobby | 10s | 60s |\n| Pro | 15s | 300s |\n| Enterprise | 15s | 900s |\n\nServerless Functions can use more memory and larger CPUs than Edge Functions. They have the following defaults and maximum limits:\n\n|     | Default | Maximum |\n| --- | --- | --- |\n| Hobby | 1024 MB / 0.6 vCPU | 1024 MB / 0.6 vCPU |\n| Pro /Enterprise | 1769 MB / 1 vCPU | 3009 MB / 1.7 vCPU |\n\nUsers on Pro and Enterprise plans can [configure the default memory size](https://vercel.com/docs/functions/configuring-functions/memory#setting-your-default-function-memory-/-cpu-size) for all functions in the dashboard, or on a [per-function basis](https://vercel.com/docs/functions/configuring-functions/memory#setting-custom-function-memory-size) in your `vercel.json`.\n\nEdge Functions have a fixed memory limit. When you exceeds this limit, the execution will be aborted and we will return a `502` error.\n\nThe maximum size for a Function includes your JavaScript code, imported libraries and files (such as fonts), and all files bundled in the function.\n\nIf you reach the limit, make sure the code you are importing in your function is used and is not too heavy. You can use a package size checker tool like [bundle](https://bundle.js.org/) to check the size of a package and search for a smaller alternative.\n\nYou can use [environment variables](https://vercel.com/docs/projects/environment-variables#environment-variable-size) to manage dynamic values and sensitive information affecting the operation of your functions. Vercel allows developers to define these variables either at deployment or during runtime.\n\nYou can use a total of 64 KB in environments variables per-deployment on Vercel. This limit is for all variables combined, and so no single variable can be larger than 64 KB.\n\nIn Vercel, the request body size is the maximum amount of data that can be included in the body of a request to a function.\n\nThe maximum payload size for the request body or the response body of a Serverless Function is 4.5 MB. If a Serverless Function receives a payload in excess of the limit it will return an error [413: FUNCTION\\_PAYLOAD\\_TOO\\_LARGE](https://vercel.com/docs/errors/FUNCTION_PAYLOAD_TOO_LARGE). See [How do I bypass the 4.5MB body size limit of Vercel Serverless Functions](https://vercel.com/guides/how-to-bypass-vercel-body-size-limit-serverless-functions) for more information.\n\nEdge Functions have the following additional limits to the request size:\n\n| Name | Limit |\n| --- | --- |\n| Maximum URL length | 14 KB |\n| Maximum request body length | 4 MB |\n| Maximum number of request headers | 64  |\n| Maximum request headers length | 16 KB |\n\n|     | Node.js runtime (and more) | Edge runtime |\n| --- | --- | --- |\n| Geolocation data | [Yes](https://vercel.com/docs/edge-network/headers#x-vercel-ip-country) | [Yes](https://vercel.com/docs/functions/edge-functions/vercel-edge-package#geolocation) |\n| Access request headers | Yes | Yes |\n| Cache responses | [Yes](https://vercel.com/docs/edge-network/caching#using-vercel-functions) | [Yes](https://vercel.com/docs/edge-network/caching#using-vercel-functions) |\n\nYou can learn more about API support and writing functions:\n\n*   Serverless Functions: [Node.js runtime](https://vercel.com/docs/functions/runtimes/node-js)\n*   Edge Functions: [Edge Functions API](https://vercel.com/docs/functions/edge-functions/edge-functions-api)\n\nEdge Functions are neither Node.js nor browser applications, which means they don't have access to all browser and Node.js APIs. Currently, the Edge runtime offers [a subset of browser APIs](https://vercel.com/docs/functions/runtimes/edge-runtime) and [some Node.js APIs](https://vercel.com/docs/functions/runtimes/edge-runtime#unsupported-apis).\n\nThere are some restrictions when writing Edge Functions:\n\n*   Use ES modules\n*   Most libraries which use Node.js APIs as dependencies can't be used in Edge Functions yet. See [available APIs](https://vercel.com/docs/functions/edge-functions/edge-runtime#supported-apis) for a full list\n*   Dynamic code execution (such as `eval`) is not allowed for security reasons. You must ensure libraries used in your Edge Functions don't rely on dynamic code execution because it leads to a runtime error. For example, the following APIs cannot be used:\n\n*   You cannot set non-standard port numbers in the fetch URL (e.g., `https://example.com:8080`). Only `80` and `443` are allowed. If you set a non-standard port number, the port number is ignored, and the request is sent to port `80` for `http://` URL, or port `443` for `https://` URL.\n*   The maximum number of requests from `fetch` API is 950 per Edge Function invocation.\n*   The maximum number of open connections is 6.\n    *   Each function invocation can have up to 6 open connections. For example, if you try to send 10 simultaneous fetch requests, only 6 of them can be processed at a time. The remaining requests are put into a waiting queue and will be processed accordingly as those in-flight requests are completed.\n*   If in-flight requests have been waiting for a response for more than 15 seconds with no active reads/writes, the runtime may cancel them based on its LRU (Least Recently Used) logic.\n    *   If you attempt to use a canceled connection, the `Network connection lost.` exception will be thrown.\n    *   You can `catch` on the `fetch` promise to handle this exception gracefully (e.g. with retries). Additionally, you can use the [`AbortController`](https://developer.mozilla.org/en-US/docs/Web/API/AbortController) API to set timeouts for `fetch` requests.\n\nTo avoid CPU timing attacks, like Spectre, date and time functionality is not generally available. In particular, the time returned from `Date.now()` only advances after I/O operations, like `fetch`. For example:\n\n```\nexport const runtime = 'edge';\n \nexport async function GET(request: Request) {\n  const currentDate = () => new Date().toISOString();\n  for (let i = 0; i < 500; i++) {\n    console.log(`Current Date before fetch: ${currentDate()}`); // Prints the same value 1000 times.\n  }\n \n  await fetch('https://worldtimeapi.org/api/timezone/Etc/UTC');\n  console.log(`Current Date after fetch: ${currentDate()}`); // Prints the new time\n \n  return Response.json({ date: currentDate() });\n}\n```\n\n|     | Node.js runtime (and more) | Edge runtime |\n| --- | --- | --- |\n| [Billing](#billing-model) | Pay for wall-clock time | Pay for CPU time |\n\nThe Hobby plan offers functions for free, within [limits](https://vercel.com/docs/limits/overview). The Pro plan extends these limits, billing Serverless Functions on [wall-clock time](https://vercel.com/guides/what-are-gb-hrs-for-serverless-function-execution) and Edge runtime-powered Functions on [CPU time](https://vercel.com/docs/limits/usage#execution-units).\n\nThis aligns with the intended usage of each: Serverless for intermittent heavy tasks, and Edge for continuous low-latency tasks. The Edge runtime is particularly well-suited for querying databases or other backends, like an AI service, since you will not be billed for the time making the request, only the time processing the response.\n\nSee [Usage and Pricing](https://vercel.com/docs/functions/usage-and-pricing) for more information.\n\nEdge Middleware can use no more than 50 ms of CPU time on average.\n\nThis limitation refers to actual net CPU time, which is the time spent performing calculations, not the total elapsed execution or \"wall clock\" time. For example, when you are blocked talking to the network, the time spent waiting for a response does _not_ count toward CPU time limitations.\n\n|     | Node.js runtime (and more) | Edge runtime |\n| --- | --- | --- |\n| [Secure Compute](#secure-compute) | Supported | Not Supported |\n| [Streaming](#streaming) | Supported, depending on the framework | Supported |\n| [Cron jobs](#cron-jobs) | Supported | Supported |\n| [Vercel Storage](#storage) | Supported | Supported |\n| [Edge Config](#edge-config) | Supported only in Node.js runtime | Supported |\n| [OTEL](#otel) | Supported | Not supported |\n\nVercel's [Secure Compute](https://vercel.com/docs/security/secure-compute) feature offers enhanced security for your Serverless Functions, including dedicated IP addresses and VPN options. This can be particularly important for functions that handle sensitive data.\n\nStreaming refers to the ability to send or receive data in a continuous flow.\n\nBoth the Node.js and the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) support streaming.\n\nIn addition, Serverless Functions have a [maximum duration](https://vercel.com/docs/functions/configuring-functions/duration), meaning that it isn't possible to stream indefinitely. Edge Functions do not have a maximum duration, but you must send an _initial_ response within 25 seconds. You can continue [streaming a response](https://vercel.com/docs/functions/streaming) beyond that time.\n\n[Cron jobs](https://vercel.com/docs/cron-jobs) are time-based scheduling tools used to automate repetitive tasks. When a cron job is triggered through the [cron expression](https://vercel.com/docs/cron-jobs#cron-expressions), it calls a Vercel Function.\n\nFrom your function, you can communicate with a choice of [data stores](https://vercel.com/docs/storage). To ensure low-latency responses, it's crucial to have compute close to your databases. Always deploy your databases in regions closest to your functions to avoid long network roundtrips. For more information, see our [best practices](https://vercel.com/docs/storage#locate-your-data-close-to-your-functions) documentation.\n\nAn [Edge Config](https://vercel.com/docs/storage/edge-config) is a global data store that enables experimentation with feature flags, A/B testing, critical redirects, and IP blocking. It enables you to read data at the edge without querying an external database or hitting upstream servers.\n\nVercel has an [OpenTelemetry (OTEL) collector](https://vercel.com/docs/observability/otel-overview) that allows you to send OTEL traces from your Serverless Functions to application performance monitoring (APM) vendors such as New Relic.",
  "title": "Choosing a Runtime",
  "description": "Runtimes transform your source code into Functions, which are served by our Edge Network. Learn about the official runtimes supported by Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/git",
  "markdown": "# Deploying Git Repositories with Vercel\n\nVercel allows for automatic deployments on every branch push and merges onto the [production branch](#production-branch) of your [GitHub](https://vercel.com/docs/deployments/git/vercel-for-github), [GitLab](https://vercel.com/docs/deployments/git/vercel-for-gitlab), [Bitbucket](https://vercel.com/docs/deployments/git/vercel-for-bitbucket) and [Azure DevOps Pipelines](https://vercel.com/docs/deployments/git/vercel-for-azure-pipelines) projects.\n\nUsing Git with Vercel provides the following benefits:\n\n*   [Preview deployments](https://vercel.com/docs/deployments/preview-deployments#) for every push.\n*   [Production deployments](https://vercel.com/docs/deployments/environments#production) for the most recent changes from the [production branch](#production-branch).\n*   Instant rollbacks when reverting changes assigned to a custom domain.\n\nWhen working with Git, have a branch that works as your production branch, often called `main`. After you create a pull request (PR) to that branch, Vercel creates a unique deployment you can use to preview any changes. Once you are happy with the changes, you can merge your PR into the `main` branch, and Vercel will create a production deployment.\n\nYou can choose to use a different branch as the [production branch](#production-branch).\n\nIf your provider is not listed here, you can also use the [Vercel CLI to deploy](https://vercel.com/guides/using-vercel-cli-for-custom-workflows) with any git provider.\n\nSetting up your GitHub, GitLab, or Bitbucket repository on Vercel is only a matter of clicking the [\"New Project\"](https://vercel.com/new) button on the top right of your dashboard and following the steps.\n\nAfter clicking it, you'll be presented with a list of Git repositories that the Git account you've signed up with has write access to.\n\nTo select a different Git namespace or provider, you can use the dropdown list on the top left of the section.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Findex%2Frepo-list-light.png&w=1200&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Findex%2Frepo-list-dark.png&w=1200&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA list of Git repositories your Git account has access to.\n\nYou can also:\n\n*   Select a third-party Git repository by clicking on [Import Third-Party Git Repository](https://vercel.com/new/git/third-party) on the bottom of the section.\n*   Select a pre-built solution from the section on the right.\n\nAfter you've selected the Git repository or template you want to use for your new project, you'll be taken to a page where you can configure your project before it's deployed.\n\nYou can:\n\n*   Customize the project's name\n*   Select [a Framework Preset](https://vercel.com/docs/deployments/configure-a-build#framework-preset)\n*   Select the root directory of your project\n*   Configure [Build Output Settings](https://vercel.com/docs/deployments/configure-a-build#build-command)\n*   Set [Environment Variables](https://vercel.com/docs/projects/environment-variables)\n\nWhen your settings are correct, you can select the Deploy button to initiate a deployment.\n\nYou can initiate new deployments directly from the Vercel Dashboard using a Git reference. This approach is ideal when automatic deployments are interrupted or unavailable.\n\nTo create a deployment from a Git reference:\n\n1.  From your [dashboard](https://vercel.com/dashboard), select the project you'd like to create a deployment for\n    \n2.  Select the Deployments tab. Once on the Deployments page, select the Create Deployment button\n    \n3.  Depending on how you would like to deploy, enter the following:\n    \n    *   Targeted Deployments: Provide the unique ID (SHA) of a commit to build a deployment based on that specific commit\n    *   Branch-Based Deployments: Provide the full name of a branch when you want to build the most recent changes from that specific branch (for example, `https://github.com/vercel/examples/tree/deploy`)\n4.  Select Create Deployment. Vercel will build and deploy your commit or branch as usual\n    \n\nWhen the same commit appears in multiple branches, Vercel will prompt you to choose the appropriate branch configuration. This choice is crucial as it affects settings like environment variables linked to each branch.\n\nAs an additional security measure, commits on private Git repositories (and commits of forks that are targeting those Git repositories) will only be deployed if the commit author also has access to the respective project on Vercel.\n\nDepending on whether the owner of the connected Vercel project is a Hobby or a Pro team, the behavior changes as mentioned in the sections below.\n\nThis only applies to commit authors on GitHub organizations, GitLab groups and non-personal Bitbucket workspaces. It does not apply to collaborators on personal Git accounts.\n\nFor public Git repositories, [a different behavior](https://vercel.com/docs/deployments/git#deploying-forks-of-public-git-repositories) applies.\n\nTo deploy commits under a Vercel Pro team, the commit author must be a member of the team containing the Vercel project connected to the Git repository.\n\nMembership is verified by finding the Hobby account associated with the commit author through [Login Connections](https://vercel.com/docs/accounts/create-an-account#login-methods-and-connections). If a Hobby account is found, it checks if the account is a member of the Pro team.\n\nIf the commit author is not a member, the deployment will be prevented, and the commit author can request to join the team. The team owners will be notified and can accept or decline the membership request on the [Members](https://vercel.com/docs/accounts/team-members-and-roles) page in the team Settings.\n\nIf the request is declined, the commit will remain undeployed. If the commit author is accepted as a member of the Pro team, their most recent commit will automatically resume deployment to Vercel.\n\nCommit authors are automatically considered part of the Pro team on Vercel if one of the existing members has connected their Hobby account on Vercel with the Git account that created the commit.\n\nTo deploy commits under a Hobby account, the commit author must be the owner of the Hobby account containing the Vercel project connected to the Git repository. This is verified by comparing the [Login Connections](https://vercel.com/docs/accounts/create-an-account#login-methods-and-connections) defined in the Hobby account with the commit author.\n\nIf the commit author is not the owner of the destination Hobby account, the deployment will be prevented, and a recommendation to transfer the project to a Pro team will be displayed on the Git provider.\n\nAfter transferring the project to a Pro team, commit authors can be added as members of that team. The behavior mentioned in the [section above](https://vercel.com/docs/deployments/git#using-pro-teams) will then apply to them whenever they commit.\n\nWhen a public repository is forked, commits from it will usually deploy automatically. However, when you receive a pull request from a fork of your repository that includes a change to the [`vercel.json`](https://vercel.com/docs/cli) file or the project has [Environment Variables](https://vercel.com/docs/projects/environment-variables), Vercel will require authorization from you or a [team member](https://vercel.com/docs/accounts/team-members-and-roles) to deploy the pull request. This is a security measure that protects you from leaking sensitive project information. A link to authorize the deployment will be posted as a comment on the Pull Request.\n\nThe authorization step will be skipped if the commit author is already a [team member](https://vercel.com/docs/accounts/team-members-and-roles) on Vercel.\n\nA [Production deployment](https://vercel.com/docs/deployments/environments#production) will be created each time you merge to the production branch.\n\nWhen you create a new Project from a Git repository on Vercel, the Production Branch will be selected in the following order:\n\n*   The `main` branch.\n*   If not present, the `master` branch ([more details](https://vercel.com/blog/custom-production-branch#a-note-on-the-master-branch)).\n*   \\[Only for Bitbucket\\] If not present, the \"production branch\" setting of your Git repository is used.\n*   If not present, the Git repository's default branch.\n\nOn the Git page in the Project Settings, you can change your production branch.\n\nWhenever a new commit is then pushed to the branch you configured here, a [production deployment](https://vercel.com/docs/deployments/environments#production) will be created for you.\n\nWhile the production branch (mentioned above) is a single Git branch that contains the code that is served to your visitors, Preview Branches are all the Git branches that are not the production branch.\n\nFor example, if your production branch is `main`, then all the Git branches that are not `main` are considered Preview Branches. That means there can be many Preview Branches, but only a single production branch.\n\nPreview Branches, like the name already suggests, are used for previewing changes before presenting them to your visitors (merging them into production).\n\nBy default, every Preview Branch automatically receives its own Domain similar to the one shown below, whenever a commit is pushed to it:\n\n```\n<project-name>-git-<branch-name>-<scope-slug>.vercel.app;\n```\n\nAdditionally, any Environment Variables defined for the [Preview Environment](https://vercel.com/docs/projects/environment-variables#preview-environment-variables) are applied.\n\nYou can also receive feedback from team members and other collaborators through [Vercel's Comments feature](https://vercel.com/docs/workflow-collaboration/comments). Comments can be tracked and resolved from within a PR on GitHub.\n\nOnce you're happy with your changes, you would then merge the respective Preview Branch into your production branch.\n\nFor most use cases, the default Preview behavior mentioned above is enough.\n\nIf you'd like your changes to pass through multiple phases of previewing instead of just one, you can accomplish it like so:\n\nDomains and Environment Variables can both be assigned to specific Preview Branches on their individual settings pages. For Domains, it can be done [like this](https://vercel.com/docs/projects/domains/assign-domain-to-a-git-branch) and for Environment Variables [like this](https://vercel.com/docs/projects/environment-variables#preview-environment-variables).\n\nFor example, you could create a phase called \"Staging\" where you can accumulate Preview changes before merging them onto production by following these steps:\n\n1.  Create a Git branch called \"staging\" in your Git repository.\n2.  Add a Domain of your choice (like \"staging.example.com\") on your Vercel project and assign it to the \"staging\" Git branch [like this](https://vercel.com/docs/projects/domains/assign-domain-to-a-git-branch).\n3.  Add Environment Variables that you'd like to use for your new Staging phase on your Vercel project [like this](https://vercel.com/docs/projects/environment-variables#preview-environment-variables).\n\nAfterwards, you can push to the \"staging\" Git branch to update your Staging phase and it will automatically receive the Domain and Environment Variables you've defined.\n\nOnce you're happy with your changes, you would then merge the respective Preview Branch into your production branch. However, unlike with the default Preview behavior, you'd then keep the branch around instead of deleting it, so that you can push to it again in the future.",
  "title": "Deploying Git Repositories with Vercel",
  "description": "Vercel allows for automatic deployments on every branch push and merges onto the production branch of your GitHub, GitLab, and Bitbucket projects.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/preview-deployments",
  "markdown": "# Preview Deployments Overview\n\nPreview Deployments allow you to preview changes to your app in a live deployment without merging those changes to your Git project's production branch. [Members of your team](https://vercel.com/docs/accounts/create-a-team) and people you share your previews with can give feedback on these changes with [Comments](#comments), if enabled.\n\nVercel creates a new preview deployment by default when:\n\n*   You commit changes to a connected Git branch that is not the production branch (e.g. `main`)\n*   You create a deployment using [our CLI's `vercel` command](https://vercel.com/docs/cli/deploy#usage)\n\nIf you'd rather not generate Preview Deployments, [you can turn them off](https://vercel.com/docs/deployments/preview-deployments#turning-off-preview-deployments).\n\nAll Preview Deployments come with the Vercel Toolbar, which enables your team to:\n\n*   Leave feedback in your production environment with [Comments](https://vercel.com/docs/workflow-collaboration/comments)\n*   [Navigate to useful dashboard pages](#using-the-command-menu)\n*   [Share your Deployment](#sharing-deployments)\n\nSee [our Vercel Toolbar docs](https://vercel.com/docs/workflow-collaboration/vercel-toolbar) to learn more.\n\nIf you have created a pull or merge request when using [Git](https://vercel.com/docs/deployments/git), the [generated preview URL](https://vercel.com/docs/deployments/generated-urls) will be available as a comment from the Vercel bot. This URL will always reflect the latest deployment changes.\n\nAlternatively, in your [dashboard](https://vercel.com/dashboard):\n\n1.  Select your project and select the Deployments tab\n2.  Filter by Preview deployments to show all commits to any non-production branches\n3.  Find your commit and select the URL under Domains. This URL will display only the changes relating to that deployment\n\nAll your Preview Deployments will have a Share button in the [Vercel Toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar), which can be used to share access for private preview URLs with all team members. To learn more, see [Sharing Deployments](https://vercel.com/docs/deployments/sharing-deployments).\n\nIf you're on an Enterprise team, you will be able to see who shared deployment URLs in your [audit logs](https://vercel.com/docs/observability/audit-log).\n\nYou can turn off Preview Deployments by using the \"[Ignore Build Step](https://vercel.com/docs/projects/overview#ignored-build-step)\" option. For example, using this command, you can tell Vercel to only build your `main` branch and ignore all other branches. If the command returns \"0\", the build is skipped. If, however, a code \"1\" or greater is returned, a new deployment is built. For more information on ignoring the build step, see [How do I use the \"Ignored Build Step\" field on Vercel?](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel).\n\nYou can receive feedback on your Preview Deployments from your team members and [people you share the Preview URL](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work#enable-or-disable-comments) with through the Comments feature.\n\nComments allow teams [and participants outside the team](https://vercel.com/docs/workflow-collaboration/comments/how-comments-work#enable-or-disable-comments) to give direct feedback on Preview Deployments. Comments can be added directly over the areas of your site that are relevant to the feedback, and discussion threads can continue within the Preview Deployment itself or [in an integrated Slack channel](https://vercel.com/docs/workflow-collaboration/comments/integrations#use-the-vercel-slack-beta-app).\n\n[Learn more in the Comments docs](https://vercel.com/docs/workflow-collaboration/comments).\n\nThe Vercel Toolbar is available by default in all Preview Deployments. Learn more about its features in [our Deployment docs](https://vercel.com/docs/deployments#using-the-command-menu).\n\nSince a Preview Deployment creates a new version of your site under a different domain, a search engine would consider it as a new website when crawling it.\n\nThis can have a negative impact on the ranking of your main site since crawlers are able to detect when content is duplicated across multiple domains and lower the ranking of your site when measuring the content quality.\n\nTo prevent that, the `X-Robots-Tag` HTTP header is automatically set to `noindex` for all Preview Deployments so that search engines do not accidentally index the Preview URLs.\n\nWhen a [custom domain is assigned to a Git branch](https://vercel.com/docs/projects/domains/assign-domain-to-a-git-branch), this behavior is prevented. In that case, the `X-Robots-Tag` header is not set.\n\nTo learn more about the `X-Robots-Tag`, review this [Google Search Reference](https://developers.google.com/search/reference/robots_meta_tag#xrobotstag).",
  "title": "Preview Deployments Overview",
  "description": "Preview Deployments allow you to preview changes to your app in a live deployment without merging those changes to your Git project's production branch.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/skew-protection",
  "markdown": "# Skew Protection\n\n[Version skew](https://www.industrialempathy.com/posts/version-skew/) occurs when different versions of your application run on client and server, causing application errors and other unexpected behavior. For example, imagine your newest deployment modifies the data structure by adding a required field to a user's profile. Older clients wouldn't expect this new field, leading to errors when they submit it.\n\nVercel's Skew Protection resolves this problem at the platform and framework layer by using [version locking](https://www.industrialempathy.com/posts/version-skew/#version-locking), which ensures client and server use the exact same version. In our example, outdated clients continue to communicate with servers that understand the old data structure, while updated clients use the most recent deployment.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687260660%2Ffront%2Fdocs%2Fdeployments-basics%2Fnested-layouts-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687260679%2Ffront%2Fdocs%2Fdeployments-basics%2Fnested-layouts-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nBy implementing Skew Protection, you can reduce user-facing errors during new rollouts and boost developer productivity, minimizing concerns about API compatibility across versions.\n\nIf you are using one of the [supported frameworks](#supported-frameworks), you can enable Skew Protection in your project settings.\n\n1.  Select the project in the Vercel dashboard\n2.  Select the Settings tab in the top menu\n3.  Select the Advanced tab in the side menu\n4.  Scroll down to Skew Protection and enable the switch\n5.  For Enterprise Teams, you can also set a custom duration (see [limitations](#limitations))\n\n![A screenshot of the Skew Protection section containing an enabled/disabled toggle switch.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710448647%2Ffront%2Fdocs%2Fprojects%2Fskew-protection-light.jpg&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A screenshot of the Skew Protection section containing an enabled/disabled toggle switch.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710448647%2Ffront%2Fdocs%2Fprojects%2Fskew-protection-dark.jpg&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA screenshot of the Skew Protection section containing an enabled/disabled toggle switch.\n\nIn some cases, you may have problematic deployments you want to ensure no longer resolves requests from any other active clients.\n\nOnce you deploy a fix, you can Configure Skew Protection with the following:\n\n1.  Select the deployment that fixed the problem in the deployment list\n2.  Select the button (near the Visit button)\n3.  Click Configure Skew Protection\n4.  Click Save to apply the changes\n\nThis ensure that deployments created before the fixed deployment will no longer resolve requests from outdated clients.\n\n![A screenshot of the popover menu containing a menu item for Configure Skew Protection.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710448647%2Ffront%2Fdocs%2Fprojects%2Fconfigure-skew-protection-light.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A screenshot of the popover menu containing a menu item for Configure Skew Protection.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710448647%2Ffront%2Fdocs%2Fprojects%2Fconfigure-skew-protection-dark.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA screenshot of the popover menu containing a menu item for Configure Skew Protection.\n\nYou can observe how many requests are protected from version skew by visiting the [Monitoring](https://vercel.com/docs/observability/monitoring) page in the Vercel dashboard.\n\nFor example, on the `requests` event, filter where `skew_protection = 'active'`.\n\n![A screenshot of a query of requests filtered by active skew protection.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710448647%2Ffront%2Fdocs%2Fprojects%2Fskew-protection-monitoring-query-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A screenshot of a query of requests filtered by active skew protection.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710448647%2Ffront%2Fdocs%2Fprojects%2Fskew-protection-monitoring-query-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA screenshot of a query of requests filtered by active skew protection.\n\nSkew Protection is available with zero configuration when using the following frameworks:\n\n*   [Next.js](#skew-protection-with-next.js)\n*   [SvelteKit](#skew-protection-with-sveltekit)\n*   [Qwik](#skew-protection-with-qwik)\n*   Nuxt (coming soon)\n*   Astro (coming soon)\n\nOther frameworks can implement Skew Protection by checking if `VERCEL_SKEW_PROTECTION_ENABLED` has value `1` and then appending the value of `VERCEL_DEPLOYMENT_ID` to each request using one of the following options.\n\n*   `dpl` query string parameter:\n    \n    ```\n    const query =\n      process.env.VERCEL_SKEW_PROTECTION_ENABLED === '1'\n        ? `?dpl=${process.env.VERCEL_DEPLOYMENT_ID}`\n        : '';\n     \n    const res = await fetch(`/get${query}`);\n    ```\n    \n*   `x-deployment-id` header:\n    \n    ```\n    const headers =\n      process.env.VERCEL_SKEW_PROTECTION_ENABLED === '1'\n        ? { 'x-deployment-id': process.env.VERCEL_DEPLOYMENT_ID }\n        : {};\n     \n    const res = await fetch('/get', { headers });\n    ```\n    \n*   `__vdpl` cookie:\n    \n    ```\n    export default function handler(req, res) {\n      if (process.env.VERCEL_SKEW_PROTECTION_ENABLED === '1') {\n        res.setHeader('Set-Cookie', [\n          `__vdpl=${process.env.VERCEL_DEPLOYMENT_ID}; HttpOnly`,\n        ]);\n      }\n      res.end('<h1>Hello World</h1>');\n    }\n    ```\n    \n\nIf you are using Next.js 14.1.4 or newer, there is no additional configuration needed to [enable Skew Protection](#enable-skew-protection).\n\nOlder versions of Next.js require additional [`next.config.js`](https://nextjs.org/docs/app/api-reference/next-config-js) configuration.\n\n**View config for 13.4.7 to 14.1.3**  \n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    useDeploymentId: true,\n    // Optionally, use with Server Actions\n    useDeploymentIdServerActions: true,\n  },\n};\n \nmodule.exports = nextConfig;\n```\n\nThe `useDeploymentId` configuration enables Skew Protection for all framework-managed static file requests from your Next.js app such as for JavaScript and CSS files. You can also opt-into Skew Protection for [Next.js Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations) with `useDeploymentIdServerActions`.\n\nIf you are using SvelteKit, you will need to install `@sveltejs/adapter-vercel` version 5.2.0 or newer in order to [enable Skew Protection](#enable-skew-protection).\n\nOlder versions can be upgraded by running `npm i -D @sveltejs/adapter-vercel@latest`.\n\nIf you are using Qwik 1.5.3 or newer, there is no additional configuration needed to [enable Skew Protection](#enable-skew-protection).\n\nOlder versions can be upgraded by running `npm i @builder.io/qwik@latest`.\n\n*   Skew Protection is only available for Pro and Enterprise, not for Hobby accounts\n*   Skew Protection is enabled for 12 hours on Pro accounts and a custom duration on Enterprise accounts",
  "title": "Skew Protection",
  "description": "Learn how Vercel's Skew Protection ensures that the client and server stay in sync for any particular deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/build-output-api/v3/configuration",
  "markdown": "# Build Output Configuration\n\n`.vercel/output/config.json`\n\nSchema (as TypeScript):\n\n```\ntype Config = {\n  version: 3;\n  routes?: Route[];\n  images?: ImagesConfig;\n  wildcard?: WildcardConfig;\n  overrides?: OverrideConfig;\n  cache?: string[];\n  crons?: CronsConfig;\n};\n```\n\nConfig Types:\n\n*   [Route](#routes)\n*   [ImagesConfig](#images)\n*   [WildcardConfig](#wildcard)\n*   [OverrideConfig](#overrides)\n*   [CronsConfig](#crons)\n\nThe `config.json` file contains configuration information and metadata for a Deployment. The individual properties are described in greater detail in the sub-sections below.\n\nAt a minimum, a `config.json` file with a `\"version\"` property is _required_.\n\n`.vercel/output/config.json`\n\nThe `version` property indicates which version of the Build Output API has been implemented. The version described in this document is version `3`.\n\n`.vercel/output/config.json`\n\nThe `routes` property describes the routing rules that will be applied to the Deployment. It uses the same syntax as the [`routes` property of the `vercel.json` file](https://vercel.com/docs/projects/project-configuration#routes).\n\nRoutes may be used to point certain URL paths to others on your Deployment, attach response headers to paths, and various other routing-related use-cases.\n\n```\ntype Route = Source | Handler;\n```\n\n```\ntype Source = {\n  src: string;\n  dest?: string;\n  headers?: Record<string, string>;\n  methods?: string[];\n  continue?: boolean;\n  caseSensitive?: boolean;\n  check?: boolean;\n  status?: number;\n  has?: Array<HostHasField | HeaderHasField | CookieHasField | QueryHasField>;\n  missing?: Array<\n    HostHasField | HeaderHasField | CookieHasField | QueryHasField\n  >;\n  locale?: Locale;\n  middlewareRawSrc?: string[];\n  middlewarePath?: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| src | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A PCRE-compatible regular expression that matches each incoming pathname (excluding querystring). |\n| dest | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A destination pathname or full URL, including querystring, with the ability to embed capture groups as $1, $2, or named capture value $name. |\n| headers | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A set of headers to apply for responses. |\n| methods | [String\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A set of HTTP method types. If no method is provided, requests with any HTTP method will be a candidate for the route. |\n| continue | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A boolean to change matching behavior. If true, routing will continue even when the src is matched. |\n| caseSensitive | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Specifies whether or not the route `src` should match with case sensitivity. |\n| check | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | If `true`, the route triggers `handle: 'filesystem'` and `handle: 'rewrite'` |\n| status | [Number](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A status code to respond with. Can be used in tandem with Location: header to implement redirects. |\n| has | Array<HostHasField \\| HeaderHasField \\| CookieHasField \\| QueryHasField> | No  | Conditions of the HTTP request that must exist to apply the route. |\n| missing | Array<HostHasField \\| HeaderHasField \\| CookieHasField \\| QueryHasField> | No  | Conditions of the HTTP request that must NOT exist to match the route. |\n| locale | Locale | No  | Conditions of the Locale of the requester that will redirect the browser to different routes. |\n| middlewareRawSrc | [String\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list containing the original routes used to generate the `middlewarePath`. |\n| middlewarePath | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Path to an Edge Runtime function that should be invoked as middleware. |\n\n###### Source Route: Locale\n\n```\ntype Locale = {\n  redirect?: Record<string, string>;\n  cookie?: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| redirect | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | An object of keys that represent locales to check for (`en`, `fr`, etc.) that map to routes to redirect to (`/`, `/fr`, etc.). |\n| cookie | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Cookie name that can override the Accept-Language header for determing the current locale. |\n\n###### Source Route: HostHasField\n\n```\ntype HostHasField = {\n  type: 'host';\n  value: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| type | \"host\" | Yes | Determines the HasField type. |\n| value | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Host name that must match the request URL's host to cause this route to match. |\n\n###### Source Route: HeaderHasField\n\n```\ntype HeaderHasField = {\n  type: 'header';\n  key: string;\n  value?: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| type | \"header\" | Yes | Determines the HasField type. |\n| key | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Header name that must exist on the request for this route to match. |\n| value | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Header value (or regex) that must match for this route to match. |\n\n###### Source Route: CookieHasField\n\n```\ntype CookieHasField = {\n  type: 'cookie';\n  key: string;\n  value?: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| type | \"cookie\" | Yes | Determines the HasField type. |\n| key | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Cookie name that must exist on the request for this route to match. |\n| value | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Cookie value (or regex) that must match for this route to match. |\n\n###### Source Route: QueryHasField\n\n```\ntype QueryHasField = {\n  type: 'query';\n  key: string;\n  value?: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| type | \"query\" | Yes | Determines the HasField type. |\n| key | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Querystring key to look for. |\n| value | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Querystring value (or regex) that must match for this route to match. |\n\nThe routing system has multiple phases. The `handle` value indicates the start of a phase. All following routes are only checked in that phase.\n\n```\ntype HandleValue =\n  | 'rewrite'\n  | 'filesystem' // check matches after the filesystem misses\n  | 'resource'\n  | 'miss' // check matches after every filesystem miss\n  | 'hit'\n  | 'error'; //  check matches after error (500, 404, etc.)\n \ntype Handler = {\n  handle: HandleValue;\n  src?: string;\n  dest?: string;\n  status?: number;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| handle | HandleValue | Yes | The phase of routing when all subsequent routes should apply. |\n| src | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A PCRE-compatible regular expression that matches each incoming pathname (excluding querystring). |\n| dest | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A destination pathname or full URL, including querystring, with the ability to embed capture groups as $1, $2. |\n| status | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A status code to respond with. Can be used in tandem with `Location:` header to implement redirects. |\n\nThe following example shows a routing rule that will cause the `/redirect` path to perform an HTTP redirect to an external URL:\n\n```\n  \"routes\": [\n    {\n      \"src\": \"/redirect\",\n      \"status\": 308,\n      \"headers\": { \"Location\": \"https://example.com/\" }\n    }\n  ]\n```\n\n`.vercel/output/config.json`\n\nThe `images` property defines the behavior of Vercel's native [Image Optimization API](https://vercel.com/docs/image-optimization), which allows on-demand optimization of images at runtime.\n\n```\ntype ImageFormat = 'image/avif' | 'image/webp';\n \ntype RemotePattern = {\n  protocol?: 'http' | 'https';\n  hostname: string;\n  port?: string;\n  pathname?: string;\n};\n \ntype ImagesConfig = {\n  sizes: number[];\n  domains: string[];\n  remotePatterns?: RemotePattern[];\n  minimumCacheTTL?: number; // seconds\n  formats?: ImageFormat[];\n  dangerouslyAllowSVG?: boolean;\n  contentSecurityPolicy?: string;\n  contentDispositionType?: string;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| sizes | [Number\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Supported image widths. |\n| domains | [String\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Allowed external domains that can use Image Optimization. Leave empty for only allowing the deployment domain to use Image Optimization. |\n| remotePatterns | RemotePattern\\[\\] | No  | Allowed external patterns that can use Image Optimization. Similar to `domains` but provides more control with RegExp. |\n| minimumCacheTTL | [Number](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Cache duration (in seconds) for the optimized images. |\n| formats | ImageFormat\\[\\] | No  | Supported output image formats |\n| dangerouslyAllowSVG | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Allow SVG input image URLs. This is disabled by default for security purposes. |\n| contentSecurityPolicy | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Change the [Content Security Policy](https://developer.mozilla.org/docs/Web/HTTP/CSP) of the optimized images. |\n| contentDispositionType | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Specifies the value of the `\"Content-Disposition\"` response header. |\n\nThe following example shows an image optimization configuration that specifies allowed image size dimensions, external domains, caching lifetime and file formats:\n\n```\n  \"images\": {\n    \"sizes\": [640, 750, 828, 1080, 1200],\n    \"domains\": [],\n    \"minimumCacheTTL\": 60,\n    \"formats\": [\"image/avif\", \"image/webp\"],\n    \"remotePatterns\": [{\n      \"protocol\": \"https\",\n      \"hostname\": \"^via\\\\.placeholder\\\\.com$\",\n      \"pathname\": \"^/1280x640/.*$\"\n    }]\n  }\n```\n\nWhen the `images` property is defined, the Image Optimization API will be available by visiting the `/_vercel/image` path. When the `images` property is undefined, visiting the `/_vercel/image` path will respond with 404 Not Found.\n\nThe API accepts the following query string parameters:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Example | Description |\n| --- | --- | --- | --- | --- |\n| url | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | `/assets/me.png` | The URL of the source image that should be optimized. Absolute URLs must match a pattern defined in the `remotePatterns` configuration. |\n| w   | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | `200` | The width (in pixels) that the source image should be resized to. Must match a value defined in the `sizes` configuration. |\n| q   | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | `75` | The quality that the source image should be reduced to. Must be between 1 (lowest quality) to 100 (highest quality). |\n\n`.vercel/output/config.json`\n\nThe `wildcard` property relates to Vercel's Internationalization feature. The way it works is the domain names listed in this array are mapped to the `$wildcard` routing variable, which can be referenced by the [`routes` configuration](#routes).\n\nEach of the domain names specified in the `wildcard` configuration will need to be assigned as [Production Domains in the Project Settings](https://vercel.com/docs/projects/domains).\n\n```\ntype WildCard = {\n  domain: string;\n  value: string;\n};\n \ntype WildcardConfig = Array<WildCard>;\n```\n\nObjects contained within the `wildcard` configuration support the following properties:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| domain | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The domain name to match for this wildcard configuration. |\n| value | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The value of the `$wildcard` match that will be available for `routes` to utilize. |\n\nThe following example shows a wildcard configuration where the matching domain name will be served the localized version of the blog post HTML file:\n\n```\n  \"wildcard\": [\n    {\n      \"domain\": \"example.com\",\n      \"value\": \"en-US\"\n    },\n    {\n      \"domain\": \"example.nl\",\n      \"value\": \"nl-NL\"\n    },\n    {\n      \"domain\": \"example.fr\",\n      \"value\": \"fr\"\n    }\n  ],\n  \"routes\": [\n    { \"src\": \"/blog\", \"dest\": \"/blog.$wildcard.html\" }\n  ]\n```\n\n`.vercel/output/config.json`\n\nThe `overrides` property allows for overriding the output of one or more [static files](https://vercel.com/docs/build-output-api/v3/primitives#static-files) contained within the `.vercel/output/static` directory.\n\nThe main use-cases are to override the `Content-Type` header that will be served for a static file, and/or to serve a static file in the Vercel Deployment from a different URL path than how it is stored on the file system.\n\n```\ntype Override = {\n  path?: string;\n  contentType?: string;\n};\n \ntype OverrideConfig = Record<string, Override>;\n```\n\nObjects contained within the `overrides` configuration support the following properties:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| path | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The URL path where the static file will be accessible from. |\n| contentType | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The value of the `Content-Type` HTTP response header that will be served with the static file. |\n\nThe following example shows an override configuration where an HTML file can be accessed without the `.html` file extension:\n\n```\n  \"overrides\": {\n    \"blog.html\": {\n      \"path\": \"blog\"\n    }\n  }\n```\n\n`.vercel/output/config.json`\n\nThe `cache` property is an array of file paths and/or glob patterns that should be re-populated within the build sandbox upon subsequent Deployments.\n\nNote that this property is only relevant when Vercel is building a Project from source code, meaning it is not relevant when building locally or when creating a Deployment from \"prebuilt\" build artifacts.\n\n```\n  \"cache\": [\n    \".cache/**\",\n    \"node_modules/**\"\n  ]\n```\n\n`.vercel/output/config.json`\n\nThe optional `framework` property is an object describing the framework of the built outputs.\n\nThis value is used for display purposes only.\n\n```\ntype Framework = {\n  version: string;\n};\n```\n\n```\n  \"framework\": {\n    \"version\": \"1.2.3\"\n  }\n```\n\n`.vercel/output/config.json`\n\nThe optional `crons` property is an object describing the [cron jobs](https://vercel.com/docs/cron-jobs) for the production deployment of a project.\n\n```\ntype Cron = {\n  path: string;\n  schedule: string;\n};\n \ntype CronsConfig = Cron[];\n```\n\n```\n  \"crons\": [{\n    \"path\": \"/api/cron\",\n    \"schedule\": \"0 0 * * *\"\n  }]\n```\n\n```\n{\n  \"version\": 3,\n  \"routes\": [\n    {\n      \"src\": \"/redirect\",\n      \"status\": 308,\n      \"headers\": { \"Location\": \"https://example.com/\" }\n    },\n    {\n      \"src\": \"/blog\",\n      \"dest\": \"/blog.$wildcard.html\"\n    }\n  ],\n  \"images\": {\n    \"sizes\": [640, 750, 828, 1080, 1200],\n    \"domains\": [],\n    \"minimumCacheTTL\": 60,\n    \"formats\": [\"image/avif\", \"image/webp\"],\n    \"remotePatterns\": [\n      {\n        \"protocol\": \"https\",\n        \"hostname\": \"^via\\\\.placeholder\\\\.com$\",\n        \"pathname\": \"^/1280x640/.*$\"\n      }\n    ]\n  },\n  \"wildcard\": [\n    {\n      \"domain\": \"example.com\",\n      \"value\": \"en-US\"\n    },\n    {\n      \"domain\": \"example.nl\",\n      \"value\": \"nl-NL\"\n    },\n    {\n      \"domain\": \"example.fr\",\n      \"value\": \"fr\"\n    }\n  ],\n  \"overrides\": {\n    \"blog.html\": {\n      \"path\": \"blog\"\n    }\n  },\n  \"cache\": [\".cache/**\", \"node_modules/**\"],\n  \"framework\": {\n    \"version\": \"1.2.3\"\n  },\n  \"crons\": [\n    {\n      \"path\": \"/api/cron\",\n      \"schedule\": \"* * * * *\"\n    }\n  ]\n}\n```",
  "title": "Build Output Configuration",
  "description": "Learn about the Build Output Configuration file, which is used to configure the behavior of a Deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/build-output-api/v3/primitives",
  "markdown": "# Vercel Primitives\n\nThe following directories, code files, and configuration files represent all Vercel platform primitives. These primitives are the \"building blocks\" that make up a Vercel Deployment.\n\nFiles outside of these directories are ignored and will not be served to visitors.\n\n`.vercel/output/static`\n\nStatic files that are _publicly accessible_ from the Deployment URL should be placed in the `.vercel/output/static` directory.\n\nThese files are served with the [Vercel Edge Network](https://vercel.com/docs/edge-network/overview).\n\nFiles placed within this directory will be made available at the root (`/`) of the Deployment URL and neither their contents, nor their file name or extension will be modified in any way. Sub directories within `static` are also retained in the URL, and are appended before the file name.\n\nThere is no standalone configuration file that relates to static files.\n\nHowever, certain properties of static files (such as the `Content-Type` response header) can be modified by utilizing the [`overrides` property of the `config.json` file](https://vercel.com/docs/build-output-api/v3/configuration#overrides).\n\nThe following example shows static files placed into the `.vercel/output/static` directory:\n\n*   .vercel\n    *   output\n        *   static\n            *   images\n                *   avatar.png\n            *   favicon.png\n            *   client-side-bundle.js\n            *   robots.txt\n\n`.vercel/output/functions`\n\nA [Serverless Function](https://vercel.com/docs/functions/serverless-functions) is represented on the file system as a directory with a `.func` suffix on the name, contained within the `.vercel/output/functions` directory.\n\nConceptually, you can think of this `.func` directory as a filesystem mount for a Serverless Function: the files below the `.func` directory are included (recursively) and files above the `.func` directory are not included. Private files may safely be placed within this directory because they will not be directly accessible to end-users. However, they can be referenced by code that will be executed by the Serverless Function.\n\nA `.func` directory may be a symlink to another `.func` directory in cases where you want to have more than one path point to the same underlying Serverless Function.\n\nA configuration file named `.vc-config.json` must be included within the `.func` directory, which contains information about how Vercel should construct the Serverless Function.\n\nThe `.func` suffix on the directory name is _not included_ as part of the URL path of Serverless Function on the Deployment. For example, a directory located at `.vercel/output/functions/api/posts.func` will be accessible at the URL path `/api/posts` of the Deployment.\n\n`.vercel/output/functions/<name>.func/.vc-config.json`\n\nThe `.vc-config.json` configuration file contains information related to how the Serverless Function will be created by Vercel.\n\n```\ntype ServerlessFunctionConfig = {\n  handler: string;\n  runtime: string;\n  memory?: number;\n  maxDuration?: number;\n  environment: Record<string, string>[];\n  regions?: string[];\n  supportsWrapper?: boolean;\n  supportsResponseStreaming?: boolean;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| runtime | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Specifies which \"runtime\" will be used to execute the Serverless Function. See [Runtimes](https://vercel.com/docs/functions/serverless-functions/runtimes) for more information. |\n| handler | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Indicates the initial file where code will be executed for the Serverless Function. |\n| memory | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Amount of memory (RAM in MB) that will be allocated to the Serverless Function. See [size limits](https://vercel.com/docs/functions/serverless-functions/runtimes#size-limits) for more information. |\n| architecture | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Specifies the instruction set \"architecture\" the Serverless Function supports. Either `x86_64` or `arm64`. The default value is `x86_64`. |\n| maxDuration | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Maximum duration (in seconds) that will be allowed for the Serverless Function. See [size limits](https://vercel.com/docs/functions/serverless-functions/runtimes#size-limits) for more information. |\n| environment | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Map of additional environment variables that will be available to the Serverless Function, in addition to the env vars specified in the Project Settings. |\n| regions | [String\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | List of Vercel Regions where the Serverless Function will be deployed to. |\n| supportsWrapper | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | True if a custom runtime has support for Lambda runtime wrappers. |\n| supportsResponseStreaming | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | When true, the Serverless Function will stream the response to the client. |\n\nThis extends the [Base Config](#base-config) for Node.js Serverless Functions.\n\n```\ntype NodejsServerlessFunctionConfig = ServerlessFunctionConfig & {\n  launcherType: 'Nodejs';\n  shouldAddHelpers?: boolean; // default: false\n  shouldAddSourceMapSupport?: boolean; // default: false\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| launcherType | \"Nodejs\" | Yes | Specifies which launcher to use. Currently only \"Nodejs\" is supported. |\n| shouldAddHelpers | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Enables request and response helpers methods. |\n| shouldAddSourcemapSupport | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Enables source map generation. |\n| awsLambdaHandler | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | [AWS Handler Value](https://docs.aws.amazon.com/lambda/latest/dg/nodejs-handler.html) for when the serverless function uses AWS Lambda syntax. |\n\nThis is what the `.vc-config.json` configuration file could look like in a real scenario:\n\n```\n{\n  \"runtime\": \"nodejs16.x\",\n  \"handler\": \"serve.js\",\n  \"maxDuration\": 3,\n  \"launcherType\": \"Nodejs\",\n  \"shouldAddHelpers\": true,\n  \"shouldAddSourcemapSupport\": true\n}\n```\n\nThe following example shows a directory structure where the Serverless Function will be accessible at the `/serverless` URL path of the Deployment:\n\n*   .vercel\n    *   output\n        *   functions\n            *   serverless.func\n                *   node\\_modules\n                    *   ...\n                *   .vc-config.json\n                *   serve.js\n                *   data.sqlite\n\n`.vercel/output/functions`\n\nAn [Edge Function](https://vercel.com/docs/functions/edge-functions) is represented on the file system as a directory with a `.func` suffix on the name, contained within the `.vercel/output/functions` directory.\n\nThe `.func` directory requires at least one JavaScript or TypeScript source file which will serve as the `entrypoint` of the function. Additional source files may also be included in the `.func` directory. All imported source files will be _bundled_ at build time.\n\nWebAssembly (Wasm) files may also be placed in this directory for an Edge Function to import. See [Using a WebAssembly file](https://vercel.com/docs/functions/edge-functions/wasm) for more information.\n\nA configuration file named `.vc-config.json` must be included within the `.func` directory, which contains information about how Vercel should configure the Edge Function.\n\nThe `.func` suffix is _not included_ in the URL path. For example, a directory located at `.vercel/output/functions/api/edge.func` will be accessible at the URL path `/api/edge` of the Deployment.\n\nEdge Functions will bundle an `entrypoint` and all supported source files that are imported by that `entrypoint`. The following list includes all supported content types by their common file extensions.\n\n*   `.js`\n*   `.json`\n*   `.wasm`\n\n`.vercel/output/functions/<name>.func/.vc-config.json`\n\nThe `.vc-config.json` configuration file contains information related to how the Edge Function will be created by Vercel.\n\n```\ntype EdgeFunctionConfig = {\n  runtime: 'edge';\n  entrypoint: string;\n  envVarsInUse?: string[];\n  regions?: 'all' | string | string[];\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| runtime | [\"edge\"](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The `runtime: \"edge\"` property is required to indicate that this directory represents an Edge Function. |\n| entrypoint | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Indicates the initial file where code will be executed for the Edge Function. |\n| envVarsInUse | [String\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | List of environment variable names that will be available for the Edge Function to utilize. |\n| regions | [String\\[\\]](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | List of regions or a specific region that the edge function will be available in, defaults to `all`. [View available regions](https://vercel.com/docs/edge-network/regions#region-list). |\n\nThis is what the `.vc-config.json` configuration file could look like in a real scenario:\n\n```\n{\n  \"runtime\": \"edge\",\n  \"entrypoint\": \"index.js\",\n  \"envVarsInUse\": [\"DATABASE_API_KEY\"]\n}\n```\n\nThe following example shows a directory structure where the Edge Function will be accessible at the `/edge` URL path of the Deployment:\n\n*   .vercel\n    *   output\n        *   functions\n            *   edge.func\n                *   .vc-config.json\n                *   index.js\n\n`.vercel/output/functions`\n\nA Prerender asset is a Serverless Function that will be cached by the Vercel Edge Network in the same way as a static file. This concept is also known as [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration).\n\nOn the file system, a Prerender is represented in the same way as a Serverless Function, with an additional configuration file that describes the cache invalidation rules for the Prerender asset.\n\nAn optional \"fallback\" static file can also be specified, which will be served when there is no cached version available.\n\n`.vercel/output/functions/<name>.prerender-config.json`\n\nThe `<name>.prerender-config.json` configuration file contains information related to how the Edge Function will be created by Vercel.\n\n```\ntype PrerenderFunctionConfig = {\n  expiration: number | false;\n  group?: number;\n  bypassToken?: string;\n  fallback?: string;\n  allowQuery?: string[];\n  passQuery?: boolean;\n};\n```\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| expiration | [Integer \\| false](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Expiration time (in seconds) before the cached asset will be re-generated by invoking the Serverless Function. Setting the value to `false` means it will never expire. |\n| group | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Option group number of the asset. Prerender assets with the same group number will all be re-validated at the same time. |\n| bypassToken | [String](https://vercel.com/docs/workflow-collaboration/draft-mode) | No  | Random token assigned to the `__prerender_bypass` cookie when [Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode) is enabled, in order to safely bypass the Edge Network cache |\n| fallback | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Name of the optional fallback file relative to the configuration file. |\n| allowQuery | [String\\[\\] \\| undefined](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | List of query string parameter names that will be cached independently. If an empty array, query values are not considered for caching. If undefined each unique query value is cached independently |\n| passQuery | [Boolean \\| undefined](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | When true, the query string will be present on the `request` argument passed to the invoked function. The `allowQuery` filter still applies. |\n\n`.vercel/output/functions/<name>.prerender-fallback.<ext>`\n\nA Prerender asset may also include a static \"fallback\" version that is generated at build-time. The fallback file will be served by Vercel while there is not yet a cached version that was generated during runtime.\n\nWhen the fallback file is served, the Serverless Function will also be invoked \"out-of-band\" to re-generate a new version of the asset that will be cached and served for future HTTP requests.\n\nThis is what an `example.prerender-config.json` file could look like in a real scenario:\n\n```\n{\n  \"expiration\": 60,\n  \"group\": 1,\n  \"bypassToken\": \"03326da8bea31b919fa3a31c85747ddc\",\n  \"fallback\": \"example.prerender-fallback.html\",\n  \"allowQuery\": [\"id\"]\n}\n```\n\nThe following example shows a directory structure where the Prerender will be accessible at the `/blog` URL path of the Deployment:\n\n*   .vercel\n    *   output\n        *   functions\n            *   blog.func\n                *   .vc-config.json\n                *   index.js\n            *   blog.prerender-config.json\n            *   blog.prerender-fallback.html",
  "title": "Vercel Primitives",
  "description": "Learn about the Vercel platform primitives and how they work together to create a Vercel Deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/build-image",
  "markdown": "# Build image\n\nWhen you initiate a deployment, Vercel will [build your project](https://vercel.com/docs/deployments/builds) within a container that has a predefined image. This build image is determined by the Node.js version selected in the [project settings](https://vercel.com/docs/functions/runtimes/node-js#setting-the-node.js-version-in-project-settings).\n\nVercel supports [multiple runtimes](https://vercel.com/docs/functions/runtimes), but different runtime versions are available depending on the selected build image. See the table below to learn about which runtime versions are supported by each image:",
  "title": "Build image",
  "description": "Learn about the container image used for Vercel builds.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/file-system-api/v1",
  "markdown": "# File System API (v1)\n\nDeprecated:\n\nThis version (v1) of the File System API is deprecated. It should not be used for new projects.  \nIf you have issues or concerns with File System API (v1 or v2), see our [File System API (v1/v2) Feedback](https://github.com/vercel/community/discussions/530) discussion.\n\nNode.js Support:\n\nThis version (v1) of the File System API will only work with `Node.js <= 14.x`.\n\nThis page describes how you can ensure that your framework works perfectly on Vercel. The platform provides APIs and configurations that help authors to support features they need for their framework, or to automatically detect if their framework is being used.\n\nA subset of frameworks that is supported and can be automatically detected can be found in the [`@vercel/frameworks`](https://github.com/vercel/vercel/tree/main/packages/frameworks) package. More information about this can be found in the [Framework Detection](https://vercel.com/docs/build-output-api#framework-detection) section.\n\nThe file system API allows the framework to place its build outputs inside of specific directories during the build step. The files will then be used depending on which directory they have been put in.\n\nIt's always possible to check the Output tab on the Dashboard for a deployment to see all created resources.\n\nAs shown in the sections below, a number of features are supported.\n\nFiles placed in `.vercel_build_output/static` will be served as static files. All other output directories for static files will be ignored if this directory is present and contains files inside of it.\n\nFiles that match the path `.vercel_build_output/functions/<language>/<name>/index.<extension>` will become [Serverless Functions](https://vercel.com/docs/functions). The `language` part is the programming language used for the Serverless Function, the `extension` part would be the file extension for that language. At the moment only `node` is supported as `language` and `js` as `extension`. The `name` is the name of the Serverless Function under which it'll be available.\n\nThe `index` file inside of the `name` directory will be the entrypoint of the Serverless Function. All other files in that directory and subdirectories will be bundled with the Serverless Function, so they'll be available at runtime. As a result, it's not possible to use a `name` that's more than one path segment, meaning `my-function` is valid, but `my/function` would not be.\n\nThe Serverless Functions will be accessible at `/.vercel/functions/<name>` on the deployment. Routes can then be used to create rewrites for those Serverless Functions.\n\nUnlike Static Files, it's expected that Serverless Functions can only be mounted to `/.vercel/functions/` in the URL. It is common that one Serverless Function has multiple purposes and can handle different paths. [Routes](https://vercel.com/docs/build-output-api#configuration/routes) can be used to make Functions available on different URL paths.\n\nThe file `.vercel_build_output/config/routes.json` can be used to create [Routes](https://vercel.com/docs/cli#project-configuration/routes) for the deployment.\n\nA common use case would be to add a catch-all route that acts as a rewrite to a Serverless Function – and serving a few static assets.\n\nThe `routes.json` file could then look like this:\n\n```\n[\n  { \"handle\": \"filesystem\" },\n  {\n    \"src\": \"/(.*)\",\n    \"dest\": \"/.vercel/functions/renderer\"\n  }\n]\n```\n\nThe `\"handle\": \"filesystem\"` part is required in this case, as the catch-all route would otherwise rewrite all requests for the static assets to the `renderer` Serverless Function.\n\nAll Serverless Functions can be configured through a single JSON file located at `.vercel_build_output/config/functions.json`.\n\nThe file must contain an object where each key matches the `name` of a Serverless Function in `.vercel_build_output/functions/node/<name>/index.<extension>`.\n\nEach Serverless Function can then be configured with the following properties:\n\n*   `memory` (optional): An integer defining the memory in MB for your Serverless Function (between `128` and `3009`).\n*   `maxDuration` (optional): An integer defining how long your Serverless Function should be allowed to run on every request in seconds (between `1` and the [maximum limit of your plan](https://vercel.com/docs/functions/configuring-functions/duration#duration-limits)).\n\nIf no configuration was provided, the following defaults will be used:\n\n*   Memory: 1024 MB (1 GB)\n*   Execution Duration: 10 seconds (Hobby), 15 seconds (Pro), 15 seconds (Enterprise)\n\nAs an example, if the Serverless Function `.vercel_build_output/functions/node/my-function/index.js` requires more than the default `1024` MB of memory, then it can be increased to `3009` MB by creating the file `.vercel_build_output/config/functions.json` with the following content:\n\n```\n{\n  \"my-function\": {\n    \"memory\": 3009\n  }\n}\n```\n\nThe file `.vercel_build_output/config/images.json` can be used to enable [Image Optimization](https://vercel.com/docs/image-optimization) for the deployment.\n\nOnce enabled, you can optimize an image by visiting `/_vercel/image` with the following query string paramaeters:\n\n*   `url` (required): The path or URL of the source image. This can be a local image URL like `/logo.png` or an external image URL like `https://assets.example.com/logo.png`.\n*   `w` (required): The desired width of the image. The aspect ratio is maintained so the height will scale proportionally to the width.\n*   `q` (required): The desired quality of the image. This is an integer between 1 and 100 where 1 is the lowest quality and 100 is the highest quality.\n\nFor example, visiting `/_vercel/image?url=%2Flogo.png&w=640&q=75` will resize the logo.png file to 640px width at 75% quality.\n\nBelow is an example `images.json` file:\n\n```\n{\n  \"domains\": [\"assets.example.com\"],\n  \"sizes\": [640, 750, 828, 1080, 1200, 1920]\n}\n```\n\n*   `domains` (optional): A list of hostnames. This is necessary in order to enable external images using the `url` parameter.\n*   `sizes` (required): A list of image widths. This is necessary in order to enable resizing an image to a given width using the `w` parameter.\n\nYou can add support for framework detection and define default values on Vercel by adding it to the `@vercel/frameworks` package:\n\n1.  Fork the [`vercel/vercel`](https://github.com/vercel/vercel) repository on GitHub.\n2.  Add your framework to the `@vercel/frameworks` package by editing the file [`./packages/frameworks/src/frameworks.ts`](https://github.com/vercel/vercel/blob/master/packages/frameworks/src/frameworks.ts).\n3.  Copy the structure of an existing framework and adjust the fields for the new framework.\n4.  You can add default routes that will always be applied to Projects that use this framework or specify some paths that will be cached to speed up the build process (note that this step can be ignored if the framework makes use of the file system API).\n5.  The `settings` property either contains a `value` _or_ a `placeholder`. If the setting should allow the user to override it, use `placeholder`. To prevent the user from overriding, use `value`. For example, the Output Directory for Hugo is `public` by default, but can be changed through its config file, so we use `placeholder` with an explanation of what can be used.\n6.  Add a template to the [`examples`](https://github.com/vercel/vercel/tree/main/examples) directory: The name of the directory should match the `slug` of the framework used in `@vercel/frameworks`. The `/.github/EXAMPLE_README_TEMPLATE.md` file is a template for creating a `README.md` file for the template.\n7.  Create a Pull Request! After your Pull Request has been merged, someone from Vercel will enable the framework in the API so that anyone can select the framework on the Vercel dashboard and deploy it.",
  "title": "File System API (v1)",
  "description": "The File System API allows you to interact with the file system in a Node.js environment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/file-system-api/v2",
  "markdown": "# File System API (v2)\n\nDeprecated:\n\nThis version (v2) of the File System API is deprecated. It should not be used for new projects.\n\nIf you have issues or concerns with File System API (v1 or v2), see our [File System API (v1/v2) Feedback](https://github.com/vercel/community/discussions/530) discussion.\n\nNode.js Support:\n\nThis version (v2) of the File System API will only work with `Node.js <= 14.x`.\n\nA reference of the `.output` directory consumed by Vercel's [Build Step](https://vercel.com/docs/deployments/configure-a-build) with every [Deployment](https://vercel.com/docs/deployments/overview), which is expected to contain your app's compiled code and instructions for how to serve it to visitors.\n\nWhenever a new Deployment is created on Vercel, its source files will be retrieved from their origin location (a Git repository, for example) and processed within the [Build Step](https://vercel.com/docs/deployments/configure-a-build), after which they are made available on the [Edge Network](https://vercel.com/docs/edge-network/overview).\n\nInside of this Build Step, the `vercel build` command provided by [Vercel CLI](https://vercel.com/docs/cli/login) is automatically invoked, which will retrieve the Project Settings and invoke the [Build Command](https://vercel.com/docs/deployments/configure-a-build#build-command) specified for the Project. This will make the respective Framework transform the source code and prepare it for delivery.\n\nAfterwards, `vercel build` will handle features natively provided by Vercel (such as Node.js Serverless Functions in the `api` directory or `_middleware.js`) and produce several files that it combines with the files produced by the Project's Build Command.\n\nThe outcome of this process is a `.output` directory that is passed on to the File System API at the end of the Build Step, containing instructions of which files to deliver to visitors and their respective configuration manifests.\n\nMost commonly, the File System API is not something you need to worry about.\n\nFrameworks that support Vercel without any additional configuration (like [Next.js](https://nextjs.org/), [Nuxt](https://nuxt.com/), or [SvelteKit](https://kit.svelte.dev/)) are automatically producing a `.output` directory that instructs the platform how to behave. They pass on all of the resources created within your source code (such as [Pages](#resources/pages) or [API Routes](#resources/api-routes)).\n\nIf you are a framework author looking to integrate with Vercel, you can use this reference as a way to understand which files you would want to create within the `.output` directory, for the platform to understand them.\n\nAdditionally, if you are not using a framework and would like to still take advantage of any of the features that those frameworks provide, you can create the directory yourself, using a custom command-line interface or by including it in your source files.\n\n**Relevant Directories**:  \n\n  \n`.output/server/pages`  \n`.output/server/pages/api`  \n`.output/static`\n\nIf you'd like to expose resources to your visitors once the Deployment has finished, it is required to place them inside one of the directories mentioned below. Files outside of these directories are ignored and will not be served to visitors.\n\n**Directory**: `.output/server/pages`\n\nRegardless of whether the Pages you'd like to serve to your visitors are generated on-demand (whenever a request arrives) or statically generated ahead of time, including them as part of your Deployment can be done by creating a single file for every page, and Vercel will handle the rest for you.\n\nMore specifically, you can place the source of Pages that you have statically generated ahead of time in the form of HTML files in the directory shown above and they will automatically be served at the root of the URL of your Deployment.\n\nThe same is the case for Pages that you would like to generate on-demand using Server-Side Rendering: Place a [Serverless Function](https://vercel.com/docs/functions/serverless-functions) in the directory and it will be invoked whenever a request arrives for the path defined in its file name.\n\nIn favor of performance, it is recommended to statically generate Pages ahead of time as much as possible. If the need for dynamism arises, feel free to switch to Page Functions and ideally even enable [Pre-Rendering](#configuration/pre-rendering), to retain as much performance as possible.\n\nAll files within the `pages` directory are considered files that should be mounted to the URL of the Deployment. If your Functions depend on other files, they have to be included through the [Bundling Configuration](#configuration/bundling) and placed outside of `pages` (in a different arbitrary directory at the root of `.output`, for example).\n\nIt is recommended to leave the bundling of files to Vercel if a file is used by multiple Functions. If a file is only used by a single Function, you may combine those files into a single Function based on your own choosing.\n\nThe extensions of the files within the `pages` directory are automatically stripped before the Pages are made available in the URL of the Deployment, under the same name that was used for the file. This happens regardless of which extension was used.\n\nIf files are placed in sub directories within `pages`, those will become part of the URL too, and be included before the page name.\n\nBy default, only files with the extensions `.html` (statically generated ahead of time) and `.js` (Node.js Function, so generated on-demand with every incoming request) may be placed inside of the `pages` directory.\n\nIf you would like to provide Page Functions that use a different runtime than Node.js, you can do so using the [Function Configuration](#configuration/functions), which also includes other options.\n\nIf you were to add file named `about.html` inside of the `pages` directory, it will be served at `/about` in the URLs assigned to your Deployment.\n\nRespectively, if you were to place a file named `blog.js` inside of the directory, it will be served at `/blog` and the Function contained inside of the file will be invoked whenever a request arrives for that URL path.\n\nPlacing a file in `test/about.html` would mount it to `/test/about` in the URL.\n\nThis is what the directory could look like in a real scenario (you can learn more about the purpose of the `.nft.json` file in [Exposed Files](#resources/pages/exposed-files) above):\n\n*   .output\n    *   server\n        *   pages\n            *   about.html\n            *   blog.js\n            *   blog.js.nft.json\n\n**Directory**: `.output/static`\n\nIf you would like to provide static files that should be served without any transformation as part of your Deployment, you can do so by including them in this directory.\n\nThe files will be made available at the root (`/`) of the Deployment's URL and neither their contents, nor their file name or extension will be mutated in any way. Sub directories within `static` are also retained in the URL, and are appended before the file name.\n\nIf a [Page](#resources/pages) or [API Route](#resources/api-routes) with the same name in the final URL exists, they will be overwritten by the Static File and therefore won't be accessible through the URL anymore.\n\nIt is therefore recommended to use this directory for files that are not directly accessed by visitors, but instead loaded on [Pages](#resources/pages) (like client-side JavaScript bundles) or accessed by machines (like `robots.txt`). Files that are directly accessed by visitors are considered [Pages](#resources/pages) and shouldn't be placed here.\n\nSince all of the files in this directory are exposed as part of the Deployment's URL, you also shouldn't use it for files that your [Page](#resources/pages) or [API Route](#resources/api-routes) Functions might depend on for execution. Those can be included through [Bundling Configuration](#configuration/bundling) instead.\n\nThis is what the directory could look like in a real scenario:\n\n*   .output\n    *   static\n        *   favicon.png\n        *   client-side-bundle.js\n        *   robots.txt\n\n**Directory**: `.output/server/pages/api`\n\nIf one of your [Pages](#resources/pages) relies on data that should be delivered from, or to the client-side (the browser), you can use this directory to include API Routes as part of your Deployment that will send and accept this data.\n\nThey can also be helpful in scenarios where third-parties or other types of clients (like native mobile apps) wish to access this data, or any other types of actions that have to be performed that were triggered by a visitor.\n\nAPI Routes are designed to be accessed by [Pages](#resources/pages) or machines, but not by humans. If you'd like to display something to visitors, create a [Page](#resources/pages) instead.\n\nUnder the hood, like on-demand Pages, API Routes are powered by [Serverless Functions](https://vercel.com/docs/functions/serverless-functions).\n\nWhen it comes to [the files](#resources/pages/exposed-files) in the directory that are exposed in the Deployment's URL and [custom runtimes](#resources/pages/custom-runtimes), API Routes behave like Pages. Otherwise, they are completely separate concepts and should be separated distinctively.\n\nThis is what the directory could look like in a real scenario:\n\n*   .output\n    *   server\n        *   pages\n            *   api\n                *   user.js\n                *   team.js\n\n**Directory**: `.output/server/pages`\n\nGenerating Pages on-demand using [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) bears a significant performance drawback, because their HTML markup has to be generated again for every incoming request, which is slower than delivering HTML that was statically generated ahead of time.\n\nEven if your Page returns the [Cache-Control header](https://developer.mozilla.org/docs/Web/HTTP/Headers/Cache-Control) and its responses are cached on Vercel's [Edge Network](https://vercel.com/docs/edge-network/overview), the first request per [region](https://vercel.com/docs/edge-network/regions) would still be slow, which means that the first visitor in a certain region would see a slower response.\n\nThankfully, however, Vercel offers two different types of Functions: [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and [Edge Functions](https://vercel.com/docs/functions/edge-functions). The former are the traditional kind powered by [Lambdas](https://aws.amazon.com/de/lambda/), whereas the latter runs directly on the Edge Network and can respond much quicker.\n\nYou can place Middleware in `.output/server/pages`, and it sits between the client (the browser), and a [Page](#resources/pages) or [API Route](#resources/api-routes). This means you can statically generate those ahead of time or cache their responses on the Edge Network, while still executing code on every request.\n\nBecause Middleware has almost no noticeable impact on performance, it is run on every request and can perform lightweight operations such as forwarding visitors to a different URL, resolving to a different URL, or performing any sort of validation.\n\nUnlike all other [Resources](#resources), Middleware requires [Function Configuration](#configuration/functions) to work, as it determines the URL paths that the Middleware should be responsible for. For the other Resources, this is inferred based on the location and name of the files.\n\nMiddleware files are never directly exposed as part of the Deployment's URL. Instead, based on their configuration, they are made available on existing URL paths that resolve to Pages or API Routes, which is the part that makes them the \"middle-ware\".\n\nCurrently, only JavaScript (invoked by [V8](https://v8.dev/)) is supported as a runtime for Middleware.\n\nThis is what the directory could look like in a real scenario:\n\n*   .output\n    *   server\n        *   pages\n            *   index.html\n            *   \\_middleware.js\n    *   functions-manifest.json\n\nFor the above example, you could place the following in `functions-manifest.json`:\n\n```\n{\n  \"version\": 1,\n  \"pages\": {\n    \"_middleware.js\": {\n      \"runtime\": \"web\",\n      \"env\": [],\n      \"files\": [\"server/pages/_middleware.js\"],\n      \"name\": \"pages/_middleware\",\n      \"page\": \"/\",\n      \"regexp\": \"^/.*$\",\n      \"sortingIndex\": 1\n    }\n  }\n}\n```\n\nAdditionally, this is what you could place in `_middleware.js`:\n\n```\nconst getResult = (body, options) => ({\n  promise: Promise.resolve(),\n  waitUntil: Promise.resolve(),\n  response: new Response(body, options),\n});\n \n_ENTRIES = typeof _ENTRIES === 'undefined' ? {} : _ENTRIES;\n \n_ENTRIES['middleware_pages/_middleware'] = {\n  default: async function ({ request }) {\n    // Body\n    if (request.url.endsWith('/middleware-body')) {\n      return getResult('hi from the edge', {});\n    }\n \n    // Rewrite\n    if (request.url.endsWith('/middleware-rewrite')) {\n      return getResult(null, {\n        headers: {\n          'x-middleware-rewrite': '/blog',\n        },\n      });\n    }\n \n    // Redirect\n    if (request.url.endsWith('/middleware-redirect')) {\n      return getResult(null, {\n        status: 308,\n        headers: {\n          Location: '/blog',\n          'x-middleware-redirect': '/blog',\n        },\n      });\n    }\n \n    // Don't do anything\n    return getResult(null, {\n      headers: {\n        'x-middleware-next': '1',\n      },\n    });\n  },\n};\n```\n\n**File Names**:  \n\n  \n`.output/routes-manifest.json`  \n`.output/functions-manifest.json`  \n`.output/server/pages/**/[function].nft.json`  \n`.output/images-manifest.json`  \n`.output/prerender-manifest.json`  \n`.output/build-manifest.json`\n\nIf you would like to customize the behavior of any of the [Resources](#resources) you have provided with your Deployment, or control Vercel's behavior in general, you can provide several optional configuration files within the `.output` directory.\n\n**File Name**: `.output/routes-manifest.json`\n\nIf you'd like to point certain URL paths to others on your Deployment or attach headers to some of them, you can do so using this configuration file.\n\nYou can forward visitors to different URLs (if you've changed the URL of a blog post, for example), change the URL that is displayed for them (if you'd like multiple URLs to resolve to a single one, for example), or customize the behavior of the client that sent the request through headers.\n\nThe following configuration properties are allowed within the configuration file:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| version | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The version of the configuration that should be used. The most recent one for this file is currently `3`. |\n| basePath | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A path that is prepended to all [Routes](#configuration/routes) and [Routes](#resources). For example, you might want to mount your entire application to `/something`. |\n| pages404 | [Boolean](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Whether or not a [Page](#resources/pages) named `404` (can be HTML or a Function) should be served if a path isn't found for an incoming request. |\n| redirects | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) for forwarding requests from one URL path to another, whose properties are described below. |\n| headers | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) for returning headers for certain URL paths, whose properties are described below. |\n| rewrites | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) for ensuring that certain URL paths resolve to other URLs, whose properties are described below. |\n| dynamicRoutes | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) that describe [Pages](#resources/pages) or [API Routes](#resources/api-routes) that include path segments (like `blog/[slug]`) and therefore result in rewrites, whose properties are described below. |\n\nWithin `redirects`, every [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) can contain the following properties:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| source | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The URL path on which the redirect will be made available. |\n| destination | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The URL path to which the visitor should be redirected. |\n| statusCode | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The [HTTP status code](https://developer.mozilla.org/docs/Web/HTTP/Status) that should be returned as part of the response for redirecting the visitor. Possible values are either `301`, `302`, `307`, or `308`. The last two are recommended, while the first two should ideally only be used for backwards-compatibility with legacy clients (e.g. browsers). |\n| regex | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path on which the redirect should be served. While `source` is only a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) representation of the path, `regex` is the value that is used for actually validating whether the redirect should apply to an incoming request, or not. |\n\nWithin `headers`, every [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) can contain the following properties:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| source | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The URL path on which the headers will be made available. |\n| headers | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing headers that should be returned from URL paths that match `regex`, where `key` is a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the name of the header, and `value` is a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing its respective value. |\n| regex | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path on which the headers should be served. While `source` is only a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) representation of the path, `regex` is the value that is used for actually validating whether the headers should apply to an incoming request, or not. |\n\nWithin `rewrites`, every [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) can contain the following properties:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| source | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The URL path on which the rewrite will be made available. |\n| has | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing rules that the incoming request has to match before the rewrite applies. Within them, `type` is an [Enum](https://vercel.com/docs/rest-api#introduction/api-basics/types) with `header`, `cookie`, `host` or `query` as the value, `key` is a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the respective key that should be asserted, and `value` is the same, but for the value that should be asserted. |\n| destination | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The URL path that should be served to the visitor when a URL path that matches `regex` is accessed. |\n| regex | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path on which the rewrite should be served. While `source` is only a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) representation of the path, `regex` is the value that is used for actually validating whether the rewrite should apply to an incoming request, or not. |\n\nWithin `dynamicRoutes`, every [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) can contain the following properties:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| page | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The name (in the same format as used in [Function Configuration](#configuration/functions)) of the [Page](#resources/pages) or [API Route](#resources/api-routes) that should receive the incoming request if its URL matches the pattern provided in `regex`. |\n| regex | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path on which the [Page](#resources/pages) or [API Route](#resources/api-routes) should be served. |\n| routeKeys | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | Query string parameters that should be passed to the destination [Page](#resources/pages) or [API Route](#resources/api-routes), where every key is the segment in `namedRegex` that should be captured and every value is the name of the query string parameter that should receive its value. |\n| namedRegex | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path on which the [Page](#resources/pages) or [API Route](#resources/api-routes) should be served. The difference to `regex` is that this property can contain path segments (like `<post>`) that will automatically be transformed into query string parameters using `routeKeys`. |\n\nThis is what the configuration file could look like in a real scenario:\n\n```\n{\n  \"version\": 3,\n  \"basePath\": \"\",\n  \"pages404\": true,\n  \"redirects\": [\n    {\n      \"source\": \"/nice/\",\n      \"destination\": \"/stuff\",\n      \"statusCode\": 308,\n      \"regex\": \"^/nice.*$\"\n    }\n  ],\n  \"headers\": [\n    {\n      \"source\": \"/\",\n      \"headers\": [\n        {\n          \"key\": \"x-custom-header\",\n          \"value\": \"my custom header value\"\n        }\n      ],\n      \"regex\": \"^.*$\"\n    }\n  ],\n  \"rewrites\": [\n    {\n      \"source\": \"/admin\",\n      \"has\": [\n        {\n          \"type\": \"cookie\",\n          \"key\": \"authorized\",\n          \"value\": \"true\"\n        }\n      ],\n      \"destination\": \"/secret\",\n      \"regex\": \"^/admin.*$\"\n    }\n  ],\n  \"dynamicRoutes\": [\n    {\n      \"page\": \"/blog/[post]\",\n      \"regex\": \"^/blog/([^/]+?)(?:/)?$\",\n      \"routeKeys\": {\n        \"post\": \"post\"\n      },\n      \"namedRegex\": \"^/blog/(?<post>[^/]+?)(?:/)?$\"\n    }\n  ]\n}\n```\n\n**File Name**: `.output/functions-manifest.json`\n\nIf you have provided on-demand [Pages](#resources/pages) or [API Routes](#resources/api-routes) as part of your Deployment, you might find yourself needing to customize their behavior on Vercel.\n\nWith this configuration file, you can customize the memory size of their underlying Functions, which [region on the Edge Network](https://vercel.com/docs/edge-network/regions) they are deployed to, and how long they should be able to run.\n\nAdditionally, it allows for customizing which runtime should be used for those Functions in cases where you would like to run your code in a non-Node.js Environment. This means that on-demand [Pages](#resources/pages) and [API Routes](#resources/api-routes) can be written in any language.\n\nBefore configuring the Functions created in your Deployment, it is recommended to first learn about the conceptual models for [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and [Edge Functions](https://vercel.com/docs/functions/edge-functions) (depending on which ones you'd like to use), as it will help you make the right decisions while customizing their default behavior along the way.\n\nThe following configuration properties are allowed within the configuration file:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| version | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The version of the configuration that should be used. The most recent one for this file is currently `1`. |\n| pages | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A map of on-demand [Pages](#resources/pages) (Functions), [API Routes](#resources/api-routes) or [Middlewares](#resources/middleware) and the respective configuration properties for each one. The keys are [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the names of the Functions, without their extensions. The values are [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types), whose properties are described below. |\n\nWithin `pages`, every key can have the following [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) as its value:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| memory | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | How much memory (in MB) should be made available to the Function. Only [Integers](https://vercel.com/docs/rest-api#introduction/api-basics/types) between `128` and `3009` are allowed. The CPU configuration will scale linearly in proportion to the memory configuration (at `1769` MB memory, for example, a Function has the equivalent of one full vCPU). |\n| maxDuration | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | How long the Function should be allowed to run for every request in seconds. Only [Integers](https://vercel.com/docs/rest-api#introduction/api-basics/types) between `1` and the [Serverless Function Execution Timeout](https://vercel.com/docs/limits/overview) limit of your plan are allowed. It is recommended to use a small value, as larger values will keep visitors waiting for longer. |\n| regions | [Enum](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The [regions](https://vercel.com/docs/edge-network/regions) on our Edge Network that the Function should be deployed to. It is recommended to keep your Functions close to your visitors, but also close to your data source, to keep latency for both at a minimum. |\n| runtime | [Enum](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The identifier of the [Lambda runtime](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) that you'd like to use for your Function. Defaults to the [Node.js Version](https://vercel.com/docs/functions/serverless-functions/runtimes/node-js#node.js-version) configured in the Project Settings. If this property is used, `handler` is required alongside it. It can also be `web` if you'd like to deploy an [Edge Function](https://vercel.com/docs/functions/edge-functions) (does not require `handler`). |\n| handler | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The name of the file that should be invoked by the Lambda runtime defined above whenever a request arrives. |\n\nAdditionally, the [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) mentioned above should contain the following properties if `runtime` is `web` and the respective Function is used as [Middleware](#resources/middleware) (if it's not used as Middleware and `runtime` is still `web`, the properties are optional):\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| env | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A list of [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) that represent the names of [Environment Variables](https://vercel.com/docs/projects/environment-variables) that should be retrieved from the Project Settings and made available to the code at execution time with their values. |\n| files | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A list of [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) that represent source files that are relevant for the Middleware. It has to contain at least one item that matches the `name` property. Any additional entry will be concatenated (learn more about [Edge Function Bundling](#configuration/bundling/edge-functions)) together with the contents of the file present at this path. All paths have to begin with `server/`. |\n| name | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The path of the respective [Middleware](#resources/middleware) file that the configuration [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) is responsible for. It is required to begin with `pages/` and end in `_middleware`. |\n| page | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The path in the URL for which the respective [Middleware](#resources/middleware) file is responsible. If it's responsible for multiple sub paths, you don't need to consider those here – only their parent path. |\n| regexp | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path for which the respective [Middleware](#resources/middleware) file is responsible. This value is considered every time a request arrives, to determine whether to execute the Middleware, or not. |\n| sortingIndex | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | If multiple [Middlewares](#resources/middleware) were defined for the same path, this value defines in which order they should be executed. |\n\nThis is what the configuration file could look like in a real scenario:\n\n```\n{\n  \"version\": 1,\n  \"pages\": {\n    \"my-page.js\": {\n      \"memory\": 128,\n      \"maxDuration\": 3,\n      \"regions\": [\"hkg1\"]\n    },\n    \"api/date.go\": {\n      \"runtime\": \"go1.x\",\n      \"handler\": \"my-go-api.bin\"\n    },\n    \"api/hello.js\": {\n      \"runtime\": \"web\"\n    },\n    \"_middleware.js\": {\n      \"runtime\": \"web\",\n      \"env\": [],\n      \"files\": [\"server/pages/_middleware.js\"],\n      \"name\": \"pages/_middleware\",\n      \"page\": \"/\",\n      \"regexp\": \"^/.*$\",\n      \"sortingIndex\": 1\n    }\n  }\n}\n```\n\n**File Name**: `.output/server/pages/**/[function].nft.json`\n\nIf you are expecting scenarios in which multiple [Pages](#resources/pages) or [API Routes](#resources/api-routes) are making use of the same code for their Functions (which might apply for utility files), you can inform Vercel about those files, so that it can automatically determine the most efficient way to make the files available where needed.\n\nInstead of having to ensure that every [Page](#resources/pages) and [API Route](#resources/api-routes) Function includes all of the code it requires for being able to run, you can inform the platform which Functions depend on which files, instead of copying code into multiple places (which increases disk usage in the final Function). Vercel can then automatically figure out the most efficient placement for these files.\n\nThe configuration file can be placed alongside [Pages](#resources/pages) and [API Routes](#resources/api-routes) on any level within `pages`, and `[path]` in the configuration file name (see the \"File Name\" example above) has to match them. The dependency files of your Functions can be placed inside of the `.output/inputs` directory.\n\nIn the case that the `runtime` property of a Function is set to `web` using [Function Configuration](#configuration/functions), it is considered an [Edge Function](https://vercel.com/docs/functions/edge-functions) and will not be able to make use of the `.nft.json` configuration standard for bundling files.\n\nInstead, the `files` property in the respective Function Configuration entry can be used to inform the platform which files the Edge Function might depend on, so that multiple Edge Functions can make use of the same shared source code files, if needed.\n\nAs mentioned in [Function Configuration](#configuration/functions), the first entry of `files` is required to be the Edge Function's entrypoint file, but all other items in the [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) will have their file contents appended to the entrypoint file.\n\nNote that the `_ENTRIES` property within the entrypoint file will not receive additional properties. Instead, the entrypoint file and the other files are joined together as strings and create a new entrypoint file.\n\nIf multiple Edge Functions are making use of the same source code, use this property to help Vercel understand which Edge Function depends on which files, so that it can apply smart and efficient bundling, just like for Serverless Functions.\n\nThe following configuration properties are allowed within the configuration file:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| version | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The version of the configuration that should be used. The most recent one for this file is currently `1`. |\n| files | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A list of [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) representing the paths that a [Page](#resources/pages) and [API Route](#resources/api-routes) Function might depend on, relative to their location. If a list of [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) is used instead, this is reflected in their `input` properties, and their `output` properties would be the paths within the final [Lambda](https://aws.amazon.com/lambda/) to which the files should be mounted (relative to the root). Only use [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types) if necessary. |\n\nIf a [Page](#resources/pages) were to be located at `pages/about.js`, its respective configuration file for bundling would be located at `pages/about.nft.json`.\n\nIf your application contains dependencies within a `node_modules` directory which multiple Functions need to access, you don't need to copy those dependencies into multiple places. Instead, Vercel will automatically bundle the files in a smart way, so that disk usage of the final Functions is kept to a minimum.\n\nThis is what the configuration file could look like in a real scenario:\n\n```\n{\n  \"version\": 1,\n  \"files\": [\n    {\n      \"input\": \"../../../data.txt\",\n      \"output\": \"my-folder/data.txt\"\n    }\n  ]\n}\n```\n\n**File Name**: `.output/images-manifest.json`\n\nIf you would like to provide images as part of your Deployment ahead of time, you can include them as [Static Files](#resources/static-files). Those images will be made available without modifications on your Deployment's URL, so you can load them from anywhere (like your frontend).\n\nFor optimal performance, however, it is recommended to load your images through Vercel's native [Image Optimization](https://vercel.com/docs/image-optimization) endpoint, which automatically adjusts the size and quality of your images, to make sure they are served to your visitors as quickly as possible.\n\nThe endpoint is available at the `/_vercel/image` path of the respective Deployment and accepts the following query string parameters:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| url | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The URL of the image that should be optimized (like `/static/image.png`). If it's an external URL, its domain must be included as part of `domains` in the configuration file. |\n| w   | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The width that the image should be resized to (like `200`). Only the [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) passed through `sizes` in the `images` configuration property are allowed as the value. |\n| q   | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The quality level that the image should be reduced to (like `70`). Any [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) between `100` (maximum quality) and `1` (lowest quality) is allowed as the value. |\n\nThe following configuration properties are allowed within the configuration file:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| version | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The version of the configuration that should be used. The most recent one for this file is currently `1`. |\n| images | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A map of configuration properties (described below) that are considered every time an image is optimized. |\n\nWithin `images`, the following [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) has to be replaced:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| sizes | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A list of [Integers](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the allowed widths for when images are resized. |\n| domains | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A list of [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the domains to be allowed as part of the URL when optimizing images. |\n| minimumCacheTTL | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | The amount of time (in seconds) that should pass before an image is marked as stale. If an image is marked as stale, the next time a new request for it comes in, it will asynchronously be optimized again in the background. |\n| formats | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) that represent potential values of the `Accept` header of an incoming request (defaults to `image/webp`, but allows `image/avif` as an additional entry). If an incoming request has a matching `Accept` header, the image will be transformed into this format. If no matching header is found, the image's original format remains unchanged. |\n\nThis is what the configuration file could look like in a real scenario:\n\n```\n{\n  \"version\": 1,\n  \"images\": {\n    \"sizes\": [256, 384],\n    \"domains\": [\"external-site.com\"],\n    \"minimumCacheTTL\": 60,\n    \"formats\": [\"image/avif\", \"image/webp\"]\n  }\n}\n```\n\n**File Name**: `.output/prerender-manifest.json`\n\nWhen providing [Pages](#resources/pages) for your Deployment, you can choose between statically generating them ahead of time (and supplying Vercel with HTML files), or generating them on-demand, every time a request comes in.\n\nIt is generally recommended to opt for providing HTML files to the platform. This provides significant performance advantages because the Pages don't have to be rendered on-demand.\n\nIf you are dealing with a large amount of Pages, statically generating them all ahead of time can be slow. To solve this, you can provide Pre-Rendering configuration, which allows you to generate some of the Pages (for example, the ones that are commonly visited) ahead of time, while automatically generating the rest on-demand.\n\nFurthermore, it allows you to easily keep statically generated Pages up-to-date, without having to deploy every update again.\n\nIncremental Static Regeneration is a pre-rendering technique that enables you to update statically-generated pages on an interval, and generate missing pages on-demand. See [our ISR docs](https://vercel.com/docs/incremental-static-regeneration/overview) to learn more.\n\n[Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode) allows you to set specific pages to bypass ISR caching and render at request time. This is useful for viewing draft content from a headless CMS without manually triggering page revalidation or waiting for the revalidation interval to pass.\n\nThe following configuration properties are allowed within the configuration file:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| version | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The version of the configuration that should be used. The most recent one for this file is currently `3`. |\n| routes | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A map of statically generated [Pages](#resources/pages) (HTML files) that should be kept up-to-date and configuration properties for each one. The keys are [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the names of the HTML files, without their extensions. The values are [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types), whose properties are described below. |\n| dynamicRoutes | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A map of on-demand [Pages](#resources/pages) (Functions) that should be used for statically generating missing Pages and configuration properties for each one. The keys are [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing the names of the Functions, without their extensions. The values are [Maps](https://vercel.com/docs/rest-api#introduction/api-basics/types), whose properties are described below. |\n| preview | [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A map containing a single property named `previewModeId`, which is either `null` or a [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing any arbitrary characters. In the latter case, passing a cookie named `__prerender_bypass` with this value will bypass the ISR caches and force the Pages to be generated fresh on-demand. |\n\nUsed for associating statically generated Pages (HTML) with on-demand Pages (Functions). The statically generated Pages can be served to visitors, and their respective on-demand Page match is used for updating the HTML asynchronously in the background.\n\nThis means visitors never receive a slow response, and the HTML is kept up-to-date.\n\nWithin `routes`, every key can have the following [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) as its value:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| initialRevalidateSeconds | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The amount of seconds that a Page is allowed to be delivered before the Function for updating its contents is invoked in the background. |\n| srcRoute | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The name of a on-demand [Page](#resources/pages) (Function) without its extension, which is used for updating the HTML of the statically generated Page. |\n| dataRoute | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The name of a on-demand [Page](#resources/pages) (Function) without its extension, which is used for updating the JSON of the statically generated Page. Can be used for client-side transitions, but can also be left as an empty [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) if not needed. |\n\nCan be used in combination with `routes`, but also standalone.\n\nIts purpose is to capture URL path segments and point them to on-demand Pages (Functions), which will then produce statically generated Pages (HTML) for the respective path. Before the on-demand Pages are invoked, you can also make the platform first consider Pages that were already generated ahead of time (HTML) through `fallback`, which is recommended for optimal performance.\n\nOverall, this means that incoming requests would first result in the platform trying to find a matching Page that was statically generated ahead of time, after which the respective on-demand Page (Function) is invoked if no match was found.\n\nWithin `dynamicRoutes`, every key can have the following [Map](https://vercel.com/docs/rest-api#introduction/api-basics/types) as its value:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| routeRegex | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path under which a Page with [Incremental Static Regeneration](#configuration/pre-rendering/incremental-static-regeneration) should be attached. |\n| fallback | `null` or [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | Describes whether the route captured above is only used for statically generating new Pages on-demand if they're missing (`null`), or if the platform should first consider Pages that were statically generated ahead of time before generating new ones ([String](https://vercel.com/docs/rest-api#introduction/api-basics/types) referencing the Page without the HTML extension). |\n| dataRoute | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The same as the `dataRoute` property for `routes`, but for updating the JSON of the Page that was statically generated on-demand. |\n| dataRouteRegex | [String](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | A [regular expression](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) describing the URL path under which the JSON for the `dataRoute` property above should be served. |\n\nThis is what the configuration file could look like in a real scenario:\n\n```\n{\n  \"version\": 3,\n  \"routes\": {\n    \"/my-isr-page\": {\n      \"initialRevalidateSeconds\": 30,\n      \"srcRoute\": \"/my-isr-page\",\n      \"dataRoute\": \"\"\n    }\n  },\n  \"dynamicRoutes\": {\n    \"/my-isr-page\": {\n      \"routeRegex\": \"^/my-isr-page$\",\n      \"dataRoute\": \"\",\n      \"fallback\": null,\n      \"dataRouteRegex\": \"\"\n    }\n  },\n  \"preview\": {\n    \"previewModeId\": null\n  }\n}\n```\n\n**File Name**: `.output/build-manifest.json`\n\nIf you'd like to configure the behavior of your Deployment's [Build Step](https://vercel.com/docs/deployments/configure-a-build), you can do so by providing the file mentioned above.\n\nThe following configuration properties are allowed within the configuration file:\n\n| Key | [Type](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Required | Description |\n| --- | --- | --- | --- |\n| version | [Integer](https://vercel.com/docs/rest-api#introduction/api-basics/types) | Yes | The version of the configuration that should be used. The most recent one for this file is currently `1`. |\n| cache | [List](https://vercel.com/docs/rest-api#introduction/api-basics/types) | No  | A list of [Strings](https://vercel.com/docs/rest-api#introduction/api-basics/types) containing [globs](https://github.com/isaacs/node-glob), where each one represents paths that should be [cached](https://vercel.com/docs/deployments/configure-a-build#caching). |\n\nThis is what the configuration file could look like in a real scenario:\n\n```\n{\n  \"version\": 1,\n  \"cache\": [\"build/**/*\"]\n}\n```\n\nYou can add support for framework detection and define default values on Vercel by adding it to the `@vercel/frameworks` package:\n\n1.  Fork the [`vercel/vercel`](https://github.com/vercel/vercel) repository on GitHub.\n2.  Add your framework to the `@vercel/frameworks` package by editing the file [`./packages/frameworks/src/frameworks.ts`](https://github.com/vercel/vercel/blob/master/packages/frameworks/src/frameworks.ts).\n3.  Copy the structure of an existing framework and adjust the fields for the new framework.\n4.  You can add default routes that will always be applied to Projects that use this framework or specify some paths that will be cached to speed up the build process (note that this step can be ignored if the framework makes use of the file system API).\n5.  The `settings` property either contains a `value` _or_ a `placeholder`. If the setting should allow the user to override it, use `placeholder`. To prevent the user from overriding, use `value`. For example, the Output Directory for Hugo is `public` by default, but can be changed through its config file, so we use `placeholder` with an explanation of what can be used.\n6.  Add a template to the [`examples`](https://github.com/vercel/vercel/tree/main/examples) directory: The name of the directory should match the `slug` of the framework used in `@vercel/frameworks`. The `/.github/EXAMPLE_README_TEMPLATE.md` file is a template for creating a `README.md` file for the template.\n7.  Create a Pull Request! After your Pull Request has been merged, someone from Vercel will enable the framework in the API so that anyone can select the framework on the Vercel dashboard and deploy it.",
  "title": "File System API (v2)",
  "description": "The File System API allows you to interact with the file system in a Node.js environment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/project-dashboard",
  "markdown": "# Project Dashboard\n\nEach Vercel project has a separate dashboard to configure settings, view deployments and more.\n\nThis page will teach you about the functionality of the dashboard at a high level, and provide links to resources if you want to learn more in depth.\n\nTo get started with a project on Vercel, see [our project docs](https://vercel.com/docs/projects/overview). You can also [create a new project with one of our templates](https://vercel.com/new/templates).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fproject-tab-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fproject-tab-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Project tab.\n\nThe Project Overview tab provides an overview of your production deployment, including its [active Git branches](#active-branches), [build logs](https://vercel.com/docs/deployments/logs), [runtime logs](https://vercel.com/docs/observability/runtime-logs), [associated domains](https://vercel.com/docs/projects/domains), and more.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Factive-branches-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Factive-branches-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Active Branches section of the Project Overview tab.\n\nThe Project Overview's Active Branches gives you a quick view of your project's branches that are being actively committed to. The metadata we surface on these active branches further enables you to determine whether there's feedback to resolve or a deployment that needs your immediate attention.\n\nIf your project isn't connected to [a Git provider](https://vercel.com/docs/deployments/git), you'll see a **Preview Deployments** section where **Active Branches** should be.\n\nYou can filter the list of active branches by a search term, and see the status of each branch's deployment at a glance with the colored circle icon to the left of the branch name.\n\nFrom the Active Branches section, you can:\n\n*   Redeploy a branch, if you have [the appropriate permissions](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles)\n*   View build logs for a branch's deployment\n*   View a branch's corresponding pull request in your chosen Git provider\n*   Copy a branch's deployment URL for sharing and viewing amongst members of your team. To share the preview with members outside of your team, see [our docs on sharing preview URLs](https://vercel.com/docs/deployments/preview-deployments#sharing-previews).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fdeployments-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fdeployments-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Deployments tab.\n\nThe project dashboard lets you manage all your current and previous deployments associated with your project. To manage a deployment, select the project in the dashboard. Then click the Deployments tab from the top navigation.\n\nYou can sort your deployments by branch, or by status. You can also interact with your deployment by redeploying it, inspecting it, assigning it a domain, and more.\n\nSee [our docs on managing deployments](https://vercel.com/docs/deployments/managing-deployments) to learn more.\n\n![A snapshot of the Speed Insights tab from the project view.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fres-chart-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A snapshot of the Speed Insights tab from the project view.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fres-chart-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA snapshot of the Speed Insights tab from the project view.\n\nYou can learn how users interact with your website by using the [Speed Insights](https://vercel.com/docs/speed-insights) tab. Through [Web Analytics](https://vercel.com/docs/analytics), Vercel exposes data about your audience, such as the top pages, top referrers, and visitor demographics. You can learn about your site's performance with [Speed Insights](https://vercel.com/docs/speed-insights).\n\nTo learn more, see the following docs:\n\n![Layout to visualize the runtime logs.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1686704452%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Fruntime-logs-ui-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Layout to visualize the runtime logs.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1686704452%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Fruntime-logs-ui-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLayout to visualize the runtime logs.\n\nThe Logs tab inside your project dashboard allows you to view, search, inspect, and share your runtime logs without any third-party integration. You can filter and group your runtime logs based on the relevant [fields](https://vercel.com/docs/observability/runtime-logs#log-filters).\n\nLearn more in the [runtime logs docs](https://vercel.com/docs/observability/runtime-logs).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fstorage-tab-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fstorage-tab-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Storage tab.\n\nThe Storage tab lets you manage storage products connected to your project, including:\n\nLearn more in [our storage docs](https://vercel.com/docs/storage).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fproject-settings-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fproject-dashboard%2Fproject-settings-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Settings tab.\n\nThe Settings tab lets you configure your project. You can change the project's name, specify its root directory, configure environment variables and more directly in the dashboard.\n\nLearn more in [our project settings docs](https://vercel.com/docs/projects/overview#project-settings).",
  "title": "Project Dashboard",
  "description": "Learn about the features available for managing projects with the Project Dashboard on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/monorepos",
  "markdown": "# Using Monorepos\n\nMonorepos allow you to manage multiple projects in a single directory. They are a great way to organize your projects and make them easier to work with.\n\nGet started with monorepos on Vercel in a few minutes by using one of our monorepo quickstart templates.\n\nUse the New Project button to import your monorepo Project from within your Personal or Team Account.\n\nIf you'd like to deploy multiple different directories within the same Git repository, you can do so by creating a separate [Project](https://vercel.com/docs/projects/overview) for each directory and configuring the [Root Directory setting](https://vercel.com/docs/deployments/configure-a-build#root-directory) for it.\n\nTo achieve this, [import your Git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository) multiple times, edit the Root Directory in the Project Configuration for each import, and choose the corresponding Project. This will configure the Root Directory of each Project to its relevant directory in the repository.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fcommon%2Fmonorepo-import.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting a Root Directory for one of your new Projects.\n\nOnce you've created a separate Project for each of the directories within your Git repository, every commit will issue a Deployment for all connected Projects and display the resulting URLs on your pull requests and commits:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fgithub-comment.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn example of Deployment URLs provided for a Deployment through Git.\n\nThe number of Vercel Projects connected with the same Git repository is [limited depending on your plan](https://vercel.com/docs/limits/overview#general-limits).\n\nVercel CLI should always be invoked from the monorepo root, not the subdirectory. You should use [Vercel CLI 20.1.0](https://vercel.com/docs/cli#updating-vercel-cli) or newer.\n\nFirst, run `vercel link` to select the Vercel Project. You'll need to select one at a time.\n\nIf you're working in a monorepo using the Git Integration, you can link multiple projects at once using `vc link --repo`. [Visit CLI docs to learn more](https://vercel.com/docs/cli/link#repo-alpha).\n\nOnce linked, subsequent commands such as `vercel dev` will use the selected Vercel Project. To switch to a different Project in the same monorepo, run `vercel link` again and select the new Project.\n\nAlternatively, you can use `git clone` to create multiple copies of your monorepo in different directories and link each one to a different Vercel Project.\n\nSee this [example](https://github.com/vercel-support/yarn-ws-monorepo) of a monorepo with Yarn Workspaces.\n\nPushing a commit to your monorepo will create a Deployment for each of the connected Vercel projects.\n\nIf you want to cancel the Build Step for certain projects if their files didn't change, you can do so with the [Ignored Build Step](https://vercel.com/docs/projects/overview#ignored-build-step) project setting.\n\nIf you have created a script to ignore the build step, you can skip the [the script](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel) when redeploying or promoting your app to production. This can be done through the dashboard when you click on the **Redeploy** button, and unchecking the **Use project's Ignore Build Step** checkbox.\n\nWhen you use [Turborepo](https://vercel.com/docs/monorepos/turborepo), you can intelligently cancel builds using [turbo-ignore](https://vercel.com/docs/monorepos/turborepo#using-turbo-ignore).\n\nWhether or not your deployments are queued depends on the amount of Concurrent Builds you have available. Hobby plans are limited to 1 Concurrent Build, while Pro or Enterprise plans can customize the amount on the \"Billing\" page in the team settings.\n\nLearn more about [Concurrent Builds](https://vercel.com/docs/deployments/concurrent-builds).\n\nAfter having set up your monorepo as described above, each of the directories will be a separate Vercel project, and therefore be available on a separate domain.\n\nIf you'd like to host multiple projects under a single domain, you can create a new project, assign the domain in the project settings, and proxy requests to the other upstream projects. The proxy can be implemented using a `vercel.json` file with the [rewrites](https://vercel.com/docs/projects/project-configuration#rewrites) property, where each `source` is the path under the main domain and each `destination` is the upstream project domain.\n\nPushing a commit to a Git repository that is connected with multiple Vercel projects will result in multiple deployments being created and built in parallel for each.\n\nTo access source files outside the Root Directory, enable the Include source files outside of the Root Directory in the Build Step option in the Root Directory section within the project settings.\n\nFor information on using Yarn workspaces, see [Deploying a Monorepo Using Yarn Workspaces to Vercel](https://vercel.com/guides/deploying-yarn-monorepos-to-vercel).\n\nVercel projects created after August 27th 2020 23:50 UTC have this option enabled by default. If you're using Vercel CLI, at least version 20.1.0 is required.\n\nVercel CLI will accept Environment Variables instead of Project Linking, which can be useful for deployments from CI providers. For example:\n\n```\nVERCEL_ORG_ID=team_123 VERCEL_PROJECT_ID=prj_456 vercel\n```\n\nLearn more about [Vercel CLI for custom workflows](https://vercel.com/guides/using-vercel-cli-for-custom-workflows).\n\nYes. Turborepo is available on all plans.\n\nWhen using [Nx](https://nx.dev/getting-started/intro) on Vercel with [environment variables](https://vercel.com/docs/projects/environment-variables), you may encounter an issue where some of your environment variables are not being assigned the correct value in a specific deployment.\n\nThis can happen if the environment variable is not initialized or defined in that deployment. If that's the case, the system will look for a value in an existing cache which may or may not be the value you would like to use. It is a recommended practice to define all environment variables in each deployment for all monorepos.\n\nWith Nx, you also have the ability to prevent the environment variable from using a cached value. You can do that by using [Runtime Hash Inputs](https://nx.dev/using-nx/caching#runtime-hash-inputs) . For example, if you have an environment variable `MY_VERCEL_ENV` in your project, you will add the following line to your `nx.json` configuration file:\n\n```\n\"runtimeCacheInputs\": [\"echo $MY_VERCEL_ENV\"]\n```",
  "title": "Using Monorepos",
  "description": "Monorepos allow you to manage and organize multiple projects in a single directory so they are easier to work with. Learn how to deploy a monorepo here.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/build-output-api/v3/features",
  "markdown": "# Features\n\nThis section describes how to implement common Vercel platform features through the Build Output API through a combination of platform primitives, configuration and helper functions.\n\nThe `vercel.json` file supports an [easier-to-use syntax for routing through properties like `rewrites`, `headers`, etc](https://vercel.com/docs/projects/project-configuration). However, the [`config.json` \"routes\" property](https://vercel.com/docs/build-output-api/v3/configuration#routes) supports a lower-level syntax.\n\nThe `getTransformedRoutes()` function from the [`@vercel/routing-utils` npm package](https://www.npmjs.com/package/@vercel/routing-utils) can be used to convert this higher-level syntax into the lower-level format that is supported by the Build Output API. For example:\n\n```\nimport { writeFileSync } from 'fs';\nimport { getTransformedRoutes } from '@vercel/routing-utils';\n \nconst { routes } = getTransformedRoutes({\n  trailingSlash: false,\n  redirects: [\n    { source: '/me', destination: '/profile.html' },\n    { source: '/view-source', destination: 'https://github.com/vercel/vercel' },\n  ],\n});\n \nconst config = {\n  version: 3,\n  routes,\n};\nwriteFileSync('.vercel/output/config.json', JSON.stringify(config));\n```\n\nThe [`cleanUrls: true` routing feature](https://vercel.com/docs/projects/project-configuration#cleanurls) is a special case because, in addition to the routes generated with the helper function above, it _also_ requires that the static HTML files have their `.html` suffix removed.\n\nThis can be achieved by utilizing the [`\"overrides\"` property in the `config.json` file](https://vercel.com/docs/build-output-api/v3/configuration#overrides):\n\n```\nimport { writeFileSync } from 'fs';\nimport { getTransformedRoutes } from '@vercel/routing-utils';\n \nconst { routes } = getTransformedRoutes({\n  cleanUrls: true,\n});\n \nconst config = {\n  version: 3,\n  routes,\n  overrides: {\n    'blog.html': {\n      path: 'blog',\n    },\n  },\n};\nwriteFileSync('.vercel/output/config.json', JSON.stringify(config));\n```\n\nAn Edge Runtime function can act as a \"middleware\" in the HTTP request lifecycle for a Deployment. Middleware is useful for implementing functionality that may be shared by many URL paths in a Project (e.g. authentication), before passing the request through to the underlying resource (such as a page or asset) at that path.\n\nAn Edge Middleware is represented on the file system in the same format as an [Edge Function](https://vercel.com/docs/build-output-api/v3#vercel-primitives/edge-functions). To use the middleware, add additional rules in the [`routes` configuration](https://vercel.com/docs/build-output-api/v3/configuration#routes) mapping URLs (using the `src` property) to the middleware (using the `middlewarePath` property).\n\nThe following example adds a rule that calls the `auth` middleware for any URL that starts with `/api`, before continuing to the underlying resource:\n\n```\n  \"routes\": [\n    {\n      \"src\": \"/api/(.*)\",\n      \"middlewareRawSrc\": [\"/api\"],\n      \"middlewarePath\": \"auth\",\n      \"continue\": true\n    }\n  ]\n```\n\nWhen using [Prerender Functions](https://vercel.com/docs/build-output-api/v3/primitives#prerender-functions), you may want to implement \"Draft Mode\" which would allow you to bypass the caching aspect of prerender functions. For example, while writing draft blog posts before they are ready to be published.\n\nTo implement this, the `bypassToken` of the `<name>.prerender-config.json` file should be set to a randomized string that you generate at build-time. This string should not be exposed to users / the client-side, except under authenticated circumstances.\n\nTo enable \"Draft Mode\", a cookie with the name `__prerender_bypass` needs to be set (i.e. by a Serverless Function) with the value of the `bypassToken`. When the Prerender Function endpoint is accessed while the cookie is set, then \"Draft Mode\" will be activated, bypassing any caching that Vercel would normally provide when not in draft mode.\n\nWhen using [Prerender Functions](https://vercel.com/docs/build-output-api/v3/primitives#prerender-functions), you may want to implement \"On-Demand Incremental Static Regeneration (ISR)\" which would allow you to invalidate the cache at any time.\n\nTo implement this, the `bypassToken` of the `<name>.prerender-config.json` file should be set to a randomized string that you generate at build-time. This string should not be exposed to users / the client-side, except under authenticated circumstances.\n\nTo trigger \"On-Demand Incremental Static Regeneration (ISR)\" and revalidate a path to a Prerender Function, make a `GET` or `HEAD` request to that path with a header of `x-prerender-revalidate: <bypassToken>`. When that Prerender Function endpoint is accessed with this header set, the cache will be revalidated. The next request to that function should return a fresh response.",
  "title": "Features",
  "description": "Learn how to implement common Vercel platform features through the Build Output API.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/og-image-generation",
  "markdown": "# Open Graph (OG) Image Generation\n\nTo assist with generating dynamic [Open Graph (OG)](https://ogp.me/) images, you can use the Vercel `@vercel/og` library to compute and generate social card images using [Vercel Edge Functions](https://vercel.com/docs/functions/edge-functions).\n\n*   Performance: With a small amount of code needed to generate images, [functions](https://vercel.com/docs/functions) can be started almost instantly. This allows the image generation process to be fast and recognized by tools like the [Open Graph Debugger](https://en.rakko.tools/tools/9/)\n*   Ease of use: You can define your images using HTML and CSS and the library will dynamically generate images from the markup\n*   Cost-effectiveness: `@vercel/og` automatically adds the correct headers to cache computed images at the edge, helping reduce cost and recomputation\n\n*   Basic CSS layouts including flexbox and absolute positioning\n*   Custom fonts, text wrapping, centering, and nested images\n*   Ability to download the subset characters of the font from Google Fonts\n*   Compatible with any framework and application deployed on Vercel\n*   View your OG image and other metadata before your deployment goes to production through the [Open Graph](https://vercel.com/docs/deployments/og-preview) tab\n\nVercel OG image generation is supported on both the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) and [Node.js runtime](https://vercel.com/docs/functions/runtimes/node-js).\n\nIn the Edge runtime, resources like fonts and images are loaded using the `fetch` method. This is effective for accessing local resources using the `import.meta` syntax. See [using a local image](https://vercel.com/docs/functions/edge-functions/og-image-generation/og-image-examples#using-a-local-image) for more information.\n\nFor the Node.js runtime, local resources can be loaded directly using `fs.readFile`. Alternatively, `fetch` can be used to load remote resources.\n\n```\nconst fs = require('fs').promises;\n \nconst loadLocalImage = async () => {\n  const imageData = await fs.readFile('/path/to/image.png');\n  // Process image data\n};\n```\n\nThere are limitations when using `vercel/og` with the Next.js pages router and the Node.js runtime. Specifically, this combination does not support the `return new Response(…)` syntax. The table below provides a breakdown of the supported syntaxes for different configurations.\n\n| Configuration | Supported Syntax | Notes |\n| --- | --- | --- |\n| `pages/` + Edge runtime | `return new Response(…)` | Fully supported. |\n| `app/` + Node.js runtime | `return new Response(…)` | Fully supported. |\n| `app/` + Edge runtime | `return new Response(…)` | Fully supported. |\n| `pages/` + Node.js runtime | Not supported | Does not support `return new Response(…)` syntax with `vercel/og`. |\n\nIt is recommended to use the Edge runtime with `vercel/og` to avoid this caveat.\n\n*   Install Node.js 20 or newer by visiting [nodejs.org](https://nodejs.org/)\n*   Install `@vercel/og` by running the following command inside your project directory:\n\n*   For Next.js implementations, make sure you are using Next.js v12.2.3 or newer\n*   Create API endpoints that you can call from your front-end to generate the images. Since the HTML code for generating the image is included as one of the parameters of the `ImageResponse` function, the use of `.jsx` or `.tsx` files is recommended as they are designed to handle this kind of syntax\n*   It is [recommended](#runtime-caveats) to use the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) by enabling the `runtime: 'edge'` config flag\n*   To avoid the possibility of social media providers not being able to fetch your image, it is recommended to add your OG image API route(s) to `Allow` inside your `robots.txt` file. For example, if your OG image API route is `/api/og/`, you can add the following line: If you are using Next.js, review [robots.txt](https://nextjs.org/docs/app/api-reference/file-conventions/metadata/robots#static-robotstxt) to learn how to add or generate a `robots.txt` file.\n\nGet started with an example that generates an image from static text using Next.js by setting up a new app with the following command:\n\nCreate an API endpoint by adding `route.tsx` under the `app/api/og` directory in the root of your project.\n\nThen paste the following code:\n\n```\nimport { ImageResponse } from 'next/og';\n// App router includes @vercel/og.\n// No need to install it.\n \nexport async function GET() {\n  return new ImageResponse(\n    (\n      <div\n        style={{\n          fontSize: 40,\n          color: 'black',\n          background: 'white',\n          width: '100%',\n          height: '100%',\n          padding: '50px 200px',\n          textAlign: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        👋 Hello\n      </div>\n    ),\n    {\n      width: 1200,\n      height: 630,\n    },\n  );\n}\n```\n\nIf you're not using a framework, you must either add `\"type\": \"module\"` to your `package.json` or change your JavaScript Functions' file extensions from `.js` to `.mjs`\n\nRun the following command:\n\nThen, browse to `http://localhost:3000/api/og`. You will see the following image:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Fog-image%2Fog-language.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDeploy your project to obtain a publicly accessible path to the OG image API endpoint. You can find an example deployment at [https://og-examples.vercel.sh/api/static](https://og-examples.vercel.sh/api/static).\n\nThen, based on the [Open Graph Protocol](https://ogp.me/#metadata), create the web content for your social media post as follows:\n\n*   Create a `<meta>` tag inside the `<head>` of the webpage\n*   Add the `property` attribute with value `og:image` to the `<meta>` tag\n*   Add the `content` attribute with value as the absolute path of the `/api/og` endpoint to the `<meta>` tag\n\nWith the example deployment at [https://og-examples.vercel.sh/api/static](https://og-examples.vercel.sh/api/static), use the following code:\n\n```\n<head>\n  <title>Hello world</title>\n  <meta\n    property=\"og:image\"\n    content=\"https://og-examples.vercel.sh/api/static\"\n  />\n</head>\n```\n\nEvery time you create a new social media post, you need to update the API endpoint with the new content. However, if you identify which parts of your `ImageResponse` will change for each post, you can then pass those values as parameters of the endpoint so that you can use the same endpoint for all your posts.\n\nIn the examples below, we explore using parameters and including other types of content with `ImageResponse`.\n\n*   Recommended OG image size: 1200x630 pixels\n*   `@vercel/og` uses [Satori](https://github.com/vercel/satori) and Resvg to convert HTML and CSS into PNG\n*   `@vercel/og` [API reference](https://vercel.com/docs/functions/edge-functions/og-image-generation/og-image-api)\n\n*   Only the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-functions-api) is supported. The default Node.js runtime will not work. To use Node.js or any other runtime, you can use [Satori](https://github.com/vercel/satori) directly. However, you will get better performance with `@vercel/og` and the Edge runtime\n*   Only `ttf`, `otf`, and `woff` font formats are supported. To maximize the font parsing speed, `ttf` or `otf` are preferred over `woff`\n*   Only flexbox (`display: flex`) and a subset of CSS properties are supported. Advanced layouts (`display: grid`) will not work. See [Satori](https://github.com/vercel/satori)'s documentation for more details on supported CSS properties\n*   Maximum bundle size of 500KB. The bundle size includes your JSX, CSS, fonts, images, and any other assets. If you exceed the limit, consider reducing the size of any assets or fetching at runtime",
  "title": "Open Graph (OG) Image Generation",
  "description": "Learn how to optimize social media image generation through the Open Graph Protocol and @vercel/og library.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/project-configuration",
  "markdown": "# Configuring Projects with vercel.json\n\nThe `vercel.json` configuration file lets you configure, and override the default behavior of Vercel from within your project. This includes settings for:\n\n*   [buildCommand](#buildcommand)\n*   [cleanUrls](#cleanurls)\n*   [crons](#crons)\n*   [devCommand](#devcommand)\n*   [framework](#framework)\n*   [functions](#functions)\n*   [headers](#headers)\n*   [ignoreCommand](#ignorecommand)\n*   [images](#images)\n*   [installCommand](#installcommand)\n*   [outputDirectory](#outputdirectory)\n*   [public](#public)\n*   [redirects](#redirects)\n*   [regions](#regions)\n*   [functionFailoverRegion](#functionfailoverregions)\n*   [rewrites](#rewrites)\n*   [trailingSlash](#trailingslash)\n\nTo get started, create a `vercel.json` file in your project's root directory.\n\nType: `string | null`\n\nThe `buildCommand` property can be used to override the Build Command in the Project Settings dashboard, and the `build` script from the `package.json` file for a given deployment. For more information on the default behavior of the Build Command, visit the [Configure a Build - Build Command](https://vercel.com/docs/deployments/configure-a-build#build-command) section.\n\n```\n{\n  \"buildCommand\": \"next build\"\n}\n```\n\nThis value overrides the [Build Command](https://vercel.com/docs/deployments/configure-a-build#build-command) in Project Settings.\n\nType: `Boolean`.\n\nDefault Value: `false`.\n\nWhen set to `true`, all HTML files and Serverless Functions will have their extension removed. When visiting a path that ends with the extension, a 308 response will redirect the client to the extensionless path.\n\nFor example, a static file named `about.html` will be served when visiting the `/about` path. Visiting `/about.html` will redirect to `/about`.\n\nSimilarly, a Serverless Function named `api/user.go` will be served when visiting `/api/user`. Visiting `/api/user.go` will redirect to `/api/user`.\n\nIf you are using Next.js and running `vercel dev`, you will get a 404 error when visiting a route configured with `cleanUrls` locally. It does however work fine when deployed to Vercel. In the example above, visiting `/about` locally will give you a 404 with `vercel dev` but `/about` will render correctly on Vercel.\n\nUsed to configure [cron jobs](https://vercel.com/docs/cron-jobs) for the production deployment of a project.\n\nType: `Array` of cron `Object`.\n\nLimits:\n\n*   A maximum of string length of 512 for the `path` value.\n*   A maximum of string length of 256 for the `schedule` value.\n\n*   `path` - Required - The path to invoke when the cron job is triggered. Must start with `/`.\n*   `schedule` - Required - The [cron schedule expression](https://vercel.com/docs/cron-jobs#cron-expressions) to use for the cron job.\n\n```\n{\n  \"crons\": [\n    {\n      \"path\": \"/api/every-minute\",\n      \"schedule\": \"* * * * *\"\n    },\n    {\n      \"path\": \"/api/every-hour\",\n      \"schedule\": \"0 * * * *\"\n    },\n    {\n      \"path\": \"/api/every-day\",\n      \"schedule\": \"0 0 * * *\"\n    }\n  ]\n}\n```\n\nThis value overrides the [Development Command](https://vercel.com/docs/deployments/configure-a-build#development-command) in Project Settings.\n\nType: `string | null`\n\nThe `devCommand` property can be used to override the Development Command in the Project Settings dashboard. For more information on the default behavior of the Development Command, visit the [Configure a Build - Development Command](https://vercel.com/docs/deployments/configure-a-build#development-command) section.\n\n```\n{\n  \"devCommand\": \"next dev\"\n}\n```\n\nThis value overrides the [Framework](https://vercel.com/docs/deployments/configure-a-build#framework-preset) in Project Settings.\n\nType: `string | null`\n\nAvailable framework slugs:\n\nThe `framework` property can be used to override the Framework Preset in the Project Settings dashboard. The value must be a valid framework slug. For more information on the default behavior of the Framework Preset, visit the [Configure a Build - Framework Preset](https://vercel.com/docs/deployments/configure-a-build#framework-preset) section.\n\nTo select \"Other\" as the Framework Preset, use `null`.\n\n```\n{\n  \"framework\": \"nextjs\"\n}\n```\n\nType: `Object` of key `String` and value `Object`.\n\nA [glob](https://github.com/isaacs/node-glob#glob-primer) pattern that matches the paths of the Serverless Functions you would like to customize:\n\n*   `api/*.js` (matches one level e.g. `api/hello.js` but not `api/hello/world.js`)\n*   `api/**/*.ts` (matches all levels `api/hello.ts` and `api/hello/world.ts`)\n*   `src/pages/**/*` (matches all functions from `src/pages`)\n*   `api/test.js`\n\n*   `runtime` (optional): The npm package name of a [Runtime](https://vercel.com/docs/functions/serverless-functions/runtimes), including its version.\n*   `memory` (optional): An integer defining the memory in MB for your Serverless Function (between `128` and `3009`).\n*   `maxDuration` (optional): An integer defining how long your Serverless Function should be allowed to run on every request in seconds (between `1` and the maximum limit of your plan, as mentioned below).\n*   `includeFiles` (optional): A [glob](https://github.com/isaacs/node-glob#glob-primer) pattern to match files that should be included in your Serverless Function. If you’re using a Community Runtime, the behavior might vary. Please consult its documentation for more details. (Not supported in Next.js, instead use [`outputFileTracingIncludes`](https://nextjs.org/docs/app/api-reference/next-config-js/output) in `next.config.js` )\n*   `excludeFiles` (optional): A [glob](https://github.com/isaacs/node-glob#glob-primer) pattern to match files that should be excluded from your Serverless Function. If you’re using a Community Runtime, the behavior might vary. Please consult its documentation for more details. (Not supported in Next.js, instead use [`outputFileTracingIncludes`](https://nextjs.org/docs/app/api-reference/next-config-js/output) in `next.config.js` )\n\nBy default, no configuration is needed to deploy Serverless Functions to Vercel.\n\nFor all [officially supported runtimes](https://vercel.com/docs/functions/serverless-functions/runtimes), the only requirement is to create an `api` directory at the root of your project directory, placing your Serverless Functions inside.\n\nThe `functions` property cannot be used in combination with `builds`. Since the latter is a legacy configuration property, we recommend dropping it in favor of the new one.\n\nBecause [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) uses Serverless Functions, the same configurations apply. The ISR route can be defined using a glob pattern, and accepts the same properties as when using Serverless Functions.\n\nWhen deployed, each Serverless Function receives the following properties:\n\n*   Memory: 1024 MB (1 GB) - (Optional)\n*   Maximum Duration: 10s default - 60s (Hobby), 15s default - 300s (Pro), or 15s default - 900s (Enterprise). This [can be configured](https://vercel.com/docs/functions/serverless-functions/runtimes#maxduration) up to the respective plan limit) - (Optional)\n\nTo configure them, you can add the `functions` property.\n\n```\n{\n  \"functions\": {\n    \"api/test.js\": {\n      \"memory\": 3009,\n      \"maxDuration\": 30\n    },\n    \"api/*.js\": {\n      \"memory\": 3009,\n      \"maxDuration\": 30\n    }\n  }\n}\n```\n\n```\n{\n  \"functions\": {\n    \"pages/blog/[hello].tsx\": {\n      \"memory\": 1024\n    },\n    \"src/pages/isr/**/*\": {\n      \"maxDuration\": 10\n    }\n  }\n}\n```\n\nIn order to use a runtime that is not [officially supported](https://vercel.com/docs/functions/serverless-functions/runtimes), you can add a `runtime` property to the definition:\n\n```\n{\n  \"functions\": {\n    \"api/test.php\": {\n      \"runtime\": \"vercel-php@0.5.2\"\n    }\n  }\n}\n```\n\nIn the example above, the `api/test.php` Serverless Function does not use one of the [officially supported runtimes](https://vercel.com/docs/functions/serverless-functions/runtimes). In turn, a `runtime` property was added in order to invoke the [vercel-php](https://www.npmjs.com/package/vercel-php) community runtime.\n\nFor more information on Runtimes, see the [Runtimes documentation](https://vercel.com/docs/functions/serverless-functions/runtimes):\n\nType: `Array` of header `Object`.\n\nValid values: a list of header definitions.\n\n```\n{\n  \"headers\": [\n    {\n      \"source\": \"/service-worker.js\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=0, must-revalidate\"\n        }\n      ]\n    },\n    {\n      \"source\": \"/(.*)\",\n      \"headers\": [\n        {\n          \"key\": \"X-Content-Type-Options\",\n          \"value\": \"nosniff\"\n        },\n        {\n          \"key\": \"X-Frame-Options\",\n          \"value\": \"DENY\"\n        },\n        {\n          \"key\": \"X-XSS-Protection\",\n          \"value\": \"1; mode=block\"\n        }\n      ]\n    },\n    {\n      \"source\": \"/:path*\",\n      \"has\": [\n        {\n          \"type\": \"query\",\n          \"key\": \"authorized\"\n        }\n      ],\n      \"headers\": [\n        {\n          \"key\": \"x-authorized\",\n          \"value\": \"true\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nThis example configures custom response headers for static files, [Serverless Functions](https://vercel.com/docs/functions/serverless-functions), and a wildcard that matches all routes.\n\n| Property | Description |\n| --- | --- |\n| `source` | A pattern that matches each incoming pathname (excluding querystring). |\n| `headers` | A non-empty array of key/value pairs representing each response header. |\n| `has` | An optional array of `has` objects with the `type`, `key` and `value` properties. Used for conditional path matching based on the presence of specified properties. |\n| `missing` | An optional array of `missing` objects with the `type`, `key` and `value` properties. Used for conditional path matching based on the absence of specified properties. |\n\n| Property | Type | Description |\n| --- | --- | --- |\n| `type` | `String` | Must be either `header`, `cookie`, `host`, or `query`. The `type` property only applies to request headers sent by clients, not response headers sent by your functions or backends. |\n| `key` | `String` | The key from the selected type to match against. |\n| `value` | `String` or not defined | The value to check for, if `undefined` any value will match. A regex like string can be used to capture a specific part of the value, e.g. if the value `first-(?<paramName>.*)` is used for `first-second` then `second` will be usable in the destination with `:paramName`. |\n\nLearn more about [rewrites](https://vercel.com/docs/edge-network/headers) on Vercel and see [limitations](https://vercel.com/docs/edge-network/caching#limits).\n\nThis value overrides the [Ignored Build Step](https://vercel.com/docs/projects/overview#ignored-build-step) in Project Settings.\n\nType: `string | null`\n\nThis `ignoreCommand` property will override the Command for Ignoring the Build Step for a given deployment. When the command exits with code 1, the build will continue. When the command exits with 0, the build is ignored. For more information on the default behavior of the Ignore Command, visit the [Ignored Build Step](https://vercel.com/docs/projects/overview#ignored-build-step) section.\n\n```\n{\n  \"ignoreCommand\": \"git diff --quiet HEAD^ HEAD ./\"\n}\n```\n\nThis value overrides the [Install Command](https://vercel.com/docs/deployments/configure-a-build#install-command) in Project Settings.\n\nType: `string | null`\n\nThe `installCommand` property can be used to override the Install Command in the Project Settings dashboard for a given deployment. This setting is useful for trying out a new package manager for the Project. An empty string value will cause the Install Command to be skipped. For more information on the default behavior of the install command visit the [Configure a Build - Install Command](https://vercel.com/docs/deployments/configure-a-build#install-command) section.\n\n```\n{\n  \"installCommand\": \"npm install\"\n}\n```\n\nThe `images` property defines the behavior of [Vercel's native Image Optimization API](https://vercel.com/docs/image-optimization), which allows on-demand optimization of images at runtime.\n\nType: `Object`\n\n*   `sizes` - Required - Array of allowed image widths. The Image Optimization API will return an error if an image width is requested that is not defined in this list.\n*   `remotePatterns` - Required - Allow-list of external domains which can be used with the Image Optimization API.\n*   `minimumCacheTTL` - Cache duration (in seconds) for the optimized images.\n*   `formats` - Supported output image formats. Allowed values are either `\"image/avif\"` and/or `\"image/webp\"`.\n*   `dangerouslyAllowSVG` - Allow SVG input image URLs. This is disabled by default for security purposes.\n*   `contentSecurityPolicy` - Specifies the [Content Security Policy](https://developer.mozilla.org/docs/Web/HTTP/CSP) of the optimized images.\n*   `contentDispositionType` - Specifies the value of the `\"Content-Disposition\"` response header. Allowed values are `\"inline\"` or `\"attachment\"`.\n\n```\n{\n  \"images\": {\n    \"sizes\": [256, 640, 1080, 2048, 3840],\n    \"remotePatterns\": [\n      {\n        \"protocol\": \"https\",\n        \"hostname\": \"example.com\",\n        \"port\": \"\",\n        \"pathname\": \"/account123/**\"\n      }\n    ],\n    \"minimumCacheTTL\": 60,\n    \"formats\": [\"image/webp\"],\n    \"dangerouslyAllowSVG\": false,\n    \"contentSecurityPolicy\": \"script-src 'none'; frame-src 'none'; sandbox;\",\n    \"contentDispositionType\": \"inline\"\n  }\n}\n```\n\nThis value overrides the [Output Directory](https://vercel.com/docs/deployments/configure-a-build#output-directory) in Project Settings.\n\nType: `string | null`\n\nThe `outputDirectory` property can be used to override the Output Directory in the Project Settings dashboard for a given deployment.\n\nIn the following example, the deployment will look for the `build` directory rather than the default `public` or `.` root directory. For more information on the default behavior of the Output Directory see the [Configure a Build - Output Directory](https://vercel.com/docs/deployments/configure-a-build#output-directory) section. The following example is a `vercel.json` file that overrides the `outputDirectory` to `build`:\n\n```\n{\n  \"outputDirectory\": \"build\"\n}\n```\n\nType: `Boolean`.\n\nDefault Value: `false`.\n\nWhen set to `true`, both the [source view](https://vercel.com/docs/deployments/build-features#source-view) and [logs view](https://vercel.com/docs/deployments/build-features#logs-view) will be publicly accessible.\n\nType: `Array` of redirect `Object`.\n\nValid values: a list of redirect definitions.\n\nThis example redirects requests to the path `/me` from your site's root to the `profile.html` file relative to your site's root with a [307 Temporary Redirect](https://developer.mozilla.org/docs/Web/HTTP/Status/307):\n\n```\n{\n  \"redirects\": [\n    { \"source\": \"/me\", \"destination\": \"/profile.html\", \"permanent\": false }\n  ]\n}\n```\n\nThis example redirects requests to the path `/me` from your site's root to the `profile.html` file relative to your site's root with a [308 Permanent Redirect](https://developer.mozilla.org/docs/Web/HTTP/Status/308):\n\n```\n{\n  \"redirects\": [\n    { \"source\": \"/me\", \"destination\": \"/profile.html\", \"permanent\": true }\n  ]\n}\n```\n\nThis example redirects requests to the path `/user` from your site's root to the api route `/api/user` relative to your site's root with a [301 Moved Permanently](https://developer.mozilla.org/docs/Web/HTTP/Status/301):\n\n```\n{\n  \"redirects\": [\n    { \"source\": \"/user\", \"destination\": \"/api/user\", \"statusCode\": 301 }\n  ]\n}\n```\n\nThis example redirects requests to the path `/view-source` from your site's root to the absolute path `https://github.com/vercel/vercel` of an external site with a redirect status of 308:\n\n```\n{\n  \"redirects\": [\n    {\n      \"source\": \"/view-source\",\n      \"destination\": \"https://github.com/vercel/vercel\"\n    }\n  ]\n}\n```\n\nThis example redirects requests to all the paths (including all sub-directories and pages) from your site's root to the absolute path `https://vercel.com/docs` of an external site with a redirect status of 308:\n\n```\n{\n  \"redirects\": [\n    {\n      \"source\": \"/(.*)\",\n      \"destination\": \"https://vercel.com/docs\"\n    }\n  ]\n}\n```\n\nThis example uses wildcard path matching to redirect requests to any path (including subdirectories) under `/blog/` from your site's root to a corresponding path under `/news/` relative to your site's root with a redirect status of 308:\n\n```\n{\n  \"redirects\": [\n    {\n      \"source\": \"/blog/:path*\",\n      \"destination\": \"/news/:path*\"\n    }\n  ]\n}\n```\n\nThis example uses regex path matching to redirect requests to any path under `/posts/` that only contain numerical digits from your site's root to a corresponding path under `/news/` relative to your site's root with a redirect status of 308:\n\n```\n{\n  \"redirects\": [\n    {\n      \"source\": \"/post/:path(\\\\d{1,})\",\n      \"destination\": \"/news/:path*\"\n    }\n  ]\n}\n```\n\nThis example redirects requests to any path from your site's root that does not start with `/uk/` and has `x-vercel-ip-country` header value of `GB` to a corresponding path under `/uk/` relative to your site's root with a redirect status of 307:\n\n```\n{\n  \"redirects\": [\n    {\n      \"source\": \"/:path((?!uk/).*)\",\n      \"has\": [\n        {\n          \"type\": \"header\",\n          \"key\": \"x-vercel-ip-country\",\n          \"value\": \"GB\"\n        }\n      ],\n      \"destination\": \"/uk/:path*\",\n      \"permanent\": false\n    }\n  ]\n}\n```\n\nUsing `has` does not yet work locally while using `vercel dev`, but does work when deployed.\n\n| Property | Description |\n| --- | --- |\n| `source` | A pattern that matches each incoming pathname (excluding querystring). |\n| `destination` | A location destination defined as an absolute pathname or external URL. |\n| `permanent` | An optional boolean to toggle between permanent and temporary redirect (default `true`). When `true`, the status code is [308](https://developer.mozilla.org/docs/Web/HTTP/Status/308). When `false` the status code is [307](https://developer.mozilla.org/docs/Web/HTTP/Status/307). |\n| `statusCode` | An optional integer to define the status code of the redirect. Used when you need a value other than 307/308 from `permanent`, and therefore cannot be used with `permanent` boolean. |\n| `has` | An optional array of `has` objects with the `type`, `key` and `value` properties. Used for conditional redirects based on the presence of specified properties. |\n| `missing` | An optional array of `missing` objects with the `type`, `key` and `value` properties. Used for conditional redirects based on the absence of specified properties. |\n\n| Property | Type | Description |\n| --- | --- | --- |\n| `type` | `String` | Must be either `header`, `cookie`, `host`, or `query`. |\n| `key` | `String` | The key from the selected type to match against. |\n| `value` | `String` or not defined | The value to check for, if `undefined` any value will match. A regex like string can be used to capture a specific part of the value. See example. |\n\nLearn more about [redirects on Vercel](https://vercel.com/docs/edge-network/redirects) and see [limitations](https://vercel.com/docs/edge-network/redirects#limits).\n\nThis value overrides the [Serverless Function Region](https://vercel.com/docs/functions/serverless-functions/regions) in Project Settings.\n\nType: `Array` of region identifier `String`.\n\nValid values: List of [regions](https://vercel.com/docs/edge-network/regions), defaults to `iad1`.\n\nSelect the deployment regions of [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) in your application. Deploying to multiple regions (or `all`) is limited to [Enterprise plans](https://vercel.com/enterprise), but Pro and Hobby plans can select any single region.\n\nFunction responses [can be cached](https://vercel.com/docs/edge-network/caching) in the requested regions. Selecting a Serverless Function region does not impact static files, which are deployed to every region by default.\n\nSet this property to specify the [region](https://vercel.com/docs/functions/serverless-functions/regions) to which a Serverless Function should fallback when the default region(s) are unavailable.\n\nType: `Array` of region identifier `String`.\n\nValid values: List of [regions](https://vercel.com/docs/edge-network/regions).\n\n```\n{\n  \"functionFailoverRegions\": [\"iad1\", \"sfo1\"]\n}\n```\n\nThese regions serve as a fallback to any regions specified in the [`regions` configuration](https://vercel.com/docs/projects/project-configuration#regions). The region Vercel selects to invoke your function depends on availability and ingress. For instance:\n\n*   Vercel always attempts to invoke the function in the primary region. If you specify more than one primary region in the `regions` property, Vercel selects the region geographically closest to the request\n*   If all primary regions are unavailable, Vercel automatically fails over to the regions specified in `functionFailoverRegions`, selecting the region geographically closest to the request\n*   The order of the regions in `functionFailoverRegions` does not matter as Vercel automatically selects the region geographically closest to the request\n\nTo learn more about automatic failover for Serverless Functions, see [Automatic failover](https://vercel.com/docs/functions/configuring-functions/region#serverless-functions-failover). Edge Functions will [automatically failover](https://vercel.com/docs/functions/configuring-functions/region#edge-functions-failover) with no configuration required.\n\nRegion failover is supported with Secure Compute, see [Region Failover](https://vercel.com/docs/security/secure-compute#region-failover) to learn more.\n\nType: `Array` of rewrite `Object`.\n\nValid values: a list of rewrite definitions.\n\nThis example rewrites requests to the path `/about` from your site's root to the `/about-our-company.html` file relative to your site's root:\n\n```\n{\n  \"rewrites\": [{ \"source\": \"/about\", \"destination\": \"/about-our-company.html\" }]\n}\n```\n\nThis example rewrites requests to the paths under `/resize` that with 2 paths levels (defined as variables `width` and `height` that can be used in the destination value) to the api route `/api/sharp` relative to your site's root:\n\n```\n{\n  \"rewrites\": [\n    { \"source\": \"/resize/:width/:height\", \"destination\": \"/api/sharp\" }\n  ]\n}\n```\n\nThis example uses wildcard path matching to rewrite requests to any path (including subdirectories) under `/proxy/` from your site's root to a corresponding path under the root of an external site `https://example.com/`:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/proxy/:match*\",\n      \"destination\": \"https://example.com/:match*\"\n    }\n  ]\n}\n```\n\nThis example rewrites requests to any path from your site's root that does not start with /uk/ and has x-vercel-ip-country header value of GB to a corresponding path under /uk/ relative to your site's root:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/:path((?!uk/).*)\",\n      \"has\": [\n        {\n          \"type\": \"header\",\n          \"key\": \"x-vercel-ip-country\",\n          \"value\": \"GB\"\n        }\n      ],\n      \"destination\": \"/uk/:path*\"\n    }\n  ]\n}\n```\n\nThis example rewrites requests to the path `/dashboard` from your site's root that does not have a cookie with key `auth_token` to the path `/login` relative to your site's root:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/dashboard\",\n      \"missing\": [\n        {\n          \"type\": \"cookie\",\n          \"key\": \"auth_token\"\n        }\n      ],\n      \"destination\": \"/login\"\n    }\n  ]\n}\n```\n\n| Property | Description |\n| --- | --- |\n| `source` | A pattern that matches each incoming pathname (excluding querystring). |\n| `destination` | A location destination defined as an absolute pathname or external URL. |\n| `permanent` | A boolean to toggle between permanent and temporary redirect (default true). When `true`, the status code is [308](https://developer.mozilla.org/docs/Web/HTTP/Status/308). When `false` the status code is [307](https://developer.mozilla.org/docs/Web/HTTP/Status/307). |\n| `has` | An optional array of `has` objects with the `type`, `key` and `value` properties. Used for conditional rewrites based on the presence of specified properties. |\n| `missing` | An optional array of `missing` objects with the `type`, `key` and `value` properties. Used for conditional rewrites based on the absence of specified properties. |\n\n| Property | Type | Description |\n| --- | --- | --- |\n| `type` | `String` | Must be either `header`, `cookie`, `host`, or `query`. |\n| `key` | `String` | The key from the selected type to match against. |\n| `value` | `String` or not defined | The value to check for, if `undefined` any value will match. A regex like string can be used to capture a specific part of the value, e.g. if the value `first-(?<paramName>.*)` is used for `first-second` then `second` will be usable in the destination with `:paramName`. |\n\nThe `source` property should NOT be a file because precedence is given to the filesystem prior to rewrites being applied. Instead, you should rename your static file or Serverless Function.\n\nUsing `has` does not yet work locally while using `vercel dev`, but does work when deployed.\n\nLearn more about [rewrites](https://vercel.com/docs/edge-network/rewrites) on Vercel.\n\nType: `Boolean`.\n\nDefault Value: `undefined`.\n\nWhen `trailingSlash: false`, visiting a path that ends with a forward slash will respond with a 308 status code and redirect to the path without the trailing slash.\n\nFor example, the `/about/` path will redirect to `/about`.\n\n```\n{\n  \"trailingSlash\": false\n}\n```\n\nWhen `trailingSlash: true`, visiting a path that does not end with a forward slash will respond with a 308 status code and redirect to the path with a trailing slash.\n\nFor example, the `/about` path will redirect to `/about/`.\n\nHowever, paths with a file extension will not redirect to a trailing slash.\n\nFor example, the `/about/styles.css` path will not redirect, but the `/about/styles` path will redirect to `/about/styles/`.\n\n```\n{\n  \"trailingSlash\": true\n}\n```\n\nWhen `trailingSlash: undefined`, visiting a path with or without a trailing slash will not redirect.\n\nFor example, both `/about` and `/about/` will serve the same content without redirecting.\n\nThis is not recommended because it could lead to search engines indexing two different pages with duplicate content.\n\nLegacy properties are still supported for backwards compatibility, but are deprecated.\n\nThe `name` property has been deprecated in favor of [Project Linking](https://vercel.com/docs/cli/project-linking), which allows you to link a Vercel Project to your local codebase when you run `vercel`.\n\nType: `String`.\n\nValid values: string name for the deployment.\n\nLimits:\n\n*   A maximum length of 52 characters\n*   Only lower case alphanumeric characters or hyphens are allowed\n*   Cannot begin or end with a hyphen, or contain multiple consecutive hyphens\n\nThe prefix for all new deployment instances. Vercel CLI usually generates this field automatically based on the name of the directory. But if you'd like to define it explicitly, this is the way to go.\n\nThe defined name is also used to organize the deployment into [a project](https://vercel.com/docs/projects/overview).\n\n```\n{\n  \"name\": \"example-app\"\n}\n```\n\nThe `version` property should not be used anymore.\n\nType: `Number`.\n\nValid values: `1`, `2`.\n\nSpecifies the Vercel Platform version the deployment should use.\n\nThe `alias` property should not be used anymore. To assign a custom Domain to your Project, please [define it in the Project Settings](https://vercel.com/docs/projects/domains/add-a-domain) instead. Once your domains are, they will take precedence over the configuration property.\n\nType: `Array` or `String`.\n\nValid values: [domain names](https://vercel.com/docs/projects/domains/add-a-domain) (optionally including subdomains) added to the account, or a string for a suffixed URL using `.vercel.app` or a Custom Deployment Suffix ([available on the Enterprise plan](https://vercel.com/pricing)).\n\nLimit: A maximum of 64 aliases in the array.\n\nThe alias or aliases are applied automatically using [Vercel for GitHub](https://vercel.com/docs/deployments/git/vercel-for-github), [Vercel for GitLab](https://vercel.com/docs/deployments/git/vercel-for-gitlab), or [Vercel for Bitbucket](https://vercel.com/docs/deployments/git/vercel-for-bitbucket) when merging or pushing to the [Production Branch](https://vercel.com/docs/deployments/git#production-branch).\n\nYou can deploy to the defined aliases using [Vercel CLI](https://vercel.com/docs/cli) by setting the [production deployment environment target](https://vercel.com/docs/projects/domains/deploying-and-redirecting).\n\n```\n{\n  \"alias\": [\"my-domain.com\", \"my-alias\"]\n}\n```\n\nThe `scope` property has been deprecated in favor of [Project Linking](https://vercel.com/docs/cli/project-linking), which allows you to link a Vercel Project to your local codebase when you run `vercel`.\n\nType: `String`.\n\nValid values: For teams, either an ID or slug. For users, either a email address, username, or ID.\n\nThis property determines the scope ([Hobby account](https://vercel.com/docs/accounts/create-an-account#creating-a-hobby-account) or [team](https://vercel.com/docs/accounts/create-a-team)) under which the project will be deployed by [Vercel CLI](https://vercel.com/cli).\n\nIt also affects any other actions that the user takes within the directory that contains this configuration (e.g. listing [Environment Variables](https://vercel.com/docs/projects/environment-variables) using `vercel secrets ls`).\n\nDeployments made through [Git](https://vercel.com/docs/deployments/git) will ignore the `scope` property because the repository is already connected to [project](https://vercel.com/docs/projects/overview).\n\nWe recommend against using this property. To add custom Environment Variables to your Project [define them in the Project Settings](https://vercel.com/docs/projects/environment-variables).\n\nType: `Object` of `String` keys and values.\n\nValid values: environment keys and values.\n\nEnvironment variables passed to the invoked [Serverless Functions](https://vercel.com/docs/functions/serverless-functions).\n\nThis example will pass the `MY_KEY` static env to all [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) and the `SECRET` resolved from the `my-secret-name` [secret](https://vercel.com/docs/projects/environment-variables/reserved-environment-variables) dynamically.\n\n```\n{\n  \"env\": {\n    \"MY_KEY\": \"this is the value\",\n    \"SECRET\": \"@my-secret-name\"\n  }\n}\n```\n\nWe recommend against using this property. To add custom Environment Variables to your Project [define them in the Project Settings](https://vercel.com/docs/projects/environment-variables).\n\nType: `Object` of `String` keys and values inside the `build` `Object`.\n\nValid values: environment keys and values.\n\n[Environment variables](https://vercel.com/docs/projects/environment-variables) passed to the [Build](https://vercel.com/docs/deployments/configure-a-build) processes.\n\nThe following example will pass the `MY_KEY` Environment Variable to all [Builds](https://vercel.com/docs/deployments/configure-a-build) and the `SECRET` resolved from the `my-secret-name` [secret](https://vercel.com/docs/projects/environment-variables/reserved-environment-variables) dynamically.\n\n```\n{\n  \"env\": {\n    \"MY_KEY\": \"this is the value\",\n    \"SECRET\": \"@my-secret-name\"\n  }\n}\n```\n\nWe recommend against using this property. To customize Serverless Functions, please use the [functions](#functions) property instead. If you'd like to deploy a monorepo, see the [Monorepo docs](https://vercel.com/docs/monorepos).\n\nType: `Array` of build `Object`.\n\nValid values: a list of build descriptions whose `src` references valid source files.\n\n*   `src` (`String`): A glob expression or pathname. If more than one file is resolved, one build will be created per matched file. It can include `*` and `**`.\n*   `use` (`String`): An npm module to be installed by the build process. It can include a semver compatible version (e.g.: `@org/proj@1`).\n*   `config` (`Object`): Optionally, an object including arbitrary metadata to be passed to the Builder.\n\nThe following will include all HTML files as-is (to be served statically), and build all Python files and JS files into [Serverless Functions](https://vercel.com/docs/functions/serverless-functions):\n\n```\n{\n  \"builds\": [\n    { \"src\": \"*.html\", \"use\": \"@vercel/static\" },\n    { \"src\": \"*.py\", \"use\": \"@vercel/python\" },\n    { \"src\": \"*.js\", \"use\": \"@vercel/node\" }\n  ]\n}\n```\n\nWhen at least one `builds` item is specified, only the outputs of the build processes will be included in the resulting deployment as a security precaution. This is why we need to allowlist static files explicitly with `@vercel/static`.\n\nWe recommend using [cleanUrls](#cleanurls), [trailingSlash](#trailingslash), [redirects](#redirects), [rewrites](#rewrites), and/or [headers](#headers) instead.\n\nThe `routes` property is only meant to be used for advanced integration purposes, such as the [Build Output API](https://vercel.com/docs/build-output-api/v3), and cannot be used in conjunction with any of the properties mentioned above.\n\nSee the [upgrading routes section](#upgrading-legacy-routes) to learn how to migrate away from this property.\n\nType: `Array` of route `Object`.\n\nValid values: a list of route definitions.\n\n*   `src`: A [PCRE-compatible regular expression](https://www.pcre.org/original/doc/html/pcrepattern.html) that matches each incoming pathname (excluding querystring).\n*   `methods`: A set of HTTP method types. If no method is provided, requests with any HTTP method will be a candidate for the route.\n*   `dest`: A destination pathname or full URL, including querystring, with the ability to embed capture groups as $1, $2…\n*   `headers`: A set of headers to apply for responses.\n*   `status`: A status code to respond with. Can be used in tandem with `Location:` header to implement redirects.\n*   `continue`: A boolean to change matching behavior. If `true`, routing will continue even when the `src` is matched.\n*   `has`: An optional array of `has` objects with the `type`, `key` and `value` properties. Used for conditional path matching based on the presence of specified properties\n*   `missing`: An optional array of `missing` objects with the `type`, `key` and `value` properties. Used for conditional path matching based on the absence of specified properties\n\nRoutes are processed in the order they are defined in the array, so wildcard/catch-all patterns should usually be last.\n\nThis example configures custom routes that map to static files and [Serverless Functions](https://vercel.com/docs/functions/serverless-functions):\n\n```\n{\n  \"routes\": [\n    {\n      \"src\": \"/redirect\",\n      \"status\": 308,\n      \"headers\": { \"Location\": \"https://example.com/\" }\n    },\n    {\n      \"src\": \"/custom-page\",\n      \"headers\": { \"cache-control\": \"s-maxage=1000\" },\n      \"dest\": \"/index.html\"\n    },\n    { \"src\": \"/api\", \"dest\": \"/my-api.js\" },\n    { \"src\": \"/users\", \"methods\": [\"POST\"], \"dest\": \"/users-api.js\" },\n    { \"src\": \"/users/(?<id>[^/]*)\", \"dest\": \"/users-api.js?id=$id\" },\n    { \"src\": \"/legacy\", \"status\": 404 },\n    { \"src\": \"/.*\", \"dest\": \"https://my-old-site.com\" }\n  ]\n}\n```\n\nIn most cases, you can upgrade legacy `routes` usage to the newer [`rewrites`](https://vercel.com/docs/projects/project-configuration#rewrites), [`redirects`](https://vercel.com/docs/projects/project-configuration#redirects), [`headers`](https://vercel.com/docs/projects/project-configuration#headers), [`cleanUrls`](https://vercel.com/docs/projects/project-configuration#cleanurls) or [`trailingSlash`](https://vercel.com/docs/projects/project-configuration#trailingslash) properties.\n\nHere are some examples that show how to upgrade legacy `routes` to the equivalent new property.\n\nWith `routes`, you use a [PCRE Regex](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) named group to match the ID and then pass that parameter in the query string. The following example matches a URL like `/product/532004` and proxies to `/api/product?id=532004`:\n\n```\n{\n  \"routes\": [{ \"src\": \"/product/(?<id>[^/]+)\", \"dest\": \"/api/product?id=$id\" }]\n}\n```\n\nWith [`rewrites`](https://vercel.com/docs/projects/project-configuration#rewrites), named parameters are automatically passed in the query string. The following example is equivalent to the legacy `routes` usage above, but uses `rewrites` instead:\n\n```\n{\n  \"rewrites\": [{ \"source\": \"/product/:id\", \"destination\": \"/api/product\" }]\n}\n```\n\nWith `routes`, you specify the status code to use a 307 Temporary Redirect. Also, this redirect needs to be defined before other routes. The following example redirects all paths in the `posts` directory to the `blog` directory, but keeps the path in the new location:\n\n```\n{\n  \"routes\": [\n    {\n      \"src\": \"/posts/(.*)\",\n      \"headers\": { \"Location\": \"/blog/$1\" },\n      \"status\": 307\n    }\n  ]\n}\n```\n\nWith [`redirects`](https://vercel.com/docs/projects/project-configuration#redirects), you disable the `permanent` property to use a 307 Temporary Redirect. Also, `redirects` are always processed before `rewrites`. The following example is equivalent to the legacy `routes` usage above, but uses `redirects` instead:\n\n```\n{\n  \"redirects\": [\n    {\n      \"source\": \"/posts/:id\",\n      \"destination\": \"/blog/:id\",\n      \"permanent\": false\n    }\n  ]\n}\n```\n\nWith `routes`, you use `\"handle\": \"filesystem\"` to give precedence to the filesystem and exit early if the requested path matched a file. The following example will serve the `index.html` file for all paths that do not match a file in the filesystem:\n\n```\n{\n  \"routes\": [\n    { \"handle\": \"filesystem\" },\n    { \"src\": \"/(.*)\", \"dest\": \"/index.html\" }\n  ]\n}\n```\n\nWith [`rewrites`](https://vercel.com/docs/projects/project-configuration#rewrites), the filesystem check is the default behavior. If you want to change the name of files at the filesystem level, file renames can be performed during the [Build Step](https://vercel.com/docs/deployments/configure-a-build), but not with `rewrites`. The following example is equivalent to the legacy `routes` usage above, but uses `rewrites` instead:\n\n```\n{\n  \"rewrites\": [{ \"source\": \"/(.*)\", \"destination\": \"/index.html\" }]\n}\n```\n\nWith `routes`, you use `\"continue\": true` to prevent stopping at the first match. The following example adds `Cache-Control` headers to the favicon and other static assets:\n\n```\n{\n  \"routes\": [\n    {\n      \"src\": \"/favicon.ico\",\n      \"headers\": { \"Cache-Control\": \"public, max-age=3600\" },\n      \"continue\": true\n    },\n    {\n      \"src\": \"/assets/(.*)\",\n      \"headers\": { \"Cache-Control\": \"public, max-age=31556952, immutable\" },\n      \"continue\": true\n    }\n  ]\n}\n```\n\nWith [`headers`](https://vercel.com/docs/projects/project-configuration#headers), this is no longer necessary since that is the default behavior. The following example is equivalent to the legacy `routes` usage above, but uses `headers` instead:\n\n```\n{\n  \"headers\": [\n    {\n      \"source\": \"/favicon.ico\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=3600\"\n        }\n      ]\n    },\n    {\n      \"source\": \"/assets/(.*)\",\n      \"headers\": [\n        {\n          \"key\": \"Cache-Control\",\n          \"value\": \"public, max-age=31556952, immutable\"\n        }\n      ]\n    }\n  ]\n}\n```\n\nWith `routes`, you need to escape a dot with two backslashes, otherwise it would match any character [PCRE Regex](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions). The following example matches the literal `atom.xml` and proxies to `/api/rss` to dynamically generate RSS:\n\n```\n{\n  \"routes\": [{ \"src\": \"/atom\\\\.xml\", \"dest\": \"/api/rss\" }]\n}\n```\n\nWith [`rewrites`](https://vercel.com/docs/projects/project-configuration#rewrites), the `.` is not a special character so it does not need to be escaped. The following example is equivalent to the legacy `routes` usage above, but instead uses `rewrites`:\n\n```\n{\n  \"rewrites\": [{ \"source\": \"/atom.xml\", \"destination\": \"/api/rss\" }]\n}\n```\n\nWith `routes`, you use [PCRE Regex](https://en.wikipedia.org/wiki/Perl_Compatible_Regular_Expressions) negative lookahead. The following example proxies all requests to the `/maintenance` page except for `/maintenance` itself to avoid infinite loop:\n\n```\n{\n  \"routes\": [{ \"src\": \"/(?!maintenance)\", \"dest\": \"/maintenance\" }]\n}\n```\n\nWith [`rewrites`](https://vercel.com/docs/projects/project-configuration#rewrites), the Regex needs to be wrapped. The following example is equivalent to the legacy `routes` usage above, but instead uses `rewrites`:\n\n```\n{\n  \"rewrites\": [\n    { \"source\": \"/((?!maintenance).*)\", \"destination\": \"/maintenance\" }\n  ]\n}\n```\n\nWith `routes`, the `src` property is case-insensitive leading to duplicate content, where multiple request paths with difference cases serve the same page.\n\nWith [`rewrites`](https://vercel.com/docs/projects/project-configuration#rewrites) / [`redirects`](https://vercel.com/docs/projects/project-configuration#redirects) / [`headers`](https://vercel.com/docs/projects/project-configuration#headers), the `source` property is case-sensitive so you don't accidentally create duplicate content.",
  "title": "Configuring Projects with vercel.json",
  "description": "Learn how to use vercel.json to configure and override the default behavior of Vercel from within your project. ",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/add-a-domain",
  "markdown": "# Adding & Configuring a Custom Domain\n\nVercel provides all deployments with a `vercel.app` URL, which enables you to share Deployments with your Team for collaboration. However, to provide greater personalization and flexibility to your project, you can instead add a custom domain. If you don't own a domain yet, you can [purchase it with Vercel](https://vercel.com/domains).\n\nYou can manage all domain settings related to a project in the Domains section of the Settings tab of the project, regardless of whether you are using [apex domains](#apex-domains) or [subdomains](#subdomains) in your project. This document will guide you through both options.\n\nHobby accounts have a limit of 50 custom domains per project.\n\nThe following steps provide an overview of how to add and configure a custom domain in Vercel:\n\n1.  On the [dashboard](https://vercel.com/dashboard), pick the project to which you would like to assign your domain.\n    \n    Once you have selected your project, click on the Settings tab and then select the Domains menu item:\n    \n    ![Selecting the Domains menu item from the Project Settings page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fselect-domains-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting the Domains menu item from the Project Settings page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fselect-domains-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Selecting the Domains menu item from the Project Settings page.\n    \n2.  From the Domains page, enter the domain you wish to add to the project:\n    \n    ![Entering a domain for the project from the Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fenter-domain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Entering a domain for the project from the Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fenter-domain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Entering a domain for the project from the Domains page.\n    \n    If you add an apex domain (e.g. `example.com`) to the project, Vercel will prompt you to add the `www` subdomain prefix, the apex domain, and [some basic redirection options](https://vercel.com/docs/projects/domains/deploying-and-redirecting). For more information on which redirect option to choose, see \"[Redirecting `www` domains](https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-www-domains)\".\n    \n    ![Choosing redirect options for your apex domain.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fwww-modal.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Choosing redirect options for your apex domain.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fwww-modal-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Choosing redirect options for your apex domain.\n    \n    You can use your custom domain as a wildcard domain by prefixing it with `*.`.\n    \n    If using your **custom domain** as a **wildcard** domain, you **must use the nameservers method for verification**.\n    \n    To add a wildcard domain, use the prefix `*`, for example `*.acme.com`.\n    \n    ![A wildcard domain being deployed.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fwildcard-domain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A wildcard domain being deployed.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fwildcard-domain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    A wildcard domain being deployed.\n    \n3.  Once you have added your custom domain, you will need to configure the DNS records of your domain with your registrar so it can be used with your Project. The dashboard will automatically display different methods for configuring it:\n    \n    *   If the domain is in use by another Vercel account, you will need to [verify access to the domain](#verify-domain-access), with a TXT record\n    *   If you're using an [Apex domain](#apex-domains) (e.g. example.com), you will need to configure it with an A record\n    *   If you're using a [Subdomain](#subdomains) (e.g. docs.example.com), you will need to configure it with a CNAME record\n    \n    Both apex domains and subdomains can also be configured using the [Nameservers](#vercel-nameservers) method.\n    \n    If you are verifying your domain by changing nameservers, you will need to add any DNS records to Vercel that you wish to keep from your previous DNS provider.\n    \n    You can configure apex domains either with a A record or through the Nameservers method.\n    \n    ![Instructions on configuring an apex domain from the Project Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fconfigure-apex-domain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Instructions on configuring an apex domain from the Project Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fconfigure-apex-domain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Instructions on configuring an apex domain from the Project Domains page.\n    \n    You can configure subdomains either with a CNAME record or through the Nameservers method.\n    \n    ![Instructions on configuring a subdomain from the Project Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fconfigure-subdomain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Instructions on configuring a subdomain from the Project Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fconfigure-subdomain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Instructions on configuring a subdomain from the Project Domains page.\n    \n    If you choose to use Vercel's nameservers for either [apex domains](#apex-domains) or [subdomains](#subdomains), click on the Enable Vercel DNS button to opt in. Once enabled, you will be provided with the Vercel nameservers to copy and use with your registrar.\n    \n    ![Instructions on opting in to use Vercel Nameservers.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fenable-vercel-dns.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Instructions on opting in to use Vercel Nameservers.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fenable-vercel-dns-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Instructions on opting in to use Vercel Nameservers.\n    \n    If the domain is in use by another Vercel account, you may be prompted to verify access to the domain. Note that this will not move the domain into your account, but will allow you to use it in your project.\n    \n    ![Instructions on verifying a domain by setting a DNS record on the apex domain.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fverify-domain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Instructions on verifying a domain by setting a DNS record on the apex domain.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fverify-domain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Instructions on verifying a domain by setting a DNS record on the apex domain.\n    \n\nOnce the domain has been configured and Vercel has verified it, the status of the domain will be updated within the UI to confirm that it is ready for use.\n\n![A configured domain on the Project Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fconfigured-domain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A configured domain on the Project Domains page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fconfigured-domain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA configured domain on the Project Domains page.\n\nIf a someone visits your domain with or without the \"www\" subdomain prefix, Vercel will attempt to redirect them to your domain. For more robust protection, you should explicitly add this domain and [redirect it](https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-domains) .",
  "title": "Adding & Configuring a Custom Domain",
  "description": "Learn how to add a custom domain to your Vercel project, verify it, and correctly set the DNS or Nameserver values.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/git/vercel-for-gitlab",
  "markdown": "# Deploying GitLab Projects with Vercel\n\n​Vercel for GitLab automatically deploys your GitLab projects with [Vercel](https://vercel.com/), providing [Preview Deployment URLs](https://vercel.com/docs/deployments/preview-deployments#preview-urls), and automatic [Custom Domain](https://vercel.com/docs/projects/domains/working-with-domains) updates.\n\nThe [Deploying a Git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository) guide outlines how to create a new Vercel Project from a GitLab repository, and enable automatic deployments on every branch push.\n\nIf you'd like to connect your Vercel Project to a different GitLab repository or disconnect it, you can do so from the [Git section](https://vercel.com/docs/projects/overview#git) in the Project Settings.\n\nVercel for GitLab will deploy each push by default. This includes pushes and pull requests made to branches. This allows those working within the project to preview the changes made before they are pushed to production.\n\nWith each new push, if Vercel is already building a previous commit on the same branch, the current build will complete and any commit pushed during this time will be queued. Once the first build completes, the most recent commit will begin deployment and the other queued builds will be cancelled. This ensures that you always have the latest changes deployed as quickly as possible.\n\nIf [Custom Domains](https://vercel.com/docs/projects/custom-domains) are set from a project domains dashboard, pushes and merges to the [Production Branch](https://vercel.com/docs/deployments/git#production-branch) (commonly \"main\") will be made live to those domains with the latest deployment made with a push.\n\nIf you decide to revert a commit that has already been deployed to production, the previous [Production Deployment](https://vercel.com/docs/deployments/environments#production) from a commit will automatically be made available at the [Custom Domain](https://vercel.com/docs/projects/custom-domains) instantly; providing you with instant rollbacks.\n\nThe latest push to any [merge request](https://docs.gitlab.com/ee/user/project/merge_requests/) will automatically be made available at a unique preview URL based on the project name, branch, and team or username. These URLs will be provided through a comment on each merge request.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fguides%2Fgetting-started-with-vercel-for-gitlab%2Fmerge-request-alias.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA preview URL created from a merge request.\n\nYou may want to use different workflows and APIs based on Git information. To support this, the following [System Environment Variables](https://vercel.com/docs/projects/environment-variables#system-environment-variables) are exposed to your Deployments:\n\n  \n\n| Name | Description | Available at [Build](https://vercel.com/docs/deployments/configure-a-build) and/or [Run](https://vercel.com/docs/functions) Time |\n| --- | --- | --- |\n| `VERCEL_GIT_PROVIDER` | The Git Provider the deployment is triggered from. In the case of GitLab, the value is always `gitlab`. | both |\n| `VERCEL_GIT_REPO_SLUG` | The GitLab name of the deployed project. Example: `my-site`. | both |\n| `VERCEL_GIT_REPO_OWNER` | The GitLab user, group, or sub-group that the project belongs to. Example: `acme`. | both |\n| `VERCEL_GIT_REPO_ID` | The GitLab ID of the deployed project. Example: `13343236`. | both |\n| `VERCEL_GIT_COMMIT_REF` | The GitLab branch that the deployment was triggered by. Example: `improve-about-page`. | both |\n| `VERCEL_GIT_COMMIT_SHA` | The GitLab sha of the commit the deployment was triggered by. Example: `fa1eade47b73733d6312d5abfad33ce9e4068081`. | both |\n| `VERCEL_GIT_COMMIT_MESSAGE` | The message accompanying the GitLab commit that the deployment was triggered by. Example: `Add John Doe to about page`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_LOGIN` | The username belonging to the author of the commit that was deployed on GitLab. Example: `johndoe`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_NAME` | The name belonging to the author of the commit that was deployed on GitLab. Example: `John Doe`. | both |\n| `VERCEL_GIT_PULL_REQUEST_ID` | The GitLab merge request id the deployment was triggered by. If a deployment is created on a branch before a merge request is made, this value will be an empty string. Example: `23`. | both |\n\nWe require some permissions through our Vercel for GitLab integration. Below are listed the permissions required and a description for what they are used for.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `API` | Y   | Y   | Allows us access to the API—including all groups and projects, the container registry, and the package registry—to clone repositories and add comments to pull requests and commits. |\n\nWe use the permissions above in order to provide you with the best possible deployment experience. If you have any questions or concerns about any of the permission scopes, please [contact Vercel Support](https://vercel.com/help#issues).\n\nTo sign up on Vercel with a different GitLab account, sign out of your current GitLab account.\n\nThen, restart the Vercel [signup process](https://vercel.com/signup).\n\nWhen importing or connecting a GitLab repository, we require that you have **Maintainer** access to the corresponding repository, so that we can configure a webhook and automatically deploy pushed commits.\n\nIf a repository is missing when you try to import or connect it, make sure that you have [Maintainer access configured for the repository](https://docs.gitlab.com/ee/user/project/members/).\n\nBy default, comments from the Vercel bot will appear on your pull requests and commits. You can silence these comments in your project's settings:\n\n1.  From the Vercel [dashboard](https://vercel.com/dashboard), select your project\n2.  From the Settings tab, select Git\n3.  Under Connected Git Repository, toggle the switches to your preference\n\nIt is currently not possible to prevent comments for specific branches.\n\nYou can use GitLab Pipelines to build and deploy your Vercel Application.\n\n`vercel build` allows you to build your project inside GitLab Pipelines, without exposing your source code to Vercel. Then, `vercel deploy --prebuilt` skips the build step on Vercel and uploads the previously generated `.vercel/output` folder to Vercel from the GitLab Pipeline.\n\n[Learn more about how to configure GitLab Pipelines and Vercel](https://vercel.com/guides/how-can-i-use-gitlab-pipelines-with-vercel) for custom CI/CD workflows.\n\nIn some cases, your GitLab merge pipeline can fail while your branch pipeline succeeds, allowing your merge requests to [merge with failing tests](https://gitlab.com/gitlab-org/gitlab/-/issues/384927#top) . This is a GitLab issue. To avoid it, we recommend using [Vercel CLI](https://vercel.com/docs/cli/deploying-from-cli) to deploy your projects.",
  "title": "Deploying GitLab Projects with Vercel",
  "description": "​Vercel for GitLab automatically deploys your GitLab projects with Vercel, providing Preview Deployment URLs, and automatic Custom Domain updates.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/git/vercel-for-github",
  "markdown": "# Deploying GitHub Projects with Vercel\n\nVercel for GitHub automatically deploys your GitHub projects with [Vercel](https://vercel.com/), providing [Preview Deployment URLs](https://vercel.com/docs/deployments/preview-deployments#preview-urls), and automatic [Custom Domain](https://vercel.com/docs/projects/domains/working-with-domains) updates.\n\nThe [Deploying a Git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository) guide outlines how to create a new Vercel Project from a GitHub repository, and enable automatic deployments on every branch push.\n\nIf you'd like to connect your Vercel Project to a different GitHub repository or disconnect it, you can do so from the [Git section](https://vercel.com/docs/projects/overview#git) in the Project Settings.\n\nVercel for GitHub will deploy every push by default. This includes pushes and pull requests made to branches. This allows those working within the repository to preview changes made before they are pushed to production.\n\nWith each new push, if Vercel is already building a previous commit on the same branch, the current build will complete and any commit pushed during this time will be queued. Once the first build completes, the most recent commit will begin deployment and the other queued builds will be cancelled. This ensures that you always have the latest changes deployed as quickly as possible.\n\nYou can disable this feature for GitHub by configuring the [github.autoJobCancellation](https://vercel.com/docs/projects/project-configuration/git-configuration#github.autojobcancelation) option in your `vercel.json` file.\n\nIf [Custom Domains](https://vercel.com/docs/projects/custom-domains) are set from a project domains dashboard, pushes and merges to the [Production Branch](https://vercel.com/docs/deployments/git#production-branch) (commonly \"main\") will be made live to those domains with the latest deployment made with a push.\n\nIf you decide to revert a commit that has already been deployed to production, the previous [Production Deployment](https://vercel.com/docs/deployments/environments#production) from a commit will automatically be made available at the [Custom Domain](https://vercel.com/docs/projects/custom-domains) instantly; providing you with instant rollbacks.\n\nThe latest push to any pull request will automatically be made available at a unique [preview URL](https://vercel.com/docs/deployments/preview-deployments#preview-urls) based on the project name, branch, and team or username. These URLs will be provided through a comment on each pull request. Vercel also supports Comments on preview deployments made from PRs on GitHub. [Learn more about Comments on preview deployments in GitHub here](https://vercel.com/docs/deployments/preview-deployments#github-integration).\n\nIf you receive a pull request from a fork of your repository that includes a change to the [`vercel.json`](https://vercel.com/docs/cli) file or the Project has [Environment Variables](https://vercel.com/docs/projects/environment-variables), Vercel will require authorization from you or a [Team Member](https://vercel.com/docs/teams-and-accounts/team-members-and-roles) to deploy the pull request.\n\nThis behavior protects you from leaking sensitive Project information.\n\nYou can disable [Git Fork Protection](https://vercel.com/docs/projects/overview#git-fork-protection) in the Security section of your Project Settings.\n\nVercel for GitHub uses the deployment API to bring you an extended user interface both in GitHub, when showing deployments, and Slack, if you have notifications setup using the [Slack GitHub app](https://slack.github.com/).\n\nYou will see all of your deployments, production or preview, from within GitHub on its own page.\n\nDue to using GitHub's Deployments API, you will also be able to integrate with other services through [GitHub's checks](https://help.github.com/en/articles/about-status-checks). Vercel will provide the deployment URL to the checks that require it, for example; to a testing suite such as [Checkly](https://checklyhq.com/docs/cicd/github/).\n\nTo configure the Vercel for GitHub integration, see [the configuration reference for Git](https://vercel.com/docs/projects/project-configuration/git-configuration).\n\nYou may want to use different workflows and APIs based on Git information. To support this, the following [System Environment Variables](https://vercel.com/docs/projects/environment-variables#system-environment-variables) are exposed to your Deployments:\n\n  \n\n| Name | Description | Available at [Build](https://vercel.com/docs/deployments/configure-a-build) and/or [Run](https://vercel.com/docs/functions) Time |\n| --- | --- | --- |\n| `VERCEL_GIT_PROVIDER` | The Git Provider the deployment is triggered from. In the case of GitHub, the value is always `github`. | both |\n| `VERCEL_GIT_REPO_SLUG` | The origin repository of the app on GitHub. Example: `my-site`. | both |\n| `VERCEL_GIT_REPO_OWNER` | The GitHub organization that owns the repository the deployment is triggered from. Example: `acme`. | both |\n| `VERCEL_GIT_REPO_ID` | The ID of the GitHub repository the deployment is triggered from. Example: `117716146`. | both |\n| `VERCEL_GIT_COMMIT_REF` | The GitHub branch that the deployment was made from. Example: `improve-about-page`. | both |\n| `VERCEL_GIT_COMMIT_SHA` | The GitHub [SHA](https://help.github.com/articles/github-glossary/#commit) of the commit the deployment was triggered by. Example: `fa1eade47b73733d6312d5abfad33ce9e4068081`. | both |\n| `VERCEL_GIT_COMMIT_MESSAGE` | The message attached to the GitHub commit the deployment was triggered by. Example: `Update about page`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_LOGIN` | The GitHub username belonging to the author of the commit that the project was deployed by. Example: `johndoe`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_NAME` | The GitHub name belonging to the author of the commit that the project was deployed by. Example: `John Doe`. | both |\n| `VERCEL_GIT_PULL_REQUEST_ID` | The GitHub pull request id the deployment was triggered by. If a deployment is created on a branch before a pull request is made, this value will be an empty string. Example: `23`. | both |\n\nWe require some permissions through our Vercel for GitHub integration. Below are listed the permissions required and a description for what they are used for.\n\nRepository permissions allow us to interact with repositories belonging to or associated with (if permitted) the connected account.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `Administration` | Y   | Y   | Allows us to create repositories on the user's behalf. |\n| `Checks` | Y   | Y   | Allows us to add checks against source code on push. |\n| `Contents` | Y   | Y   | Allows us to fetch and write source code for new project templates for the connected user or organization. |\n| `Deployments` | Y   | Y   | Allows us to synchronize deployment status between GitHub and the Vercel infrastructure. |\n| `Pull Requests` | Y   | Y   | Allows us create deployments for each Pull Request (PR) and comment on those PR's with status updates. |\n| `Issues` | Y   | Y   | Allows us to interact with Pull Requests as with the `Pull Requests` permissions due to GitHub requiring both for access. |\n| `Metadata` | Y   | N   | Allows us to read basic repository metadata to provide a detailed dashboard. |\n| `Web Hooks` | Y   | Y   | Allows us to react to various GitHub events. |\n| `Commit Statuses` | Y   | Y   | Allows us to synchronize commit status between GitHub and Vercel. |\n\nOrganization permissions allow us to offer an enhanced experience through information about the connected organization.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `Members` | Y   | N   | Allows us to offer a better team onboarding experience. |\n\nUser permissions allow us to offer an enhanced experience through information about the connected user.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `Email addresses` | Y   | N   | Allows us to associate an email with a GitHub account. |\n\nWe use the permissions above in order to provide you with the best possible deployment experience. If you have any questions or concerns about any of the permission scopes, please [contact Vercel Support](https://vercel.com/help#issues).\n\nTo sign up on Vercel with a different GitHub account, sign out of your current GitHub account.\n\nThen, restart the Vercel [signup process](https://vercel.com/signup).\n\nWhen importing or connecting a GitHub repository, we require that you have **Collaborator** access to the corresponding repository, so that we can configure a webhook and automatically deploy pushed commits.\n\nIf a repository is missing when you try to import or connect it, make sure that you have **Collaborator** access configured for the repository. For an organization or a team, this [page](https://docs.github.com/en/github/setting-up-and-managing-organizations-and-teams/viewing-people-with-access-to-your-repository) explains how to view the permissions of the members. For personal GitHub accounts, this [page](https://docs.github.com/en/github/setting-up-and-managing-your-github-user-account/managing-access-to-your-personal-repositories) explains how to manage access.\n\nBy default, comments from the Vercel GitHub bot will appear on your pull requests and commits. You can silence these comments in your project's settings:\n\n1.  From the Vercel [dashboard](https://vercel.com/dashboard), select your project\n2.  From the Settings tab, select Git\n3.  Under Connected Git Repository, toggle the switches to your preference\n\nIf you had previously used the, now deprecated, [`github.silent`](https://vercel.com/docs/projects/project-configuration/git-configuration#github.silent) property in your project configuration, we'll automatically adjust the setting for you.\n\nIt is currently not possible to prevent comments for specific branches.\n\nYou can use GitHub Actions to build and deploy your Vercel Application. This approach is necessary to enable Vercel with GitHub Enterprise Server (GHES) with Vercel, as GHES cannot use Vercel’s built-in Git integration.\n\n1.  Create a GitHub Action to build your project and deploy it to Vercel. Make sure to install the Vercel CLI (`npm install --global vercel@latest`) and pull your environment variables `vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}`\n2.  Use `vercel build` to build your project inside GitHub Actions, without exposing your source code to Vercel\n3.  Then use `vercel deploy --prebuilt` to skip the build step on Vercel and upload the previously generated `.vercel/output` folder from your GitHub Action to Vercel\n\nYou'll need to make GitHub Actions for preview (non-`main` pushes) and production (`main` pushes) deployments. [Learn more about how to configure GitHub Actions and Vercel](https://vercel.com/guides/how-can-i-use-github-actions-with-vercel) for custom CI/CD workflows.",
  "title": "Deploying GitHub Projects with Vercel",
  "description": "​Vercel for GitHub automatically deploys your GitHub projects with Vercel, providing Preview Deployment URLs, and automatic Custom Domain updates.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/git/vercel-for-bitbucket",
  "markdown": "# Deploying Bitbucket Projects with Vercel\n\n​Vercel for Bitbucket automatically deploys your Bitbucket projects with [Vercel](https://vercel.com/), providing [Preview Deployment URLs](https://vercel.com/docs/deployments/preview-deployments#preview-urls), and automatic [Custom Domain](https://vercel.com/docs/projects/domains/add-a-domain) updates.\n\nThe [Deploying a Git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository) guide outlines how to create a new Vercel Project from a Bitbucket repository, and enable automatic deployments on every branch push.\n\nIf you'd like to connect your Vercel Project to a different Bitbucket repository or disconnect it, you can do so from the [Git section](https://vercel.com/docs/projects/overview#git) in the Project Settings.\n\nVercel for Bitbucket will deploy each push by default. This includes pushes and pull requests made to branches. This allows those working within the project to preview the changes made before they are pushed to production.\n\nWith each new push, if Vercel is already building a previous commit on the same branch, the current build will complete and any commit pushed during this time will be queued. Once the first build completes, the most recent commit will begin deployment and the other queued builds will be cancelled. This ensures that you always have the latest changes deployed as quickly as possible.\n\nIf [Custom Domains](https://vercel.com/docs/projects/custom-domains) are set from a project domains dashboard, pushes and merges to the [Production Branch](https://vercel.com/docs/deployments/git#production-branch) (commonly \"main\") will be made live to those domains with the latest deployment made with a push.\n\nIf you decide to revert a commit that has already been deployed to production, the previous [Production Deployment](https://vercel.com/docs/deployments/environments#production) from a commit will automatically be made available at the [Custom Domain](https://vercel.com/docs/projects/custom-domains) instantly; providing you with instant rollbacks.\n\nThe latest push to any [pull request](https://www.atlassian.com/git/tutorials/making-a-pull-request) will automatically be made available at a unique preview URL based on the project name, branch, and team or username. These URLs will be given through a comment on each pull request.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fbitbucket-comment.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA preview URL created from a pull request.\n\nYou may want to use different workflows and APIs based on Git information. To support this, the following [System Environment Variables](https://vercel.com/docs/projects/environment-variables#system-environment-variables) are exposed to your Deployments:\n\n  \n\n| Name | Description | Available at [Build](https://vercel.com/docs/deployments/configure-a-build) and/or [Run](https://vercel.com/docs/functions) Time |\n| --- | --- | --- |\n| `VERCEL_GIT_PROVIDER` | The Git Provider the deployment is triggered from. In the case of Bitbucket, the value is always `bitbucket`. | both |\n| `VERCEL_GIT_REPO_SLUG` | The slug of the Bitbucket repository that was deployed. Example: `my-site`. | both |\n| `VERCEL_GIT_REPO_OWNER` | The Bitbucket user or team that the project belongs to. Example: `acme`. | both |\n| `VERCEL_GIT_REPO_ID` | The ID of the Bitbucket repository the deployment is triggered from. Example: `{9e072df2-521e-4409-a01c-c984569fea20}`. | both |\n| `VERCEL_GIT_COMMIT_REF` | The Bitbucket branch that the deployment was triggered by. Example: `improve-about-page`. | both |\n| `VERCEL_GIT_COMMIT_SHA` | The Bitbucket sha of the commit the deployment was triggered by. Example: `fa1eade47b73733d6312d5abfad33ce9e4068081`. | both |\n| `VERCEL_GIT_COMMIT_MESSAGE` | The message accompanying the Bitbucket commit that was deployed. Example: `Add John Doe to about page`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_LOGIN` | The name of the commit author on Bitbucket. Example: `John Doe`. | both |\n| `VERCEL_GIT_COMMIT_AUTHOR_NAME` | Bitbucket profile URL of the commit author. Example: `https://bitbucket.org/%7B45585b19-b616-401e-89d3-1a47fddb7033%7D/`. | both |\n| `VERCEL_GIT_PULL_REQUEST_ID` | The Bitbucket pull request id the deployment was triggered by. If a deployment is created on a branch before a pull request is made, this value will be an empty string. Example: `23`. | both |\n\nWe require some permissions through our Vercel for Bitbucket integration. Below are listed the permissions required and a description for what they are used for.\n\nRepository permissions allow us to interact with repositories belonging to or associated with (if permitted) the connected account.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `Web Hooks` | Y   | N   | Allows us to react to various Bitbucket events. |\n| `Issues` | Y   | Y   | Allows us to interact with Pull Requests as with the `Pull Requests` permissions due to Bitbucket requiring both for access. |\n| `Repository` | N   | N   | Allows us to access admin features of a Bitbucket repository. |\n| `Pull requests` | Y   | Y   | Allows us create deployments for each Pull Request (PR) and comment on those PR's with status updates. |\n\nOrganization permissions allow us to offer an enhanced experience through information about the connected organization.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `Team` | Y   | N   | Allows us to offer a better team onboarding experience. |\n\nUser permissions allow us to offer an enhanced experience through information about the connected user.\n\n| Permission | Read | Write | Description |\n| --- | --- | --- | --- |\n| `Account` | Y   | N   | Allows us to associate an email with a Bitbucket account. |\n\nWe use the permissions above in order to provide you with the best possible deployment experience. If you have any questions or concerns about any of the permission scopes, please [contact Vercel Support](https://vercel.com/help#issues).\n\nTo sign up on Vercel with a different Bitbucket account, sign out of your current Bitbucket account. Then, restart the Vercel [signup process](https://vercel.com/signup).\n\nWhen importing or connecting a Bitbucket repository, we require that you have **Admin** access to the corresponding repository, so that we can configure a webhook and automatically deploy pushed commits.\n\nIf a repository is missing when you try to import or connect it, make sure that you have [Admin access configured for the repository](https://support.atlassian.com/bitbucket-cloud/docs/grant-repository-access-to-users-and-groups/).\n\nBy default, comments from the Vercel bot will appear on your pull requests and commits. You can silence these comments in your project's settings:\n\n1.  From the Vercel [dashboard](https://vercel.com/dashboard), select your project\n2.  From the Settings tab, select Git\n3.  Under Connected Git Repository, toggle the switches to your preference\n\nIt is currently not possible to prevent comments for specific branches.\n\nYou can use Bitbucket Pipelines to build and deploy your Vercel Application.\n\n`vercel build` allows you to build your project inside Bitbucket Pipelines, without exposing your source code to Vercel. Then, `vercel deploy --prebuilt` skips the build step on Vercel and uploads the previously generated `.vercel/output` folder to Vercel from the Bitbucket Pipeline.\n\n[Learn more about how to configure Bitbucket Pipelines and Vercel](https://vercel.com/guides/how-can-i-use-bitbucket-pipelines-with-vercel) for custom CI/CD workflows.",
  "title": "Deploying Bitbucket Projects with Vercel",
  "description": "​Vercel for Bitbucket automatically deploys your Bitbucket projects with Vercel, providing Preview Deployment URLs, and automatic Custom Domain updates.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/configure-a-build",
  "markdown": "# Configuring a Build\n\nWhen you make a [deployment](https://vercel.com/docs/deployments/overview), Vercel builds your project. During this time, Vercel performs a \"shallow clone\" on your Git repository using the command `git clone --depth=10 (...)` and fetches ten levels of git commit history. This means that only the latest ten commits are pulled and not the entire repository history.\n\nVercel automatically configures the build settings for many front-end frameworks, but you can also customize the build according to your requirements.\n\nTo configure your Vercel build with customized settings, choose a project from the [dashboard](https://vercel.com/dashboard) and go to its Settings tab.\n\nThe General section of the Settings tab offers the following options to customize your build settings:\n\n*   Build & Development Settings\n*   Root Directory\n\nIf you'd like to override the settings or specify a different framework, you can do so from the Build & Development Settings section.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Fbuild-dev-settings.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Fbuild-dev-settings-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nBuild and Development settings.\n\nYou have a wide range of frameworks to choose from, including, Next.js, Svelte, and Nuxt.js. In several use cases, Vercel automatically detects your project's framework and sets the best settings for you.\n\nInside the Framework Preset settings, use the drop-down menu to select the framework of your choice. This selection will be used for all deployments within your Project. The available frameworks are listed below:\n\nHowever, if no framework is detected, \"Other\" will be selected. In this case, the Override toggle for the Build Command will be enabled by default so that you can enter the build command manually. The remaining deployment process is that for default frameworks.\n\nIf you would like to override Framework Preset for a specific deployment, add [`framework`](https://vercel.com/docs/projects/project-configuration#framework) to your `vercel.json` configuration.\n\nVercel automatically configures the Build Command based on the framework. Depending on the framework, the Build Command can refer to the project’s `package.json` file.\n\nFor example, if [Next.js](https://nextjs.org/) is your framework:\n\n*   Vercel checks for the `build` command in `scripts` and uses this to build the project\n*   If not, the `next build` will be triggered as the default Build Command\n\nIf you'd like to override the Build Command for all deployments in your Project, you can turn on the Override toggle and specify the custom command.\n\nIf you would like to override the Build Command for a specific deployment, add [`buildCommand`](https://vercel.com/docs/projects/project-configuration#buildcommand) to your `vercel.json` configuration.\n\nIf you update the **Override** setting, it will be applied on your next deployment.\n\nAfter building a project, most frameworks output the resulting build in a directory. Only the contents of this Output Directory will be served statically by Vercel.\n\nIf Vercel detects a framework, the output directory will automatically be configured.\n\nIf you update the **Override** setting, it will be applied on your next deployment.\n\nFor projects that [do not require building](https://vercel.com/docs/deployments/configure-a-build#skip-build-step), you might want to serve the files in the root directory. In this case, do the following:\n\n*   Choose \"Other\" as the Framework Preset. This sets the output directory as `public` if it exists or `.` (root directory of the project) otherwise\n*   If your project doesn’t have a `public` directory, it will serve the files from the root directory\n*   Alternatively, you can turn on the Override toggle and leave the field empty (in which case, the build step will be skipped)\n\nIf you would like to override the Output Directory for a specific deployment, add [`outputDirectory`](https://vercel.com/docs/projects/project-configuration#outputdirectory) to your `vercel.json` configuration.\n\nVercel auto-detects the install command during the build step. It installs dependencies from `package.json`, including `devDependencies` ([which can be excluded](https://vercel.com/docs/deployments/troubleshoot-a-build#excluding-development-dependencies)). The install path is set by the [root directory](https://vercel.com/docs/deployments/configure-a-build#root-directory).\n\nThe install command can be managed in two ways: through a project override, or per-deployment. See [manually specifying a package manager](https://vercel.com/deployments/builds/package-managers#manually-specifying-a-package-manager) for more details.\n\nTo learn what package managers are supported on Vercel, see the [package manager support](https://vercel.com/docs/deployments/builds/package-managers) documentation.\n\nCorepack is considered [experimental](https://nodejs.org/docs/latest-v16.x/api/documentation.html#stability-index) and therefore, breaking changes or removal may occur in any future release of Node.js.\n\n[Corepack](https://nodejs.org/docs/latest-v16.x/api/corepack.html) is an experimental tool that allows a Node.js project to pin a specific version of a package manager.\n\nYou can enable Corepack by adding an [environment variable](https://vercel.com/docs/projects/environment-variables) with name `ENABLE_EXPERIMENTAL_COREPACK` and value `1` to your Project.\n\nThen, set the [`packageManager`](https://nodejs.org/docs/latest-v16.x/api/packages.html#packagemanager) property in the `package.json` file in the root of your repository. For example:\n\n```\n{\n  \"packageManager\": \"pnpm@7.5.1\"\n}\n```\n\nA `package.json` file with [pnpm](https://pnpm.io/) version 7.5.1\n\nThe Install Command defined in the Project Settings will be used for front-end frameworks that support Serverless Functions for APIs.\n\nIf you're using [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) defined in the natively supported `api` directory, a different Install Command will be used depending on the language of the Serverless Function. You cannot customize this Install Command.\n\nThis setting is relevant only if you’re using `vercel dev` locally to develop your project. Use `vercel dev` only if you need to use Vercel platform features like [Serverless Functions](https://vercel.com/docs/functions/serverless-functions). Otherwise, it's recommended to use the development command your framework provides (such as `next dev` for Next.js).\n\nThe Development Command settings allow you to customize the behavior of `vercel dev`. If Vercel detects a framework, the development command will automatically be configured.\n\nIf you’d like to use a custom command for `vercel dev`, you can turn on the Override toggle. Please note the following:\n\n*   If you specify a custom command, your command must pass your framework's `$PORT` variable (which contains the port number). For example, in [Next.js](https://nextjs.org/) you should use: `next dev --port $PORT`\n*   If the development command is not specified, `vercel dev` will fail. If you've selected \"Other\" as the framework preset, the default development command will be empty\n*   You must create a deployment and have your local project linked to the project on Vercel (using `vercel`). Otherwise, `vercel dev` will not work correctly\n\nIf you would like to override the Development Command, add [`devCommand`](https://vercel.com/docs/projects/project-configuration#devcommand) to your `vercel.json` configuration.\n\nSome static projects do not require building. For example, a website with only HTML/CSS/JS source files can be served as-is.\n\nIn such cases, you should:\n\n*   Specify \"Other\" as the framework preset\n*   Enable the Override option for the Build Command\n*   Leave the Build Command empty\n\nThis prevents running the build, and your content is served directly.\n\nIn some projects, the top-level directory of the repository may not be the root directory of the app you’d like to build. For example, your repository might have a front-end directory containing a stand-alone [Next.js](https://nextjs.org/) app.\n\nFor such cases, you can specify the project Root Directory. If you do so, please note the following:\n\n*   Your app will not be able to access files outside of that directory. You also cannot use `..` to move up a level\n*   This setting also applies to [Vercel CLI](https://vercel.com/docs/cli). Instead of running `vercel <directory-name>` to deploy, specify `<directory-name>` here so you can just run `vercel`\n\nIf you update the root directory setting, it will be applied on your next deployment.",
  "title": "Configuring a Build",
  "description": "Vercel automatically configures the build settings for many front-end frameworks, but you can also customize the build according to your requirements.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/managing-deployments",
  "markdown": "# Managing Deployments\n\nYou can manage all current and previous deployments regardless of environment, status, or branch from the [dashboard](https://vercel.com/dashboard). To manage a deployment from the dashboard:\n\n1.  Ensure your team is selected from the scope selector\n2.  Select your project\n3.  From the top navigation, select the Deployments tab\n4.  You can then filter, redeploy, or manually promote your deployment to production\n\n[Vercel CLI](https://vercel.com/cli) and [Vercel REST API](https://vercel.com/docs/rest-api) also provide alternative ways to manage your deployments. You can find a full list of the commands available in the [Vercel CLI Reference](https://vercel.com/docs/cli/deploying-from-cli), along with the deployments section of the [Vercel REST API Reference](https://vercel.com/docs/rest-api/endpoints#deployments).\n\nYou can filter your deployments based on branch, status, and deployment environment:\n\n1.  Select your project from the [dashboard](https://vercel.com/dashboard)\n2.  From the top navigation, select the Deployments tab\n3.  Use the dropdowns to search by Branch, Date Range, All Environments, or Status\n    \n    ![The Deployments tab with the status filter dropdown open.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Ffiltering-deployments%2Ffilter-status-light.png&w=1200&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Deployments tab with the status filter dropdown open.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Ffiltering-deployments%2Ffilter-status-dark.png&w=1200&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    The Deployments tab with the status filter dropdown open.\n    \n\nIf you no longer need a specific deployment of your app, you can delete it from your project with the following steps:\n\n1.  From the Deployments tab, select the name of the deployment you want to delete\n2.  Select the Inspect Deployment option, which directs you to the details of that deployment\n3.  From here, you can Delete the deployment\n\nDeleting a deployment prevents you from using instant rollback on it and might break the links used in integrations, such as the ones in the pull requests of your Git provider.\n\nVercel automatically redeploys your application when you make any commits. However, there can be situations such as bad cached data where you need to Redeploy your application to fix issues manually. To do so:\n\n1.  Ensure your team is selected from the scope selector\n2.  Select your project\n3.  From the top navigation, select the Deployments tab\n4.  Locate the deployment you wish to deploy. You may need to use the [filter](https://vercel.com/docs/deployments/managing-deployments#filter-deployment) options\n5.  Click the ellipsis icon () and select Redeploy\n6.  In the Redeploy to Production window, decide if you want to use the existing [Build Cache](https://vercel.com/docs/deployments/troubleshoot-a-build#understanding-build-cache), and then select Redeploy\n\n![Option to confirm redeploy to production.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fredeploy-model-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Option to confirm redeploy to production.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fredeploy-model-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nOption to confirm redeploy to production.\n\nOther than your custom needs to redeploy, it's always recommended to redeploy your application to Vercel for the following use cases:\n\n*   Enabling the [Analytics](https://vercel.com/docs/analytics/quickstart)\n*   Changing the [Environment Variables](https://vercel.com/docs/projects/environment-variables)\n*   [Outage Resiliency](https://vercel.com/docs/edge-network/regions#outage-resiliency)\n*   Making changes to Build & Development Settings\n*   Redirect or Rewrites from a subdomain to a subpath\n\nBy default, when you merge to or make commits to your production branch (often `main`), Vercel will automatically promote the changes to Production. However, there are a number of ways to manually change which deployment is served to people who visit your production domain:\n\n*   [Instant rollback](#instant-rollback): You can use this as a way to instantly revert to an earlier [deployment](https://vercel.com/docs/deployments/instant-rollback#eligible-deployments) that has served production traffic. It works by assigning your domains to an existing deployment, rather than doing a complete rebuild\n*   [Promote preview to production](#promote-a-deployment-from-preview-to-production): You can use this as a way to promote a preview deployment to production through a complete rebuild\n*   [Promote a staged production build](#staging-and-promoting-a-production-deployment): You can use this option to promote a production deployment which has never served production traffic. To use this option, you must turn off the auto-assignment of domains. This option won't trigger a rebuild\n\nUse this when you want to replace the current production deployment with another deployment that has already been serving as current in the past. Instant Rollback is a faster process since it involves assigning domains to an existing deployment rather than a complete rebuild and is ideal to quickly recover from an incident in production to roll back. However, because it does not do a complete rebuild, items such as environment variables will not be rebuilt.\n\nFor more information on how and when to use it, see the [Instant Rollback docs](https://vercel.com/docs/deployments/instant-rollback).\n\nThere may be times when you need to promote an existing preview deployment to production, such as when you need to temporarily use a branch that isn't set as the [production branch](https://vercel.com/docs/deployments/git#production-branch).\n\nTo promote an existing preview deployment to production on Vercel, do the following:\n\n1.  Go to your project's Deployments tab. This tab lists all the previously deployed builds\n2.  Click the ellipsis (), and from the context menu select Promote to Production\n3.  The popup dialog informs you of which domain(s) will be linked to the build once promoted. To confirm, select Promote to Production\n\n![Option to confirm promote to production.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704367830%2Ffront%2Fdocs%2Fdeployment%2Fpromote-to-prod-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Option to confirm promote to production.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704367830%2Ffront%2Fdocs%2Fdeployment%2Fpromote-to-prod-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nOption to confirm promote to production.\n\nIf you have different [Environment Variables](https://vercel.com/docs/projects/environment-variables#environments) set for preview and production deployments then the variables used will change from preview to those you have linked to the production environment. You cannot use your preview environment variables in a production deployment\n\nIn some cases you may want to create a production-like deployment to use as a staging environment before promoting it to production.\n\nIn this scenario, you can turn off the auto-assignment of domains for your production build, as described below. Turning off the auto-assignment of domains means the deployment won't automatically be served to your production traffic, but also means you must manually promote it to production.\n\nFor steps on using this workflow in the CLI, see [Deploying a staged production build](https://vercel.com/docs/cli/deploying-from-cli#deploying-a-staged-production-build).\n\n1.  On your [dashboard](https://vercel.com/dashboard), select your project\n2.  Select the Settings tab and go to your Git settings\n3.  In the Production Branch section, disable the Auto-assign Custom Production Domains toggle\n4.  When you are ready to promote this staged deployment to production, select the ellipses (…) next to the deployment\n5.  From the menu, select the Promote option\n6.  From the Promote dialog, confirm the deployment, and select the Promote button:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704196273%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpromote-to-prod-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704196273%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpromote-to-prod-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVercel will instantly promote the deployment; it doesn't require a rebuild. Once promoted, the deployment is marked as [Current](#production-deployment-state).\n\nYour production deployments could be in one of three states:\n\n*   Staged – This means that a commit has been pushed to `main`, but a domain has not been auto-assigned to the deployment. This type of a deployment can be promoted to Current\n*   Promoted – This production deployment has been [promoted](#staging-and-promoting-a-production-deployment) from staging. If a deployment has already been promoted in the past, you can't promote it again. If you want to use a previously promoted deployment, you must do a rollback to it\n*   Current – This is the production deployment that is aliased to your domain and the one that is currently being served to your users",
  "title": "Managing Deployments",
  "description": "Learn how to manage your current and previously deployed projects to Vercel through the dashboard. You can redeploy at any time and even delete a deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/serverless-functions/runtimes/node-js",
  "markdown": "# Using the Node.js Runtime with Serverless Functions\n\nThe Node.js runtime, by default, builds and serves Serverless Functions within the `/api` directory of a project, providing the files have a file extension of `.js`, `.mjs`, or `.ts`.\n\nTo declare a Node.js function you must either use the [Web signature](https://vercel.com/docs/functions/functions-api-reference#function-signature) or export a default function handler, for example:\n\n```\nexport default function handler(request, response) {\n  const { name = 'World' } = request.query;\n  return response.send(`Hello ${name}!`);\n}\n```\n\nIf you need more advanced behavior, such as a custom build step or private npm modules, see the [Advanced Node.js Usage section](#advanced-node.js-usage).\n\nServerless Functions using the Node.js runtime support [all Node.js APIs](https://nodejs.org/docs/latest/api/), including standard Web APIs such as the [Request and Response Objects](https://vercel.com/docs/functions/runtimes/node-js#node.js-request-and-response-objects).\n\nTo override the [default](#default-and-available-versions) and set a different Node.js version for all new projects:\n\n1.  From your dashboard, select your project\n2.  Select the Settings tab\n3.  On the General page, navigate to the Node.js Version section\n\n![First, select your Node.js version in Project Settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706610426%2Ffront%2Fdocs%2Ffunctions%2Fnode-version-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![First, select your Node.js version in Project Settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706610426%2Ffront%2Fdocs%2Ffunctions%2Fnode-version-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nFirst, select your Node.js version in Project Settings.\n\nBy default, a new project uses the latest Node.js LTS version available on Vercel.\n\nCurrent available versions are:\n\n*   20.x (default)\n*   18.x (retiring early 2025)\n*   16.x (deprecated, retiring January 31st, 2025)\n\nOnly major versions are available. Vercel automatically rolls out minor and patch updates when needed such as for a security issue fix.\n\nYou can define the major Node.js version in the `engines#node` section of the `package.json` to override the one you have selected in the [Project Settings](#setting-the-node.js-version-in-project-settings):\n\n```\n{\n  \"engines\": {\n    \"node\": \"20.x\"\n  }\n}\n```\n\nFor instance, when you set the Node.js version to 18.x in the Project Settings and you specify a valid [semver range](https://semver.org/) for Node.js 20 (e.g. `20.x`) in `package.json`, your project will be deployed with the latest 20.x version of Node.js.\n\nThe following table lists some example version ranges and the available Node.js version they map to:\n\n| Version in `package.json` | Version deployed |\n| --- | --- |\n| `20.x`  <br>`^20.0.0`  <br>`>=20.0.0`  <br>`>=18.0.0`  <br>`>=16.0.0` | latest 20.x version |\n| `18.x`  <br>`^18.0.0` | latest 18.x version |\n| `16.x`  <br>`^16.0.0` | latest 16.x version |\n\nTo verify the Node.js version your Deployment is using, either run `node -v` in the Build Command or log `process.version`.\n\nFor dependencies listed in a `package.json` file at the root of a project, the following behavior is used:\n\n*   If `pnpm-lock.yaml` is present, `pnpm install` is executed\n    *   If `\"lockfileVersion\": 5.4` is present in the lock file, pnpm 7 is used\n    *   Otherwise, pnpm 6 is used\n*   If `package-lock.json` is present, `npm install` is executed\n    *   If `\"lockfileVersion\": 2` is present in the lock file, npm 8 is used\n    *   Otherwise npm 6 is used\n*   If `bun.lockb` is present, the Install Command is `bun install`\n    *   Bun 1 is used\n*   Otherwise, `yarn install` is executed\n\nIf you need to select a specific version of a package manager, see [corepack](https://vercel.com/docs/deployments/configure-a-build#corepack).\n\nThe Node.js runtime supports files ending with `.ts` inside of the `/api` directory as TypeScript files to compile and serve when deploying.\n\nAn example TypeScript file that exports a default Node.js function and takes in [the standard Node.js Request and Response](#node.js-request-and-response-objects) objects is as follows:\n\n```\nimport type { VercelRequest, VercelResponse } from '@vercel/node';\n \nexport default function (request: VercelRequest, response: VercelResponse) {\n  const { name = 'World' } = request.query;\n  response.send(`Hello ${name}!`);\n}\n```\n\nAn example serverless Node.js function written in TypeScript, using types from the `@vercel/node` module for the helper methods.\n\nThe `VercelRequest` and `VercelResponse` imports in the above example are types that we provide for [the Request and Response objects](#node.js-request-and-response-objects), including the helper methods with Vercel. These types can be installed from npm with the following command:\n\nnpm install @vercel/node --save-dev\n\nInstalling `@vercel/node` for types when using Node.js on Vercel.\n\nYou can also use a `tsconfig.json` file at the root of your project to configure the TypeScript compiler. Most options are supported aside from [\"Path Mappings\"](https://www.typescriptlang.org/docs/handbook/module-resolution.html#path-mapping) and [\"Project References\"](https://www.typescriptlang.org/docs/handbook/project-references.html).\n\nEach request to a Node.js Serverless Function gives access to Request and Response objects. These objects are the [standard](https://nodejs.org/api/http.html#http_event_request) HTTP [Request](https://nodejs.org/api/http.html#http_class_http_incomingmessage) and [Response](https://nodejs.org/api/http.html#http_class_http_serverresponse) objects from Node.js.\n\nVercel additionally provides helper methods inside of the Request and Response objects passed to Node.js Serverless Functions. These methods are:\n\n| method | description | object |\n| --- | --- | --- |\n| `request.query` | An object containing the request's [query string](https://en.wikipedia.org/wiki/Query_string), or `{}` if the request does not have a query string. | Request |\n| `request.cookies` | An object containing the cookies sent by the request, or `{}` if the request contains no cookies. | Request |\n| [`request.body`](#node.js-request-and-response-objects) | An object containing the body sent by the request, or `null` if no body is sent. | Request |\n| `response.status(code)` | A function to set the status code sent with the response where `code` must be a valid [HTTP status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). Returns `response` for chaining. | Response |\n| `response.send(body)` | A function to set the content of the response where `body` can be a `string`, an `object` or a `Buffer`. | Response |\n| `response.json(obj)` | A function to send a JSON response where `obj` is the JSON object to send. | Response |\n| `response.redirect(url)` | A function to redirect to the URL derived from the specified path with status code \"307 Temporary Redirect\". | Response |\n| `response.redirect(statusCode, url)` | A function to redirect to the URL derived from the specified path, with specified [HTTP status code](https://en.wikipedia.org/wiki/List_of_HTTP_status_codes). | Response |\n\nThe following Node.js Serverless Function example showcases the use of `request.query`, `request.cookies` and `request.body` helpers:\n\n```\nmodule.exports = (request, response) => {\n  let who = 'anonymous';\n \n  if (request.body && request.body.who) {\n    who = request.body.who;\n  } else if (request.query.who) {\n    who = request.query.who;\n  } else if (request.cookies.who) {\n    who = request.cookies.who;\n  }\n \n  response.status(200).send(`Hello ${who}!`);\n};\n```\n\nExample Node.js Serverless Function using the `request.query`, `request.cookies`, and `request.body` helpers. It returns greetings for the user specified using `request.send()`.\n\nIf needed, you can opt-out of Vercel providing `helpers` using [advanced configuration](#disabling-helpers-for-node.js) .\n\nWe populate the `request.body` property with a parsed version of the content sent with the request when possible.\n\nWe follow a set of rules on the `Content-type` header sent by the request to do so:\n\n| `Content-Type` header | Value of `request.body` |\n| --- | --- |\n| No header | `undefined` |\n| `application/json` | An object representing the parsed JSON sent by the request. |\n| `application/x-www-form-urlencoded` | An object representing the parsed data sent by with the request. |\n| `text/plain` | A string containing the text sent by the request. |\n| `application/octet-stream` | A [Buffer](https://nodejs.org/api/buffer.html) containing the data sent by the request. |\n\nWith the `request.body` helper, you can build applications without extra dependencies or having to parse the content of the request manually.\n\nThe `request.body` helper is set using a [JavaScript getter](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Functions/get) . In turn, it is only computed when it is accessed.\n\nWhen the request body contains malformed JSON, accessing `request.body` will throw an error. You can catch that error by wrapping `request.body` with [`try...catch`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/try...catch):\n\n```\ntry {\n  request.body;\n} catch (error) {\n  return response.status(400).json({ error: 'My custom 400 error' });\n}\n```\n\nCatching the error thrown by `request.body` with [`try...catch`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Statements/try...catch) .\n\nIn order to use this runtime, no configuration is needed. You only need to create a file inside the `api` directory.\n\nThe entry point for `src` must be a glob matching `.js`, `.mjs`, or `.ts` files that export a default function.\n\nAdd an [Environment Variable](https://vercel.com/docs/projects/environment-variables) with name `NODEJS_HELPERS` and value `0` to disable [helpers](#node.js-helpers).\n\nTo install private npm modules, define `NPM_TOKEN` as an [Environment Variable](https://vercel.com/docs/projects/environment-variables) in your Project.\n\nAlternatively, define `NPM_RC` as an [Environment Variable](https://vercel.com/docs/projects/environment-variables) with the contents of `~/.npmrc`.\n\nIn some cases, you may wish to include build outputs inside your Serverless Function. You can run a build task by adding a `vercel-build` script within your `package.json` file, in the same directory as your Serverless Function or any parent directory. The `package.json` nearest to the Serverless Function will be preferred and used for both Installing and Building.\n\nFor example:\n\n```\n{\n  \"scripts\": {\n    \"vercel-build\": \"node ./build.js\"\n  }\n}\n```\n\nAn example `package.json` file with a `vercel-build` script to execute in the build step.\n\nAlong with build script named `build.js`:\n\n```\nconst fs = require('fs');\nfs.writeFile('built-time.js', `module.exports = '${new Date()}'`, (err) => {\n  if (err) throw err;\n  console.log('Build time file created successfully!');\n});\n```\n\nAn example Node.js file, executed by the above `package.json` build script.\n\nAnd a `.js` file for the built Serverless Functions, `index.js` inside the `/api` directory:\n\n```\nconst BuiltTime = require('./built-time');\nmodule.exports = (request, response) => {\n  response.setHeader('content-type', 'text/plain');\n  response.send(`\n    This Serverless Function was built at ${new Date(BuiltTime)}.\n    The current time is ${new Date()}\n  `);\n};\n```\n\nAn example Node.js Serverless Function, using information from the created file from the build script.\n\nExpress.js is a popular framework used with Node.js. For information on how to use Express with Vercel, see the guide: [Using Express.js with Vercel](https://vercel.com/guides/using-express-with-vercel).",
  "title": "Using the Node.js Runtime with Serverless Functions",
  "description": "Learn how to use the Node.js runtime to compile Node.js Serverless Functions on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/monorepos/turborepo",
  "markdown": "# Deploying Turborepo to Vercel\n\nTurborepo is a high-performance build system for JavaScript and TypeScript codebases with:\n\n*   Fast incremental builds\n*   Content-aware hashing, meaning only the files you changed will be rebuilt\n*   [Remote Caching](https://vercel.com/docs/monorepos/remote-caching) for sharing build caches with your team and CI/CD pipelines\n\nAnd much more! Read the \"[Why Turborepo](https://turbo.build/repo/docs#why-turborepo)\" docs to learn about the benefits of using Turborepo to manage your monorepos. To get started with Turborepo in your monorepo, follow Turborepo's [Quickstart](https://turbo.build/repo/docs) docs.\n\nFollow the steps below to deploy your Turborepo to Vercel:\n\n1.  It's important to ensure you are managing environment variables (and files outside of packages and apps) correctly.\n    \n    If you are deploying the starter Turborepo project, there are no environment variables to worry about.\n    \n    If your project has environment variables, you'll need to create a list of them in your `turbo.json` so Turborepo knows to use different caches for different environments. For example, you can accidentally ship your staging environment to production if you don't tell Turborepo about your environment variables.\n    \n    Frameworks like Next.js inline build-time environment variables (e.g. `NEXT_PUBLIC_XXX`) in bundled outputs as strings. Turborepo will [automatically try to infer these based on the framework](https://turbo.build/repo/docs/core-concepts/caching#automatic-environment-variable-inclusion), but if your build inlines other environment variables or they otherwise affect the build output, you must [declare them in your Turborepo configuration](https://turbo.build/repo/docs/core-concepts/caching#altering-caching-based-on-environment-variables).\n    \n    You can control Turborepo's cache behavior (hashing) based on the values of both environment variables and the contents of files in a few ways. Read the [Caching docs on Turborepo](https://turbo.build/repo/docs/core-concepts/caching) for more information.\n    \n    `env` and `globalEnv` key support is available in Turborepo version 1.5 or later. Please update your Turborepo version if you're using an older version.\n    \n    The following example shows a Turborepo configuration, that handles these suggestions:\n    \n    ```\n    {\n      \"$schema\": \"https://turbo.build/schema.json\",\n      \"pipeline\": {\n        \"build\": {\n          \"dependsOn\": [\"^build\"],\n          \"env\": [\n            // env vars will impact hashes of all \"build\" tasks\n            \"SOME_ENV_VAR\"\n          ],\n          \"outputs\": [\"dist/**\"]\n        },\n        \"web#build\": {\n          // override settings for the \"build\" task for the \"web\" app\n          \"dependsOn\": [\"^build\"],\n          \"env\": [\"SOME_OTHER_ENV_VAR\"],\n          \"outputs\": [\".next/**\", \"!.next/cache/**\"]\n        }\n      },\n      \"globalEnv\": [\n        \"GITHUB_TOKEN\" // env var that will impact the hashes of all tasks,\n      ],\n      \"globalDependencies\": [\n        \"tsconfig.json\" // file contents will impact the hashes of all tasks,\n      ]\n    }\n    ```\n    \n    In most monorepos, environment variables are usually used in applications rather than in shared packages. To get higher cache hit rates, you should only include environment variables in the app-specific tasks where they are used or inlined.\n    \n    Once you've declared your environment variables, commit and push any changes you've made. When you update or add new inlined build-time environment variables, be sure to declare them in your Turborepo configuration.\n    \n2.  If you haven't already connected your monorepo to Turborepo, you can follow the [quickstart](https://turbo.build/repo/docs) on the Turborepo docs to do so.\n    \n    [Create a new Project](https://vercel.com/new) on the Vercel dashboard and [import](https://vercel.com/docs/getting-started-with-vercel/import) your Turborepo project.\n    \n    ![Configuring Project settings during import, with defaults already set.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fconfig-project-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Configuring Project settings during import, with defaults already set.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fconfig-project-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Configuring Project settings during import, with defaults already set.\n    \n    Vercel handles all aspects of configuring your monorepo, including setting [build commands](https://vercel.com/docs/deployments/configure-a-build#build-command), the [Output Directory](https://vercel.com/docs/deployments/configure-a-build#output-directory), the [Root Directory](https://vercel.com/docs/deployments/configure-a-build#root-directory), the correct directory for workspaces, and the [Ignored Build Step](https://vercel.com/docs/projects/overview#ignored-build-step).\n    \n    The table below reflects the values that Vercel will set if you'd like to set them manually in your Dashboard or in the `vercel.json` of your application's directory:\n    \n    | Field | Command |\n    | --- | --- |\n    | Framework Preset | [One of 35+ framework presets](https://vercel.com/docs/frameworks/more-frameworks) |\n    | Build Command | `turbo run build` (requires version >=1.8) or `cd ../.. && turbo run build --filter=web` |\n    | Output Directory | Framework default |\n    | Install Command | Automatically detected by Vercel |\n    | Root Directory | App location in repository (e.g. `apps/web`) |\n    | Ignored Build Step | `npx turbo-ignore --fallback=HEAD^1` |\n    \n\nTurborepo is also available globally when deploying on Vercel, which means that you do not have to add `turbo` as a dependency in your application.\n\nThanks to [automatic workspace scoping](https://turbo.build/blog/turbo-1-8-0#automatic-workspace-scoping) and [globally installed turbo](https://turbo.build/blog/turbo-1-7-0#global-turbo), your [build command](https://vercel.com/docs/deployments/configure-a-build#build-command) can be as straightforward as:\n\nThe appropriate [filter](https://turbo.build/repo/docs/core-concepts/monorepos/filtering) will be automatically inferred based on the configured [root directory](https://vercel.com/docs/deployments/configure-a-build#root-directory).\n\nTo override this behavior and use a specific version of Turborepo, install the desired version of `turbo` in your project. [Learn more](https://turbo.build/blog/turbo-1-7-0#global-turbo)\n\nYou likely don't need to build a preview for every application in your monorepo on every commit. To ensure that only applications that have changed are built, use `npx turbo-ignore --fallback=HEAD^1` in your [Ignored Build Step](https://vercel.com/docs/projects/overview#ignored-build-step).\n\nFor more details on `turbo-ignore`, check out the [documentation](https://github.com/vercel/turbo/blob/main/packages/turbo-ignore/README.md).\n\nYou can optionally choose to connect your Turborepo to the [Vercel Remote Cache](https://vercel.com/docs/monorepos/remote-caching) from your local machine, allowing you to share artifacts and completed computations with your team and CI/CD pipelines.\n\nYou do not need to host your project on Vercel to use Vercel Remote Caching. For more information, see the [Remote Caching](https://vercel.com/docs/monorepos/remote-caching) doc.\n\nYou can also use a custom remote cache. For more information, see the [Turborepo documentation](https://turbo.build/repo/docs/core-concepts/remote-caching#custom-remote-caches).\n\n1.  First, authenticate with the Turborepo CLI from the root of your monorepo:\n    \n    Then, use [`turbo link`](https://turbo.build/repo/docs/reference/command-line-reference#turbo-link) to link your Turborepo to your [remote cache](https://vercel.com/docs/monorepos/remote-caching#link-to-the-remote-cache). This command should be run from the root of your monorepo:\n    \n    Next, `cd` into each project in your Turborepo and run `vercel link` to link each directory within the monorepo to your Vercel Project.\n    \n    As a Team owner, you can also [enable caching within the Vercel Dashboard](https://vercel.com/docs/monorepos/remote-caching#enable-and-disable-remote-caching-for-your-team).\n    \n2.  Your project now has the Remote Cache linked. Run `turbo run build` to see the caching in action. Turborepo caches the filesystem output both locally and remote (cloud). To see the cached artifacts open `node_modules/.cache/turbo`.\n    \n    Now try making a change in a file and running `turbo run build` again. The builds speed will have dramatically improved. This is because Turborepo will only rebuild the changed files.\n    \n    To see information about the [Remote Cache usage](https://vercel.com/docs/limits/usage#artifacts), go to the Artifacts section of the Usage tab.\n    \n\nFor Vercel to deploy your application, the outputs need to be present for your [Framework Preset](https://vercel.com/docs/deployments/configure-a-build#framework-preset) after your application builds. If you're getting an error that the outputs from your build don't exist after a cache hit:\n\n*   Confirm that your outputs match [the expected Output Directory for your Framework Preset](https://vercel.com/docs/monorepos/turborepo#import-your-turborepo-to-vercel). Run `turbo build` locally and check for the directory where you expect to see the outputs from your build\n*   Make sure the application outputs defined in the `outputs` key of your `turbo.json` for your build task are aligned with your Framework Preset. A few examples are below:\n\n```\n{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\n        // Next.js\n        \".next/**\", \"!.next/cache/**\"\n        // SvelteKit\n        \".svelte-kit/**\", \".vercel/**\",\n        // Build Output API\n        \".vercel/output/**\"\n        // Other frameworks\n        \".nuxt/**\", \"dist/**\" \"other-output-directory/**\"\n      ]\n    }\n  }\n}\n```\n\nVisit [the Turborepo documentation](https://turbo.build/repo/docs/reference/configuration#outputs) to learn more about the `outputs` key.\n\nWhen using Turborepo on Vercel, all information used by `turbo` during the build process is automatically collected to help debug cache misses.\n\nTurborepo Run Summary is only available in Turborepo version `1.9` or later. To upgrade, use `npx @turbo/codemod upgrade`.\n\nTo view the Turborepo Run Summary for a deployment, use the following steps:\n\n*   Go to the Project > Deployments page\n*   Select a Deployment from the list to view the deployment details\n*   Select the Run Summary button to the right of the Building section, under the Deployment Status heading:\n\n![Open Turborepo Run Summary from the Deployment Details page](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fmonorepos%2Fturborepo%2Fturbo-run-summary-cta.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Open Turborepo Run Summary from the Deployment Details page](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fmonorepos%2Fturborepo%2Fturbo-run-summary-cta-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nOpen Turborepo Run Summary from the Deployment Details page\n\nThis opens a view containing a review of the build, including:\n\n*   All [tasks](https://turbo.build/repo/docs/core-concepts/caching) that were executed as part of the build\n*   The execution time and cache status for each task\n*   All data that `turbo` used to construct the cache key (the [task hash](https://turbo.build/repo/docs/core-concepts/caching#hashing))\n\nIf a previous deployment from the same branch is available, the difference between the cache inputs for the current and previous build will be automatically displayed, highlighting the specific changes that caused the cache miss.\n\n![Turborepo Run Summary](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fmonorepos%2Fturborepo%2Fturbo-run-summary.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Turborepo Run Summary](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fmonorepos%2Fturborepo%2Fturbo-run-summary-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nTurborepo Run Summary\n\nThis information can be helpful in identifiying exactly why a cache miss occurred, and can be used to determine if a cache miss is due to a change in the project, or a change in the environment.\n\nTo change the comparison, select a different deployment from the dropdown, or search for a deployment ID. The summary data can also be downloaded for comparison with a local build.\n\nEnvironment variable values are encrypted when displayed in Turborepo Run Summary, and can only be compared with summary files generated locally when viewed by a team member with access to the projects environment variables. [Learn more](https://vercel.com/docs/accounts/team-members-and-roles/access-roles/team-level-roles)",
  "title": "Deploying Turborepo to Vercel",
  "description": "Learn about Turborepo, a build system for monorepos that allows you to have faster incremental builds, content-aware hashing, and Remote Caching.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/regions",
  "markdown": "# Vercel Edge Network Regions\n\nVercel's Edge Network enables you to store content close to your customers and run compute in regions close to your data, reducing latency and improving end-user performance.\n\nAn Edge Network is both a CDN (Content Delivery Network) and a globally distributed platform for running compute. This page outlines the [regions](#region-list) Vercel's Edge Network supports.\n\n|     |     |     |\n| --- | --- | --- |Regions table\n| Region Code | Region Name | Reference Location |\n| --- | --- | --- |\n| arn1 | eu-north-1 | Stockholm, Sweden |\n| bom1 | ap-south-1 | Mumbai, India |\n| cdg1 | eu-west-3 | Paris, France |\n| cle1 | us-east-2 | Cleveland, USA |\n| cpt1 | af-south-1 | Cape Town, South Africa |\n| dub1 | eu-west-1 | Dublin, Ireland |\n| fra1 | eu-central-1 | Frankfurt, Germany |\n| gru1 | sa-east-1 | São Paulo, Brazil |\n| hkg1 | ap-east-1 | Hong Kong |\n| hnd1 | ap-northeast-1 | Tokyo, Japan |\n| iad1 | us-east-1 | Washington, D.C., USA |\n| icn1 | ap-northeast-2 | Seoul, South Korea |\n| kix1 | ap-northeast-3 | Osaka, Japan |\n| lhr1 | eu-west-2 | London, United Kingdom |\n| pdx1 | us-west-2 | Portland, USA |\n| sfo1 | us-west-1 | San Francisco, USA |\n| sin1 | ap-southeast-1 | Singapore |\n| syd1 | ap-southeast-2 | Sydney, Australia |\n\nIn front of these 18 compute-capable regions, Vercel has over 100 _points of presence_ (POPs) distributed across the globe. Traffic to Vercel is first routed to these POPs, and then will transit from the POPs to the nearest [Edge Network region](#region-list) on private, low-latency connections. This means traffic gets to and from the Vercel Edge Network as quickly and efficiently as possible.\n\nMaintaining a smaller number of regions increases the cache hit probability as caches in each region are more likely to hold popular or frequently requested content. Combining this with a higher number of POPs results in a concentrated and efficient caching infrastructure.\n\nWhen you use [the `vercel dev` CLI command to mimic your deployment environment locally](https://vercel.com/docs/cli/dev), the region is assigned `dev1` to mimic the Vercel platform infrastructure.\n\n| Region Code | Reference Location |\n| --- | --- |\n| dev1 | localhost |\n\n*   Serverless Functions default to running in the `iad1` (Washington, D.C., USA) region. Learn more about [changing function regions](https://vercel.com/docs/functions/serverless-functions/regions)\n*   Edge Functions execute in the region nearest to visitors by default. Learn more about [setting a specific Edge Function region](https://vercel.com/docs/functions/configuring-functions/region#setting-regions-in-your-function)\n\nFunctions should be executed in the same region as your database, or as close to it as possible, [for the lowest latency](https://vercel.com/guides/choosing-deployment-regions).\n\nIn the event of regional downtime, application traffic is rerouted to the next closest Edge Network region. This ensures that your application is always available to your users.\n\nTraffic will be rerouted to the next closest region in the following order:\n\n## Regions by priority\n\nSelect region\n\nP0iad1\n\nP1cle1\n\nP2sfo1\n\nP3dub1\n\nP4pdx1\n\nP5lhr1\n\nP6cdg1\n\nP7fra1\n\nP8arn1\n\nP9gru1\n\nP10hnd1\n\nP11kix1\n\nP12icn1\n\nP13bom1\n\nP14hkg1\n\nP15syd1\n\nP16sin1\n\nP17cpt1\n\nAdditionally, Serverless Functions can automatically failover to a different region if the region they are running in becomes unavailable. Learn more about [Serverless Function failover](https://vercel.com/docs/functions/configuring-functions/region#serverless-functions-failover) for Enterprise customers.",
  "title": "Vercel Edge Network Regions",
  "description": "View the list of regions supported by Vercel's Edge Network.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DEPLOYMENT_PAUSED",
  "markdown": "# DEPLOYMENT\\_PAUSED\n\nThe `DEPLOYMENT_PAUSED` error occurs when a deployment is paused due to certain conditions or configurations. This might happen if there's a manual intervention required, or a specific condition is met that triggers the pause.",
  "title": "DEPLOYMENT_PAUSED",
  "description": "The deployment was paused. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/environment-variables",
  "markdown": "# Environment Variables\n\nEnvironment Variables are key-value pairs configured outside your source code so that each value can change depending on the [Environment](#environments).\n\nYour source code can read these values to change behavior during the [Build Step](https://vercel.com/docs/deployments/configure-a-build) or during [Function](https://vercel.com/docs/functions/serverless-functions) execution.\n\nAll values are encrypted at rest and visible to any user that has access to the [Project](https://vercel.com/docs/projects/overview). It is safe to use both non-sensitive and sensitive data, such as tokens.\n\nChanges to Environment Variables are not applied to previous deployments, they only apply to new deployments.\n\nTo declare an Environment Variable for your deployment, go to the Environment Variables page of your Project Settings.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fadd-env-variable-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fadd-env-variable-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe _Add New_ section of the Environment Variables page in the Project Settings.\n\nEnter the desired Name for your Environment Variable. For example, if you are using Node.js and you create an Environment Variable named `API_URL`, it will be available under `process.env.API_URL` in your code.\n\nAccessing environment variables with supported runtime languages\n\nThen, enter the desired Value for your Environment Variable. The value is encrypted at rest so it is safe to add sensitive data like authentication tokens or private keys.\n\nYou can then configure which [Environments](#environments) this variable should apply to.\n\nFinally, click Save.\n\nJust below the _Add New_ form is a list of all the Environment Variables for the Project.\n\nYou can search for an existing Environment Variable by name using the search input and/or filter by [Environment](#environments) and Git Branch (in the case of the Preview Environment).\n\nClicking the three dots to the right allows you to edit or delete the Environment Variable.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fvariable-example-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fvariable-example-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn example of an Environment Variable with the search and filter inputs above.\n\nDevelopers on all plans can use a total of 64KB in Environments Variables per-Deployment on Vercel. This [limit](https://vercel.com/docs/limits/overview#environment-variables) is for all variables combined, and so no single variable can be larger than 64KB. The total size includes any variables configured through the dashboard or the [CLI](https://vercel.com/docs/cli).\n\nWith support for 64KB of Environment Variables, you can add large values for authentication tokens, JWTs, or certificates.\n\nDeployments using the following runtimes can support the larger 64KB environment:\n\n*   Node.js\n*   Python\n*   Ruby\n*   Go\n*   Java: `java11` and `java8.al2`\n*   .NET\n\nIn addition, the [PHP Community Runtime](https://github.com/vercel-community/php) also supports the 64KB environment.\n\nVercel also provides support for custom runtimes, through the Build Output API. For information on creating custom runtime support, see the following guides:\n\nWhile Vercel allows Environment Variables up to a total of 64KB in size, Edge Functions and Edge Middleware are limited to 5KB per Environment Variable.\n\nFor each Environment Variable, you can select one or more Environments to apply the Variable to:\n\n| Environment | Description |\n| --- | --- |\n| [Production](https://vercel.com/docs/deployments/environments#production) | When selected, the Environment Variable will be applied to your next Production Deployment. To create a Production Deployment, push a commit to the [Production Branch](https://vercel.com/docs/deployments/git#production-branch) or run `vercel --prod`. |\n| [Preview](#preview-environment-variables) | The Environment Variable is applied to your next Preview Deployment. Preview Deployments are created when you push to a branch that is not the [Production Branch](https://vercel.com/docs/deployments/git#production-branch) or run `vercel`. |\n| [Development](#development-environment-variables) | The Environment Variable is used when running your project locally with `vercel dev` or your preferred development command. To download Development Environment Variables, run [`vercel env pull`](https://vercel.com/docs/cli/env). |\n\nYou need Vercel CLI version 22.0.0 or higher to use the features described in this section.\n\nPreview Environment Variables are applied to deployments from any Git branch that does not match the [Production Branch](https://vercel.com/docs/deployments/git#production-branch). When you add a Preview Environment Variable, you can choose to apply to all Preview branches or you can select a specific branch.\n\nWhen you push to a branch, a combination of Preview Environment Variables and branch-specific variables (if any) will be used. Any branch-specific variables will override other variables with the same name. This means you don't need to replicate all your existing Preview Environment Variables for each branch – you only need to add the values you wish to override.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fadd-env-variable-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fadd-env-variable-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAdding an Environment Variable to the `staging` branch.\n\nYou need Vercel CLI version 21.0.1 or higher to use the features described in this section.\n\nEnvironment Variables created for the Development Environment can be downloaded into a local development setup using the `vercel env pull` command provided by [Vercel CLI](https://vercel.com/cli):\n\nvercel env pull\nDownloading Development Environment Variables for Project my-lovely-project\n✅ Created .env file \\[510ms\\]\n\nDownloading Development Environment Variables with the `vercel env pull` command.\n\nRunning the command will create a `.env` file in the current directory, which can then be consumed by your framework's Development Command (like `next dev`).\n\nIf you're using `vercel dev`, there's no need to run `vercel env pull`, as `vercel dev` automatically downloads the Development Environment Variables into memory.\n\nReview the [`vercel dev`](https://vercel.com/docs/cli/dev) section to learn more about using it.\n\nFor more information on the `vercel env` command, check out [this section](https://vercel.com/docs/cli/env).\n\n[Integrations](https://vercel.com/docs/integrations) can automatically add Environment Variables to your Project Settings. In that case, the Integration that added the Variable will be displayed:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fintegration-env-variable-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fintegration-env-variable-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn Environment Variable added by the [MongoDB](https://vercel.com/integrations/mongodbatlas) Integration.",
  "title": "Environment Variables",
  "description": "Learn how to use Vercel Environment Variables, which are key-value pairs configured outside your source code that change depending on the environment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/rest-api/endpoints/projects",
  "markdown": "# Projects\n\npost/v10/projects/{idOrName}/domains\n\nAdd a domain to the project by passing its domain name and by specifying the project by either passing the project `id` or `name` in the URL. If the domain is not yet verified to be used on this project, the request will return `verified = false`, and the domain will need to be verified according to the `verification` challenge via `POST /projects/:idOrName/domains/:domain/verify`. If the domain already exists on the project, the request will fail with a `400` status code.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\n*   apexNamestringRequired\n    \n*   createdAtnumber\n    \n*   customEnvironmentIdstring or null\n    \n*   gitBranchstring or null\n    \n*   namestringRequired\n    \n*   projectIdstringRequired\n    \n*   redirectstring or null\n    \n*   redirectStatusCodenumber or null\n    \n    One of: `307` | `301` | `302` | `308`\n    \n*   updatedAtnumber\n    \n*   verificationarray\n    \n    A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`.\n    \n*   Properties\n    \n*   verifiedbooleanRequired\n    \n    `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed.\n    \n\nCode\n\nDescription\n\n`200`\n\nThe domain was successfully added to the project\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n*   The domain is not valid\n    \n*   You can't set both a git branch and a redirect for the domain\n    \n*   The domain can not be added because the latest production deployment for the project was not successful\n    \n*   The domain redirect is not valid\n    \n*   A domain cannot redirect to itself\n    \n*   You can not set the production branch as a branch for your domain\n    \n\n`401`\n\n`402`\n\n*   The account was soft-blocked for an unhandled reason.\n    \n*   The account is missing a payment so payment method must be updated\n    \n\n`403`\n\n*   You do not have permission to access this resource.\n    \n*   You don't have access to the domain you are adding\n    \n\n`404`\n\n`409`\n\n*   The domain is already assigned to another Vercel project\n    \n*   Cannot create project domain since owner already has `domain` on their account, but it's not verified yet.\n    \n*   Cannot create project domain since owner already has `domain` on their account, and it's verified.\n    \n*   The domain is not allowed to be used\n    \n*   The project is currently being transferred\n    \n\npost/v10/projects\n\nAllows to create a new project with the provided configuration. It only requires the project `name` but more configuration can be provided to override the defaults.\n\nQuery Parameter\n\nDescription\n\nslug\n\nstring\n\nThe Team slug to perform the request on behalf of.\n\nteamId\n\nstring\n\nThe Team identifier to perform the request on behalf of.\n\n*   accountIdstringRequired\n    \n*   analyticsobject\n    \n*   Properties\n    \n*   autoAssignCustomDomainsboolean\n    \n*   autoAssignCustomDomainsUpdatedBystring\n    \n*   autoExposeSystemEnvsboolean\n    \n*   buildCommandstring or null\n    \n*   commandForIgnoringBuildStepstring or null\n    \n*   concurrencyBucketNamestring\n    \n*   connectBuildsEnabledboolean\n    \n*   connectConfigurationIdstring or null\n    \n*   createdAtnumber\n    \n*   cronsobject\n    \n*   Properties\n    \n*   customerSupportCodeVisibilityboolean\n    \n*   dataCacheobject\n    \n*   Properties\n    \n*   deploymentExpirationobject or null\n    \n*   Properties\n    \n*   devCommandstring or null\n    \n*   directoryListingbooleanRequired\n    \n*   enableAffectedProjectsDeploymentsboolean\n    \n*   enablePreviewFeedbackboolean or null\n    \n*   envarray\n    \n*   Properties\n    \n*   frameworkstring or null\n    \n    One of: `blitzjs` | `nextjs` | `gatsby` | `remix` | `astro` | `hexo` | `eleventy` | `docusaurus-2` | `docusaurus` | `preact` | `solidstart-1` | `solidstart` | `dojo` | `ember` | `vue` | `scully` | `ionic-angular` | `angular` | `polymer` | `svelte` | `sveltekit` | `sveltekit-1` | `ionic-react` | `create-react-app` | `gridsome` | `umijs` | `sapper` | `saber` | `stencil` | `nuxtjs` | `redwoodjs` | `hugo` | `jekyll` | `brunch` | `middleman` | `zola` | `hydrogen` | `vite` | `vitepress` | `vuepress` | `parcel` | `sanity` | `storybook`\n    \n*   gitCommentsobject\n    \n*   Properties\n    \n*   gitForkProtectionboolean\n    \n*   gitLFSboolean\n    \n*   hasActiveBranchesboolean\n    \n*   hasFloatingAliasesboolean\n    \n*   idstringRequired\n    \n*   installCommandstring or null\n    \n*   lastAliasRequestobject or null\n    \n*   Properties\n    \n*   lastRollbackTargetobject or null\n    \n*   latestDeploymentsarray\n    \n*   Properties\n    \n*   linkOne of the following objects\n    \n*   One of\n    \n*   liveboolean\n    \n*   namestringRequired\n    \n*   nodeVersionstringRequired\n    \n    One of: `20.x` | `18.x` | `16.x` | `14.x` | `12.x` | `10.x` | `8.10.x`\n    \n*   oidcTokenConfigobject\n    \n*   Properties\n    \n*   optionsAllowlistobject or null\n    \n*   Properties\n    \n*   outputDirectorystring or null\n    \n*   passiveConnectConfigurationIdstring or null\n    \n*   passwordProtectionobject or null\n    \n*   pausedboolean\n    \n*   permissionsobject\n    \n*   Properties\n    \n*   productionDeploymentsFastLaneboolean\n    \n*   protectionBypassobject\n    \n*   publicSourceboolean or null\n    \n*   rootDirectorystring or null\n    \n*   securityobject\n    \n*   Properties\n    \n*   serverlessFunctionRegionstring or null\n    \n*   serverlessFunctionZeroConfigFailoverboolean\n    \n*   skewProtectionBoundaryAtnumber\n    \n*   skewProtectionMaxAgenumber\n    \n*   skipGitConnectDuringLinkboolean\n    \n*   sourceFilesOutsideRootDirectoryboolean\n    \n*   speedInsightsobject\n    \n*   Properties\n    \n*   ssoProtectionobject or null\n    \n*   Properties\n    \n*   targetsobject\n    \n*   tierstring\n    \n    One of: `standard` | `advanced` | `critical`\n    \n*   transferCompletedAtnumber\n    \n*   transferStartedAtnumber\n    \n*   transferToAccountIdstring\n    \n*   transferredFromAccountIdstring\n    \n*   trustedIpsOne of the following objects or null\n    \n*   One of\n    \n*   updatedAtnumber\n    \n*   webAnalyticsobject\n    \n*   Properties\n    \n\nCode\n\nDescription\n\n`200`\n\nThe project was successfuly created\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n*   The Bitbucket Webhook for the project link could not be created\n    \n*   The Gitlab Webhook for the project link could not be created\n    \n\n`401`\n\n`402`\n\n*   The account was soft-blocked for an unhandled reason.\n    \n*   The account is missing a payment so payment method must be updated\n    \n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\nA project with the provided name already exists.\n\npost/v10/projects/{idOrName}/env\n\nCreate one ore more environment variables for a project by passing its `key`, `value`, `type` and `target` and by specifying the project by either passing the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA`\n\n*   createdRequiredOne of the following objects\n    \n*   One of\n    \n*   failedarrayRequired\n    \n*   Properties\n    \n\nCode\n\nDescription\n\n`201`\n\nThe environment variable was created successfully\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n\n`401`\n\n`402`\n\n*   The account was soft-blocked for an unhandled reason.\n    \n*   The account is missing a payment so payment method must be updated\n    \n\n`403`\n\n*   You do not have permission to access this resource.\n    \n*   The environment variable cannot be created because it already exists\n    \n*   Additional permissions are required to create production environment variables\n    \n\n`404`\n\n`409`\n\nThe project is being transfered and creating an environment variable is not possible\n\ndelete/v9/projects/{idOrName}\n\nDelete a specific project by passing either the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB`\n\nThe project was successfuly removed\n\nCode\n\nDescription\n\n`204`\n\nThe project was successfuly removed\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\npatch/v9/projects/{idOrName}/env/{id}\n\nEdit a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nid\n\nstring\n\nrequired\n\nThe unique environment variable identifier\n\nExample:`XMbOEya1gUUO1ir4`\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA`\n\n*   One of the following objects\n    \n*   One of\n    \n\nCode\n\nDescription\n\n`200`\n\nThe environment variable was successfully edited\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\nThe project is being transfered and removing an environment variable is not possible\n\nget/v9/projects/{idOrName}/env\n\nRetrieve the environment variables for a given project by passing either the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA`\n\n*   One of the following objects\n    \n*   One of\n    \n\nCode\n\nDescription\n\n`200`\n\nThe list of environment variables for the given project\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\nget/v9/projects/{idOrName}\n\nGet the information for a specific project by passing either the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring | boolean of the following\n\nrequired\n\nThe unique project identifier or the project name\n\ntype: `string`\n\ntype: `boolean`\n\n*   accountIdstringRequired\n    \n*   analyticsobject\n    \n*   Properties\n    \n*   autoAssignCustomDomainsboolean\n    \n*   autoAssignCustomDomainsUpdatedBystring\n    \n*   autoExposeSystemEnvsboolean\n    \n*   buildCommandstring or null\n    \n*   commandForIgnoringBuildStepstring or null\n    \n*   concurrencyBucketNamestring\n    \n*   connectBuildsEnabledboolean\n    \n*   connectConfigurationIdstring or null\n    \n*   createdAtnumber\n    \n*   cronsobject\n    \n*   Properties\n    \n*   customerSupportCodeVisibilityboolean\n    \n*   dataCacheobject\n    \n*   Properties\n    \n*   deploymentExpirationobject or null\n    \n*   Properties\n    \n*   devCommandstring or null\n    \n*   directoryListingbooleanRequired\n    \n*   enableAffectedProjectsDeploymentsboolean\n    \n*   enablePreviewFeedbackboolean or null\n    \n*   envarray\n    \n*   Properties\n    \n*   frameworkstring or null\n    \n    One of: `blitzjs` | `nextjs` | `gatsby` | `remix` | `astro` | `hexo` | `eleventy` | `docusaurus-2` | `docusaurus` | `preact` | `solidstart-1` | `solidstart` | `dojo` | `ember` | `vue` | `scully` | `ionic-angular` | `angular` | `polymer` | `svelte` | `sveltekit` | `sveltekit-1` | `ionic-react` | `create-react-app` | `gridsome` | `umijs` | `sapper` | `saber` | `stencil` | `nuxtjs` | `redwoodjs` | `hugo` | `jekyll` | `brunch` | `middleman` | `zola` | `hydrogen` | `vite` | `vitepress` | `vuepress` | `parcel` | `sanity` | `storybook`\n    \n*   gitCommentsobject\n    \n*   Properties\n    \n*   gitForkProtectionboolean\n    \n*   gitLFSboolean\n    \n*   hasActiveBranchesboolean\n    \n*   hasFloatingAliasesboolean\n    \n*   idstringRequired\n    \n*   installCommandstring or null\n    \n*   lastAliasRequestobject or null\n    \n*   Properties\n    \n*   lastRollbackTargetobject or null\n    \n*   latestDeploymentsarray\n    \n*   Properties\n    \n*   linkOne of the following objects\n    \n*   One of\n    \n*   liveboolean\n    \n*   namestringRequired\n    \n*   nodeVersionstringRequired\n    \n    One of: `20.x` | `18.x` | `16.x` | `14.x` | `12.x` | `10.x` | `8.10.x`\n    \n*   oidcTokenConfigobject\n    \n*   Properties\n    \n*   optionsAllowlistobject or null\n    \n*   Properties\n    \n*   outputDirectorystring or null\n    \n*   passiveConnectConfigurationIdstring or null\n    \n*   passwordProtectionobject or null\n    \n*   pausedboolean\n    \n*   permissionsobject\n    \n*   Properties\n    \n*   productionDeploymentsFastLaneboolean\n    \n*   protectionBypassobject\n    \n*   publicSourceboolean or null\n    \n*   rootDirectorystring or null\n    \n*   securityobject\n    \n*   Properties\n    \n*   serverlessFunctionRegionstring or null\n    \n*   serverlessFunctionZeroConfigFailoverboolean\n    \n*   skewProtectionBoundaryAtnumber\n    \n*   skewProtectionMaxAgenumber\n    \n*   skipGitConnectDuringLinkboolean\n    \n*   sourceFilesOutsideRootDirectoryboolean\n    \n*   speedInsightsobject\n    \n*   Properties\n    \n*   ssoProtectionobject or null\n    \n*   Properties\n    \n*   targetsobject\n    \n*   tierstring\n    \n    One of: `standard` | `advanced` | `critical`\n    \n*   transferCompletedAtnumber\n    \n*   transferStartedAtnumber\n    \n*   transferToAccountIdstring\n    \n*   transferredFromAccountIdstring\n    \n*   trustedIpsOne of the following objects or null\n    \n*   One of\n    \n*   updatedAtnumber\n    \n*   webAnalyticsobject\n    \n*   Properties\n    \n\nCode\n\nDescription\n\n`200`\n\nThe project information\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\nget/v9/projects/{idOrName}/domains/{domain}\n\nGet project domain by project id/name and domain name.\n\nPath Parameter\n\nDescription\n\ndomain\n\nstring\n\nrequired\n\nThe project domain name\n\nExample:`www.example.com`\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\n*   apexNamestringRequired\n    \n*   createdAtnumber\n    \n*   customEnvironmentIdstring or null\n    \n*   gitBranchstring or null\n    \n*   namestringRequired\n    \n*   projectIdstringRequired\n    \n*   redirectstring or null\n    \n*   redirectStatusCodenumber or null\n    \n    One of: `307` | `301` | `302` | `308`\n    \n*   updatedAtnumber\n    \n*   verificationarray\n    \n    A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`.\n    \n*   Properties\n    \n*   verifiedbooleanRequired\n    \n    `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed.\n    \n\nCode\n\nDescription\n\n`200`\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\nget/v9/projects/{idOrName}/domains\n\nRetrieve the domains associated with a given project by passing either the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring | integer of the following\n\nrequired\n\nThe unique project identifier or the project name\n\ntype: `string`\n\ntype: `integer`\n\n*   domainsarrayRequired\n    \n*   Properties\n    \n*   paginationRequired\n    \n\nCode\n\nDescription\n\n`200`\n\nSuccessful response retrieving a list of domains\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\nget/v1/projects/{idOrName}/env/{id}\n\nRetrieve the environment variable for a given project.\n\nPath Parameter\n\nDescription\n\nid\n\nstring\n\nrequired\n\nThe unique ID for the environment variable to get the decrypted value.\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA`\n\n*   One of the following objects\n    \n*   One of\n    \n\nCode\n\nDescription\n\n`200`\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\nget/v9/projects\n\nAllows to retrieve the list of projects of the authenticated user or team. The list will be paginated and the provided query parameters allow filtering the returned projects.\n\nQuery Parameter\n\nDescription\n\ndeprecated\n\nboolean\n\nedgeConfigId\n\nstring\n\nFilter results by connected Edge Config ID\n\nedgeConfigTokenId\n\nstring\n\nFilter results by connected Edge Config Token ID\n\nexcludeRepos\n\nstring\n\nFilter results by excluding those projects that belong to a repo\n\nfrom\n\nstring\n\nQuery only projects updated after the given timestamp\n\ngitForkProtection\n\nstring of the following\n\nSpecifies whether PRs from Git forks should require a team member's authorization before it can be deployed\n\nExample:`1`\n\nAllowed values:`1``0`\n\nlimit\n\nstring\n\nLimit the number of projects returned\n\nrepo\n\nstring\n\nFilter results by repo. Also used for project count\n\nrepoId\n\nstring\n\nFilter results by Repository ID.\n\nrepoUrl\n\nstring\n\nFilter results by Repository URL.\n\nExample:`https://github.com/vercel/next.js`\n\nsearch\n\nstring\n\nSearch projects by the name field\n\nslug\n\nstring\n\nThe Team slug to perform the request on behalf of.\n\nteamId\n\nstring\n\nThe Team identifier to perform the request on behalf of.\n\nThe paginated list of projects\n\n*   paginationRequired\n    \n*   projectsarrayRequired\n    \n*   Properties\n    \n\nCode\n\nDescription\n\n`200`\n\nThe paginated list of projects\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\nget/v1/projects/{projectId}/promote/aliases\n\nGet a list of aliases related to the last promote request with their mapping status\n\nPath Parameter\n\nDescription\n\nprojectId\n\nstring\n\nrequired\n\n*   One of the following objects\n    \n*   One of\n    \n\nCode\n\nDescription\n\n`200`\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\npost/v1/projects/{projectId}/pause\n\nPause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project disables auto assigning custom production domains and blocks the active Production Deployment then the request will return with 200 status code.\n\nPath Parameter\n\nDescription\n\nprojectId\n\nstring\n\nrequired\n\nThe unique project identifier\n\nN/A\n\nCode\n\nDescription\n\n`200`\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`402`\n\n*   The account was soft-blocked for an unhandled reason.\n    \n*   The account is missing a payment so payment method must be updated\n    \n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`500`\n\ndelete/v9/projects/{idOrName}/domains/{domain}\n\nRemove a domain from a project by passing the domain name and by specifying the project by either passing the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\ndomain\n\nstring\n\nrequired\n\nThe project domain name\n\nExample:`www.example.com`\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\n*   object\n    \n\nCode\n\nDescription\n\n`200`\n\nThe domain was succesfully removed from the project\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\nThe project is currently being transferred\n\ndelete/v9/projects/{idOrName}/env/{id}\n\nDelete a specific environment variable for a given project by passing the environment variable identifier and either passing the project `id` or `name` in the URL.\n\nPath Parameter\n\nDescription\n\nid\n\nstring\n\nrequired\n\nThe unique environment variable identifier\n\nExample:`XMbOEya1gUUO1ir4`\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_XLKmu1DyR1eY7zq8UgeRKbA7yVLA`\n\n*   One of the following objects\n    \n*   One of\n    \n\nCode\n\nDescription\n\n`200`\n\nThe environment variable was successfully removed\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\nThe project is being transfered and removing an environment variable is not possible\n\npost/v10/projects/{projectId}/promote/{deploymentId}\n\nAllows users to promote a deployment to production. Note: This does NOT rebuild the deployment. If you need that, then call create-deployments endpoint.\n\nPath Parameter\n\nDescription\n\ndeploymentId\n\nstring\n\nrequired\n\nprojectId\n\nstring\n\nrequired\n\nN/A\n\nCode\n\nDescription\n\n`201`\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\npost/v1/projects/{projectId}/unpause\n\nUnpause a project by passing its project `id` in the URL. If the project does not exist given the id then the request will fail with 400 status code. If the project enables auto assigning custom production domains and unblocks the active Production Deployment then the request will return with 200 status code.\n\nPath Parameter\n\nDescription\n\nprojectId\n\nstring\n\nrequired\n\nThe unique project identifier\n\nN/A\n\nCode\n\nDescription\n\n`200`\n\n`400`\n\nOne of the provided values in the request query is invalid.\n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`500`\n\npatch/v9/projects/{idOrName}\n\nUpdate the fields of a project using either its `name` or `id`.\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB`\n\n*   accountIdstringRequired\n    \n*   analyticsobject\n    \n*   Properties\n    \n*   autoAssignCustomDomainsboolean\n    \n*   autoAssignCustomDomainsUpdatedBystring\n    \n*   autoExposeSystemEnvsboolean\n    \n*   buildCommandstring or null\n    \n*   commandForIgnoringBuildStepstring or null\n    \n*   concurrencyBucketNamestring\n    \n*   connectBuildsEnabledboolean\n    \n*   connectConfigurationIdstring or null\n    \n*   createdAtnumber\n    \n*   cronsobject\n    \n*   Properties\n    \n*   customerSupportCodeVisibilityboolean\n    \n*   dataCacheobject\n    \n*   Properties\n    \n*   deploymentExpirationobject or null\n    \n*   Properties\n    \n*   devCommandstring or null\n    \n*   directoryListingbooleanRequired\n    \n*   enableAffectedProjectsDeploymentsboolean\n    \n*   enablePreviewFeedbackboolean or null\n    \n*   envarray\n    \n*   Properties\n    \n*   frameworkstring or null\n    \n    One of: `blitzjs` | `nextjs` | `gatsby` | `remix` | `astro` | `hexo` | `eleventy` | `docusaurus-2` | `docusaurus` | `preact` | `solidstart-1` | `solidstart` | `dojo` | `ember` | `vue` | `scully` | `ionic-angular` | `angular` | `polymer` | `svelte` | `sveltekit` | `sveltekit-1` | `ionic-react` | `create-react-app` | `gridsome` | `umijs` | `sapper` | `saber` | `stencil` | `nuxtjs` | `redwoodjs` | `hugo` | `jekyll` | `brunch` | `middleman` | `zola` | `hydrogen` | `vite` | `vitepress` | `vuepress` | `parcel` | `sanity` | `storybook`\n    \n*   gitCommentsobject\n    \n*   Properties\n    \n*   gitForkProtectionboolean\n    \n*   gitLFSboolean\n    \n*   hasActiveBranchesboolean\n    \n*   hasFloatingAliasesboolean\n    \n*   idstringRequired\n    \n*   installCommandstring or null\n    \n*   lastAliasRequestobject or null\n    \n*   Properties\n    \n*   lastRollbackTargetobject or null\n    \n*   latestDeploymentsarray\n    \n*   Properties\n    \n*   linkOne of the following objects\n    \n*   One of\n    \n*   liveboolean\n    \n*   namestringRequired\n    \n*   nodeVersionstringRequired\n    \n    One of: `20.x` | `18.x` | `16.x` | `14.x` | `12.x` | `10.x` | `8.10.x`\n    \n*   oidcTokenConfigobject\n    \n*   Properties\n    \n*   optionsAllowlistobject or null\n    \n*   Properties\n    \n*   outputDirectorystring or null\n    \n*   passiveConnectConfigurationIdstring or null\n    \n*   passwordProtectionobject or null\n    \n*   pausedboolean\n    \n*   permissionsobject\n    \n*   Properties\n    \n*   productionDeploymentsFastLaneboolean\n    \n*   protectionBypassobject\n    \n*   publicSourceboolean or null\n    \n*   rootDirectorystring or null\n    \n*   securityobject\n    \n*   Properties\n    \n*   serverlessFunctionRegionstring or null\n    \n*   serverlessFunctionZeroConfigFailoverboolean\n    \n*   skewProtectionBoundaryAtnumber\n    \n*   skewProtectionMaxAgenumber\n    \n*   skipGitConnectDuringLinkboolean\n    \n*   sourceFilesOutsideRootDirectoryboolean\n    \n*   speedInsightsobject\n    \n*   Properties\n    \n*   ssoProtectionobject or null\n    \n*   Properties\n    \n*   targetsobject\n    \n*   tierstring\n    \n    One of: `standard` | `advanced` | `critical`\n    \n*   transferCompletedAtnumber\n    \n*   transferStartedAtnumber\n    \n*   transferToAccountIdstring\n    \n*   transferredFromAccountIdstring\n    \n*   trustedIpsOne of the following objects or null\n    \n*   One of\n    \n*   updatedAtnumber\n    \n*   webAnalyticsobject\n    \n*   Properties\n    \n\nCode\n\nDescription\n\n`200`\n\nThe project was successfully updated\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n*   Trusted IPs is only accessible for enterprise customers\n    \n\n`401`\n\n`402`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\n*   The provided name for the project is already being used\n    \n*   The project is currently being transferred.\n    \n\n`428`\n\n*   Owner does not have protection add-on\n    \n*   Advanced Deployment Protection is not available for the user plan\n    \n\npatch/v1/data-cache/projects/{projectId}\n\nUpdate the data cache feature on a project.\n\nPath Parameter\n\nDescription\n\nprojectId\n\nstring\n\nrequired\n\nThe unique project identifier\n\nExample:`prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB`\n\n*   accountIdstringRequired\n    \n*   analyticsobject\n    \n*   Properties\n    \n*   autoAssignCustomDomainsboolean\n    \n*   autoAssignCustomDomainsUpdatedBystring\n    \n*   autoExposeSystemEnvsboolean\n    \n*   buildCommandstring or null\n    \n*   commandForIgnoringBuildStepstring or null\n    \n*   concurrencyBucketNamestring\n    \n*   connectBuildsEnabledboolean\n    \n*   connectConfigurationIdstring or null\n    \n*   createdAtnumber\n    \n*   cronsobject\n    \n*   Properties\n    \n*   customerSupportCodeVisibilityboolean\n    \n*   dataCacheobject\n    \n*   Properties\n    \n*   deploymentExpirationobject or null\n    \n*   Properties\n    \n*   devCommandstring or null\n    \n*   directoryListingbooleanRequired\n    \n*   enableAffectedProjectsDeploymentsboolean\n    \n*   enablePreviewFeedbackboolean or null\n    \n*   envarray\n    \n*   Properties\n    \n*   frameworkstring or null\n    \n    One of: `blitzjs` | `nextjs` | `gatsby` | `remix` | `astro` | `hexo` | `eleventy` | `docusaurus-2` | `docusaurus` | `preact` | `solidstart-1` | `solidstart` | `dojo` | `ember` | `vue` | `scully` | `ionic-angular` | `angular` | `polymer` | `svelte` | `sveltekit` | `sveltekit-1` | `ionic-react` | `create-react-app` | `gridsome` | `umijs` | `sapper` | `saber` | `stencil` | `nuxtjs` | `redwoodjs` | `hugo` | `jekyll` | `brunch` | `middleman` | `zola` | `hydrogen` | `vite` | `vitepress` | `vuepress` | `parcel` | `sanity` | `storybook`\n    \n*   gitCommentsobject\n    \n*   Properties\n    \n*   gitForkProtectionboolean\n    \n*   gitLFSboolean\n    \n*   hasActiveBranchesboolean\n    \n*   hasFloatingAliasesboolean\n    \n*   idstringRequired\n    \n*   installCommandstring or null\n    \n*   lastAliasRequestobject or null\n    \n*   Properties\n    \n*   lastRollbackTargetobject or null\n    \n*   latestDeploymentsarray\n    \n*   Properties\n    \n*   linkOne of the following objects\n    \n*   One of\n    \n*   liveboolean\n    \n*   namestringRequired\n    \n*   nodeVersionstringRequired\n    \n    One of: `20.x` | `18.x` | `16.x` | `14.x` | `12.x` | `10.x` | `8.10.x`\n    \n*   oidcTokenConfigobject\n    \n*   Properties\n    \n*   optionsAllowlistobject or null\n    \n*   Properties\n    \n*   outputDirectorystring or null\n    \n*   passiveConnectConfigurationIdstring or null\n    \n*   passwordProtectionobject or null\n    \n*   pausedboolean\n    \n*   permissionsobject\n    \n*   Properties\n    \n*   productionDeploymentsFastLaneboolean\n    \n*   protectionBypassobject\n    \n*   publicSourceboolean or null\n    \n*   rootDirectorystring or null\n    \n*   securityobject\n    \n*   Properties\n    \n*   serverlessFunctionRegionstring or null\n    \n*   serverlessFunctionZeroConfigFailoverboolean\n    \n*   skewProtectionBoundaryAtnumber\n    \n*   skewProtectionMaxAgenumber\n    \n*   skipGitConnectDuringLinkboolean\n    \n*   sourceFilesOutsideRootDirectoryboolean\n    \n*   speedInsightsobject\n    \n*   Properties\n    \n*   ssoProtectionobject or null\n    \n*   Properties\n    \n*   targetsobject\n    \n*   tierstring\n    \n    One of: `standard` | `advanced` | `critical`\n    \n*   transferCompletedAtnumber\n    \n*   transferStartedAtnumber\n    \n*   transferToAccountIdstring\n    \n*   transferredFromAccountIdstring\n    \n*   trustedIpsOne of the following objects or null\n    \n*   One of\n    \n*   updatedAtnumber\n    \n*   webAnalyticsobject\n    \n*   Properties\n    \n\nCode\n\nDescription\n\n`200`\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\npatch/v9/projects/{idOrName}/domains/{domain}\n\nUpdate a project domain's configuration, including the name, git branch and redirect of the domain.\n\nPath Parameter\n\nDescription\n\ndomain\n\nstring\n\nrequired\n\nThe project domain name\n\nExample:`www.example.com`\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\n*   apexNamestringRequired\n    \n*   createdAtnumber\n    \n*   customEnvironmentIdstring or null\n    \n*   gitBranchstring or null\n    \n*   namestringRequired\n    \n*   projectIdstringRequired\n    \n*   redirectstring or null\n    \n*   redirectStatusCodenumber or null\n    \n    One of: `307` | `301` | `302` | `308`\n    \n*   updatedAtnumber\n    \n*   verificationarray\n    \n    A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`.\n    \n*   Properties\n    \n*   verifiedbooleanRequired\n    \n    `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed.\n    \n\nCode\n\nDescription\n\n`200`\n\nThe domain was updated successfuly\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n*   The domain redirect is not valid\n    \n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\nThe project is currently being transferred\n\npatch/v1/projects/{idOrName}/protection-bypass\n\nUpdate the deployment protection automation bypass for a project\n\nPath Parameter\n\nDescription\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\n*   protectionBypassobject\n    \n\nCode\n\nDescription\n\n`200`\n\n`400`\n\n*   One of the provided values in the request body is invalid.\n    \n*   One of the provided values in the request query is invalid.\n    \n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`\n\n`409`\n\npost/v9/projects/{idOrName}/domains/{domain}/verify\n\nAttempts to verify a project domain with `verified = false` by checking the correctness of the project domain's `verification` challenge.\n\nPath Parameter\n\nDescription\n\ndomain\n\nstring\n\nrequired\n\nThe domain name you want to verify\n\nExample:`example.com`\n\nidOrName\n\nstring\n\nrequired\n\nThe unique project identifier or the project name\n\nExample:`prj_12HKQaOmR5t5Uy6vdcQsNIiZgHGB`\n\n*   apexNamestringRequired\n    \n*   createdAtnumber\n    \n*   customEnvironmentIdstring or null\n    \n*   gitBranchstring or null\n    \n*   namestringRequired\n    \n*   projectIdstringRequired\n    \n*   redirectstring or null\n    \n*   redirectStatusCodenumber or null\n    \n    One of: `307` | `301` | `302` | `308`\n    \n*   updatedAtnumber\n    \n*   verificationarray\n    \n    A list of verification challenges, one of which must be completed to verify the domain for use on the project. After the challenge is complete `POST /projects/:idOrName/domains/:domain/verify` to verify the domain. Possible challenges: - If `verification.type = TXT` the `verification.domain` will be checked for a TXT record matching `verification.value`.\n    \n*   Properties\n    \n*   verifiedbooleanRequired\n    \n    `true` if the domain is verified for use with the project. If `false` it will not be used as an alias on this project until the challenge in `verification` is completed.\n    \n\nCode\n\nDescription\n\n`200`\n\n*   The project domain was verified successfully\n    \n*   Domain is already verified\n    \n\n`400`\n\n*   One of the provided values in the request query is invalid.\n    \n*   There is an existing TXT record on the domain verifying it for another project\n    \n*   The domain does not have a TXT record that attempts to verify the project domain\n    \n*   The TXT record on the domain does not match the expected challenge for the project domain\n    \n*   Project domain is not assigned to project\n    \n\n`401`\n\n`403`\n\nYou do not have permission to access this resource.\n\n`404`",
  "title": "Projects",
  "description": "The Vercel REST API is a REST-styled API that gives full control over the entire Vercel platform.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/concurrent-builds",
  "markdown": "# Managing Concurrent Builds\n\nGenerally, when you make multiple deployments in the same Vercel account, the builds get queued, and only one deployment is built at a time. Concurrent Builds allow you to build multiple deployments with Vercel simultaneously.\n\n[Team accounts](https://vercel.com/docs/accounts/create-a-team) allow you to increase the number of Concurrent Builds from the Billing section on the Team Settings page, enabling the team to create deployments faster.\n\nYou can manage the number of concurrent builds on the Team Settings page, under Billing. Depending on your plan, you can edit the number of slots required for your team.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Fconcurrent-builds-fieldset.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Fconcurrent-builds-fieldset-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSetting the Concurrent Builds limit for a Team.\n\nWhen Vercel queues builds, we'll processes them in chronological order (FIFO Order). If a build has to wait for queued preview deployments to finish, it can delay the production release process.\n\nTo ensure that changes to the [production environment](https://vercel.com/docs/deployments/environments#production) are prioritized over [preview deployments](https://vercel.com/docs/deployments/preview-deployments) in the queue, you can enable Prioritize Production Builds:\n\n1.  From your Vercel dashboard, select the project you wish to enable it for\n2.  Select the Settings tab, and go to the [Advanced section](https://vercel.com/d?to=%2F%5Bteam%5D%2F%5Bproject%5D%2Fsettings%2Fadvanced&title=Prioritize+Production+Builds+Setting) of your [Project Settings](https://vercel.com/docs/projects/overview#project-settings)\n3.  Under Prioritize Production Builds, toggle the switch to Enabled\n\n|     | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Maximum number of concurrent builds | 1   | 12  | [Custom](https://vercel.com/contact/sales) |\n\nYou can add a maximum of three concurrent builds during the [14-day free trial](https://vercel.com/docs/accounts/plans/pro/trials) . Once you add a payment method, you can upgrade this number to 12 slots.",
  "title": "Managing Concurrent Builds",
  "description": "Concurrent Builds allow you to build multiple deployments with Vercel simultaneously. Learn how to manage Concurrent Builds on Vercel with this guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/runtime-logs",
  "markdown": "# Runtime Logs\n\nThe Logs tab allows you to view, search, inspect, and [share](#log-sharing) your runtime logs without any third-party integration. You can also filter and group your [runtime logs](#what-are-runtime-logs) based on the relevant fields.\n\nYou can only view runtime logs from the Logs tab. [Build logs](https://vercel.com/docs/deployments/logs) can be accessed from the production deployment tile.\n\nRuntime logs include all logs generated by [Serverless](https://vercel.com/docs/functions/serverless-functions) and [Edge Function](https://vercel.com/docs/functions/edge-functions) invocations in both [preview](https://vercel.com/docs/deployments/preview-deployments) and [production](https://vercel.com/docs/deployments/environments#production) deployments. These log results provide information about the output for your functions as well as the `console.log` output.\n\nWith runtime logs:\n\n*   Logs are shown in realtime\n*   Each action of writing to standard output, such as using `console.log`, results in a separate log entry\n*   Each of those logs are 4 KB _per line_\n\nTo view runtime logs:\n\n1.  From the dashboard, select the project that you wish to see the logs for\n2.  Select the Logs tab from your project overview\n3.  From here you can view, filter, and search through the runtime logs. Each log row shares [basic info](#log-details) about the request, like execution, domain name, HTTP status, function type, and RequestId.\n\n![Layout to visualize the runtime logs.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Fruntime-logs-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Layout to visualize the runtime logs.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Fruntime-logs-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLayout to visualize the runtime logs.\n\nYou can use the following filters from the left sidebar to get a refined search experience.\n\nYou can filter runtime logs based on a specific timeline. It can vary from the past hour, last 3 days, or a custom timespan [depending on your account type](https://vercel.com/docs/observability/runtime-logs#limits). You can use the Live mode option to follow the logs in real-time.\n\n![Layout to visualize the runtime logs in live mode.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Flive-mode-logs-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Layout to visualize the runtime logs in live mode.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Flive-mode-logs-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLayout to visualize the runtime logs in live mode.\n\nAll displayed dates and times are in UTC.\n\nYou can filter runtime logs by three kinds of levels: Info, Warning, and Error. [Streaming Functions](https://vercel.com/docs/functions/streaming) will always preserve the original intent:\n\nAdditionally:\n\n*   Requests with a status code of `4xx` are considered a Warning\n*   Requests with a status code of `5xx` are considered Error\n*   All other requests are considered Info\n\nThese levels are highlighted with different colors for example, yellow for warnings and red for errors. This color coding is beneficial with debugging; you can identify the failed requests and the reason behind the failure.\n\nYou can filter and analyze logs for one or more functions defined in your project. The log output is generated for the [Serverless Functions](https://vercel.com/docs/functions/serverless-functions), [Edge Functions](https://vercel.com/docs/functions/edge-functions), and [Edge Middleware](https://vercel.com/docs/functions/edge-middleware).\n\nYou can view logs for one or more domains and subdomains attached to your team’s project. Alternatively, you can use the Search hosts... field to navigate to the desired host.\n\nLike host and functions, you can filter your logs based on deployments URLs.\n\nUsing the type filter, you can search for four logs types generated as a result of:\n\n| Type | Description |\n| --- | --- |\n| [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) | Logs generated from your Serverless Functions invocations. Log details include additional runtime Request Id details and other basic info |\n| [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) | Logs generated as a result of your Edge Middleware invocations |\n| [Edge Functions](https://vercel.com/docs/functions/edge-functions) | Logs requests generated from your Edge Functions. Log info includes time, domain, and the request method |\n| Request | Logs generated from either ISR or external redirections |\n\nYou can filter your logs based on the request method used by a function such as `GET` or `POST`.\n\nYou can filter your logs based on the cache behavior such as `HIT` or `MISS`.\n\nLog Presets allow you to save your selected filters for later use. You can save presets to either My Project Presets (related to your personal account) or Team Project Presets. Personal presets can only be viewed and edited by the user who created them.\n\nPresets are tied to specific projects. If you switch to another project, you will not see the saved presets.\n\nTo save a preset, make a change to the filters in the left sidebar and select the Save button. You can then choose the scoping group to save the preset to, either Personal or Team.\n\n![Layout to save log presets.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1693204374%2Fdocs-assets%2Fstatic%2Fdocs%2Flogs%2Fruntime-log-preset-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Layout to save log presets.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1693204374%2Fdocs-assets%2Fstatic%2Fdocs%2Flogs%2Fruntime-log-preset-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLayout to save log presets.\n\nYou can use the main search field to filter logs by their messages. In the current search state, filtered log results are sorted chronologically, with the most recent first. Filtered values can also be searched from the main search bar.\n\n| Value | Description |\n| --- | --- |\n| [Function](#function) | The function name |\n| [Level](#level) | The level type. Can be Info, Warning, or Error |\n| [Type](#type) | Can be Request, [Serverless Function](https://vercel.com/docs/functions/serverless-functions), [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), and [Edge Function](https://vercel.com/docs/functions/edge-functions) |\n| [Host](#host) | Name of the [domain](https://vercel.com/docs/projects/domains) or subdomain for which the log was generated |\n| [Deployment](#deployment) | The name of your deployment |\n| [Method](#request-method) | The request method used. For example `GET`, `POST` etc. |\n| [Cache](#cache) | Cache status with the values `HIT`, `MISS`, `STALE`, `BYPASS`, `PRERENDER` or `REVALIDATED` |\n| Status | HTTP status code for the log message |\n| RequestID | Unique identifier of request. This is visible on a 404 page, for example. |\n\nThis **free text search** feature is limited to the `message` field. Other fields can be filtered using the left sidebar or the filters in the search bar.\n\nYou can view details for each generated runtime log to analyze and improve your debugging experience. When you click a log from the list, the following details appear in the right sidebar:\n\n| Info | Description |\n| --- | --- |\n| Log Name | Title of the log generated |\n| Time | Timestamp at which the log was recorded in UTC |\n| Status Code | HTTP status code for the log message |\n| Host | Name of the [domain](https://vercel.com/docs/projects/domains) or subdomain for which the log was generated |\n| Request Id | Unique identifier of request created only for runtime logs |\n| Request User Agent | Name of the browser from which the request originated |\n| Level | The level type for example, Info, Warning, or Error |\n| Cache | Cache status with the values `HIT`, `MISS`, `STALE`, `BYPASS`, `PRERENDER` or `REVALIDATED` |\n| Type | Can be Request, [Serverless Function](https://vercel.com/docs/functions/serverless-functions), [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), and [Edge Function](https://vercel.com/docs/functions/edge-functions) |\n| Function | The function name |\n| Location | The geographical [region](https://vercel.com/docs/functions/serverless-functions/regions) for Serverless and Edge Functions access |\n| Runtime | Name of the JavaScript runtime environment for Node.js (info only applies to Serverless Function type) |\n| Duration/Limit | Time duration for the log record result (info only applies to Serverless Function type) |\n| Memory used/Limit | The size of memory that was consumed by the function (info only applies to Serverless Function type) |\n| Log Message | A detailed log message with additional details for `RequestId`, `Billed Duration`, `Max Memory Used`, etc. Log messages that push the log [over 4 KB](https://vercel.com/docs/observability/runtime-logs#what-are-runtime-logs) can be truncated to only show tail logs |\n\nTowards the end of the log results window is a button called Show New Logs. By default, it is set to display log results for the past 30 minutes.\n\nClick this button, and it loads new log rows. The latest entries are added based on the selected filters.\n\nYou can share a log entry with other [team members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) to view the particular log and context you are looking at. Click on the log you want to share, copy the current URL of your browser, and send it to team members through the medium of your choice.\n\nLogs are streamed, and there is no limit on how many times you can output `log` data for each function invocation. Each `log` output can be up to 4 KB. Logs that exceed this will be truncated.\n\nRuntime logs are stored with the following observability limits:\n\n| Plan | Retention time | Log entries |\n| --- | --- | --- |\n| Hobby | 1 hour of logs | Up to 4000 rows of log data |\n| Pro | 1 day of logs | Up to 100,000 rows of log data |\n| Enterprise | 3 days of logs | Up to 60 million rows of log data |\n\nIf you exceed the log entry limits, you can only query the most recent logs.",
  "title": "Runtime Logs",
  "description": "Learn how to search, inspect, and share your runtime logs with the Logs tab.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/deployment-protection",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/observability/log-drains",
  "markdown": "# Working with Log Drains\n\nInspecting logs for the [Build Step](https://vercel.com/docs/deployments/configure-a-build), [Runtime](https://vercel.com/docs/functions/runtimes), and [Edge Network](https://vercel.com/docs/edge-network/overview) traffic of deployments is important in understanding the behavior of your application.\n\nLog drains let you debug, monitor, and analyze logs from your applications. When a new log line is created, the logs can be forwarded to archival, search, and alerting services through `HTTPS`, `HTTP`, `TLS`, and `TCP`.\n\nLog drains on Vercel enable you to:\n\n*   Have persisted storage of logs\n*   Have a large volume of log storage\n*   Provide the ability to create alerts based on logging patterns\n*   Generate metrics and graphs from logs data\n\nYou can add log drains in two ways:\n\nLog drains are available to all users on the [Pro](https://vercel.com/docs/accounts/plans/pro) and [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans. If you are on the [Hobby](https://vercel.com/docs/accounts/plans/hobby) or [Pro Trial](https://vercel.com/docs/accounts/plans/pro/trials) plan, you can upgrade to the Pro plan to use log drains.\n\nThose on the Hobby plan, and using log drains before 23rd May 2024, can continue to use their current log drains through the integration for free, forever. However, they will not be able to create new log drains.\n\nExisting Pro plan users have a three month grace period from the end of the billing cycle that runs through May 25th 2024, before being charged for log drains usage. After this period, log drains usage will be billed based on the pricing table below.\n\nTo learn more about Managed Infrastructure on the Pro plan, and how to understand your invoices, see [understanding my invoice.](https://vercel.com/docs/pricing/understanding-my-invoice)\n\nSee [Optimizing log drains](https://vercel.com/docs/pricing/observability#optimizing-log-drains-usage) for information on how to manage costs associated with log drains.\n\n1.  From your team's [dashboard](https://vercel.com/dashboard), select the Settings tab\n2.  Select Log Drains from the list\n3.  In available log drains, select the context menu and click Disable to disable a log drain\n4.  In available log drains, select the context menu and click Remove to remove a log drain\n\nYou can also integrate the log drains with third-party logging services. The Integrations Marketplace has [numerous logging services](https://vercel.com/integrations#logging) for you to integrate.\n\nTo do so, you can:\n\n*   Install the desired integration from the Integrations Marketplace\n*   Follow the configuration steps provided and choose a project to connect with the service\n*   Watch your logs appear on the selected service\n\nYou can easily collect and forward your deployment logs to a third-party logging provider and act accordingly with log drains.\n\nOnce integrated, you can view and manage all these logging services also under the Active Log Drains list. You can also find the log drains integration in your [list of integrations](https://vercel.com/d?to=%2F%5Bteam%5D%2F%7E%2Fintegrations&title=Go+to+Integrations).\n\nOccasionally your log drain endpoints could return an error. If more than 80% of log drain deliveries return errored status and the number of errored deliveries exceed 50 for the past hour, we will send a notification email and indicate the error status on your Log Drain page.\n\n![Errored Log Drain will show a warning status.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1713956999%2Ffront%2Fdocs%2Flogs%2Ferror-log-drain.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Errored Log Drain will show a warning status.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1713956998%2Ffront%2Fdocs%2Flogs%2Ferror-log-drain-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nErrored Log Drain will show a warning status.\n\nFor more information on log drains and how to use them, check out the following resources:",
  "title": "Working with Log Drains",
  "description": "Log drains collect all of your logs using a service specializing in storing app logs. Learn how to use them with Vercel Integrations here.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/logs",
  "markdown": "# Accessing Build Logs\n\nWhen you deploy your website to Vercel, the platform generates build logs that show the deployment progress. The build logs contain information about:\n\n*   The version of the build tools\n*   Warnings or errors encountered during the build process\n*   Details about the files and dependencies that were installed, compiled, or built during the deployment\n\nBuild logs are particularly useful for debugging issues that may arise during deployment. If a deployment fails, these can help you identify the root cause of the issue.\n\nTo access build logs, click the Build Logs button from the production deployment tile in the projects overview page.\n\n![View build logs for your Vercel deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Fbuttons-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![View build logs for your Vercel deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Fbuttons-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nView build logs for your Vercel deployments.\n\nBuild logs are generated at build time for all [Deployments](https://vercel.com/docs/deployments/overview). The logs are similar to your framework's [Build Command](https://vercel.com/docs/deployments/configure-a-build#build-command) output, with a few minor additions from the Vercel build system. Once a build is complete, no new logs will be recorded.\n\nIn addition to the list of build actions, you can also find errors or warnings. These are highlighted with different colors, such as yellow for warnings and red for errors. This color coding makes it flexible to investigate why your build failed and which part of your website is affected. Build logs are stored indefinitely for each deployment.\n\nBuild logs will automatically be truncated, if the total size reaches over 4MB.\n\nIf you click on the timestamp to the left of the log entry, you get a link to that log entry. This will highlight the selected log and append the line number to the URL as an anchor (`#L6`). You can then share this link with other team members to point them to a specific line in the log.\n\nYou can select multiple lines by holding the `Shift` key and clicking the timestamps. This will create a link for the content between the first and last lines (`#L6-L9`).\n\nThe log link is only accessible to [team members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members). Anyone who is not a member or has a valid Vercel account cannot access this link.\n\n![Create a link to a log entry.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Flog-link-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Create a link to a log entry.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Flogs%2Flog-link-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nCreate a link to a log entry.\n\nThe link to build logs feature works for logs that are up to 2000 lines long.\n\nYou can use [configurable log drains](https://vercel.com/docs/observability/log-drains) to export, store, and analyze your build logs. Log drains configuration can be accessed through the Vercel dashboard or through one of our [Logging integrations](https://vercel.com/integrations#logging).",
  "title": "Accessing Build Logs",
  "description": "Learn how to use Vercel's build logs to monitor the progress of building or running your deployment, and check for possible errors or build failures.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/working-with-domains",
  "markdown": "# Working with domains\n\nWhen you create a deployment on Vercel, we automatically assign it a domain based on your project name and ending in `.vercel.app`. Your site will be available to anyone that you share the domain with.\n\nMore often than not, you will want to assign a domain to a project that reflects its nature better. You can buy a domain name either [through Vercel](#buying-a-domain-through-vercel) or [through a third-party](#buying-a-domain-through-a-third-party). Depending on which option you choose, will dictate how and when you'll need to make configurations:\n\nWhen you buy a domain through Vercel, we configure and set the nameservers, which means you do not need to set any DNS records or make any configurations. It just works. In addition, if you choose to make configurations, such as setting up email, it's all maintained from the Domains tab of either your [Account Settings](https://vercel.com/account/domains) page (account-scoped domains) or your team's dashboard. Finally, all renewals, including domain and SSL certificate renewals are automatically handled by Vercel.\n\nWhen you buy a custom domain through a third-party, you can use the [add a custom domain](https://vercel.com/docs/projects/domains/add-a-domain) workflow to configure the DNS records. If you are using Vercel's nameservers, you can manage certain settings, such as records for email providers or additional DNS records through the Domains tab of either your [Account Settings](https://vercel.com/account/domains) page (account-scoped domains) or your team's dashboard. Otherwise, you must configure nameservers and DNS records through your domain registrar.\n\nWhen you are using domains with Vercel, there are two areas of the dashboard that you may need to go to in order to configure them correctly. The first relates to your ownership and the second relates to configuring the domain for your Project:\n\n*   Domain ownership: Domains can be owned by your account or by a specific team. Account-scoped domains can be accessed from the Domains tab on your [Account Settings](https://vercel.com/account/domains) page. Team-scoped domains can be accessed from the Domains tab on your team's dashboard. All your domains, regardless of where they are registered, are _listed_ here and are owned by you. If you are using Vercel's nameservers, which is the case by default if you buy your domain through Vercel, you can manage DNS records, custom nameservers, and SSL certificates here. Domains that are registered by a third-party should manage DNS records and nameservers with the third-party.\n    \n*   Project assignment: This is accessed by selecting the project that you wish to assign the domain to and navigating to Settings > Domains. From here you can add an apex domain or subdomain to the Project. When a user visits your domain, they will see the most recent production deployment of your site, unless you [assign the domain to a Git branch](https://vercel.com/docs/projects/domains/assign-domain-to-a-git-branch) or [add redirection](https://vercel.com/docs/projects/domains/deploying-and-redirecting).\n    \n\nWhen you add a domain to Vercel for the first time, it will appear as an **apex domain** in your **Domains** tab. If you add that domain (for example, `yourdomain.com`, or `docs.yourdomain.com`) to a project on a different Vercel scope, that domain will require a TXT Verification step and will only show up at the project level. The **apex domain** will still appear in the original account's **Domains** tab.\n\nManaging your domains under your account provides an additional layer of protection over managing them under a team. Your account will always be yours, no matter what, whereas teams can transfer ownership to different users. If the domains should always be owned and paid for by _you_, they belong under your account. If the domains should always be owned and paid for by the team (regardless of who owns the team in the future), they belong under the team.\n\nThe apex domain is the root-level domain, such as `acme.com`. When you add an apex domain, Vercel will recommend that you add a [redirect](https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-www-domains) to a `www` subdomain. This is because `www` records allow for better control over your domain. Anything configured on the apex domain (for example, cookies or CAA records), will usually apply to all subdomains, rather than setting it on the `www` subdomain, which will only apply to your `www` record. In addition, because Vercel's servers use anycast networking, it can handle CNAME records differently, allowing for quicker DNS resolution and therefore a faster website experience for the end user.\n\nA subdomain is a more specific part of that domain that can be assigned to a particular part of your site, for example, `blog.acme.com`, `help.acme.com`. This helps to blend both your brand, with the specificity of where the user may need to go. To add a subdomain to your Project, follow the instructions in the [Add a custom domain](https://vercel.com/docs/projects/domains/add-a-domain#subdomains) doc. If you have bought the domain through Vercel, you can also [point a subdomain to an external service](https://vercel.com/guides/pointing-subdomains-to-external-services) through the Domains section of the dashboard. Subdomains are set through a _CNAME_ DNS record.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Furl-structure.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nImage showing the fully-qualified domain name (FQDN).\n\nYou can also configure wildcard domains. Using a wildcard domain, such as `*.acme.com`, is a way to scale and customize your project on Vercel. Rather than specifying a particular subdomain, you can add a wildcard domain to your project, and then will need to set the nameservers to the intended nameservers, allowing the domain to be resolved. See the [static.fun](https://github.com/vercel/static-fun) example to see how to use Wildcard domains on Vercel.\n\nTo add a wildcard domain, follow the steps in [Adding a domain](https://vercel.com/docs/projects/domains/add-a-domain#using-wildcard-domain).\n\nWildcard domains must be configured with the [nameservers method](https://vercel.com/docs/projects/domains/add-a-domain#vercel-nameservers). This is because in order to generate the wildcard certificates, Vercel needs to be able to set DNS records, since the service that Vercel uses to generate those requires us to solve a challenge to verify ownership.\n\nWhen you create a domain, you may want to also set up a way for users to contact you through an email address that is pointed at that domain. Vercel does not provide a mail service for domains purchased with or transferred into it.\n\nBecause many domain providers do not offer a mail service, several third-party services specifically offer this type of functionality and are enabled by adding MX records. Examples of this type of service include [ImproxMX](https://improvmx.com/) and [Forward Email](https://forwardemail.net/en), however there are many more options available. For each provider, different DNS records are required to be added. For information on how to set up email, see [How do I send and receive emails with my Vercel purchased domain?](https://vercel.com/guides/using-email-with-your-vercel-domain)\n\n[Invalid domain configurations](https://vercel.com/docs/projects/domains/troubleshooting#misconfigured-domain-issues) are one of the most common types of domain issues on Vercel. To learn more about other common domain issues, see the [troubleshooting](https://vercel.com/docs/projects/domains/troubleshooting#common-domain-issues) doc.",
  "title": "Working with domains",
  "description": "Learn how domains work and the options Vercel provides for managing them.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/directory-listing",
  "markdown": "# Using the Directory Listing\n\nThe Directory Listing setting enables you to display the contents of a directory when a user visits its path. For example, if you create a directory at the root of your project called `/assets`, then when people visit `https://your-site.com/assets`, they will see the files and folders within that directory, as shown in the example below:\n\n![The contents of a /assets directory.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701796879%2Ffront%2Fdocs%2Fprojects%2Fdirectory-listing-page-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The contents of a /assets directory.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701797094%2Ffront%2Fdocs%2Fprojects%2Fdirectory-listing-dark2.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe contents of a /assets directory.\n\nYou can enable or disable Directory Listing from the Advanced tab in your project settings.\n\n![Directory Listing for an example /assets directory.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701796234%2Ffront%2Fdocs%2Fprojects%2Fdirectory-listing-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Directory Listing for an example /assets directory.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701796234%2Ffront%2Fdocs%2Fprojects%2Fdirectory-listing-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDirectory Listing for an example /assets directory.\n\nWhen enabled, the Directory Listing will be displayed. When disabled, a \"Not Found\" error will be displayed with status code `404`.\n\nIf Directory Listing isn't working, navigate to your deployment in the dashboard and select the **Source** tab to view the contents of your project. Ensure the expected directory and files are listed.\n\nTo prevent Directory Listing for a specific path, you can either:\n\n*   Add an index file with any extension except `.css`, such as `index.html`. This file will be displayed instead of the Directory Listing\n*   Or, [set up a custom 404 error](https://vercel.com/guides/custom-404-page)",
  "title": "Using the Directory Listing",
  "description": "The Directory Listing is served when a particular path is a directory and does not contain an index file. Learn how to toggle and disable it in this guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/builds/package-managers",
  "markdown": "# Package Managers\n\nVercel will automatically detect the package manager used in your project and install the dependencies when you [create a deployment](https://vercel.com/docs/deployments/builds#build-process). It does this by looking at the lock file in your project and inferring the correct package manager to use.\n\nIf you are using [Corepack](https://vercel.com/docs/deployments/configure-a-build#corepack), Vercel will use the package manager specified in the `package.json` file's `packageManager` field instead.\n\nThe following table lists the package managers supported by Vercel, with their install commands and versions:\n\nWhile Vercel automatically selects the package manager based on the lock file present in your project, the specific version of that package manager is determined by the version information in the lock file or associated configuration files.\n\nThe npm and pnpm package managers create a `lockfileVersion` property when they generate a lock file. This property specifies the lock file's format version, ensuring proper processing and compatibility. For example, a `pnpm-lock.yaml` file with `lockfileVersion: 9.0` will be interpreted by pnpm 9, while a `pnpm-lock.yaml` file with `lockfileVersion: 5.4` will be interpreted by pnpm 7.\n\n| Package Manager | Condition | Install Command | Version Used |\n| --- | --- | --- | --- |\n| pnpm | `pnpm-lock.yaml`: present | `pnpm install` | Varies |\n|     | `lockfileVersion`: 9.0 | \\-  | pnpm 9 |\n|     | `lockfileVersion`: 6.0/6.1 | \\-  | pnpm 8 |\n|     | `lockfileVersion`: 5.3/5.4 | \\-  | pnpm 7 |\n|     | Otherwise | \\-  | pnpm 6 |\n| npm | `package-lock.json`: present | `npm install` | Varies |\n|     | `lockfileVersion`: 2 | \\-  | npm 8 |\n|     | Node 16 | \\-  | npm 8 |\n|     | Node 18 | \\-  | npm 10 |\n|     | Node 20 | \\-  | npm 10 |\n| Bun | `bun.lockb`: present | `bun install` | Bun 1 |\n| Yarn | `yarn.lock`: present | `yarn install` | Yarn 1 |\n\nWhen no lock file exists, Vercel uses npm by default. Npm's default version aligns with the Node.js version as described in the table above. Defaults can be overridden using [`installCommand`](https://vercel.com/docs/projects/project-configuration#installcommand) or [Corepack](https://vercel.com/docs/deployments/configure-a-build#corepack) for specific package manager versions.\n\nYou can manually specify a package manager to use on a per-project, or per-deployment basis.\n\nTo specify a package manager for all deployments in your project, use the Override setting in your project's [Build & Development Settings](https://vercel.com/docs/deployments/configure-a-build#build-and-development-settings):\n\n1.  Navigate to your [dashboard](https://vercel.com/dashboard) and select your project\n2.  Select the Settings tab\n3.  From the left navigation, select General\n4.  Enable the Override toggle in the [Build & Development Settings](https://vercel.com/docs/deployments/configure-a-build#build-and-development-settings) section and add your install command. Once you save, it will be applied on your next deployment\n\nWhen using an override install command like `pnpm install`, Vercel will use the oldest version of the specified package manager available in the build container. For example, if you specify `pnpm install` as your override install command, Vercel will use pnpm 6.\n\nTo specify a package manager for a deployment, use the [`installCommand`](https://vercel.com/docs/projects/project-configuration#installcommand) property in your projects `vercel.json`.\n\n```\n{\n  \"installCommand\": \"pnpm install\"\n}\n```",
  "title": "Package Managers",
  "description": "Discover the package managers supported by Vercel for dependency management. Learn how Vercel detects and uses npm, Yarn, pnpm, and Bun for optimal build performance.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/streaming",
  "markdown": "# Streaming Data on Vercel\n\nVercel Functions support streaming responses, allowing you to render parts of the UI as they become ready. This lets users interact with your app before the entire page finishes loading by populating the most important components first. Common use-cases include:\n\n*   Ecommerce: Render the most important product and account data early, letting customers shop sooner\n*   AI applications: Streaming responses from AIs powered by LLMs lets you display response text as it arrives rather than waiting for the full result\n\nHTTP responses typically send the entire payload to the client all at once. This approach can sometimes result in a slow user experience if the data is large or computationally intense.\n\n![How responses and requests typically flow between client and server, with the response sent in one large batch.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695123926%2Ffront%2Fdocs%2Fedge-network%2Fstreaming-in-serverless-and-edge-functions%2Fbasic-chunk-top-split-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![How responses and requests typically flow between client and server, with the response sent in one large batch.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695123928%2Ffront%2Fdocs%2Fedge-network%2Fstreaming-in-serverless-and-edge-functions%2Fbasic-chunk-top-split-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nHow responses and requests typically flow between client and server, with the response sent in one large batch.\n\nThe Web Streams API enables you to stream chunks of the payload as they become available, improving your users' perception of how fast data is loading. It is supported in [most major web browsers](https://developer.mozilla.org/en-US/docs/Web/API/Streams_API#browser_compatibility) and popular runtimes, such as [Node.js](https://nodejs.org/api/webstreams.html#web-streams-api) and [Deno](https://deno.com/blog/deploy-streams).\n\nThe Web Streams API helps you:\n\n*   [Break large data into chunks](#understanding-chunks): Chunks are portions of data sent over time\n*   [Handle backpressure](#understanding-backpressure): Backpressure occurs when chunks are streamed from the server faster than they can be processed in the client, causing a backup of data\n*   Build more responsive apps: Rendering your UI progressively as data chunks arrive can improve your users' perception of your app's performance\n\nChunks in web streams are fundamental data units that can be of many different types depending on the content, such as `String` for text or `Uint8Array` for binary files. Standard Function responses contain full payloads of data, while chunks are pieces of the payload that get streamed to the client as they're available.\n\nFor example, imagine you want to create an AI chat app that uses a Large Language Model to generate replies. Due to their large data sets, replies from language models can generate slowly.\n\nStandard Function responses require you send the full reply to the client when it's done, but streaming enables you to show each word of the reply as the model generates it, improving users' perception of your chat app's speed.\n\n![How streamed responses typically work, with data sent continuously in small chunks.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695123926%2Ffront%2Fdocs%2Fedge-network%2Fstreaming-in-serverless-and-edge-functions%2Fbasic-chunk-bottom-split-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![How streamed responses typically work, with data sent continuously in small chunks.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1695123927%2Ffront%2Fdocs%2Fedge-network%2Fstreaming-in-serverless-and-edge-functions%2Fbasic-chunk-bottom-split-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nHow streamed responses typically work, with data sent continuously in small chunks.\n\nChunk sizes can be out of your control, so it's important that your code can handle chunks of any size. Chunks sizes are influenced by the following factors:\n\n*   Data source: Sometimes the original data is already broken up. For example, OpenAI's language models produce responses in [tokens](https://help.openai.com/en/articles/4936856-what-are-tokens-and-how-to-count-them), or chunks of words\n*   Stream implementation: The server could be configured to stream small chunks quickly or large chunks at a lower pace\n*   Network: Factors like a network's Maximum Transmission Unit setting, or its geographical distance from the client, can cause chunk fragmentation and limit chunk size\n    *   In local development, chunk sizes won't be impacted by network conditions, as no network transmission is happening\n\nFor an example Function that processes chunks, see [Streaming Examples](https://vercel.com/docs/functions/streaming/streaming-examples#processing-data-chunks).\n\nOnce you understand how to deal with chunks of different sizes, you must understand how to deal with chunks arriving faster than you can process them in the client.\n\nWhen the server streams data faster than the client can process it, excess data will queue up in the client's memory. This issue is called backpressure, and it can lead to memory overflow errors, or data loss when the client's memory reaches capacity.\n\nFor example, popular social media users can receive hundreds of notifications streamed to their web client per second. If their web client can't render the notifications fast enough, some may be lost, or the client may crash if its memory overflows.\n\n![A diagram of backpressure.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694007750%2Fdocs-assets%2Fstatic%2Fdocs%2Fedge-network%2Fback-pressure-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A diagram of backpressure.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694007751%2Fdocs-assets%2Fstatic%2Fdocs%2Fedge-network%2Fbackpressure-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA diagram of backpressure.\n\nYou can handle backpressure with a technique called flow control. This technique manages data transfer rates between two nodes to avoid overwhelming a slow receiver.\n\nFor an example of how to handle backpressure, see [Streaming Examples](https://vercel.com/docs/functions/streaming/streaming-examples#handling-backpressure).\n\n*   To get started streaming on Vercel, see [Streaming Quickstart](https://vercel.com/docs/functions/streaming/quickstart)\n*   For more detailed code, see [Streaming Examples](https://vercel.com/docs/functions/streaming/streaming-examples)\n\nSome frameworks, like Next.js and SvelteKit, have built-in functionality for streaming UI components. Doing so allows you to specify components that should be rendered with streaming data without needing a Function.\n\nSee the following docs to learn more about streaming UI components with your preferred framework:\n\nMost, but not all, functions allow you to stream responses. Streaming functions can be used in the following contexts:\n\n*   [Functions using the `edge` runtime](https://vercel.com/docs/functions/runtimes#edge)\n    *   These functions must begin sending a response within 25 seconds. After the initial response begins, you can continuously stream the response with no time limit\n    *   Your streamed response size [cannot exceed Vercel's memory allocation limit of 128 MB](https://vercel.com/docs/functions/edge-functions/limitations#memory)\n*   Node.js Functions when using the following frameworks:\n*   Node.js functions using the Web Handler signature:\n    \n    ```\n    export const dynamic = 'force-dynamic'; // static by default, unless reading the request\n     \n    export function GET(request: Request) {\n      return new Response(`Hello from ${process.env.VERCEL_REGION}`);\n    }\n    ```\n    \n\nYou should consider configuring the default [maximum duration](https://vercel.com/docs/functions/configuring-functions/duration) for Node.js functions to enable streaming responses for longer than the default 10 seconds on Hobby and 15 seconds on Pro and Enterprise.\n\n*   Node.js runtime functions using the Node.js handler without `supportsResponseStreaming:true`\n*   Node.js runtime functions using Next.js Pages router\n    *   Note that even if the rest of your app uses Next.js Pages Router, you can use [route handlers in the App Router](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) to stream responses. Follow the App Router examples to do this\n\n```\n//Next.js App Router will always support streaming with Route Handlers\n```",
  "title": "Streaming Data on Vercel",
  "description": "Learn how Vercel enables streaming Function responses over time for e-commerce, AI, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/troubleshoot-a-build",
  "markdown": "# Troubleshooting Build Errors\n\nYou can troubleshoot build errors that occur during the Build step of your deployment to Vercel. This guide will help you understand how to investigate build failures and long build times.\n\nYou can use the following views on your dashboard to troubleshoot a build:\n\n*   Build logs - the console output when your deployment is building which can be found under the Deployment Status section of the Project's Deployment page\n*   Source tab - the output of the build after the deployment is successful. This can also be accessed by appending `/_src` to the Deployment URL\n*   Functions tab - the live console output for Serverless Functions at runtime (if your project uses this feature). This can also be accessed by appending `/_logs` to the Deployment URL\n\nYou can navigate to these views from the Deployment page by clicking on the Source tab, the Functions tab or the Building accordion as shown below.\n\n![Access Functions and Building Logs view from the Deployment page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Faccess-logs-view-v2-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Access Functions and Building Logs view from the Deployment page.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Faccess-logs-view-v2-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAccess Functions and Building Logs view from the Deployment page.\n\nIf your build fails, Vercel will report the error message on the Deployments page so that you can investigate and fix the underlying issue.\n\nIn the following we show you how to look up the error message of your failed build.\n\n[Build logs](https://vercel.com/docs/deployments/logs) provide you with an insight into what happened during the build of a deployment and can be accessed by:\n\n1.  From your Vercel dashboard, select the project and then the [Deployments](https://vercel.com/docs/projects/project-dashboard#deployments) tab\n    \n2.  Select the deployment. When there are build issues you will notice an error status next to deployment name\n    \n    ![Error status on the Deployments tab.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-deploy-overview-page-02-1.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Error status on the Deployments tab.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-deploy-overview-page-02-1-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Error status on the Deployments tab.\n    \n3.  On the errored deployment's page, you will see a summary of the error in the preview section. In the Deployment Details section, expand the Building accordion to expand the logs. There are situations where [build logs are not available](#build-logs-not-available), in this scenario the error will be presented in the UI instead.\n    \n4.  Scroll down in the build logs until you find a red section where the keyword \"Error\" is mentioned. It can be mentioned once or multiple times. In many cases, the last mention is not indicative like in the example below where it says `yarn run build exited with 1`. If you look a few lines above, you will see an additional error which in this case indicates where the problem is with a link for more details. Sometimes, an error may not be mentioned in the lines above but the output will often help you identify where the problem is.\n    \n    ![Error in the logs of the Building accordion.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-deploy-overview-page-03.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Error in the logs of the Building accordion.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-deploy-overview-page-03.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Error in the logs of the Building accordion.\n    \n\nIt is recommended to build your project on your local machine first (the build command varies per project) before deploying on Vercel. This will catch issues specific to your code or to your project's dependencies. In the example above, when the command `npm run build` (that runs `next build`) is run in the local console for a Next.js project, the error happens after building locally.\n\n![Error in local console.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-console.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Error in local console.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-console.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nError in local console.\n\nBuilds can fail without providing any build logs when Vercel detects a missing precondition that prevents a build from starting. For example:\n\n*   An invalid [`vercel.json` configuration](https://vercel.com/docs/projects/project-configuration) was committed\n*   When using [Ignored Build Steps](https://vercel.com/guides/how-do-i-use-the-ignored-build-step-field-on-vercel)\n*   Commits were made from a contributor that is not a [team member](https://vercel.com/docs/accounts/team-members-and-roles)\n\nIn this case, you cannot access the Building accordion described above, and instead, Vercel will present an overlay that contains the error message.\n\n![Build logs not available for a deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-no-logs-v2-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Build logs not available for a deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-error-no-logs-v2-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nBuild logs not available for a deployment.\n\nSometimes, your Deployment Build can hit platform limits so that the build will be cancelled and throw a corresponding error that will be shown in the Build logs. Review the limits below in case you run into them.\n\nEvery Build is provided with the following resources:\n\n|     | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Memory | 8192 MB | 8192 MB | Custom |\n| Disk space | 13 GB | 13 GB | Custom |\n| CPUs | 2   | 4   | Custom |\n\nFor Hobby and Pro customers, these limits are fixed, but Enterprise customers can purchase enhanced builds with larger memory and storage. Exceeding the memory or disk space allocations limits cancels the build and triggers a system report in your [Build logs](https://vercel.com/docs/deployments/logs), identifying memory and disk space issues.\n\nBy default, the system generates this report only when it detects a problem. To receive a report for every deployment, set `VERCEL_BUILD_SYSTEM_REPORT=1` as an [environment variable](https://vercel.com/docs/projects/environment-variables#declare-an-environment-variable).\n\nThis report helps you detect hidden Out of Memory (OOM) events, and provides insights into disk usage by breaking down the sizes of your source code, `node_modules`, and output, and flagging files over 100 MB. The input size in the report corresponds to the size of your checked-out repository or files uploaded by CLI. The `node_modules` size represents the total size of all `node_modules` folders on disk.\n\n| Resource | Allocation | Description |\n| --- | --- | --- |\n| Memory | 8192 MB | Fixed memory allocation. Builds exceeding this limit will be cancelled |\n| CPUs | 4   | Number of CPUs allocated for build processing |\n| Disk Space | 13 GB | Fixed disk space allocation. Builds exceeding this limit will be cancelled |\n| System Report | Conditional | Generated in [Build logs](https://vercel.com/docs/deployments/logs) when memory or disk space limits are reached. Available by default |\n| Forced Reporting | Optional | Set `VERCEL_BUILD_SYSTEM_REPORT=1` as an [environment variable](https://vercel.com/docs/projects/environment-variables#declare-an-environment-variable) to enable reporting for all builds |\n\nReview the below steps to help navigate this situation:\n\n*   Review what package the error is related to and explore the package's documentation to see if the memory allocation can be customized with an install or Build command\n*   If no package is specified, look into reducing the amount of JavaScript that your Project might be using or find a more efficient JavaScript bundler\n*   Review what you are importing in your code such as third-party services, icons and media files\n\nThe total build duration is shown on the Vercel Dashboard and includes all three steps: building, checking, and assigning domains. Each step also shows the individual duration.\n\nA Build can last for a maximum of 45 minutes. If the build exceeds this time, the deployment will be canceled and the error will be shown on the Deployment's Build logs. If you run into this limit, review this [guide](https://vercel.com/guides/how-do-i-reduce-my-build-time-with-next-js-on-vercel) that explains how to reduce the Build time with a Next.js Project.\n\nThe maximum size of the Build's cache is 1 GB. It is retained for one month and it applies at the level of each [Build cache key](#caching-process).\n\nIt is not possible to manually configure which files are cached at this time.\n\nYou may come across the following Build-specific errors when deploying your Project. The link for each error provides possible causes of the error that can help you troubleshoot.\n\nA 'module not found' error is a syntax error that will appear at build time. This error appears when the static import statement cannot find the file at the declared path. For more information, see [How do I resolve a 'module not found' error?](https://vercel.com/guides/how-do-i-resolve-a-module-not-found-error)\n\nThe first Build in a Project will take longer as the Build cache is initially empty. Subsequent builds that have the same [Build cache key](#caching-process) will take less time because elements from your build, such as [framework files and node modules](#what-is-cached), will be reused from the available cache. The next sections will describe the factors that affect the Build cache to help you decrease the Build time\n\nVercel caches files based on the [Framework Preset](https://vercel.com/docs/deployments/configure-a-build#framework-preset) selected in your [Project settings](https://vercel.com/docs/projects/overview#project-settings). The following files are cached in addition to `node_modules/**`, `yarn.lock`, and `package-lock.json`.\n\n| Framework | Cache Pattern |\n| --- | --- |\n| Next.js | `.next/cache/**` |\n| Nuxt.js | `.nuxt/**` |\n| Gatsby.js | `{.cache,public}/**` |\n| Eleventy | `.cache/**` |\n| Jekyll | `{vendor/bin,vendor/cache,vendor/bundle}/**` |\n| Middleman | `{vendor/bin,vendor/cache,vendor/bundle}/**` |\n\nNote that the framework detection is dependent on the preset selection made in the [Build settings](https://vercel.com/docs/deployments/configure-a-build#build-and-development-settings). You should make sure that the correct framework is set for your project for optimum build caching.\n\nAt the beginning of each build, the previous Build's cache is restored prior to the [Install Command](https://vercel.com/docs/deployments/configure-a-build#install-command) or [Build command](https://vercel.com/docs/deployments/configure-a-build#build-command) executing. Each deployment is associated with a unique Build cache key that is derived from the combination of the following data:\n\nLet's say that under your account `MyTeam`, you have a project `MySite` that is connected to your Git repository `MyCode` on the `main` branch for the production environment. When you make a commit to the `main` branch for the first time, you trigger a build that creates a production deployment with a new unique cache key. For any new commits to the `main` branch of `MyCode`, the existing Build cache is used as long as `MySite` is under `MyTeam`.\n\nIf you create a new Git branch in `MyCode` and make a commit to it, there is no cache for that specific branch. In this case, the last [production Deployment](https://vercel.com/docs/deployments/environments#production) cache is used to create a preview deployment and a new branch cache is created for subsequent commits to the new branch.\n\nIf you use [Serverless Functions](https://vercel.com/docs/functions/serverless-functions) to process HTTP requests in your project, each Serverless Function is built separately in the Build step and has its own cache, based on the [Runtime](https://vercel.com/docs/functions/serverless-functions/runtimes) used. Therefore, the number and size of Serverless Functions will affect your Build time. For Next.js projects, Serverless Functions are bundled to optimize Build resources as described [here](https://vercel.com/docs/functions/serverless-functions#bundling-serverless-functions).\n\nAt the end of each Build step, successful builds will update the cache and failed builds will not modify the existing cache.\n\nSince development dependencies (for example, packages such as `webpack` or `Babel`) are not needed in production, you may want to prevent them from being installed when deploying to Vercel to reduce the Build time. To skip development dependencies, customize the [Install Command](https://vercel.com/docs/deployments/configure-a-build#install-command) to be `npm install --only=production` or `yarn install --production`.\n\nSometimes, you may not want to use the Build cache for a specific deployment. You can invalidate or delete the existing Build cache in the following ways:\n\n*   Use the Redeploy button for the specific deployment in the Project's [Deployments](https://vercel.com/docs/deployments/managing-deployments) page. In the popup window that follows, leave the checkbox Use existing Build Cache unchecked. See [Redeploying a project](https://vercel.com/docs/deployments/managing-deployments#redeploy-a-project) for more information.\n*   Use [`vercel --force`](https://vercel.com/docs/cli/deploy#force) with [Vercel CLI](https://vercel.com/docs/cli) to build and deploy the project without the Build cache\n*   Use an Environment Variable `VERCEL_FORCE_NO_BUILD_CACHE` with a value of `1` on your project to skip the Build cache\n*   Use an Environment Variable `TURBO_FORCE` with a value of `true` on your project to skip Turborepo [Remote Cache](https://vercel.com/docs/monorepos/remote-caching)\n*   Use the `forceNew` optional query parameter with a value of `1` when [creating a new deployment with the Vercel API](https://vercel.com/docs/rest-api/endpoints#create-a-new-deployment) to skip the Build cache\n\nWhen redeploying without the existing Build Cache, the Remote Cache from [Turborepo](https://turbo.build/repo/docs/core-concepts/remote-caching) and [Nx](https://nx.app/) are automatically excluded.",
  "title": "Troubleshooting Build Errors",
  "description": "Learn how to resolve common scenarios you may encounter during the Build step, including build errors that cancel a deployment and long build times.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/builds",
  "markdown": "# Manage and optimize usage for Builds\n\nLearn how to understand the different charts in the Vercel dashboard, how usage relates to billing, and how to optimize your usage for Builds.\n\nThe Builds section shows the following charts:\n\nThe Build Time graph shows the ratio of build time vs queued time for all projects across your team on any single day.\n\nViewing by Projects provides you with a view of the total combined build time and queued time for each project that your team owns.\n\nThis chart shows the total number of builds that were triggered for all of the projects on your team, split by a ratio of Completed or Errored.\n\nViewing by Projects provides you with a view of the total number of builds for each project.\n\nWhile neither of these metrics are directly chargeable, you can pay for additional [concurrent builds](https://vercel.com/docs/deployments/concurrent-builds) if you need to run more than one build concurrently.\n\nSome other considerations to take into account when optimizing your builds include:\n\n*   [Understand](https://vercel.com/docs/deployments/troubleshoot-a-build#understanding-build-cache) and [manage](https://vercel.com/docs/deployments/troubleshoot-a-build#managing-build-cache) the build cache. By default, Vercel caches the dependencies of your project, based on your framework, to speed up the build process\n*   You may choose to [Ignore the Build Step](https://vercel.com/docs/projects/overview#ignored-build-step) on redeployments if you know that the build step is not necessary under certain conditions\n*   Use the most recent version of your runtime, particularly Node.js, to take advantage of the latest performance improvements. To learn more, see [Node.js](https://vercel.com/docs/functions/runtimes/node-js#default-and-available-versions)",
  "title": "Manage and optimize usage for Builds",
  "description": "Learn how to understand the different charts in the Vercel dashboard, how usage relates to billing, and how to optimize your usage for Builds.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/build-features",
  "markdown": "# Build Features for Customizing Deployments\n\nVercel provides the following features to customize your deployments:\n\n*   [Private npm packages](#private-npm-packages)\n*   [Ignored files and folders](#ignored-files-and-folders)\n*   [Special paths](#special-paths)\n*   [Git submodules](#git-submodules)\n\nWhen your project's code is using private `npm` modules that require authentication, you need to perform an additional step to install private modules.\n\nTo install private `npm` modules, define `NPM_TOKEN` as an [Environment Variable](https://vercel.com/docs/projects/environment-variables) in your project. Alternatively, define `NPM_RC` as an [Environment Variable](https://vercel.com/docs/projects/environment-variables) in the contents of the project's npmrc config file that resides at the root of the project folder and is named `~/.npmrc`. This file defines the config settings of `npm` at the level of the project.\n\nTo learn more, check out the [guide here](https://vercel.com/guides/using-private-dependencies-with-vercel) if you need help configuring private dependencies.\n\nVercel ignores certain files and folders by default and prevents them from being uploaded during the deployment process for security and performance reasons. Please note that these ignored files are only relevant when using Vercel CLI.\n\n```\n.hg\n.git\n.gitmodules\n.svn\n.cache\n.next\n.now\n.vercel\n.npmignore\n.dockerignore\n.gitignore\n.*.swp\n.DS_Store\n.wafpicke-*\n.lock-wscript\n.env.local\n.env.*.local\n.venv\nnpm-debug.log\nconfig.gypi\nnode_modules\n__pycache__\nvenv\nCVS\n```\n\nA complete list of files and folders ignored by Vercel during the Deployment process.\n\nThe `.vercel/output` directory is not ignored when [`vercel deploy --prebuilt`](https://vercel.com/docs/cli/deploying-from-cli#deploying-from-local-build-prebuilt) is used to deploy a prebuilt Vercel Project, according to the [Build Output API](https://vercel.com/docs/build-output-api/v3) specification.\n\nYou do not need to add any of the above files and folders to your `.vercelignore` file because it is done automatically by Vercel.\n\nVercel allows you to access the source code and build logs for your deployment using special pathnames for Logs and Source Protection. You can access this option from your project's Security settings.\n\nAll deployment URLs have two special pathnames to access the source code and the build logs:\n\n*   `/_src`\n*   `/_logs`\n\nBy default, these routes are protected so that they can only be accessed by you and the members of your Vercel Team.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Flogs-and-sources-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fbuild-step%2Flogs-and-sources-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nLogs and Source Protection is enabled by default.\n\nBy appending `/_src` to a Deployment URL or [Custom Domain](https://vercel.com/docs/projects/domains/add-a-domain) in your web browser, you will be redirected to the Deployment inspector and be able to browse the sources and [build](https://vercel.com/docs/deployments/configure-a-build) outputs.\n\nBy appending `/_logs` to a Deployment URL or [Custom Domain](https://vercel.com/docs/projects/domains/add-a-domain) in your web browser, you will be able to see a real-time stream of logs from your deployment build processes by clicking on the Building accordion and Serverless Function invocations by clicking on the Functions tab.\n\nThe pathnames `/_src` and `/_logs` redirect to `https://vercel.com` and require logging into your Vercel account to access any sensitive information. By default, a third-party can never access your source or logs by crafting a deployment URL with one of these paths.\n\nYou can configure these paths to make them publicly accessible under the Security tab on the Project Settings page. You can learn more about making paths publicly accessible in the [Logs and Source Protection](https://vercel.com/docs/projects/overview#logs-and-source-protection) section.\n\nOn Vercel, you can deploy [Git submodules](https://git-scm.com/book/en/v2/Git-Tools-Submodules) with a [Git provider](https://vercel.com/docs/deployments/git) as long as the submodule is publicly accessible through the HTTP protocol. Git submodules that are private or requested over SSH will fail during the Build step. However, you can reference private repositories formatted as npm packages in your `package.json` file dependencies. Private repository modules require a special link syntax that varies according to the Git provider. For more information on this syntax, see \"[How do I use private dependencies with Vercel?](https://vercel.com/guides/using-private-dependencies-with-vercel)\".",
  "title": "Build Features for Customizing Deployments",
  "description": "Learn how to customize your deployments using Vercel's build features.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/project-configuration/global-configuration",
  "markdown": "# Global Configuration\n\nUsing the following files and configuration options, you can configure [Vercel CLI](https://vercel.com/cli) under your system user.\n\nThe two global configuration files are: `config.json` and `auth.json`. These files are stored in the `com.vercel.cli` directory inside [`XDG_DATA_HOME`](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html), which defaults to:\n\n*   Linux: `~/.local/share/com.vercel.cli`\n*   macOS: `~/Library/Application Support/com.vercel.cli`\n*   Windows: `%APPDATA%\\Roaming\\xdg.data\\com.vercel.cli`\n\nThese files are automatically generated by Vercel CLI, and shouldn't need to be altered.\n\nThis file is used for global configuration of Vercel deployments. Vercel CLI uses this file as a way to co-ordinate how deployments should be treated, consistently.\n\nThe first option is a single `_` that gives a description to the file, if a user should find themselves looking through it without context.\n\nThe following options are all of the options that can be used by users to configure their Vercel deployments globally on their system for that user profile:\n\nType: `String`.\n\nValid values: A [team ID](https://vercel.com/docs/accounts/create-a-team#find-your-team-id).\n\nThis option tells [Vercel CLI](https://vercel.com/cli) which context is currently active. If this property exists and contains a team ID, that team is used as the scope for deployments, otherwise if this property does not exist, the user's Hobby account is used.\n\n```\n{\n  \"currentTeam\": \"team_ofwUZockJlL53hINUGCc1ONW\"\n}\n```\n\nType: `Boolean`.\n\nValid values: `true` (default), `false`.\n\nThis option defines whether [Vercel CLI](https://vercel.com/cli) should collect anonymous metrics about which commands are invoked the most, how long they take to run, and which errors customers are running into.\n\n```\n{\n  \"collectMetrics\": true\n}\n```\n\nThis file should not be edited manually. It exists to contain the authentication information for the Vercel clients.\n\nIn the case that you are uploading your global configuration setup to a potentially insecure destination, we highly recommend ensuring that this file will not be uploaded, as it allows an attacker to gain access to your provider accounts.",
  "title": "Global Configuration",
  "description": "Learn how to configure Vercel CLI under your system user.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/deploy-button",
  "markdown": "# Working with the Deploy Button\n\nThe Deploy Button allows users to deploy a new project through the Vercel Project creation flow, while cloning the source Git repository to GitHub, GitLab, or Bitbucket.\n\nYou can [create your Deploy Button with the generator below](#generate-your-own).\n\nThe Vercel Project creation flow allows users to deploy a Git repository, create a project with Vercel, and clone the source repository into their GitHub, GitLab, or Bitbucket account.\n\nWith the Vercel Project creation flow, you can add various URL query parameters to control the experience a user will have, depending on the requirements of your project.\n\n[![](https://vercel.com/button)](https://vercel.com/new/clone?repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fhello-world)\n\nAn example Deploy Button using the following\n\n[HTML snippet](#snippets).\n\nUse the snippets below in your Git repositories or your dashboards for users to deploy.\n\n\\[!\\[Deploy with Vercel\\](https://vercel.com/button)\\](https://vercel.com/new/clone?**repository-url=https%3A%2F%2Fgithub.com%2Fvercel%2Fnext.js%2Ftree%2Fcanary%2Fexamples%2Fhello-world**)\n\nA Markdown snippet that shows a linked Deploy Button.\n\nCustomize the above Deploy Button [snippets](#snippets) starting with a public Git repository URL from GitHub, GitLab, or Bitbucket.\n\nYou can customize the Project creation flow and created project with the following additional settings. For more information see the [URL Parameter Reference](#url-parameter-reference).\n\nEnvironment Variables\n\nDefine Environment Variable Keys that the Git repository needs to deploy successfully. The values will be filled in by the user.\n\nEnvironment Variables Keys\n\nLearn more about [the Environment Variable parameters →](#required-environment-variables)\n\n* * *\n\nAdd a description with additional information and a link to documentation that helps users understand what they are providing values for.\n\nEnvironment Variables Description\n\nEnvironment Variables Link\n\nDefaults\n\nIf you're setting up a project on behalf of the user and already know what name the user likely wants, enter a default project name. Additionally, fill this in for the repository name.\n\n* * *\n\nSet a default repository name for the new Git repository created by the user in the Project creation flow.\n\nDefault Project Name\n\nDefault Git Repository Name\n\nRedirect\n\nThe Redirect URL parameter allows you to redirect the user back to your platform on the event of a successful deployment and receive information on the created project.\n\nRedirect URL\n\nLearn more about [the Redirect URL parameter →](#callback/redirect-url)\n\n* * *\n\nSet a Developer ID to show a logo and name from an [Integration](https://vercel.com/docs/integrations) by using its Client ID, found in the Integration Developer Console.\n\nDeveloper ID\n\nLearn more about [the Developer ID parameter →](#developer-id)\n\n* * *\n\nSet a name for a [Deploy Hook](https://vercel.com/docs/deployments/deploy-hooks) to receive a Deploy Hook URL in return when redirecting the user from the Project creation flow.\n\nDeploy Hook Name\n\nLearn more about [the Deploy Hook parameter →](#deploy-hook)\n\nDemo\n\nTo showcase a successful deployment to the user clicking a Deploy Button, you can customize the Project creation flow's landing page with a **Demo Card**.\n\nThe Demo Card contains a title, a description, an image, and a link. All of them are required for the Demo Card to show on the page.\n\n* * *\n\nDemo Title\n\nLearn more about [the Demo Title parameter →](#demo-title)\n\nDemo Description\n\nLearn more about [the Demo Description parameter →](#demo-description)\n\nDemo URL\n\nLearn more about [the Demo URL parameter →](#demo-url)\n\nDemo Image\n\nLearn more about [the Demo Image parameter →](#demo-image)\n\nIntegrations\n\nIntegrations let you connect your Vercel Project with third-party services to automate aspects of your workflow.\n\nWhen Integrations IDs are specified, the corresponding [Integrations](https://vercel.com/docs/integrations) are required to be installed for the Vercel Project. If needed, they can also be marked as optional using the [Optional Integrations parameter](#optional-integrations).\n\nIntegration IDs can be found in the [Integrations Console](https://vercel.com/dashboard/integrations/console).\n\nIntegration IDs\n\nLearn more about [Integrations →](#integrations)\n\n* * *\n\nAdditionally, you can specify an external ID or reference that will be passed to the [Redirect URL](https://vercel.com/docs/integrations#o-auth-integrations/hybrid-mode) of each of the required Integrations.\n\nExternal ID\n\nLearn more about [the External ID parameter →](#external-id)\n\n* * *\n\n​Allow for skipping Integrations or adding only one of them\n\nLearn more about [the Optional Integrations parameter →](#optional-integrations)",
  "title": "Working with the Deploy Button",
  "description": "Deploy public Git projects with the Deploy Button, and set up new projects with Vercel and GitHub, GitLab, or Bitbucket",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/og-preview",
  "markdown": "# Inspecting your Open Graph metadata\n\nYou can use the Open Graph tab on every deployment on Vercel to validate and view your [Open Graph (OG)](https://ogp.me/) data across a range of social media sites before you share it out. Routes using [Deployment Protection](https://vercel.com/docs/deployments/deployment-protection) can also be inspected.\n\nTo view your data:\n\n1.  Choose your account or team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Select your project and go to the Deployments tab\n3.  From the Deployments tab, select the deployment you wish to view the metadata for\n4.  Select the Open Graph tab:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fog-tab-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fog-tab-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n5.  From here, you can view the metadata and a preview for [Twitter](https://vercel.com/docs/deployments/og-preview#twitter-specific-metadata), Slack, Facebook, and LinkedIn for [specific pages](https://vercel.com/docs/deployments/og-preview#filter-by-pathname) in your deployment\n\nYou can use the Path dropdown to view the OG card for any page on that particular deployment.\n\nThese properties set by the [Open Graph protocol](https://ogp.me/#metadata).\n\n| Property | Value | Description |\n| --- | --- | --- |\n| `title` | The title tag used to name the page. 70 characters max. | This is used by default if no other values are passed. |\n| `description` | The meta.description tag used to describe the page. 200 characters max. | This is used by default if no other values are passed. |\n| `og:image` | Absolute URL to image. | Use the [OG Image Generation](https://vercel.com/docs/functions/edge-functions/og-image-generation) documentation to create new images. |\n| `og:title` | A title for link previews. | You can use this to override the meta title if you want the OG title to be different. |\n| `og:description` | A one to two sentence description for link previews. | You can use this to override the meta description if you want the OG title to be different. |\n| `og:url` | A canonical URL for link previews. | You should provide the absolute URL. |\n\n```\n<div>\n  <head>\n    <meta name=\"og:title\" content=\"Vercel Edge Network\" />\n    <meta name=\"og:description\" content=\"Vercel Edge Network\" />\n    <meta name=\"og:image\" content={ // Because OG images must have a absolute\n    URL, we use the // `VERCEL_URL` environment variable to get the deployment’s\n    URL. // More info: // https://vercel.com/docs/projects/environment-variables\n    `${ process.env.VERCEL_URL ? 'https://' + process.env.VERCEL_URL : ''\n    }/api/vercel` } />\n    <meta\n      name=\"og:url\"\n      content=\"https://vercel.com/docs/edge-network/overview\"\n    />\n  </head>\n  <h1>A page with Open Graph Image.</h1>\n</div>\n```\n\n| Property | `content` value | Additional information |\n| --- | --- | --- |\n| `twitter:image` | A URL to an image file or to a dynamically generated image. `og:image` is used as a fallback. | `JPG`,`PNG`, `WEBP` and `GIF`. `SVG` is not supported |\n| `twitter:card` | The type of card used for Twitter link previews | `summary`, `summary_large_image`, `app`, or `player` |\n| `twitter:title` | A string that shows for Twitter link previews. `og:title` is used as a fallback. | 70 characters max |\n| `twitter:description` | A description for Twitter link previews. `og:description` is used as a fallback. | 200 characters max |\n\n```\n<div>\n  <head>\n    <meta name=\"twitter:title\" content=\"Vercel Edge Network for Twitter\" />\n    <meta\n      name=\"twitter:description\"\n      content=\"Vercel Edge Network for Twitter\"\n    />\n    <meta\n      name=\"twitter:image\"\n      content=\"https://og-examples.vercel.sh/api/static\"\n    />\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n  </head>\n  <h1>A page with Open Graph Image.</h1>\n</div>\n```",
  "title": "Inspecting your Open Graph metadata",
  "description": "Learn how to inspect and validate your Open Graph metadata through the Open Graph deployment tab.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/dashboard-features/overview",
  "markdown": "# Navigating the Dashboard\n\nWhen you sign in to Vercel through your browser, you'll be presented with the dashboard. Any subsequent visits to [vercel.com](https://vercel.com/) will automatically direct you to the dashboard.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Foverview%2Fdashboard-projects-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Foverview%2Fdashboard-projects-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn overview of your project cards in the Vercel dashboard.\n\nYour dashboard view shows a list of all projects and repositories that belong to your account or team, depending on the [scope selected](https://vercel.com/docs/dashboard-features#scope-selector).\n\nYou can use the toggle to change the view between a grid view and list view. Your viewing preference is saved to your account, so if you access your account on another machine, you'll see the same view each time.\n\nThe list view is particularly useful for monorepo users and those using [Conformance](https://vercel.com/docs/workflow-collaboration/conformance), as you will be able to quickly identify and manage all projects and deployments that belong to a single repository.\n\nProjects are organized by Git repository and are sorted by date, with the most recent deployment shown first. Projects with no Git connections are listed separately. Each card in the view shows:\n\n*   The deployed URL\n*   Information about the last commit\n*   The analytics score for any deployments using Analytics\n\nWhen in list view, you'll also have an option to View Logs and Manage Domains.\n\nYou can select any project to bring up its Project Dashboard, which allows you to view information about its deployments and configure its settings.\n\nLearn more in [our project dashboard docs](https://vercel.com/docs/projects/project-dashboard).\n\nUse the searchbar to search for the name of any deployed project.\n\nFor accounts on a Hobby plan, you can either create a new team or a new project.\n\nFor members of a team, depending on your permissions, you can use the Add New… button to add a new project, domain, or team Member.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Foverview%2Fdropdown-light.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Foverview%2Fdropdown-dark.png&w=750&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Add New drop-down to create a new project, domain, or team member.",
  "title": "Navigating the Dashboard",
  "description": "Learn how to select a scope, change the Project view, use search, or create a new project, all within the Vercel dashboard.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/webhooks-overview",
  "markdown": "# Setting Up Webhooks\n\nA webhook is a trigger-based HTTP endpoint configured to receive HTTP POST requests through events. When an event happens, a webhook is sent to another third-party app, which can then take appropriate action.\n\nWebhooks configured with Vercel can trigger a deployment when a specific event occurs. Vercel integrations receive platform events through webhooks.\n\nVercel allows you to add a generic endpoint for events from your dashboard. [Pro](https://vercel.com/docs/accounts/plans/pro) and [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) teams will be able to configure these webhooks at the account level.\n\n1.  Choose your team scope on the dashboard, and go to Settings ➞ Webhooks.\n    \n2.  ![Select events for your webhooks to listen.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687480824%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fwebhooks-settings-add-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Select events for your webhooks to listen.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687480825%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fwebhooks-settings-add-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Select events for your webhooks to listen.\n    \n    The configured webhook listens to one or more events before it triggers the function request. Vercel supports event selections from the following categories:\n    \n    Configurable webhooks listen to the following deployment-based events:\n    \n    *   Deployment Created: Listens for when any new deployment is initiated\n    *   Deployment Succeeded: Listens for a successful deployment\n    *   Deployment Promoted: Listens for when a deployment is promoted\n    *   Deployment Error: Listens for any failed deployment\n    *   Deployment Cancelled: Listens for a canceled deployment due to any failure\n    \n    Project events are only available when \"All Team Projects\" is selected as the [project scope](#choose-your-target-projects) .\n    \n    Configurable webhooks listen to the following project-based events:\n    \n    *   Project Created: Listens whenever a new project is created\n    *   Project Removed: Listens whenever any project is deleted from the team account\n    \n    The events you select should depend on your use case and the workflow you want to implement.\n    \n3.  ![Choose the scope of project(s) for webhooks.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687480824%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fproject-scope.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Choose the scope of project(s) for webhooks.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687480825%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fproject-scope-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Choose the scope of project(s) for webhooks.\n    \n    After selecting the event types, choose the scope of team projects for which webhooks will listen for events.\n    \n4.  The endpoint URL is the destination that triggers the events. All events are forwarded to this URL as a POST request. In case of an event, your webhook initiates an HTTP callback to this endpoint that you must configure to receive data. In order to be accessible, make sure these endpoint URLs are public.\n    \n    ![Define the endpoint URL for the webhooks to listen.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1705933134%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fenter-endpoint-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Define the endpoint URL for the webhooks to listen.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1705933134%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fenter-endpoint-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Define the endpoint URL for the webhooks to listen.\n    \n    Once you have configured your webhook, click the Create Webhook button.\n    \n    The Webhook Created dialog will display a secret key, which won't be shown again. You should secure your webhooks by comparing the [`x-vercel-signature`](https://vercel.com/docs/edge-network/headers#x-vercel-signature) header of an incoming request with this client secret. See [Securing webhooks](https://vercel.com/docs/integrations/webhooks-overview/webhooks-api#securing-webhooks) to learn how to do this.\n    \n    ![Confirmation to create the webhook.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1705933108%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fwebhook-created-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Confirmation to create the webhook.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1705933108%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fwebhook-created-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Confirmation to create the webhook.\n    \n    Once complete, click Done.\n    \n    To view all your new and existing webhooks, go to the Webhooks section of your team's dashboard. To remove any webhook, click the cross icon next to the webhook. You can create and use up to 20 custom webhooks per team.\n    \n\nWebhooks can also be created through [Integrations](https://vercel.com/docs/integrations). When [creating a new integration](https://vercel.com/docs/integrations/create-integration), you can add webhooks using the [Integration Console](https://vercel.com/dashboard/integrations/create). Inside your Integration's settings page locate the text field for setting the webhook URL. This is where you should add the HTTP endpoint to listen for events. Next, you can select one or more of these checkboxes to specify which events to listen to.\n\n![Specifying the webhook URL and events to listen to.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687480825%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fwebhooks-url-integrations-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Specifying the webhook URL and events to listen to.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1687480825%2Fdocs-assets%2Fstatic%2Fdocs%2Fintegrations%2Fwebhooks%2Fwebhooks-url-integrations-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSpecifying the webhook URL and events to listen to.\n\nThe webhook URL receives an HTTP POST request with a JSON payload for each event. All the events have the following format:\n\n```\n  \"id\": <eventId>,\n  \"type\": <event-type>,\n  \"createdAt\": <javascript-timestamp>,\n  \"payload\": <payload for the event>,\n  \"region\": <RegionId>,\n```\n\nHere's a [list of supported event types](https://vercel.com/docs/integrations/webhooks-overview/webhooks-api#supported-event-types) and their [`payload`](https://vercel.com/docs/integrations/webhooks-overview/webhooks-api#payload).",
  "title": "Setting Up Webhooks",
  "description": "Learn how to set up webhooks and use them with Vercel Integrations.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/comments/in-production-and-localhost",
  "markdown": "# Using Comments in Production and Localhost\n\n[Comments](https://vercel.com/docs/workflow-collaboration/comments) are available in all [preview deployments](https://vercel.com/docs/deployments/preview-deployments) on Vercel. To enable comments in production deployments and localhost, you must add the Vercel toolbar to your project with our [`@vercel/toolbar`](https://www.npmjs.com/package/@vercel/toolbar) package, or with our injection script.\n\nUsing the package offers the following benefits:\n\n*   You and your team can leave feedback at any time while using your app in production\n*   You can enable the toolbar in localhost, allowing you to see and resolve preview comments in your local environment\n*   You can use other toolbar features, such as toggling [Draft Mode](https://vercel.com/docs/workflow-collaboration/draft-mode), in production\n\n1.  Install `@vercel/toolbar`:\n2.  Link your local project to your Vercel project with the [`vercel link`](https://vercel.com/docs/cli/link) command using [Vercel CLI](https://vercel.com/docs/cli)\n\nBefore using Comments in a production deployment, keep in mind the following considerations:\n\n*   We recommend conditionally injecting the toolbar. Otherwise, all visitors will be prompted to log in when visiting your site\n*   Unlike comments on preview deployments, alerts for new comments won't be sent to a specific user by default. We recommend [linking your project to Slack with our integration](https://vercel.com/integrations/slack), or directly mentioning someone when starting a new comment thread in production to ensure new comments are seen\n\nThe following example demonstrates code that will show the Vercel Toolbar on a production deployment.\n\n```\nimport { VercelToolbar } from '@vercel/toolbar/next';\nimport { useIsEmployee } from 'lib/auth'; // Your auth library\n \nexport function StaffToolbar() {\n  const isEmployee = useIsEmployee();\n  return isEmployee ? <VercelToolbar /> : null;\n}\n```\n\n```\nimport { Suspense } from 'react';\nimport { StaffToolbar } from '@components/staff-toolbar';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <body>\n        {children}\n        <Suspense>\n          <StaffToolbar />\n        </Suspense>\n      </body>\n    </html>\n  );\n}\n```\n\nYou can use the Vercel Toolbar in your local environment with the `@vercel/toolbar` package. Doing so will enable you to view, respond to, and act on comments from localhost.\n\nTo use Comments locally in a Next.js project, define `withVercelToolbar` in your `next.config.js` file and export it, as shown below:\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  // Config options here\n};\n \nconst withVercelToolbar = require('@vercel/toolbar/plugins/next')();\n// Instead of module.exports = nextConfig, do this:\nmodule.exports = withVercelToolbar(nextConfig);\n```\n\nThen, follow the instructions in [the section on using the toolbar in production deployments](#using-@vercel/toolbar-in-production). Rebuild your local environment, and you should see the toolbar.",
  "title": "Using Comments in Production and Localhost",
  "description": "Learn how to use comments in your production deployments and localhost with the @vercel/toolbar package.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/environments",
  "markdown": "# Deployment Environments\n\nA typical deployment lifecycle for web development has the following steps:\n\n*   Local preview on the developer's computer\n*   Staging on a remote test server\n*   Production on a remote production server\n\nEnvironments are the solution for this deployment lifecycle on Vercel. The production environment is usually connected to your production domain and is only deployed under certain conditions. The [preview environment](https://vercel.com/docs/deployments/preview-deployments) is similar to the staging environment so that you can test your code remotely and preview changes without affecting the production instance.\n\nProduction deployments are usually made in two different circumstances:\n\n1.  When you merge or push to the [production branch](https://vercel.com/docs/deployments/git#production-branch) (commonly `main`)\n2.  When you make a deployment using the `vercel --prod` command\n\nThe production domain(s) is updated with the latest deployment when you trigger a production deployment.\n\nIt is possible to make a production deployment without assigning it to your domain by disabling [auto-assignment of domains](https://vercel.com/docs/deployments/managing-deployments#staging-and-promoting-a-production-deployment). This creates a staged build, which you then have to manually promote.\n\nYou can update the production domain(s) in the Domains tab of a Project on the Vercel Dashboard.\n\nTo add a production domain to a [Project](https://vercel.com/docs/projects/overview):\n\n*   Go to the Settings tab on the Project overview page\n*   Go to the Domains section and click \"Add\"\n\nYou can read more about this in the [custom domains section](https://vercel.com/docs/projects/domains/add-a-domain).\n\nYou can configure Environment Variables for each environment directly from the Project settings. Check out the [Environment variables section](https://vercel.com/docs/projects/environment-variables) to learn more.\n\nWhen you define [Environment Variables](https://vercel.com/docs/projects/environment-variables) as key-value pairs using the dashboard or Vercel CLI, they are configured outside your source code. These variables are available to your source code during the build process.\n\nYou can change the value of any environment variable at any point without changing your code. However, make sure to [Redeploy](https://vercel.com/docs/deployments/managing-deployments#redeploy-a-project) your project to update the value of these variables in the deployment.\n\nSome frameworks do not use `package.json` to select a specific version to install during build time. In this case, you can use an [Environment Variable](https://vercel.com/docs/projects/environment-variables) to define your framework's version in the following cases:\n\n| Framework | Environment Variable Name |\n| --- | --- |\n| Hugo | `HUGO_VERSION` |\n| Zola | `ZOLA_VERSION` |\n\nFor example, to select Hugo `v0.92.2`, you will add an Environment Variable named `HUGO_VERSION` with the value `0.92.2`.\n\nThe value must match an existing GitHub Release with an attached asset. For example, Hugo `[0.92.2](https://github.com/gohugoio/hugo/releases/tag/v0.92.2)` exists but Hugo `0.92` does not exist.",
  "title": "Deployment Environments",
  "description": "Environments are the solution for the deployment lifecycle on the Vercel platform. Learn about the production and preview environment types here.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/dashboard-features/command-menu",
  "markdown": "# Using the Command Menu\n\nVercel provides a menu with shortcuts, called the Command Menu, to navigate through the dashboard and perform common actions using only the keyboard.\n\nYou can access the menu by pressing ⌘ + K on macOS or Ctrl + K on Windows and Linux. Alternatively, you can access it by clicking on Command Menu in your personal menu at the top right of the dashboard:\n\n![Opening the Command Menu using your cursor.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1702035462%2Ffront%2Fdocs%2Funiversal-search%2Fdashboard-cmdk-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Opening the Command Menu using your cursor.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1702035462%2Ffront%2Fdocs%2Funiversal-search%2Fdashboard-cmdk-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nOpening the Command Menu using your cursor.\n\nOnce opened, the Command Menu will offer you a list of commonly used shortcuts. For example, you can quickly navigate to a specific [Project](https://vercel.com/docs/projects/overview) or [Team](https://vercel.com/docs/accounts/create-a-team) right away, using your ↑ (arrow up), ↓ (arrow down) and ↵ (enter) keys.\n\nThe Command Menu is only available on desktop and tablet devices, but not on smartphones, as it provides the biggest efficiency advantage when used in combination with a keyboard, instead of your mouse or finger.\n\nBy default, the list is comprised of shortcuts that the Vercel Team has found to be most useful for you. However, over time, the list will automatically adapt to your own usage of the Command Menu and begin to suggest recently used shortcuts at the top:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fcommand-menu%2Frecents-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fcommand-menu%2Frecents-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn example of recently used items suggested by the Command Menu.\n\nUp to 3 suggestions for recently used shortcuts will appear, and be ordered by the latest time you used them, with the most recently used item showing up at the very top.\n\nWhen the dashboard is closed, the suggestions will reset.\n\nBecause the purpose of the Command Menu is to get you to your desired goal in the quickest way possible, it also changes its behavior based on your surrounding context on the dashboard.\n\nIf you're currently looking at the dashboard for a [Pro](https://vercel.com/docs/accounts/plans/pro) or [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) Team, for example, you will be offered to copy a link for inviting new [Team Members](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members) if you're an [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) of that Team.\n\nWhereas, if you're on a [Hobby plan](https://vercel.com/docs/accounts/plans/hobby) instead, you will not be offered that option because Hobby plans don't support collaborating.\n\nIn addition to ⌘ + K (instead of ⌘, use Ctrl on Windows or Linux) for opening the overview of the Command Menu, Vercel also offers direct keyboard shortcuts for some of the commonly used actions:\n\n*   Search [Projects](https://vercel.com/docs/projects/overview) with ⇧ + P\n*   Search [Teams](https://vercel.com/docs/accounts/create-a-team) with ⇧ + T\n*   Switch between light and dark mode with T\n\nThey are also shown next to each of the supported items in the list.\n\nThanks to the shortcuts mentioned above, you often won't even have to navigate through the items offered by the Command Menu to get to your desired destination quickly.\n\nInstead, you can use these shortcuts to skip the overview of items and perform the action directly. Therefore, it is recommended to embed these shortcuts into your workflow.\n\nThe Command Menu allows you to search through the documentation on the Vercel, [Next.js](https://nextjs.org/docs) and [Turborepo](https://turbo.build/repo) websites.\n\n![Searching from the Vercel documentation.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1702035077%2Ffront%2Fdocs%2Funiversal-search%2Funiversal-search-v1-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Searching from the Vercel documentation.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1702035077%2Ffront%2Fdocs%2Funiversal-search%2Funiversal-search-v1-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSearching from the Vercel documentation.\n\nWhen on the Vercel documentation site:\n\n1.  Open the command menu using ⌘ + K\n2.  Begin typing a search query\n3.  The results will then be shown from across all three websites where there is a query match\n    *   Initially you will see the top three most relevant results\n    *   Followed by the rest of the results split by website\n4.  You can filter results by website using the following badges:\n    *   All: Results from all three websites (default)\n    *   Vercel: Results from the Vercel documentation site\n    *   Next.js: Results from the Next.js documentation site\n    *   Turborepo: Results from the Turborepo documentation site\n\nWhen on the Vercel dashboard:\n\n1.  Open the command menu using ⌘ + K\n2.  Scroll down to Search Docs... and select, or use the shortcut Shift + D\n3.  Begin typing a search query\n4.  The results will then be shown from across all three websites where there is a query match\n    *   Initially you will see the top three most relevant results\n    *   Followed by the rest of the results split by website\n5.  You can filter results by website using the following badges:\n    *   All: Results from all three websites (default)\n    *   Vercel: Results from the Vercel documentation site\n    *   Next.js: Results from the Next.js documentation site\n    *   Turborepo: Results from the Turborepo documentation site\n\nIf you want, the Command Menu can be a complete replacement for the traditional dashboard navigation.\n\nRegular menus will continue to exist for the purpose of navigating the dashboard with your mouse or fingers (on touch-based devices), but if you're most efficient using your keyboard, you might prefer the Command Menu.\n\nOver time, the Command Menu will offer increasingly intelligent suggestions and allow for performing more actions inline to increase your productivity.",
  "title": "Using the Command Menu ",
  "description": "Learn how to quickly navigate through the Vercel dashboard with your keyboard using the Command Menu.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-middleware/middleware-api",
  "markdown": "# Edge Middleware API Reference\n\nEdge Middleware runs on the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime), a runtime built on top of the [`V8`](https://developers.google.com/apps-script/guides/v8-runtime) JavaScript engine. The Edge runtime provides a subset of Web APIs for you to use when creating Middleware. This lightweight API layer is built to be performant and execute code with minimal latency. When writing Middleware, you can use any of the [supported APIs](https://vercel.com/docs/functions/edge-functions/edge-runtime#supported-apis) from the Edge runtime.\n\nTo add Middleware to your app, you need to create a `middleware.ts` or `middleware.js` file at the same level as your `app` or `pages` directory (even if you're using a `src` directory):\n\nThe Middleware function must be a default export as shown below:\n\n```\nexport default function customName() {}\n```\n\nMiddleware will be invoked for every route in your project. If you only want it to be run on specific paths, you can define those either with a [custom matcher config](#match-paths-based-on-custom-matcher-config) or with [conditional statements](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-conditional-statements).\n\nWhile the `config` option is the preferred method, as it does not get invoked on every request, you can also use conditional statements to only run the Middleware when it matches specific paths.\n\nTo decide which route the Middleware should be run on, you can use a custom matcher config to filter on specific paths. The matcher property can be used to define either a single path, or using an array syntax for multiple paths.\n\nEdge Middleware runs on **every request** by default. To run on specific paths instead, use the `matcher` property of the Middleware `config` object. Even when using path matching, Edge Middleware runs on **all** `/_next/data/` requests for `getServerSideProps` and `getStaticProps` pages for the sake of consistency. For more information, review [our docs on Edge Middleware API](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-custom-matcher-config) as well as the [Next.js matcher docs](https://nextjs.org/docs/advanced-features/middleware#matcher).\n\n```\nexport const config = {\n  matcher: '/about/:path*',\n};\n```\n\n```\nexport const config = {\n  matcher: ['/about/:path*', '/dashboard/:path*'],\n};\n```\n\nThe matcher config has full [regex](https://developer.mozilla.org/docs/Web/JavaScript/Guide/Regular_Expressions) support for cases such as negative lookaheads or character matching.\n\nTo match all request paths except for the ones starting with:\n\n*   `api` (API routes)\n*   `_next/static` (static files)\n*   `favicon.ico` (favicon file)\n\n```\nexport const config = {\n  matcher: ['/((?!api|_next/static|favicon.ico).*)'],\n};\n```\n\nTo match `/blog/123` but not `/blog/abc`:\n\n```\nexport const config = {\n  matcher: ['/blog/:slug(\\\\d{1,})'],\n};\n```\n\nFor help on writing your own regex path matcher, review [Path to regexp](https://github.com/pillarjs/path-to-regexp#path-to-regexp-1).\n\n```\nimport { rewrite } from '@vercel/edge';\n \nexport default function middleware(request: Request) {\n  const url = new URL(request.url);\n \n  if (url.pathname.startsWith('/about')) {\n    return rewrite(new URL('/about-2', request.url));\n  }\n \n  if (url.pathname.startsWith('/dashboard')) {\n    return rewrite(new URL('/dashboard/user', request.url));\n  }\n}\n```\n\nSee the [Helper Methods](#middleware-helper-methods) below for more information on using the `@vercel/edge` package.\n\n| Property | Type | Description |\n| --- | --- | --- |\n| `matcher` | `string / string[]` | A string or array of strings that define the paths the Middleware should be run on |\n\nThe Edge Middleware signature is made up of two parameters: `request` and `context`. The `request` parameter is an instance of the [Request](https://vercel.com/docs/functions/edge-functions/edge-functions-api#request) object, and the `context` parameter is an object containing the [`waitUntil`](https://vercel.com/docs/functions/edge-functions/edge-functions-api#waituntil) method. Both parameters are optional.\n\nEdge Middleware comes with built in helpers that are based on the native [`FetchEvent`](https://developer.mozilla.org/docs/Web/API/FetchEvent), [`Response`](https://developer.mozilla.org/docs/Web/API/Response), and [`Request`](https://developer.mozilla.org/docs/Web/API/Request) objects.\n\n[See the section on helpers below for more information](#middleware-helper-methods).\n\n```\n// config with custom matcher\nexport const config = {\n  matcher: '/about/:path*',\n};\n \nexport default function middleware(request: Request) {\n  return Response.redirect(new URL('/about-2', request.url));\n}\n```\n\nIf you're not using a framework, you must either add `\"type\": \"module\"` to your `package.json` or change your JavaScript Functions' file extensions from `.js` to `.mjs`\n\nThe `Request` object represents an HTTP request. It is a wrapper around the [Fetch API](https://developer.mozilla.org/docs/Web/API/Fetch_API) `Request` object. When using TypeScript, you do not need to import the `Request` object, as it is already available in the global scope.\n\n| Property | Type | Description |\n| --- | --- | --- |\n| `url` | `string` | The URL of the request |\n| `method` | `string` | The HTTP method of the request |\n| `headers` | `Headers` | The headers of the request |\n| `body` | [`ReadableStream`](https://developer.mozilla.org/docs/Web/API/ReadableStream) | The body of the request |\n| `bodyUsed` | `boolean` | Whether the body has been read |\n| `cache` | `string` | The cache mode of the request |\n| `credentials` | `string` | The credentials mode of the request |\n| `destination` | `string` | The destination of the request |\n| `integrity` | `string` | The integrity of the request |\n| `redirect` | `string` | The redirect mode of the request |\n| `referrer` | `string` | The referrer of the request |\n| `referrerPolicy` | `string` | The referrer policy of the request |\n| `mode` | `string` | The mode of the request |\n| `signal` | [`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal) | The signal of the request |\n| `arrayBuffer` | `function` | Returns a promise that resolves with an ArrayBuffer |\n| `blob` | `function` | Returns a promise that resolves with a Blob |\n| `formData` | `function` | Returns a promise that resolves with a FormData |\n| `json` | `function` | Returns a promise that resolves with a JSON object |\n| `text` | `function` | Returns a promise that resolves with a string |\n| `clone` | `function` | Returns a clone of the request |\n\nTo learn more about the [`NextRequest`](https://nextjs.org/docs/api-reference/next/server#nextrequest) object and its properties, visit the [Next.js documentation](https://nextjs.org/docs/api-reference/next/server#nextrequest).\n\nThe `waitUntil()` method is from the [`ExtendableEvent`](https://developer.mozilla.org/docs/Web/API/ExtendableEvent/waitUntil) interface. It accepts a [`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise) as an argument, which will keep the function running until the `Promise` resolves.\n\nIt can be used to keep the function running after a response has been sent. This is useful when you have an async task that you want to keep running after returning a response.\n\nThe example below will:\n\n*   Send a response immediately\n*   Keep the function running for ten seconds\n*   Fetch a product and log it to the console\n\n```\nimport type { NextFetchEvent } from 'next/server';\n \nexport const config = {\n  matcher: '/',\n};\n \nconst wait = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n \nasync function getProduct() {\n  const res = await fetch('https://api.vercel.app/products/1');\n  await wait(10000);\n  return res.json();\n}\n \nexport default function middleware(request: Request, context: NextFetchEvent) {\n  context.waitUntil(getProduct().then((json) => console.log({ json })));\n \n  return new Response(JSON.stringify({ hello: 'world' }), {\n    status: 200,\n    headers: { 'content-type': 'application/json' },\n  });\n}\n```\n\nIf you're not using a framework, you must either add `\"type\": \"module\"` to your `package.json` or change your JavaScript Functions' file extensions from `.js` to `.mjs`\n\n| Property | Type | Description |\n| --- | --- | --- |\n| [`waitUntil`](https://developer.mozilla.org/docs/Web/API/ExtendableEvent/waitUntil) | `(promise: Promise<unknown>): void` | Prolongs the execution of the function until the promise passed to `waitUntil` is resolved |\n\nYou can use Vercel-specific helper methods to access a request's [geolocation](#geolocation), [IP Address](#ipaddress), and more when deploying Edge Middleware on Vercel.\n\nYou can access these helper methods with the [`request` and `response` objects](#edge-middleware-signature) in your middleware handler method.\n\nThese helpers are exclusive to Vercel, and will not work on other providers, even if your app is built with Next.js.\n\nThe `geo` helper object returns geolocation information for the incoming request. It has the following properties:\n\n| Property | Description |\n| --- | --- |\n| `city` | The city that the request originated from |\n| `country` | The country that the request originated from |\n| `latitude` | The latitude of the client |\n| `longitude` | The longitude of the client |\n| `region` | The [Edge Network region](https://vercel.com/docs/edge-network/regions) that received the request |\n\nEach property returns a `string`, or `undefined`.\n\n```\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n \n// The country to block from accessing the secret page\nconst BLOCKED_COUNTRY = 'SE';\n \n// Trigger this middleware to run on the `/secret-page` route\nexport const config = {\n  matcher: '/secret-page',\n};\n \nexport function middleware(request: NextRequest) {\n  // Extract country. Default to US if not found.\n  const country = (request.geo && request.geo.country) || 'US';\n \n  console.log(`Visitor from ${country}`);\n \n  // Specify the correct route based on the requests location\n  if (country === BLOCKED_COUNTRY) {\n    request.nextUrl.pathname = '/login';\n  } else {\n    request.nextUrl.pathname = `/secret-page`;\n  }\n \n  // Rewrite to URL\n  return NextResponse.rewrite(request.nextUrl);\n}\n```\n\nThe `ip` object returns the IP address of the request from the headers, or `undefined`.\n\n```\nimport { ipAddress } from '@vercel/functions';\nimport { next } from '@vercel/edge';\n \nexport default function middleware(request: Request) {\n  const ip = ipAddress(request);\n  return next({\n    headers: { 'x-your-ip-address': ip || 'unknown' },\n  });\n}\n```\n\nThe `RequestContext` is an extension of the standard `Request` object, which contains the [`waitUntil`](#waitUntil) function. The following example works in middleware for all frameworks:\n\n```\nimport type { RequestContext } from '@vercel/edge';\n \nexport default function handler(request: Request, context: RequestContext) {\n  context.waitUntil(getAlbum().then((json) => console.log({ json })));\n \n  return new Response(`Hello there, from ${request.url} I'm an Edge Function!`);\n}\n \nexport const config = {\n  matcher: '/',\n};\n \nconst wait = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n \nasync function getAlbum() {\n  const res = await fetch('https://jsonplaceholder.typicode.com/albums/1');\n  await wait(10000);\n  return res.json();\n}\n```\n\nThis helper is **only available in Edge Middleware**.\n\nThe `NextResponse.rewrite()` helper returns a response that rewrites the request to a different URL.\n\n```\nimport { NextResponse } from 'next/server';\nimport type { NextRequest } from 'next/server';\n// Trigger this middleware to run on the `/about` route\nexport const config = {\n  matcher: '/about',\n};\n \nexport function middleware(request: NextRequest) {\n  // Rewrite to URL\n  return NextResponse.rewrite('/about-2');\n}\n```\n\nThis helper is **only available in Edge Middleware**.\n\nThe `NextResponse.next()` helper returns a Response that instructs the function to continue the middleware chain. It takes the following optional parameters:\n\n| Parameter | type | Description |\n| --- | --- | --- |\n| `headers` | `Headers[]` or `Headers` | The headers you want to set |\n| `status` | `number` | The status code |\n| `statusText` | `string` | The status text |\n\nThe following example adds a custom header, then continues the middleware chain:\n\n```\nimport { NextResponse } from 'next/server';\nexport default function middleware() {\n  return NextResponse.next({\n    headers: { 'x-from-middleware': 'true' },\n  });\n}\n```\n\nThis no-op example will return a `200 OK` response with no further action:\n\n```\nimport { NextResponse } from 'next/server';\nexport default function middleware() {\n  return NextResponse.next();\n}\n```",
  "title": "Edge Middleware API Reference",
  "description": "Learn about the Edge runtime and available APIs when working with Edge Middleware. Supported APIs include Network, Encoding, and Web Stream APIs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/activity-log",
  "markdown": "# Using the Activity Log\n\naccess-group-createdA user created an access group.access-group-deletedA user deleted an access group.access-group-project-updatedA project was changed in an access group.access-group-user-addedA user was added to an access group.access-group-user-removedA user was removed from an access group.alias-invite-createdAn invite was sent for an alias.alias-invite-joinedA user joined an alias they were given access to.alias-invite-revokedAn invite was revoked for an alias.alias-protection-bypass-createdA shareable link was created for an alias.alias-protection-bypass-exceptionA Deployment Protection Exception was updated for an alias.alias-protection-bypass-regeneratedA shareable link was regenerated for an alias.alias-protection-bypass-revokedA shareable link was revoked for an alias.alias-user-scoped-access-deniedA user's access request for an alias was denied.alias-user-scoped-access-grantedA user's access request for an alias was granted.alias-user-scoped-access-requestedA user requested access to an alias.alias-user-scoped-access-revokedA user's access for an alias was revoked.auto-expose-system-envsAutomatically exposing System Environment Variables for the project.avatarAn avatar was created for the profile of a personal account.certAn SSL certificate was created for a custom domain in a personal account or team.cert-deleteAn SSL certificate connected to a custom domain was deleted.deploy-hook-dedupedIf a deploy hook triggers a deployment for a commit that already triggered a deployment via Git, then the deployment from the deploy hook is stopped. This action is reported with the deploy-hook-deduped event.deploy-hook-processedA deployment was successfully triggered by a specific deploy hook.deploymentA deployment was created for a project.deployment-creation-blockedA deployment was blocked because the Git user is not part of the team.deployment-deleteA specific deployment was deleted.disabled-integration-installation-removedA disabled integration was automatically uninstalleddns-addA DNS record was added to the personal account or team domain records for a specific domain.dns-deleteA DNS record was deleted from the personal account or team domain records for a specific domain.dns-updateA DNS record was updated in the personal account or team domain records for a specific domain.domainA domain connection was created in a personal account or team.domain-buyA domain was successfully purchased in a personal account or team.domain-delegatedA domain was successfully delegated to another personal account or team so it can also be used there.domain-deleteA domain was removed from a personal account or team.domain-move-inA domain was moved in from another personal account or team to the current personal account or team.domain-move-outA domain was moved out from the current personal account or team to another personal account or team.domain-move-out-request-sentThe request to move a domain from the current personal account or team to another personal account or team was sent.domain-renew-changeA domain hosted with Vercel was renewed.domain-transfer-inA domain was transferred from an external provider to Vercel.edge-config-createdAn Edge Config was created.edge-config-deletedAn Edge Config was deleted.edge-config-items-updatedThe values in an Edge Config were updated.edge-config-token-createdAn access token for an Edge Config was created.edge-config-token-deletedAn access token for an Edge Config was deleted.edge-config-updatedAn Edge Config was updated.emailThe email of the current user was updated.env-variable-addAn automatically encrypted environment variable was added to a project.env-variable-deleteAn existing environment variable was deleted from a project.env-variable-editAn existing environment variable in a project was updated.env-variable-readThe plain text value of an encrypted environment variable was read.instant-rollback-createdAn instant rollback was created.integration-configuration-scope-change-confirmedThe permissions upgrade request from an installed integration was confirmed.integration-configurations-disabledOne or more integrations were disabled because their owner has left the teamintegration-installation-completedAn integration was installed in one or all projects under a personal account or team.integration-installation-permission-updatedThe permissions for an installed integration was updated.integration-installation-removedAn integration was removed from a project or personal account or team.integration-scope-changedThe scopes for an integration were changed.log-drain-createdA log drain was created.log-drain-deletedA log drain was deleted.log-drain-disabledA log drain was disabled.log-drain-enabledA log drain was enabled.loginA user logged in at a specific time with a login method.manual-deployment-promotion-createdA deployment was manually promoted to production.monitoring-disabledMonitoring was disabled for the teammonitoring-enabledMonitoring was enabled for the team.passkey-createdA new passkey was created.passkey-deletedAn existing passkey was deleted.passkey-updatedThe name of the existing passkey was updated.password-protection-disabledAdvanced Deployment Protection was disabled for the team.password-protection-enabledAdvanced Deployment Protection was enabled for the team.planA payment plan (hobby, pro or enterprise) was added to a personal account.preview-deployment-suffix-disabledThe preview deployment suffix for a team was disabled.preview-deployment-suffix-enabledThe preview deployment suffix for a team was enabled.preview-deployment-suffix-updateThe preview deployment suffix for a team was updated.project-analytics-disabledLegacy Speed Insights was disabled for a specific project.project-analytics-enabledLegacy Speed Insights was enabled for a specific project.project-automation-bypassProtection Bypass for Automation for a project was modified.project-deleteA specific project was deleted.project-domain-unverifiedThe ownership of a domain added to Vercel became unverified.project-domain-verifiedThe project domain ownership was verified.project-member-addedA user was added to a project.project-member-invitedA user was invited to a project.project-member-removedA user was removed from a project.project-member-updatedA user was updated in a project.project-move-in-successThe transfer of a project to the current personal account or team succeeded.project-move-out-failedThe transfer of a project from the current personal account or team failed.project-move-out-startedThe transfer of a project from the current personal account or team was initiated.project-move-out-successThe transfer of a project from the current personal account or team succeeded.project-options-allowlistOPTIONS Allowlist was modified.project-password-protectionPassword Protection for a project was modified.project-pausedThe project's production deployment was paused.project-speed-insights-disabledSpeed Insights was disabled for a specific project.project-speed-insights-enabledSpeed Insights was enabled for a specific project.project-sso-protectionVercel Authentication (formerly SSO protection) for a project was modified.project-trusted-ipsTrusted IPs for a project was modified.project-unpausedThe project's production deployment was resumed.project-web-analytics-disabledWeb Analytics was disabled for a project.project-web-analytics-enabledWeb Analytics was enabled for a project.secondary-email-addedAn email was added to the accountsecondary-email-removedAn email was removed from the accountsecondary-email-verifiedAn email was verifiedsecret-addAn encrypted environment variable was added to a project. (Only possible through the API and CLI)secret-deleteAn encrypted environment variable was deleted from a project. (Only possible through the API and CLI)secret-renameAn encrypted environment variable was renamed in a project. (Only possible through the API and CLI)set-nameThe full name on the personal account was set.shared-env-variable-addAn automatically encrypted shared environment variable was created.shared-env-variable-deleteAn existing shared environment variable was deleted.shared-env-variable-readThe plain text value of an encrypted shared environment variable was read.shared-env-variable-updateAn existing shared environment variable was updated.spend-createdA spend amount was defined.spend-updatedA spend amount was updated.storage-accept-tosAcceptance of storage terms of servicestorage-accessed-data-browserMade a query to the store from the Data tabstorage-connect-projectA store was connected to a projectstorage-createA new store was createdstorage-deleteA store was deletedstorage-disconnect-projectA store was disconnected to a projectstorage-inactive-store-deletedAn inactive store was deletedstorage-reset-credentialsThe credentials for a store were resetstorage-updateA store was updatedstorage-view-secretViewed a secret for a storeteamA team was created in a personal account.team-avatar-updateThe avatar of a specific team was updated.team-deleteA specific team was deleted.team-member-addA member was added to a specific team.team-member-confirm-requestThe request for a user to join a team was confirmed.team-member-decline-requestThe request for a user to join a team was declined.team-member-deleteA specific team member was deleted from a team.team-member-joinA team member joined the current team.team-member-leaveA team member left the current team.team-member-request-accessA user requested access to join a team.team-member-role-updateThe role of a specific team member was updated.team-name-updateThe name of a team was updated.team-remote-caching-updateThe Remote Caching status was changed.team-slug-updateThe slug of a team was updated.user-primary-email-updatedThe primary email was changedusernameThe username of a personal account was updated.web-analytics-tier-updatedThe Web Analytics subscription tier was changed.",
  "title": "Using the Activity Log",
  "description": "Learn how to use the Activity Log, which provides a list of all events on a Hobby account or team, chronologically organized since its creation.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/manage-emails",
  "markdown": "# Manage Emails\n\nYour account email addresses are listed in your [account settings](https://vercel.com/account/general#email).\n\nTo access your account settings from the dashboard:\n\n*   Select your avatar in the top right corner of the dashboard\n*   Next select Account Settings\n\nYou can add a new email address by selecting the Add Another button in the Emails section of your account settings.\n\nOnce your new email address is added, you will receive an email to the newly added email with a verification link. Follow the link in the email to verify your new email address.\n\nAll verified email addresses can be used to log in to your account, including your primary email address.\n\nYou can add up to three emails per account. A single email domain can only be shared by two of your emails at once.\n\n![Your account email addresses.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704990083%2Fdocs-assets%2Fstatic%2Fdocs%2Faccounts%2Faccount-emails-2-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Your account email addresses.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704990083%2Fdocs-assets%2Fstatic%2Fdocs%2Faccounts%2Faccount-emails-2-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nYour account email addresses.\n\nYour primary email address is the email address that will be used to send you notifications, such as when you receive a new [preview comment](https://vercel.com/docs/workflow-collaboration/comments) or when you are [invited to a team](https://vercel.com/docs/accounts/team-members-and-roles/managing-team-members#invite-link).\n\nOnce you have added and verified a new email address, you can change your primary email address by selecting Set as Primary in the dot menu.\n\n![Setting your primary email address.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704990083%2Fdocs-assets%2Fstatic%2Fdocs%2Faccounts%2Faccount-emails-set-primary-2-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Setting your primary email address.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704990083%2Fdocs-assets%2Fstatic%2Fdocs%2Faccounts%2Faccount-emails-set-primary-2-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSetting your primary email address.\n\nTo remove an email address select the Delete button in the dot menu.\n\nIf you wish to remove your primary email address, you will need to set a new primary email address first.",
  "title": "Manage Emails",
  "description": "Learn how to manage your email addresses on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/dashboard-features/activity-log",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/accounts/create-an-account",
  "markdown": "# Create an Account\n\nYou can [sign up](https://vercel.com/signup) for a Vercel account at any time.\n\n*   To collaborate with a team, sign up for the [Pro plan](https://vercel.com/docs/accounts/plans/pro)\n*   Otherwise, sign up for the [Hobby plan](https://vercel.com/docs/accounts/plans/hobby)\n\nTo sign up with email:\n\n1.  Enter your email address, then continue with the link provided in the verification email you will receive\n2.  Enter your phone number, and verify once more with a code sent through SMS\n\nWhen signing up with your email, no Git provider will be connected by default. See [Login methods and connections](#login-methods-and-connections) for information on how to connect a Git provider.\n\nIf no Git provider is connected, you will be asked to verify your account on every login attempt.\n\nYou can sign up with any of the following supported Git providers:\n\nYou will be asked to authorize Vercel to access your Git provider account. This will be the default login connection on your account.\n\nYou can manage your login connections in the Authentication section of [your account settings](https://vercel.com/account/authentication). To find this section:\n\n1.  Select your profile picture near the top-right of the dashboard\n2.  Select Settings in the dropdown that appears\n3.  Select Authentication in the list near the left side of the page\n\n![The Authentication section of your account settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704990083%2Fdocs-assets%2Fstatic%2Fdocs%2Faccounts%2Fauthentication-page-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Authentication section of your account settings.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1704990083%2Fdocs-assets%2Fstatic%2Fdocs%2Faccounts%2Fauthentication-page-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe Authentication section of your account settings.\n\nPasskeys enable you to log into your Vercel account with biometrics such as face or fingerprint recognition, PINs, hardware security keys, and more. Because passkeys are associated with Vercel's domain, they are more resistant to phishing attacks than other login methods.\n\nTo add a new passkey:\n\n1.  From the dashboard, click your account avatar and select Settings. In your [account settings](https://vercel.com/account/authentication), go to the Authentication item\n2.  Under Add New, select the Passkey button and then click Continue\n3.  Select the authenticator of preference. This list depends on your browser and your eligible devices. By default, Vercel will default to a password manager if you have one installed on your browser and will automatically prompt you to save the passkey\n4.  Follow the instructions on the device or with the account you've chosen as an authenticator\n\nWhen you're done, the passkey will appear in a list of login methods on the Authentication page, alongside your other connections.\n\nSAML Single Sign-On enables you to log into your Vercel Enterprise team with your organization's identity provider which manages your credentials.\n\nThis option is only available to Enterprise teams, and can be configured by your team's administrator. To sign up for an Enterprise plan, [contact sales](https://vercel.com/contact/sales).\n\nWhen you create an account on Vercel, you will be prompted to create a project by either importing a Git repository or using a template.\n\nEither way, you must connect a Git provider to your account, which you'll be able to use as a login method in the future.\n\nYour Hobby account on Vercel can only have a single login connection per third-party service. For example, you can only log into your Hobby account with a single GitHub account.\n\nIf you need to log in with multiple accounts from the same third-party service, consider creating a new Vercel Hobby account.\n\nTo upgrade from a Hobby account to a Pro account:\n\n1.  From your [dashboard](https://vercel.com/dashboard), select the Settings tab and then Billing\n2.  Under the Hobby Plan section, select Upgrade to Pro\n3.  Follow the instructions to add your payment information, and select Confirm and Upgrade\n\nTo upgrade to the Enterprise plan, [contact sales](https://vercel.com/contact/sales).",
  "title": "Create an Account",
  "description": "Learn how to create a Hobby account on Vercel and manage your login connections through your dashboard.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/deploying-and-redirecting",
  "markdown": "# Deploying & Redirecting Domains\n\nOnce the domain has been added to your project and configured, it is automatically applied to your latest production deployment.\n\nThe first deployment of a new project will be marked as production and subsequently assigned with your custom domain automatically.\n\nWhen you assign a custom domain to a project that's using [Git](https://vercel.com/docs/deployments/git), each push (including merges) that you make to the [production branch](https://vercel.com/docs/deployments/git#production-branch) (commonly `main`) will trigger a deployment to the domain.\n\nWhen you assign a domain to a _different_ branch, you'll need to make a new deployment to the desired branch for the domain to resolve correctly.\n\nReverts take effect immediately, assigning the Custom Domain to the deployment made prior to the point the revert is effective from.\n\nYou can add domain redirects from the Domains tab when more than one domain is present in the project. This provides a way to, for example, redirect a `www` subdomain to an apex domain, but can be used in a variety of ways.\n\nIf a user visits your domain with or without the \"www\" subdomain prefix, we will attempt to redirect automatically. You might still want to add this redirect explicitly.\n\nTo add a redirect, click the Edit button on the domain you want to redirect from and use the Redirect to dropdown to select the domain you want to redirect to:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fredirecting-domains.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fredirecting-domains-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA **domain redirect** that redirects requests made to `[www.acme.com](http://www.acme.com/)` to `acme.com`.\n\nAdding an [apex domain](https://vercel.com/docs/projects/domains/working-with-domains#apex-domain) to a [Project](https://vercel.com/docs/projects/overview) on Vercel will automatically suggest adding its `www` counterpart. Using both of these domains ensures that visitors can always access your site, regardless of whether or not they use `www` when entering the URL.\n\nAfter clicking \"Add\" for a domain, you will be able to choose how to redirect the `www` counterpart:\n\n![Choosing redirect options for your apex domain.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fwww-modal.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Choosing redirect options for your apex domain.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fwww-modal-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nChoosing redirect options for your apex domain.\n\nWe recommend using the `www` subdomain as your primary domain, with a redirect from the non-`www` domain to it. This allows the [Vercel Edge Network](https://vercel.com/blog/new-edge-dev-infrastructure#our-new-edge-infrastructure) more control over incoming traffic for improved reliability, speed, and security. The redirect is also cached on visitor's browsers for faster subsequent visits.\n\nSome browsers like Google Chrome automatically hide the `www` subdomain from the address bar, so this redirect may not affect your URL appearance.\n\nChoosing to redirect the `www` domain to the non-`www` also works but provides Vercel less control over incoming traffic. Alternatively, you can choose to add only the domain you typed.\n\nAdditional technical information about Domain redirects\n\nThe DNS spec forbids using CNAME records on apex domains like `example.com`. They are, however, allowed for subdomains like `www.example.com`. This is why Vercel recommends primarily using a `www` domain with a CNAME record, and adding a redirect from the non-`www` domain to it.\n\nUsing CNAME instead of A records ensures that domains on Vercel are fast, reliable, and fault-tolerant. Unlike A records, CNAME records avoid hard-coding a specific IP address in favor of an additional lookup at the DNS level. This means that Vercel can quickly steer traffic in the case of DDoS attacks or for performance optimizations.\n\nWhile we recommend using `www` as described above, Vercel maximizes the reliability and performance of your apex domain if you choose to use it as your primary domain by leveraging the [Anycast methodology](https://en.wikipedia.org/wiki/Anycast). This means Vercel still supports geographically routed traffic at infinite scale if you use an A record.\n\nYou can also add redirects programmatically using frameworks, Serverless Functions, Edge Functions, and more. [Learn more](https://vercel.com/docs/edge-network/redirects).",
  "title": "Deploying & Redirecting Domains",
  "description": "Learn how to deploy your domains and set up domain redirects with this guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/deployments/instant-rollback",
  "markdown": "# Performing an Instant Rollback on a Deployment\n\nVercel provides Instant Rollback as a way to quickly revert to a previous production deployment. This can be useful in situations that require a swift recovery from production incidents, like breaking changes or bugs. It's important to keep in mind that during a rollback:\n\n*   The rolled back deployment is treated as a restored version of a previous deployment\n*   The configuration used for the rolled back deployment will potentially become stale\n*   The environment variables will not be updated if you change them in the project settings and will roll back to a previous build\n*   If the project uses [cron jobs](https://vercel.com/docs/cron-jobs), they will be reverted to the state of the rolled back deployment\n\nFor teams on a Pro or Enterprise plan, all deployments previously aliased to a production domain are [eligible to roll back](#eligible-deployments). Hobby users can roll back to the immediately previous deployment.\n\nTo initiate an Instant Rollback from the Vercel dashboard:\n\n1.  On the project's overview page, you will see the Production Deployment tile. From there, click Instant Rollback.\n    \n    ![Access Instant Rollback from the production deployment tile.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Finstant-rollback.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Access Instant Rollback from the production deployment tile.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Finstant-rollback-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Access Instant Rollback from the production deployment tile.\n    \n2.  After selecting Instant Rollback, you'll see an dialog that displays your current production deployment and the eligible deployments that you can roll back to.\n    \n    If you're on the Pro or Enterprise plans, you can also click the Choose another deployment button to display a list of all [eligible](#eligible-deployments) deployments.\n    \n    Select the deployment that you'd like to roll back to and click Continue.\n    \n    ![Dialog showing the current and previous deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-process.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Dialog showing the current and previous deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-process-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Dialog showing the current and previous deployments.\n    \n3.  Once you've selected the deployment to roll back to, verify the roll back information:\n    \n    *   The names of the domains and sub-domains that will be rolled back\n    *   There are no change in Environment Variables, and they will remain in their original state\n    *   A reminder about the changing behavior of external APIs, databases, and CMSes used in the current or previous deployments\n4.  Once you have verified the details, click the Confirm Rollback button. At this point, you'll get confirmation details about the successful rollback.\n    \n    ![Message for a successful roll back session.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-success.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Message for a successful roll back session.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-success-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Message for a successful roll back session.\n    \n    If you have custom aliases, ensure the domains listed above are correct. The rolled-back deployment does not include custom aliases since these are not a part of your project’s domain settings. Custom aliases will only be included if they were present on the previous production deployment.\n    \n5.  The rollback happens instantaneously and Vercel will point your domain and sub-domain back to the selected deployment. The production deployment tile for your project will highlight the canceled and rolled back commits.\n    \n    When using Instant Rollback, Vercel will turn off [auto-assignment of production domains will be turned off](https://vercel.com/docs/deployments/managing-deployments#staging-and-promoting-a-production-deployment). This means that when you or your team push changes to production, the roll backed deployment won't be replaced.\n    \n    To replace the rolled back deployment, either [turn the auto-assignation setting](https://vercel.com/docs/deployments/managing-deployments#staging-and-promoting-a-production-deployment) on in the project settings and push a new change, or perform a [manual promote](https://vercel.com/docs/deployments/managing-deployments#promote-a-deployment-from-preview-to-production) to a newer deployment which will automatically turn the setting on.\n    \n    ![Production tile showing details about the rolled-back deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-on-production-tile.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Production tile showing details about the rolled-back deployment.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-on-production-tile-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Production tile showing details about the rolled-back deployment.\n    \n\n*   You cannot run parallel roll backs on the same project\n*   Only one deployment can be rolled back at a time for every project. However, a rolled back deployment stays disabled in your deployment list and can be accessed and re-reverted whenever you want\n    \n\nYou can also roll back from the main Deployments tab in your dashboard. Filtering the deployments list by `main` is recommended to view a list of [eligible roll back deployments](#eligible-deployments) as this list all your current and previous deployments promoted to production.\n\nClick the vertical ellipses (⋮) next to the deployment row and select the Instant Rollback option from the context menu.\n\n![Perform instant roll back on any of your main branch's deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-from-deploys-list.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Perform instant roll back on any of your main branch's deployments.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Frollback-from-deploys-list-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nPerform instant roll back on any of your main branch's deployments.\n\n*   Hobby plan: On the hobby plan you can roll back to the previous deployment\n*   Pro and Enterprise plan: Owners and Members on these plans can roll back to any [eligible deployment](#eligible-deployments).\n\nDeployments previously aliased to a production domain are eligible for Instant Rollback. Deployments that have never been aliased to production a domain, e.g., most [preview deployments](https://vercel.com/docs/deployments/preview-deployments), are not eligible.\n\nTo compare the manual promotion options, see [Manually promoting to Production](https://vercel.com/docs/deployments/managing-deployments#manually-promoting-to-production).",
  "title": "Performing an Instant Rollback on a Deployment",
  "description": "Learn how to perform an Instant Rollback on your production deployments and quickly roll back to a previously deployed production deployment.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/limits/usage",
  "markdown": "# Manage and optimize usage\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThere are three plans on Vercel: Hobby, Pro, and Enterprise. To see which plan you are on, select your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector). Next to your team name, you will see the plan you are on.\n\nThe Usage page shows the usage of all projects in your Vercel account by default. To access it, select the Usage tab from your Vercel [dashboard](https://vercel.com/dashboard).\n\nTo use the usage page:\n\n1.  To investigate the usage of a specific team, use the scope selector to select your team\n2.  From your dashboard, select the Usage tab\n3.  We recommend you look at usage over the last 30 days to determine patterns. Change the billing cycle dropdown under Usage to Last 30 days\n4.  You can choose to view the usage of a particular project by selecting it from the dropdown\n5.  In the overview, you'll see an allotment indicator. It shows how much of your usage you've consumed in the current cycle and the projected cost for each item\n6.  Use the [Top Paths](https://vercel.com/docs/pricing/networking#top-paths) chart to understand the metrics causing the high usage\n\nThe usage dashboard helps you understand and project your usage. You can also set up alerts to notify you when you're approaching usage limits. You can set up the following features:\n\n*   Spend Management: Spend management is an opt-in feature. Pro teams can set up a spend amount for your team to trigger notifications or actions. For example a webhook or pausing your projects when you hit your set amount\n*   Usage Notifications: Usage notifications are set up automatically. Pro teams can also [configure the threshold](https://vercel.com/docs/dashboard-features/notifications#on-demand-usage-notifications) for usage alerts to notify you when you're approaching your usage limits\n\n### Interested in the Enterprise plan?\n\nContact our sales team to learn more about the Enterprise plan and how it can benefit your team.\n\nThe table below shows the metrics for the [Networking](https://vercel.com/docs/pricing/networking) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Serverless Functions](https://vercel.com/docs/pricing/serverless-functions) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Edge Functions](https://vercel.com/docs/pricing/edge-functions) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Edge Middleware](https://vercel.com/docs/pricing/edge-middleware) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Builds](https://vercel.com/docs/pricing/builds) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Remote Cache Artifacts](https://vercel.com/docs/pricing/artifacts) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Edge Config](https://vercel.com/docs/pricing/edge-config) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Data Cache](https://vercel.com/docs/pricing/data-cache) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Vercel Postgres](https://vercel.com/docs/pricing/postgres) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Vercel KV](https://vercel.com/docs/pricing/kv) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the for [Web Analytics](https://vercel.com/docs/pricing/observability#managing-web-analytics-events), [Speed Insights](https://vercel.com/docs/pricing/observability#managing-speed-insights-data-points), and [Monitoring](https://vercel.com/docs/pricing/observability#managing-data-points) sections of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nThe table below shows the metrics for the [Image Optimization](https://vercel.com/docs/pricing/image-optimization) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nCount shows the total number of a certain metric, across all projects in your account. This is useful to understand past trends about your usage.\n\nProject shows the total usage of a certain metric, per project. This is useful to understand how different projects are using resources and is useful to help you start understanding the best opportunities for optimizing your usage.\n\nFor region-based pricing, you can view the usage of a certain metric, per region. This is useful to understand the requests your site is getting from different regions.\n\n*   Requests: The ratio of cached vs uncached requests\n*   Fast Data Transfer: The ratio of incoming vs outgoing data transfer\n*   Fast Origin Transfer: The ratio of incoming vs outgoing data transfer\n*   Serverless Functions invocations: Successful vs errored vs timed out invocations\n*   Serverless Functions execution: Successful vs errored vs timed out invocations\n*   Builds: Completed vs errored builds\n*   Remote Cache Artifacts: Uploaded vs downloaded artifacts\n*   Remote Cache total size: Uploaded vs downloaded artifacts\n\nThis shows the average usage of a certain metric over a 24 hour period.\n\nFor more information on Vercel's pricing, guidance on optimizing consumption, and invoices, see the following resources:",
  "title": "Manage and optimize usage",
  "description": "Understand how to manage and optimize your usage on Vercel, learn how to track your usage, set up alerts, and optimize your usage to save costs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/security/vercel-waf/managed-rulesets",
  "markdown": "# WAF Managed Rulesets\n\nManaged rulesets are collections of predefined WAF rules based on standards such as [Open Worldwide Application Security Project (OWASP) Top Ten](https://owasp.org/www-project-top-ten/) that you can enable and configure in your project's Firewall dashboard.\n\nThe following ruleset(s) are currently available:\n\n*   [OWASP Core Ruleset](#configure-owasp-core-ruleset)\n\n*   You need to be a [Developer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#developer-role) or [Viewer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#viewer-role) in the team to view the Firewall overview page and list the rules\n*   You need to be a [Project administrator](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#project-administrators) or [Team member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role) to configure, save and apply any rule and configuration\n\nTo enable and configure [OWASP Core Ruleset](https://owasp.org/www-project-top-ten/) for your project, follow these steps:\n\n1.  From your [project's dashboard](https://vercel.com/docs/projects/project-dashboard), select the Firewall tab\n2.  Select the Configure button\n3.  From the Managed Rulesets section, enable OWASP Core Ruleset\n4.  You can apply the changes with the OWASP rules enabled by default:\n    *   When you make any change, you will see a Review Changes button appear or update on the top right with the number of changes requested\n    *   Select Review Changes and review the changes to be applied\n    *   Select Publish to apply the changes to your production deployment\n5.  Or select what OWASP rules to enable first by selecting Configure from the OWASP Core Ruleset list item\n6.  For the OWASP Core Ruleset configuration page, enable or disable the rule that you would like to apply\n7.  For each enabled rule, select Log Only or Deny from the action drop-down\n    *   Use Log Only first and monitor the live traffic on the Firewall overview page to check that the rule has the desired effect when applied\n8.  Apply the changes\n9.  Monitor the live traffic on the Firewall overview page\n\n**Note:** If you need Managed Rulesets, contact us to discuss the Enterprise plan.\n\n[Contact Sales](https://vercel.com/contact/sales)",
  "title": "WAF Managed Rulesets",
  "description": "Learn how to use managed rulesets with the Vercel Web Application Firewall (WAF)",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/dashboard-features/support-center",
  "markdown": "# Support Center\n\nThe Vercel Support Center provides a secure and streamlined way for users on Pro and Enterprise plans to submit support cases. The Support Center allows you to create and view all cases, their statuses, and any messages from the Customer Success team at Vercel. All cases are securely stored to safeguard your data.\n\nTo submit a ticket to Vercel Support, do the following:\n\n1.  From your team's dashboard, select the Support tab and then click the Create Case button\n2.  Select the Problem Area. Depending on which problem area you select, you may need to provide additional information such as the project and deployment URL. This will help our team efficiently respond to your issue\n3.  Select the Severity. See [Issue Severity](https://vercel.com/legal/support-terms#severity-levels) for more information on how to assign the correct level. We may upgrade or downgrade the severity level of the case once submitted.\n4.  Add a relevant Subject to make the ticket easily identifiable\n5.  Add a Description explaining the issue including steps to reproduce\n6.  If there are any relevant screenshots or [logs](https://vercel.com/docs/deployments/logs) that can help diagnose the issue, you can upload them by using the Upload a File button\n7.  Finally, once you have added all relevant information, you can Submit Case\n\nThe team aims to respond to tickets as described in the [Support Terms](https://vercel.com/legal/support-terms#when).\n\nYou can see a list of all support cases, regardless of status, in the Support tab. This list shows the ticket name, number, and the status. To view more information about the ticket, click on the ticket name in the list.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fsupport-center.png&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdashboard%2Fsupport-center-dark.png&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSupport ticket information.\n\nEach ticket displays all correspondences with the support team. There are no email notifications sent.\n\nTo manage the status of any ticket, do the following:\n\n1.  From your team's dashboard, select the Support tab\n2.  Find the ticket from the list and click the ticket name to open it\n3.  If the ticket was closed, click Reopen case. If it was open, click Close case. In either scenario, you may want to provide additional information for the support team\n\nThe support team may request additional logs or other information from you that you'll need to attach to your support ticket. To upload a file, do the following:\n\n1.  From your team's dashboard, select the Support tab\n2.  Find the ticket from the list and click the ticket name to open it\n3.  Click Attach a File to bring up your system file dialog. Select the relevant file and click Upload",
  "title": "Support Center",
  "description": "Learn how to communicate securely with the Vercel support team",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/troubleshooting",
  "markdown": "# Troubleshooting domains\n\nThere are many common reasons why your domain configuration may not be working. Check the following:\n\nIs your domain [added](https://vercel.com/docs/projects/domains/add-a-domain#add-and-configure-domain) to your Vercel project?\n\nIs your custom domain pointed to the provided Vercel `CNAME`/`A` record correctly? You can check it by using `dig [example.com]` in your Terminal.\n\nIf you use the [nameservers method](https://vercel.com/docs/projects/domains/troubleshooting#configuring-nameservers-for-wildcard-domains) on your apex domain, please refer to your DNS provider's documentation for the exact instructions on how to change authoritative nameservers.\n\nIs the issue only local to you? Try to clear your browser cache, and flush DNS caches on your machine/network if possible.\n\nWhen you add a domain to Vercel that you have purchased from a third-party DNS provider, you may see an Invalid Configuration alert. There are many reasons why this could be the case:\n\n*   You need to configure the [DNS](#common-dns-issues) records of your domain with your DNS provider so they can be used with your project. To resolve this, follow the steps to [configure your domain](https://vercel.com/docs/projects/domains/add-a-domain#configure-the-domain).\n*   If your domain is in use by another Vercel account, you may be prompted to [verify access to the domain](https://vercel.com/docs/projects/domains/add-a-domain#verify-domain-access) by adding a TXT record. This will not move the domain into your account, but will allow you to use it in your project.\n*   There was an issue generating the SSL certificate for your domain. The most common reason for this is [missing CAA records](#missing-caa-records). For information on other issues that may cause this, see the [common SSL certificate issues](#common-ssl-certificate-issues) section.\n*   You have configured [wildcard subdomains](https://vercel.com/docs/projects/domains/add-a-domain#using-wildcard-domain) on your project, but their nameservers aren’t with Vercel. When using a wildcard domain, you must use the [nameservers method](https://vercel.com/docs/projects/domains/troubleshooting#configuring-nameservers-for-wildcard-domains).\n\nVercel is expecting DNS records of either `76.76.21.21` (for `A` record) or `cname.vercel-dns.com` (for `CNAME` record). Use the following commands on your Terminal to check the DNS records are correctly configured:\n\n*   `dig ns [domain]` to get a domain’s nameservers\n*   `dig a [apex domain e.g. example.com]` to get a domain’s `A` record\n*   `dig cname [subdomain e.g. www.example.com]` to get a domain’s `CNAME` record\n\nIf you prefer a non-command-line interface, you can use a free online tool, such as [Google Public DNS](https://dns.google/). If any of these results do not match what is expected, follow the steps to [configure your domain](https://vercel.com/docs/projects/domains/add-a-domain#configure-the-domain).\n\nDNS changes can take a while to propagate across the globe, depending on the previous DNS record TTL length. This may mean that certain regions can access your site as intended, while others wait until the DNS changes have reached them. Please allow some time for these changes to take effect.\n\nFor more information on [propagation times](https://vercel.com/docs/projects/domains/working-with-dns#dns-propagation) for nameservers and other DNS records, see \"[How long will it take for my Vercel DNS records to update?](https://vercel.com/guides/how-long-to-update-dns-records)\"\n\nBefore changing your DNS records to point to Vercel, we recommend updating your existing DNS record to \"lower\" the TTL (for example 60 seconds) and waiting for the old TTL to expire. Lowering the current TTL and changing a DNS record after its TTL expiration period can ensure that you can quickly roll back the change if you encounter an issue. You can then increase the DNS record TTL to its original value once you confirm everything is working as expected.\n\nWhile we allow the [creation](https://vercel.com/docs/projects/domains/managing-dns-records#adding-dns-records) of AAAA records when using Vercel's nameservers, we do not support IPv6 yet. This means if you are adding a [custom domain](https://vercel.com/docs/projects/domains/add-a-domain) from a [third-party](https://vercel.com/docs/projects/domains/working-with-domains#buying-a-domain-through-a-third-party), you won't be able to point an `AAAA` record to Vercel.\n\nWhen working with DNS records, you may make minor errors in the syntax. These errors can be difficult to debug. Below is a list of common errors made when adding DNS records and the steps required to resolve them.\n\nWhen you add a new DNS record to a domain, the Name field should use the prefix or location of the record. For `www.example.com`, the name argument would be `www`.\n\nIf you have already added a record with this, [remove the record](https://vercel.com/docs/projects/domains/managing-dns-records#removing-dns-records) from the DNS Records section of the Domains tab, and add the record again without the domain as the Name argument.\n\nWhen you add a custom domain with a subdomain to your project, we'll prompt you to add a CNAME DNS record in order to configure the domain. This record _includes_ a period (.) at the end of the Value field. This is intentional to denote that it is an absolute, fully qualified domain name.\n\nThis means that when you add a new CNAME record to your DNS provider, you must copy the value exactly as it appears, including the period.\n\nWhen you add any custom domain to your Vercel project you must [configure](https://vercel.com/docs/projects/domains/add-a-domain#configure-the-domain) the DNS records with your DNS provider so it can be used with your project. When you add a wildcard domain (such as `*.example.com`), you must [use the Nameservers method](https://vercel.com/docs/projects/domains/add-a-domain#vercel-nameservers).\n\nThis is because Vercel needs to be able to set DNS records in order to generate the wildcard certificates. The service that Vercel uses to [generate the certificates](https://vercel.com/docs/projects/domains/working-with-ssl) requires us to verify the domain ownership by using the [DNS-01 challenge method](https://letsencrypt.org/docs/challenge-types/#dns-01-challenge). By changing the nameservers, Vercel will handle the DNS-01 challenge for you automatically, and you don't need to update your verification DNS record upon your certificate renewal each time.\n\nFor more information, see [Why must we use the Domain Nameservers method for Wildcard Domains on Vercel?](https://vercel.com/guides/why-use-domain-nameservers-method-wildcard-domains)\n\nWhen you buy a new domain, you may want to also set up an email address with this domain. Vercel does not provide a mail service for domains purchased with or transferred into it. To learn how to set up email, see [How do I send and receive emails with my Vercel purchased domain?](https://vercel.com/guides/using-email-with-your-vercel-domain)\n\nWhen you add your custom domain to a project and use Vercel's nameservers, you will need to add `MX` records to continue receiving email. To learn how to add `MX` records, see [Why am I no longer receiving email after adding my domain to Vercel?](https://vercel.com/guides/why-has-email-stopped-working)\n\nAll domain purchases and renewals through Vercel are final and cannot be refunded once processed. For more information, see [Can I get a refund for a domain purchased or renewed with Vercel?](https://vercel.com/guides/can-i-get-a-refund-for-a-domain-purchased-or-renewed-with-vercel)\n\nIt can take 3-5 days for a domain to fully register. If the domain is still not showing after 5 days, you can [contact support](https://vercel.com/help).\n\nYou will need to convert the domain to [punycode](https://www.punycoder.com/) in order to add it to your project. For example, a user looking to add a domain such as `jérémie.fr` can do so in the form of `xn--jrmie-bsab.fr`.\n\n[ICANN](https://www.icann.org/) forces domain registrars to wait 60 days:\n\n*   between transfers\n*   between a new registration and a subsequent transfer\n\nIf you transfer before this time, the transfer will fail. Besides this restriction, some DNS providers may further restrict domain transferring by default as a security measure, unless the owner explicitly turns off their protection setting. Please refer to the DNS provider's documentation for more details.\n\nWhen you add an [apex domain](https://vercel.com/docs/projects/domains/working-with-domains#subdomains,-wildcard-domains,-and-apex-domains) (e.g. `example.com`) to your project, Vercel provides you with details, including an IP address, to add as an `A` record in your DNS configuration, as opposed to a `CNAME` record.\n\nThe main reason for that is the DNS [RFC1034](https://www.ietf.org/rfc/rfc1034.txt) (section 3.6.2) states that `If a CNAME RR is present at a node, no other data should be present`. Because an apex domain requires `NS` records and usually some other records, such as `MX` (for a mail service), adding a `CNAME` at the zone apex would violate this rule and likely cause an issue on your domain. Therefore, we encourage you to use an `A` record at your zone apex instead.\n\nWhen you configure an apex domain (example.com) as a custom domain for your project on Vercel, Vercel will be give you an IP address to add as an A record in your DNS configuration. Although this IP address resolves to a specific geographic location, it does not mean that when your users point to your domain, they will be sent to this specific geographic location to resolve the domain.\n\nThis is because Vercel uses [Anycast](https://en.wikipedia.org/wiki/Anycast) IP addresses, which are shared across all regions. That means even if your users access your domain resolving to the same IP addresses from different geographic locations, they will be routed to the closest Edge Network location relative to your users, based on the BGP (Border Gateway Protocol).\n\nWhen you add a domain to your project, Vercel checks if it is already associated with a [Personal Account or Team](https://vercel.com/docs/accounts). A domain can only be associated with _one_ Personal Account or Team at a time.\n\nThe following table shows errors that can be encountered when adding a domain to your project:\n\n| Error Text | Description |\n| --- | --- |\n| `This team has already registered this domain` | The domain you are trying to add is already connected to the team you have selected. |\n| `You have already registered this domain` | The domain you are trying to add is already connected to the Personal Account you have selected. |\n| `The domain mydomain.com is not available` | This more generic error message states that the domain is owned by another Vercel account that you do not have access to. If you have ownership of the domain in question, contact Vercel [support](https://vercel.com/help). |\n\nThere are many reasons why a certificate may not be generated. As the first starting point, we recommend testing your domain with:\n\n1.  [Let's Debug](https://letsdebug.net/): Let's Debug is a diagnostic tool/website to help figure out why you might not be able to issue a certificate for Let's Encrypt\n2.  [DNSViz](https://dnsviz.net/): DNSViz is a tool suite for analysis and visualization of Domain Name System (DNS) behavior, including its security extensions (DNSSEC). They can also tell you about possible DNS misconfiguration.\n\nFor non-wildcard domains, we use [HTTP-01](https://letsencrypt.org/docs/challenge-types/#http-01-challenge) challenge by default, which Vercel handles automatically by intercepting the challenge requests from Let's Encrypt to your domain as long as the domain points to Vercel.\n\nFor wildcard domains, only [DNS-01](https://letsencrypt.org/docs/challenge-types/#dns-01-challenge) challenge is supported, which Vercel requires you to use the [nameservers method](https://vercel.com/docs/projects/domains/troubleshooting#configuring-nameservers-for-wildcard-domains) to handle DNS-01 challenge requests with Vercel's nameservers automatically.\n\nSince we use Let's Encrypt for our automatic SSL certificates, you must add a `CAA` record with the value `0 issue \"letsencrypt.org\"` if other `CAA` records already exist on your domain.\n\nYou can check if your domain currently has any `CAA` records by running the `dig -t CAA +noall +ans example.com` command on your terminal, or check with [Google Public DNS](https://dns.google/) (change the `RR Type` to `CAA` and resolve).\n\nFor more information, see [Why is my domain not automatically generating an SSL certificate?](https://vercel.com/guides/domain-not-generating-ssl-certificate)\n\nAn `_acme-challenge` record allows Let's Encrypt to verify the domain ownership using [DNS-01](https://letsencrypt.org/docs/challenge-types/#dns-01-challenge) challenge. This may exist on your apex or subdomains, so can be checked with `dig -t TXT _acme-challenge.example.com` or `dig -t TXT _acme-challenge.subdomain.example.com`\n\nIf the domain was previously hosted on a different provider, and if the `_acme-challenge` record resolves to something, please consider [removing the DNS record](https://vercel.com/docs/projects/domains/managing-dns-records#removing-dns-records). This will prevent any provider (other than the one in the DNS record) from provisioning certificates for that domain.\n\nThe /.well-known path is reserved and cannot be redirected or rewritten. Only Enterprise teams can configure custom SSL. [Contact sales](https://vercel.com/contact/sales) to learn more.",
  "title": "Troubleshooting domains",
  "description": "Learn about common reasons for domain misconfigurations and how to troubleshoot your domain on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/conformance/rules/SET_COOKIE_VALIDATION",
  "markdown": "# SET\\_COOKIE\\_VALIDATION\n\nPrevents usage of cookies that do not conform to the allowed cookie policy.\n\nConformance Rules\n\nIt's a good practice to enforce a cookie policy across a workspace to ensure only certain cookies are allowed to be set.\n\nEngineers should reach out to the appropriate engineer(s) or team(s) for a review of the defined cookie and request the cookie name be added to the allowed cookie policy list. This can be set in the `conformance.config.jsonc` configuration file as follows:\n\n```\n\"SET_COOKIE_VALIDATION\": {\n  \"cookieAllowList\": [\"some-cookie-name\"]\n}\n```\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "SET_COOKIE_VALIDATION",
  "description": "Prevents usage of cookies that do not conform to the allowed cookie policy.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/conformance/rules/NEXTJS_MISSING_SECURITY_HEADERS",
  "markdown": "# NEXTJS\\_MISSING\\_SECURITY\\_HEADERS\n\nRequires that security headers are set correctly for Next.js apps and contain valid directives.\n\nConformance Rules\n\nSecurity headers are important to set to improve the security of your application. Security headers can be set for all routes in \\[`next.config.js` files\\] ([https://nextjs.org/docs/advanced-features/security-headers](https://nextjs.org/docs/advanced-features/security-headers)). This conformance check requires that the security headers are set and use a valid value.\n\nRequired headers:\n\n*   Content-Security-Policy\n*   Strict-Transport-Security\n*   X-Frame-Options\n*   X-Content-Type-Options\n*   Referrer-Policy\n\n```\nConformance errors found!\n \nA Conformance error occurred in test \"NEXTJS_MISSING_SECURITY_HEADERS\".\n \nThe security header \"Strict-Transport-Security\" is not set correctly. The \"includeSubDomains\" directive should be used in conjunction with the \"preload\" directive.\n \nTo find out more information and how to fix this error, visit\n/docs/workflow-collaboration/conformance/rules/NEXTJS_MISSING_SECURITY_HEADERS.\n \nIf this violation should be ignored, add the following entry to\n/apps/docs/.allowlists/NEXTJS_MISSING_SECURITY_HEADERS.allowlist.json\nand get approval from the appropriate person.\n \n{\n  \"testName\": \"NEXTJS_MISSING_SECURITY_HEADERS\",\n  \"reason\": \"TODO: Add reason why this violation is allowed to be ignored.\",\n  \"location\": {\n    \"workspace\": \"docs\"\n  },\n  \"details\": {\n    \"header\": \"Strict-Transport-Security\"\n  }\n}\n```\n\nFollow the [Next.js security headers documentation](https://nextjs.org/docs/advanced-features/security-headers) to fix this Conformance test. That document will walk through each of the headers and also links to further documentation to understand what the headers do and how to set the best values for your application.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "NEXTJS_MISSING_SECURITY_HEADERS",
  "description": "Requires that security headers are set correctly for Next.js apps and contain valid directives.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/configuring-functions/region",
  "markdown": "# Configuring Regions for Vercel Functions\n\nThe Vercel platform caches all static content at [the edge](https://vercel.com/docs/edge-network/overview) by default. This means your users will always get static files like HTML, CSS, and JavaScript served from servers that are closest to them. See [Regions](https://vercel.com/docs/edge-network/regions) for a full list of our regions.\n\nIn a globally distributed application, the physical distance between your function and its data source can impact latency and response times. Therefore, Vercel allows you to specify the region in which your functions execute, ideally close to your data source (such as your [database](https://vercel.com/guides/using-databases-with-vercel)). Serverless Functions are deployed to the iad1 region by default to ensure your Serverless Functions are located close to most external data sources hosted on the East Coast of the USA.\n\nIf your functions fetch from or write to a data source, you should optimize to reduce latency between where your function executes and where your data source is located.\n\nFor Serverless Functions\n\n*   By default, Serverless Functions execute in _Washington, D.C., USA_ (`iad1`) for all new projects to ensure they are located close to most external data sources, which are hosted on the East Coast of the USA. You can set a new default region through your [project's settings on Vercel](#select-a-default-serverless-region)\n*   You can define the region in your `vercel.json` using the [`regions` setting](https://vercel.com/docs/functions/configuring-functions/region#project-configuration)\n*   You can set your region in the [Vercel CLI](#vercel-cli)\n\nFor Edge Functions:\n\n*   By default Edge Functions execute in the region closest to the incoming request\n*   You can set one or more preferred regions using the route segment [config](#setting-regions-in-your-function) `preferredRegion` or specify a `regions` key within a config object to set one or more regions for you functions to execute in\n\nThis can only be set for Edge Functions\n\nBy default, Edge Functions execute in the region that is geographically closest to the incoming request, reducing network request times. However, if your function depends on a data source, you may want it to be close to that source for fast responses.\n\nTo configure which region (or multiple regions) you want your function to execute in, pass the [ID of your preferred region(s)](https://vercel.com/docs/edge-network/regions#region-list) in the following way:\n\nThe `preferredRegion` option can be used to specify a single region using a string value, or multiple regions using a string array. See the [Next.js documentation](https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config#preferredregion) for more information.\n\n```\nexport const runtime = 'edge'; // 'nodejs' is the default\n// execute this function on iad1 or hnd1, based on the connecting client location\nexport const preferredRegion = ['iad1', 'hnd1'];\nexport const dynamic = 'force-dynamic'; // no caching\n \nexport function GET(request: Request) {\n  return new Response(\n    `I am an Edge Function! (executed on ${process.env.VERCEL_REGION})`,\n    {\n      status: 200,\n    },\n  );\n}\n```\n\nDuring regional outage, Vercel has automatic failover to the next closest region to maintain uptime. This is applicable for both global and regionally specified Edge Functions. See the [outage resiliency](https://vercel.com/docs/edge-network/regions#outage-resiliency) docs for more information.\n\nIf you're not using a framework, you must either add `\"type\": \"module\"` to your `package.json` or change your JavaScript Functions' file extensions from `.js` to `.mjs`\n\nThe default Function region is _Washington, D.C., USA_ (`iad1`) for all new projects.\n\nTo change the default region in the dashboard:\n\n1.  Choose the appropriate project from your [dashboard](https://vercel.com/dashboard) on Vercel\n2.  Navigate to the Settings tab\n3.  From the left side, select Functions\n4.  Use the Function Region dropdown to select your project's default region:\n    \n    ![The Function Region setting in a Vercel project's dashboard](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fedge-network%2Fregions%2Ffunction-region-selection-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The Function Region setting in a Vercel project's dashboard](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fedge-network%2Fregions%2Ffunction-region-selection-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    The Function Region setting in a Vercel project's dashboard\n    \n\nThis can only be set for Serverless Functions\n\nTo change the default region in your `vercel.json` [configuration file](https://vercel.com/docs/projects/project-configuration#regions), add your region code to the `\"regions\"` key:\n\nEnterprise users can also use [`functionFailoverRegions`](https://vercel.com/docs/projects/project-configuration#functionfailoverregions) to specify regions that a Serverless Function should failover to if the default region is out of service.\n\nThis can only be set for Serverless Functions\n\nUse the `vercel --regions` command in your project's root directory to set a region. Learn more about setting regions with the `vercel --regions` command in the [CLI docs](https://vercel.com/docs/cli/deploy#regions).\n\nMultiple Serverless Function regions are only allowed for Enterprise accounts. If your Project requires more than one Serverless Function region, [contact Sales](https://vercel.com/contact/sales).\n\nMultiple Edge Functions regions can be set regardless of your plan.\n\nTo learn more about the regions that you can set for your Functions, see the [region list](https://vercel.com/docs/edge-network/regions#region-list).\n\nVercel Functions have multiple availability zone redundancy by default. Multi-region redundancy is available depending on your runtime.\n\nEnterprise teams can enable multi-region redundancy for Vercel Functions using Node.js.\n\nTo automatically failover to closest region in the event of an outage:\n\n1.  Select your project from your team's [dashboard](https://vercel.com/dashboard)\n2.  Navigate to the Settings tab and select Functions\n3.  Enable the Function Failover toggle:\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706311884%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Ffunction-failover-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1706311884%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Ffunction-failover-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n\nTo manually specify the fallback region, you can pass one or more regions to the [`functionFailoverRegions`](https://vercel.com/docs/projects/project-configuration#functionfailoverregions) property in your `vercel.json` file:\n\n```\n{\n  \"functionFailoverRegions\": [\"dub1\", \"fra1\"]\n}\n```\n\nThe region(s) set in the `functionFailoverRegions` property must be different from the default region(s) specified in the [`regions`](https://vercel.com/docs/projects/project-configuration#regions) property.\n\nDuring an automatic failover, Vercel will reroute application traffic to the next closest region, meaning the order of the regions in `functionFailoverRegions` does not matter. For more information on how failover routing works, see [`functionFailoverRegions`](https://vercel.com/docs/projects/project-configuration#functionfailoverregions).\n\nYou can view your default and failover regions through the [deployment summary](https://vercel.com/docs/deployments/overview#deployment-summary):\n\n![Failover regions for your Serverless Functions shown in the deployment summary.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1700219695%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Ffunction-failover-region-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Failover regions for your Serverless Functions shown in the deployment summary.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1700219694%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Ffunctions%2Ffunction-failover-region-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nFailover regions for your Serverless Functions shown in the deployment summary.\n\nRegion failover is supported with Secure Compute. See [Region Failover](https://vercel.com/docs/security/secure-compute#region-failover) to learn more.\n\nIn the event of regional downtime, Vercel will automatically reroute traffic to the next closest Edge Network region on all plans. For more information on which regions Vercel routes traffic to, see [Outage Resiliency](https://vercel.com/docs/edge-network/regions#outage-resiliency).",
  "title": "Configuring Regions for Vercel Functions",
  "description": "Learn how to configure regions for Vercel Functions.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/metrics",
  "markdown": "# Speed Insights Metrics\n\nWhile many performance measurement tools, like [Lighthouse](https://web.dev/measure/), estimate user experience based on lab simulations, Vercel's Real Experience Score (RES) uses real data points collected from your users' devices.\n\nAs a result, RES offers an authentic evaluation of your users' actual experiences with your application. This real-time data allows you to gauge the true performance of your application, providing a continuous stream of insights that are invaluable for tracking changes over time.\n\nBy integrating these insights into your development workflow through our dashboard, you can easily correlate shifts in performance with new deployments. This real-time feedback can help you fine-tune your application, ensuring optimal user experience.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fres-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fres-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn example of a Real Experience Score over time.\n\nThe timestamps in the Speed Insights view are in local time (not UTC).\n\nThe Core Web Vitals, as defined by Google and the [Web Performance Working Group](https://www.w3.org/webperf/), are key metrics that assess your web application's loading speed, responsiveness, and visual stability.\n\nSpeed Insights now uses Lighthouse 10 scoring criteria instead of Lighthouse 6 criteria as explained in [Updated Scoring Criteria](https://vercel.com/docs/speed-insights/migrating-from-legacy#updated-scoring-criteria)\n\n| Metric | Description | Target Value |\n| --- | --- | --- |\n| [Largest Contentful Paint (LCP)](#largest-contentful-paint-lcp) | Measures the time from page start to when the largest content element is fully visible. | 2.5 seconds or less |\n| [Cumulative Layout Shift (CLS)](#cumulative-layout-shift-cls) | Quantifies the fraction of layout shift experienced by the user over the lifespan of the page. | 0.1 or less |\n| [Interaction to Next Paint (INP)](#interaction-to-next-paint-inp) | Measures the time from user interaction to when the browser renders the next frame. | 200 millisecond or less |\n| [First Contentful Paint (FCP)](#first-contentful-paint-fcp) | Measures the time from page start to the rendering of the first piece of DOM content. | 1.8 seconds or less |\n| [First Input Delay (FID)](#first-input-delay-fid) | Measures the time from a user's first interaction to the time the browser is able to respond. | 100 milliseconds or less |\n| [Total Blocking Time (TBT)](#total-blocking-time-tbt) | Measures the total amount of time between FCP and TTI where the main thread was blocked long enough to prevent input responsiveness. | Under 800 milliseconds |\n| [Time to First Byte (TTFB)](#time-to-first-byte-ttfb) | Measures the time from the request of a resource to when the first byte of a response begins to arrive. | Under 800 milliseconds |\n\n[Largest Contentful Paint](https://web.dev/articles/lcp) (LCP) is a performance metric that measures the time from when the page starts loading to when the largest content element in the viewable screen is fully displayed. This could be an image, a video, or a block of text. LCP is important as it gives a measure of when the main content of the page is visible to the user.\n\nA good LCP time is considered to be 2.5 seconds or less.\n\n[Cumulative Layout Shift](https://web.dev/articles/cls) (CLS) is a performance metric that quantifies the fraction of layout shift experienced by the user. A layout shift occurs any time a visible element changes its position from one rendered frame to the next.\n\nThe score is calculated from the product of two measures:\n\n*   The impact fraction - the area of the viewport impacted by the shift\n*   The distance fraction - the distance the elements have moved relative to the viewport between frames\n\nA good CLS score is considered to be 0.1 or less.\n\n[Interaction to Next Paint](https://web.dev/articles/inp) (INP) is a metric that measures the time from when a user interacts with your site to the time the browser renders the next frame in response to that interaction.\n\nThis metric is used to gauge the responsiveness of a page to user interactions. The quicker the page responds to user input, the better the INP.\n\nLower INP times are better, with an INP time of 200 milliseconds or less being considered good.\n\n[First Contentful Paint](https://web.dev/articles/fcp) (FCP) is a performance metric that measures the time from the moment the page starts loading to the moment the first piece of content from the Document Object Model (DOM) is rendered on the screen. This could be any content from the webpage such as an image, a block of text, or a canvas render. The FCP is important because it indicates when the user first sees something useful on the screen, providing an insight into your webpage's loading speed.\n\nLower FCP times are better, with an FCP time of 1.8 seconds or less being considered good.\n\nTime to First Byte (TTFB) measures the time between the request for a resource and when the first byte of a response begins to arrive.\n\nLower TTFB times are better, with a good TTFB time being considered as under 800 milliseconds.\n\n[First Input Delay](https://web.dev/articles/fid) (FID) measures the time from when a user first interacts with your site (by selecting a link for example) to the time when the browser is able to respond to that interaction. This metric is important on pages where the user needs to do something, because it captures some of the delay that users feel when trying to interact with the page.\n\nA good FID score is 100 milliseconds or less.\n\nAs [stated by Google](https://web.dev/vitals/#lab-tools-to-measure-core-web-vitals), simulating an environment to measure Web Vitals necessitates a different approach since no real user request is involved.\n\nTotal Blocking Time (TBT) quantifies how non-interactive a page is. It measures the total time between the First Contentful Paint (FCP) and Time to Interactive (TTI) where the main thread was blocked for long enough to prevent user input. Long tasks (over 50 ms) block the main thread, preventing the user from interacting with the page. The sum of the time portions exceeding 50 ms constitutes the TBT.\n\nLower TBT times are better, with a good TBT time being considered as under 800 milliseconds.\n\nFor more in-depth information related to performance metrics, visit the PageSpeed Insights [documentation](https://developers.google.com/speed/docs/insights/v5/about) .\n\nVercel calculates performance scores using real-world data obtained from the [HTTP Archive](https://httparchive.org/). This process involves assigning each collected metric (e.g., [First Contentful Paint (FCP)](#first-contentful-paint-fcp)) a score ranging from 0 to 100. The score is determined based on where the raw metric value falls within a log-normal distribution derived from actual website performance data.\n\nFor instance, if [HTTP Archive](https://httparchive.org/) data shows that the top-performing sites render the Largest Contentful Paint (LCP) in approximately 1,220ms, this value is mapped to a score of 99. Vercel then uses this correlation, along with your project's specific LCP metric value, to compute your LCP score.\n\nThe Real Experience Score is a weighted average of all individual metric scores. Vercel has assigned each metric a specific weighting, which best represents user's perceived performance on mobile and desktop devices.\n\n| Metric | Weight | Score of 50 | Score of 90 |\n| --- | --- | --- | --- |\n| FCP | 15% | 3s  | 1.8s |\n| LCP | 30% | 4s  | 2.5s |\n| INP | 30% | 500ms | 200ms |\n| CLS | 25% | 0.25 | 0.10 |\n\nIn the [Virtual Experience Score](#predictive-performance-metrics-with-virtual-experience-score), [Total Blocking Time (TBT)](#total-blocking-time-tbt) replaces INP for desktop devices:\n\n| Metric | Weight | Score of 50 | Score of 90 |\n| --- | --- | --- | --- |\n| TBT | 30% | 350ms | 150ms |\n\nThis approach allows for a more accurate assessment of your application's performance, based on the actual experiences of your users on different devices.\n\nIn the context of Vercel's Speed Insights, a data point is a single unit of information that represents a measurement of a specific Web Vital metric during a user's visit to your website.\n\nData points are collected on hard navigations, which in the case of Next.js apps, are only the first-page view in a session. During a user's visit, data points are gathered during the initial page load, user interaction, and upon leaving the page.\n\nAs of now, up to 6 data points can be potentially tracked per visit:\n\n*   On page load: Time to First Byte ([TTFB](#time-to-first-byte-ttfb)) and First Contentful Paint ([FCP](#first-contentful-paint-fcp))\n*   On interaction: First Input Delay ([FID](#first-input-delay-fid)) and Largest Contentful Paint ([LCP](#largest-contentful-paint-lcp))\n*   On leave: Interaction to Next Paint ([INP](#interaction-to-next-paint-inp)), Cumulative Layout Shift ([CLS](#cumulative-layout-shift-cls)), and, if not already sent, Largest Contentful Paint ([LCP](#largest-contentful-paint-lcp)).\n\nThe collection of metrics may vary depending on how users interact with or exit the page. On average, you can expect to collect between 3 and 6 metrics per visit.\n\nThese data points provide insights into various performance aspects of your website, such as the time it takes to display the first content ([FCP](#first-contentful-paint-fcp)) and the delay between user input and response ([FID](#first-input-delay-fid)). By analyzing these data points, you can gain valuable information to optimize and enhance the performance of your website.\n\nBy default the user experience percentile is set to P75, which offers a balanced overview of the majority of user experiences. You can view the data for the other percentiles by selecting them in the time-based line graph.\n\nThe chosen percentile corresponds to the proportion of users who experience a load time faster than a specific value. Here's how each percentile is defined:\n\n*   P75: Represents the experience of the fastest 75% of your users, excluding the slowest 25%.\n*   P90: Represents the experience of the fastest 90% of your users, excluding the slowest 10%.\n*   P95: Represents the experience of the fastest 95% of your users, excluding the slowest 5%.\n*   P99: Represents the experience of the fastest 99% of your users, excluding the slowest 1%.\n\nFor instance, a P75 score of 1 second for [First Contentful Paint (FCP)](#first-contentful-paint-fcp) means that 75% of your users experience an FCP faster than 1 second. Similarly, a P99 score of 8 seconds means 99% of your users experience an FCP faster than 8 seconds.\n\nPerformance metrics, including the [Real Experience Score](#real-user-monitoring), the [Virtual Experience Score](#predictive-performance-metrics-with-virtual-experience-score), and the individual [Core Web Vitals](#core-web-vitals-explained) (along with [Other Web Vitals](#other-web-vitals)) are color-coded as follows:\n\n*   0 to 49 (red): Poor\n*   50 to 89 (orange): Needs Improvement\n*   90 to 100 (green): Good\n\nStrive to achieve 'Good' scores (90 to 100) for the Real and Virtual Experience Scores to ensure an optimal user experience. However, keep in mind that reaching a score of 100 is extremely challenging due to diminishing returns — the effort required to improve your score grows exponentially the closer you get to 100. Thus, a jump from 99 to 100 demands a much larger metric improvement compared to moving from 90 to 94.\n\nHigher Real Experience and Virtual Experience Scores generally translate to superior end-user experiences, making it worthwhile to strive for improved Web Vital Scores.\n\nPerformance scores are color-coded to reflect user experience levels: 'Poor' (red), 'Needs Improvement' (orange), and 'Good' (green). Improvements within the same color range (like moving from a score of 50 to 80, both in the 'Needs Improvement' category) enhance user experience but don't significantly impact search engine rankings.\n\nIf you aim to boost your site's search ranking, aim to move your scores into a higher color-coded category, for instance, from 'Needs Improvement' (orange) to 'Good' (green). This change reflects substantial improvements in performance and is more likely to be rewarded with higher search engine rankings.\n\nSpeed Insights offers a variety of views to help you analyze your application's performance data. This allows you to identify areas that need improvement and make informed decisions about how to optimize your site.\n\nThe Speed Insights URL view offers a list of all routes (the actual pages you built) and paths (the URLs requested by the visitor) that your application users visit. It is organized by performance score and sorted by data points.\n\n![Speed Insights URL view for routes and paths of your project.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fkanban-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Speed Insights URL view for routes and paths of your project.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fkanban-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSpeed Insights URL view for routes and paths of your project.\n\nThe Selectors tab on a Speed Insights metric provides a detailed breakdown of the performance of individual HTML elements on your site. This view is particularly useful for identifying specific elements that may be causing performance issues.\n\nHTML element attribution is available for the following metrics:\n\n*   Interaction to Next Paint (INP)\n*   First Input Delay (FID)\n*   Cumulative Layout Shift (CLS)\n*   Largest Contentful Paint (LCP)\n\nThe Countries section in Speed Insights provides a geographical breakdown of your application's performance. This view is helpful for identifying regions where your application may be underperforming.\n\n![Geographic map of the P75 score where the color intensity indicates the relative amount of data points per country](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fcountry-map-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Geographic map of the P75 score where the color intensity indicates the relative amount of data points per country](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fcountry-map-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nGeographic map of the P75 score where the color intensity indicates the relative amount of data points per country\n\nThe Real Experience Score ([RES](#real-user-monitoring-with-real-experience-score-res)) displayed in the Speed Insights tab is derived from actual data points collected from your visitors' devices. As such, it can only offer insight into your app's performance post-deployment. While it's critical to gather these real-world data points, they only reflect user experiences after the fact, limiting their predictive power.\n\nIn contrast, the Virtual Experience Score (VES) is a predictive performance metric that allows you to anticipate the impact of changes on your app's performance, ensuring there's no regression in user experience. This metric is provided by [integrations](https://vercel.com/integrations) like [Checkly](https://vercel.com/integrations/checkly) that employ Deployment Checks.\n\nSetting up an integration supporting performance checks enables these checks to run for each deployment. These checks assess whether the user experience is likely to improve or deteriorate with the proposed changes, helping guide your decision-making process.\n\nLike RES, the VES draws from four separate Speed Insights, albeit with some variations:\n\n*   In place of the First Input Delay ([FID](#first-input-delay-fid)) Core Web Vital, the Virtual Experience Score utilizes Total Blocking Time ([TBT](#total-blocking-time-tbt))\n*   The specific device type used for checks depends on the Integration you've set up. For example, Checkly only uses \"Desktop\" for determining scores",
  "title": "Speed Insights Metrics",
  "description": "Learn what each performance metric on Speed Insights means and how the scores are calculated.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/plans/hobby",
  "markdown": "# Vercel Hobby Plan\n\nThe Hobby plan is free and aimed at developers with personal projects, and small-scale applications. It offers a generous set of features for individual users, including the following Managed Infrastructure, DX Platform, and Platform features on a per month basis:\n\nMoving from the Hobby to Pro plan, you receive:\n\n| Feature | Hobby | Pro |\n| --- | --- | --- |\n| Edge Middleware Invocations | Up to 1,000,000 Invocations | 1,000,000 Invocations included |\n| Data Cache Reads | Up to 50,000 Reads | 100,000 included |\n| Data Cache Writes | Up to 5,000 | 10,000 included |\n| Edge Requests | Up to 1,000,000 requests | 10,000,000 requests included |\n| Projects | 200 | Unlimited |\n| Serverless Function maximum duration | 10s (default) - [configurable up to 60s](https://vercel.com/docs/functions/configuring-functions/duration) | 15s (default) - [configurable up to 300s](https://vercel.com/docs/functions/configuring-functions/duration) |\n| Build execution minutes | 6,000 | 24,000 |\n| Team collaboration features | \\-  | Yes |\n| Domains per project | 50  | Unlimited |\n| Deployments per day | 100 | 6,000 |\n| Analytics | \\-  | Limited |\n| Email support | \\-  | Yes |\n| [Vercel AI Playground models](https://sdk.vercel.ai/) | Llama, GPT 3.5, Mixtral | GPT-4, Claude, Mistral Large, Code Llama |\n| [RBAC](https://vercel.com/docs/accounts/team-members-and-roles/access-roles) available | N/A | [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role), [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role), [Billing](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#billing-role) |\n| [Comments](https://vercel.com/docs/workflow-collaboration/comments) | Available | Available for team collaboration |\n| Log Drains | \\-  | [Configurable](https://vercel.com/docs/observability/log-drains/configure-log-drains) (not on a trial) |\n| Spend Management | N/A | [Configurable](https://vercel.com/docs/pricing/spend-management) |\n| [Vercel Toolbar](https://vercel.com/docs/workflow-collaboration/vercel-toolbar) | Available for certain features | Available |\n| [Storage](https://vercel.com/docs/storage) | KV, Postgres, Blob (Beta) | KV, Postgres, Blob (Beta) |\n| [Activity Logs](https://vercel.com/docs/observability/activity-log) | Available | Available |\n| [Runtime Logs](https://vercel.com/docs/observability/runtime-logs) | 1 hour of logs and up to 4000 rows of log data | 1 day of logs and up to 100,000 rows of log data |\n| [DDoS Mitigation](https://vercel.com/docs/security/ddos-mitigation) | On by default. Optional [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode). | On by default. Optional [Attack Challenge Mode](https://vercel.com/docs/security/attack-challenge-mode). |\n| [Vercel WAF IP Blocking](https://vercel.com/docs/security/vercel-waf/ip-blocking) | Up to 10 | Up to 100 |\n| [Vercel WAF Custom Rules](https://vercel.com/docs/security/vercel-waf/custom-rules) | Up to 3 | Up to 40 |\n| Deployment Protection | [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication) | [Vercel Authentication](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/vercel-authentication), [Password Protection](https://vercel.com/docs/security/deployment-protection/methods-to-protect-deployments/password-protection) (Add-on), [Sharable Links](https://vercel.com/docs/security/deployment-protection/methods-to-bypass-deployment-protection/sharable-links) |\n\nTo upgrade to the Pro plan, see [Upgrading to Pro](https://vercel.com/docs/accounts/plans/pro#upgrading-to-pro). Or, click the button below to start a [trial](https://vercel.com/docs/accounts/plans/pro/trials):\n\n### Get started with Vercel Pro for free\n\nExperience the power of Pro features during your trial. Unlock unlimited Serverless Function requests, 1000 GB-hours of execution, boosted application bandwidth, and enjoy free access to Speed Insights throughout your trial period.\n\nTo downgrade from a Pro to Hobby plan without losing access to the team's projects:\n\n1.  Navigate to your [dashboard](https://vercel.com/dashboard) and select your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  Select the Settings tab\n3.  Select Billing in the Settings navigation\n4.  Click \"Downgrade Plan\" in the Plan sub-section\n\nWhen you downgrade a Pro team, all active members except for the original owner are removed.\n\nDue to restrictions in the downgrade flow, Pro teams will need to [manually transfer any connected Stores](https://vercel.com/docs/storage#transferring-your-database) and/or [Domains](https://vercel.com/docs/projects/domains/transfer-your-domain#transferring-domains-between-projects) to a new destination before proceeding with downgrade.\n\nAs the Hobby plan is a free tier there are no billing cycles. In most cases, if you exceed your usage limits on the Hobby plan, you will have to wait until 30 days have passed before you can use the feature again.\n\nSome features have shorter or longer time periods:\n\nAs stated in the [fair use guidelines](https://vercel.com/docs/limits/fair-use-guidelines#commercial-usage), the Hobby plan restricts users to non-commercial, personal use only.\n\nWhen your personal account gets converted to a Hobby team, your usage and activity log will be reset. To learn more about this change, read the [changelog](https://vercel.com/changelog/2024-01-account-changes).",
  "title": "Vercel Hobby Plan",
  "description": "Learn about the Hobby plan and how it compares to the Pro plan.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/integrations/cloudflare",
  "markdown": "# Vercel and Cloudflare Integration\n\nVercel integrates with Cloudflare in two ways:\n\n*   [Using Cloudflare as your DNS provider](#using-cloudflare-as-your-dns-provider)\n*   [Using Cloudflare as a reverse proxy](#using-cloudflare-as-a-reverse-proxy)\n\nWhile Vercel [does offer DNS](https://vercel.com/docs/projects/domains/working-with-dns), you may already have a domain registered with Cloudflare. If so, Cloudflare manages DNS for your domain.\n\nTo use Cloudflare as your DNS provider, follow the steps below:\n\n1.  In your Cloudflare dashboard, create a CNAME record pointing your domain to `cname.vercel-dns.com`.\n    \n2.  Set the Proxy status to DNS only. This ensures DNS queries result in Vercel serving the request instead of Cloudflare.\n    \n\nVercel offers a native reverse proxy with [redirects](https://vercel.com/docs/edge-network/redirects) to proxy requests to other services. However, if you want to use Cloudflare as a reverse proxy, you can do so by following the steps below:\n\n1.  In your Cloudflare dashboard, create a CNAME record pointing your domain to `cname.vercel-dns.com`.\n    \n2.  Enable the Cloudflare proxy to send traffic through Cloudflare first.\n    \n3.  Set Cloudflare SSL mode to [Full](https://developers.cloudflare.com/ssl/origin-configuration/ssl-modes/full) to encrypt traffic between Cloudflare and Vercel.\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1691631800%2Fdocs-assets%2Fstatic%2Fdocs%2Fcloudflare%2Ffull.jpg&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1691631800%2Fdocs-assets%2Fstatic%2Fdocs%2Fcloudflare%2Ffull-dark.jpg&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n\nOnly [Enterprise plan](https://vercel.com/docs/accounts/plans/enterprise) customers can set up wildcard domains with Cloudflare Proxy.\n\nEnterprise plan customers can issue a [Cloduflare Origin CA certificate](https://developers.cloudflare.com/ssl/origin-configuration/origin-ca/) with a wildcard SAN (Subject Alternative Name) and [upload it on Vercel](https://vercel.com/docs/projects/domains/custom-SSL-certificate).\n\nBoth Cloudflare and Vercel utilize the [ACME protocol](https://datatracker.ietf.org/doc/html/rfc8555)—with SSL providers like [Let’s Encrypt](https://letsencrypt.org/)—to issue certificates. To validate domain ownership, the protocol sends an HTTP (not HTTPS) request to `/.well-known/acme-challenge/<id>` on your server.\n\nCloudflare has a variety of services that, depending on their configuration, could block the ACME protocol verification checks, resulting in Vercel failing to issue TLS certificates properly:\n\n*   Page Rules\n*   Access\n*   Bot Fight Mode\n\nTo avoid disruption, the following path:\n\n*   `http://<YOUR_DOMAIN>/.well-known/acme-challenge/*`\n\nMust be excluded from page rules, bot protection, or bypassed inside Access.",
  "title": "Vercel and Cloudflare Integration",
  "description": "Integrate your Vercel project with your Cloudflare domain.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/image-optimization/limits-and-pricing",
  "markdown": "# Limits and Pricing for Image Optimization\n\nImage Optimization pricing is dependent on your plan and how many unique [source images](#source-images) you have across your projects during your billing period.\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nImage Optimization on the Pro trial plan is free for the first 2500 source images.\n\n| Plan | Image Optimization Limit | Price (after limit hit) |\n| --- | --- | --- |\n| Pro Trial | 2500 source images | [N/A](#pro-and-enterprise) |\n\nThe table below shows the metrics for the [Image Optimization](https://vercel.com/docs/pricing/image-optimization) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nUsage is not incurred until an image is requested. Learn more about [managing costs](https://vercel.com/docs/image-optimization/managing-image-optimization-costs) for Image Optimization.\n\nA source image is the value that is passed to the `src` prop. A single source image can produce multiple optimized images. For example:\n\n*   Usage: `<Image src=\"/hero.png\" width=\"700\" height=\"745\" />`\n*   Source image: `/hero.png`\n*   Optimized image: `/_next/image?url=%2Fhero.png&w=750&q=75`\n*   Optimized image: `/_next/image?url=%2Fhero.png&w=828&q=75`\n*   Optimized image: `/_next/image?url=%2Fhero.png&w=1080&q=75`\n\nFor example, if you are on a Pro plan and have passed 6000 source images to the `src` prop within the last billing cycle, your bill will be $5 for optimized images.\n\nYou are billed for the number of unique [source images](#source-images) requested during the billing period.\n\nAdditionally, charges apply for [Fast Data Transfer](https://vercel.com/docs/pricing/networking#fast-data-transfer) when optimized images are delivered from Vercel's [Edge Network](https://vercel.com/docs/edge-network/overview) to clients.\n\nImage Optimization is free for Hobby users within the [usage limits](https://vercel.com/docs/limits/fair-use-guidelines#typical-monthly-usage-guidelines). As stated in the [Fair Usage Policy](https://vercel.com/docs/limits/fair-use-guidelines#commercial-usage), Hobby accounts are restricted to non-commercial personal use only.\n\nVercel will send you emails as you are nearing your [usage](#pricing) limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard).\n\nOnce you exceed the limits:\n\n*   New [source images](#source-images) will fail to optimize and instead return a runtime error response with [402 status code](https://vercel.com/docs/errors/platform-error-codes#402:-deployment_disabled). This will trigger the [`onError`](https://nextjs.org/docs/app/api-reference/components/image#onerror) callback and show the [`alt`](https://nextjs.org/docs/app/api-reference/components/image#alt) text instead of the image\n*   Previously optimized images have already been cached and will continue to work as expected, without error\n\nYou will not be charged for exceeding the usage limits, but this usually means your application is ready to upgrade to a [Pro plan](https://vercel.com/docs/accounts/plans/pro).\n\n### Get started with Vercel Pro for free\n\nExperience the power of Pro features during your trial. Unlock unlimited Serverless Function requests, 1000 GB-hours of execution, boosted application bandwidth, and enjoy free access to Speed Insights throughout your trial period.\n\nIf you want to continue using Hobby, read more about [Managing Usage & Costs](https://vercel.com/docs/image-optimization/managing-image-optimization-costs) to see how you can disable Image Optimization per image or per project.\n\nFor Teams on Pro trials, the [trial will end](https://vercel.com/docs/accounts/plans/pro/trials#post-trial-decision) if your Team uses over 2500 source images. For more information, see the [trial limits](https://vercel.com/docs/accounts/plans/pro/trials#trial-limitations).\n\nVercel will send you emails as you are nearing your [usage](#pricing) limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard). Once your team exceeds the 5000 source images limit, you will continue to be charged $5 per 1000 source images for on-demand usage.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nFor all the images that are [optimized by Vercel](https://vercel.com/docs/image-optimization#measuring-performance), the following limits apply:\n\n*   The maximum size for an optimized image is 10 MB, as set out in the [Cacheable Responses limits](https://vercel.com/docs/edge-network/caching#how-to-cache-responses). If this limit is exceeded, a `500` status code will be returned\n*   Each [source image](#source-images) has a maximum width and height of 8192 pixels\n*   A [source image](#source-images) must be one of the following formats to be optimized: `.jpeg`, `.png`, `.webp`. Other formats will be served as-is\n\nSee the [Fair Usage Policy](https://vercel.com/docs/limits/fair-use-guidelines#typical-monthly-usage-guidelines) for typical monthly usage guidelines.",
  "title": "Limits and Pricing for Image Optimization",
  "description": "This page outlines information on the limits that are applicable to using Image Optimization, and the costs they can incur.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/working-with-ssl",
  "markdown": "# Working with SSL Certificates\n\nAn SSL certificate enables encrypted communication between user's browser and your web server to be encrypted. The certificate is installed on the web server and allows for website authentication and data encryption. This is particularly important if you are working with any sort of authentication and personal or financial data.\n\nSSL certificates are issued from a certificate authority (CA) for each domain. While it is possible to [create and upload your own custom certificate](https://vercel.com/docs/projects/domains/custom-SSL-certificate), Vercel will automatically try to generate a certificate for every domain once it is added to a project, regardless of if it was registered through Vercel or not. However, it will only work once the certificate validation request is successful, which happens once DNS records are added and propagated.\n\nVercel uses LetsEncrypt for certificates. For all non-wildcard domains, we use the [HTTP-01 challenge method](https://letsencrypt.org/docs/challenge-types/#http-01-challenge) and providing the request can make it to Vercel, then our infrastructure will deal with it. For wildcard requests, we use the [DNS-01 challenge method](https://letsencrypt.org/docs/challenge-types/#dns-01-challenge). This is why we require nameservers to be with Vercel to use wildcard domains - if the DNS isn't with us, we can't make the DNS record to approve it.\n\nIssuing a certificate happens in the following way:\n\n1.  Vercel asks LetsEncrypt for a certificate for that domain and asks how it can prove control of the domain\n2.  Let's Encrypt reviews the domain and issues Vercel with a [challenge](https://letsencrypt.org/docs/challenge-types/) in order to authorise the certificate to be generated. This is usually in the format of creating a file or DNS record with a particular code.\n3.  Vercel creates that file with the code on the HTTP-01 or DNS-01 validation path and tells LetsEncrypt it's done\n4.  LetsEncrypt then check to see if the file is there and if they can see the file, they send us the certificate\n5.  Vercel then adds the certificate to our infrastructure and it then starts working on HTTPS\n\nFor information about when SSL certificate renewals happen, see [When is the SSL Certificate on my Vercel Domain renewed?](https://vercel.com/guides/renewal-of-ssl-certificates-with-a-vercel-domain)\n\nThe /.well-known path is reserved and cannot be redirected or rewritten. Only Enterprise teams can configure custom SSL. [Contact sales](https://vercel.com/contact/sales) to learn more.\n\nTo learn more about common SSL issues, see the [troubleshooting](https://vercel.com/docs/projects/domains/troubleshooting#common-ssl-certificate-issues) doc.",
  "title": "Working with SSL Certificates",
  "description": "Learn how Vercel uses SSL certification to keep your site secure.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/working-with-dns",
  "markdown": "# Working with DNS\n\nDNS is the system used to connect domain names to IP addresses. When you make a request for a website, the browser performs a DNS query. It's usually the recursive resolver that carries out this work, going to the root DNS nameserver, TLD nameserver, and the authoritative server, if it isn't found in the cache.\n\n![DNS configuration with multiple DNS record types](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fdns-record-example.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![DNS configuration with multiple DNS record types](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fcustom-domains%2Fdns-record-example-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nDNS configuration with multiple DNS record types\n\nThere are a number of different types of DNS records that can be used together to create a DNS configuration. Some of the common information that you might see in a DNS record are:\n\n*   Host Name: The hostname of `www`\n*   IP Address or URL: The IP address (or domain or in the case of a CNAME record), for example, `76.76.21.21` or `vercel.com.`\n*   TTL (Time to live): The length of time the recursive server should keep a particular record in its cache. You should set this time based on how often people are visiting your site and how often your site may change. For more information, see the [DNS propagation](#dns-propagation) section.\n*   Record Type: For example, `CNAME`. There are many different types of records, some of the most common are listed below.\n\nTo learn more about adding, verifying, and removing DNS records, see \"[Managing DNS records](https://vercel.com/docs/projects/domains/managing-dns-records)\".\n\n| Type | Description |\n| --- | --- |\n| A   | This is used to translate domain names into IPv4 addresses. It is the most common type of DNS record. |\n| AAAA | Similar to `A`, but this is used to translate domain names into IPv6 addresses. IPv6 is not supported on Vercel. See [IPv6 support](https://vercel.com/docs/projects/domains/troubleshooting#ipv6-support) for more information. |\n| ALIAS | This is used to map a domain name to another domain name. It is similar to a `CNAME` record, but can only be used at the zone apex. The target domain must return `A` or `AAAA` record. |\n| CAA | This is used to specify which certificate authorities are allowed to issue certificates for a domain. Vercel automatically adds a CAA record for Let's Encrypt at the zone apex. |\n| CNAME | This is used to specify that the domain name is an alias for another domain name. It cannot be used at the zone apex. See [Working with Apex domain](https://vercel.com/docs/projects/domains/troubleshooting#working-with-apex-domain) for more information. |\n| HTTPS | This is used to achieve a CNAME-like functionality, but can be used at the zone apex. This is designed specifically for HTTP protocol to improve client performance in establishing secure connections. The record includes additional information about the target server, such as supported ALPN protocols (e.g., HTTP/2, HTTP/3, etc). This is a fairly new record type, and not all clients can support. See [RFC 9460](https://datatracker.ietf.org/doc/rfc9460/) for more details. |\n| MX  | This is used to specify the mail server for the domain. |\n| NS  | This is used to specify the authoritative name server for the domain. |\n| TXT | This is used to provide information about the domain in text format. Commonly used for verification purposes. |\n| SRV | This is used to specify the location of the service. The record contains priority, weight, port, target, and other information. |\n\nWhen you're configuring or making changes to your DNS settings, you should be aware that it doesn't happen instantaneously. There's a whole network of servers, each of which has their own cache, and each of these will need to be updated to any new values that you set. For this reason, it can be normal to take up to 24-48 hours to see changes fully propagate through the network.\n\nAs we described earlier, when you set a record, you normally set a TTL value, or Time to Live, on a DNS record. This value, set in seconds, is the length of time a DNS cache will store information about your site, before it requests a new copy of the record from the authoritative server.\n\nWhen you set the TTL value in your DNS record, you need to find the balance between serving your users the site quickly, and ensuring they're not seeing outdated information. A short TTL (minimum 30s) is beneficial if you are constantly updating the content, but will cause slower load times for your site. Using a longer TTL (max 86400 seconds, or 24 hours) means that records are cached for longer, so the site can load quickly for your users. Vercel defaults to 60s for a DNS record.\n\nWhen you are transferring an existing (in-use) domain to Vercel, it's a good practice to check the existing DNS record and its TTL before switching. Ideally, about 24 hours in advance of changes, you should shorten the DNS TTL to 60s. Once it's propagated, you can then change the DNS record to Vercel so that traffic quickly moves over to the new site because now the DNS TTL is much shorter.\n\nYou can use tools such as [https://www.whatsmydns.net](https://www.whatsmydns.net/) to determine if your DNS settings have been fully propagated.\n\nTo learn more about common DNS issues, see the [troubleshooting](https://vercel.com/docs/projects/domains/troubleshooting#common-dns-issues) doc.",
  "title": "Working with DNS",
  "description": "Learn how DNS works in order to properly configure your domain.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/configuring-functions/duration",
  "markdown": "# Configuring Maximum Duration for Vercel Functions\n\nThe maximum duration configuration determines the longest time that a function in can run. This guide will walk you through configuring the maximum duration for your Vercel Functions.\n\nYou can't configure a maximum duration for functions using the Edge runtime. They can run indefinitely provided they send an initial response within 25 seconds.\n\nFor other runtimes, the method of configuring the maximum duration depends on your framework and runtime:\n\nFor these runtimes / frameworks, you can configure the number of seconds directly in your function:\n\n```\nexport const maxDuration = 5; // This function can run for a maximum of 5 seconds\nexport const dynamic = 'force-dynamic';\n \nexport function GET(request: Request) {\n  return new Response('Vercel', {\n    status: 200,\n  });\n}\n```\n\nFor these runtimes and frameworks, configure the `maxDuration` property of the [`functions` object](https://vercel.com/docs/projects/project-configuration#functions) in your `vercel.json` file:\n\n```\n{\n  \"functions\": {\n    \"api/test.js\": {\n      \"maxDuration\": 30 // This function can run for a maximum of 30 seconds\n    },\n    \"api/*.js\": {\n      \"maxDuration\": 15 // This function can run for a maximum of 15 seconds\n    },\n    \"src/api/*.js\": {\n      \"maxDuration\": 25 // You must prefix functions in the src directory with /src/\n    }\n  }\n}\n```\n\nIf your Next.js project is configured to use [src directory](https://nextjs.org/docs/app/building-your-application/configuring/src-directory), you will need to prefix your function routes with `/src/` for them to be detected.\n\nThe order in which you specify file patterns is important. For more information, see [Glob pattern](https://vercel.com/docs/projects/project-configuration#glob-pattern-order) .\n\nWhile Vercel specifies [defaults](https://vercel.com/docs/functions/runtimes#max-duration) for the maximum duration of a function, you can also override it in your `vercel.json` file with:\n\n```\n{\n  \"functions\": {\n    \"app/api/**/*\": {\n      \"maxDuration\": 5 // All functions can run for a maximum of 5 seconds\n    }\n  }\n}\n```\n\nThis glob pattern will match _everything_ in the specified path, so you may wish to be more specific by adding a file type, such as `app/api/**/*.ts` instead.\n\nThere are limits to the maximum duration you can set for a function. To learn more about these limits, see the [Max duration limits](https://vercel.com/docs/functions/runtimes#max-duration) documentation.",
  "title": "Configuring Maximum Duration for Vercel Functions",
  "description": "Learn how to set the maximum duration of a Vercel Function.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/domains/working-with-nameservers",
  "markdown": "# Working with nameservers\n\nBefore moving your domain to use Vercel's nameservers, you should ensure that you own the domain listed on the [Domains](https://vercel.com/domains) page of your account.\"\n\nNameservers are the actual servers on the network that are responsible for resolving domain names to the IP addresses where your site is hosted. Most domain registrars, including Vercel, [provide their own nameservers](https://vercel.com/docs/projects/domains/managing-nameservers). For Vercel these are:\n\n*   `ns1.vercel-dns.com`\n*   `ns2.vercel-dns.com`\n\nWhen you purchase your domain through Vercel, we can set all the DNS records, including nameserver records, that tell anyone looking for your site where it can be found.\n\n*   Automatic DNS Records: Domains with nameservers pointed to Vercel don't need explicit DNS records created for the apex domain or first-level subdomains since they will be created automatically. This means that you can add a domain or subdomain to a project without thinking about DNS records at all. Not only does this reduce the potential for mistakes, but if you have multiple subdomains that you would like to use for your project, it takes away the need for manual entry of CNAME records for each of them.\n*   Wildcard Domains: When using Vercel's nameservers you can add [wildcard domains](https://vercel.com/docs/projects/domains/working-with-domains#subdomains,-wildcard-domains,-and-apex-domains) without any further configuration.\n*   Custom nameservers: For domains registered with Vercel, you can add custom nameservers to your Vercel-hosted domain directly from the dashboard, allowing for delegation to other DNS providers. Add up to four nameservers at once, and revert to your previous settings if necessary.\n\nFor domains that are not registered with Vercel, you can change the nameservers directly from the domain registrar's dashboard. For more information, see [Add Vercel's nameservers](https://vercel.com/docs/projects/domains/managing-nameservers#add-vercel's-nameservers).\n\nBefore using Vercel's nameservers, you should ensure that you own the domain.\n\nTo learn more about common nameserver issues, see the [troubleshooting](https://vercel.com/docs/projects/domains/troubleshooting#common-nameserver-issues) doc.",
  "title": "Working with nameservers",
  "description": "Learn about nameservers and the benefits Vercel nameservers provide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/incremental-static-regeneration/quickstart",
  "markdown": "# Incremental Static Regeneration Quickstart\n\nYou can use Incremental Static Regeneration (ISR) to regenerate your pages without rebuilding and redeploying your site. When a page with ISR enabled is regenerated, the most recent data for that page is fetched, and its cache is updated. There are two ways to trigger regeneration:\n\n*   Background revalidation – Regeneration that recurs on an interval\n*   On-demand revalidation – Regeneration that occurs when you send certain API requests to your app\n\nThis quickstart will teach you to do both techniques. To get started, select a framework:\n\nBackground revalidation allows you to purge the cache for an ISR route automatically on an interval.\n\nWhen using Next.js with the `app` router, you can enable ISR by adding an options object with a `revalidate` property to your `fetch` requests:\n\n```\nawait fetch('https://api.vercel.app/blog', {\n  next: { revalidate: 10 }, // Seconds\n});\n```\n\nThe following example renders a list of blog posts from a demo site called `jsonplaceholder`, revalidating every 10 seconds or whenever a person visits the page:\n\n```\ninterface Post {\n  title: string;\n  id: number;\n}\n \nexport default async function Page() {\n  const res = await fetch('https://api.vercel.app/blog', {\n    next: { revalidate: 10 },\n  });\n  const posts = (await res.json()) as Post[];\n  return (\n    <ul>\n      {posts.map((post: Post) => {\n        return <li key={post.id}>{post.title}</li>;\n      })}\n    </ul>\n  );\n}\n```\n\nTo test this code, run the appropriate `dev` command for your framework, and navigate to the `/blog-posts/` route.\n\nYou should see a bulleted list of blog posts.\n\nOn-demand revalidation allows you to purge the cache for an ISR route whenever you want, foregoing the time interval required with background revalidation.\n\nTo revalidate a page on demand with Next.js:\n\n1.  Create an Environment Variable which will store a revalidation secret\n2.  Create an API Route that checks for the secret, then triggers revalidation\n\nThe following example demonstrates an API route that triggers revalidation if the query paramater `?secret` matches a secret Environment Variable:\n\n```\nimport { revalidatePath } from 'next/cache';\n \nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  if (searchParams?.secret !== process.env.MY_SECRET_TOKEN) {\n    return new Response(`Invalid credentials`, {\n      status: 500,\n    });\n  }\n  revalidatePath('/blog-posts');\n  return new Response(\n    {\n      revalidated: true,\n      now: Date.now(),\n    },\n    {\n      status: 200,\n    },\n  );\n}\n```\n\nSee the [background revalidation section above](#background-revalidation) for a full ISR example.\n\n## Explore ISR with a project template",
  "title": "Incremental Static Regeneration Quickstart",
  "description": "Start using Incremental Static Regeneration (ISR) with Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/limits/fair-use-guidelines",
  "markdown": "# Fair use Guidelines\n\nAll subscription plans include usage that is subject to these fair use guidelines. Below is a rule-of-thumb for determining which projects fall within our definition of \"fair use\" and which do not.\n\n*   Static sites\n*   Hybrid apps\n*   Frontend apps\n*   Single page applications\n*   Functions that query DBs or APIs\n*   Blogs, ecommerce, and marketing sites\n\n*   Proxies and VPNs\n*   Media hosting for hot-linking\n*   Scrapers\n*   Crypto Mining\n*   Load Testing without authorization\n\nAs a guideline for our community, we expect most users to fall within the below ranges for each plan. We will notify you if your usage is an outlier. Our goal is to be as permissive as possible while not allowing an unreasonable burden on our infrastructure. Where possible, we'll reach out to you ahead of any action we take to address unreasonable usage and work with you to correct it.\n\n|     | Hobby | Pro |\n| --- | --- | --- |\n| Fast Data Transfer | Up to 100 GB | Up to 1 TB |\n| Fast Origin Transfer | Up to 10 GB | Up to 100 GB |\n| Function Execution | Up to 100 GB-Hrs | Up to 1000 GB-Hrs |\n| Edge Middleware Invocations | Up to 1,000,000 Invocations | Up to 1,000,000 Invocations |\n| Build Execution | Up to 100 Hrs | Up to 400 Hrs |\n| [Image Optimization Source Images](https://vercel.com/docs/image-optimization/limits-and-pricing#source-images) | Up to 1000 Images | Up to 5000 Images |\n| Storage | [KV](https://vercel.com/docs/storage/vercel-kv/limits#general-limitations), [Postgres](https://vercel.com/docs/storage/vercel-postgres/limits#general-limitations), [Edge Config](https://vercel.com/docs/storage/edge-config/edge-config-limits) | [KV](https://vercel.com/docs/storage/vercel-kv/limits#general-limitations), [Postgres](https://vercel.com/docs/storage/vercel-postgres/limits#general-limitations), [Edge Config](https://vercel.com/docs/storage/edge-config/edge-config-limits) |\n\nFor Teams on the Pro plan, you can pay for [additional usage](https://vercel.com/docs/limits/fair-use-guidelines#additional-resources) as you go.\n\n**Note:** If your project will exceed these limits on Pro and you need advanced security and privacy features, contact us to discuss Enterprise.\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nEdge Middleware CPU Limits - Edge Middleware can use no more than 50ms of CPU time on average. This limitation refers to the actual net CPU time, not the execution time. For example, when you are blocked from talking to the network, the time spent waiting for a response does not count toward CPU time limitations.\n\nFor members of our Pro plan, we offer a pay-as-you-go model for additional usage, giving you greater flexibility and control over your usage. The typical monthly usage guidelines above are still applicable, while extra usage will be automatically charged at the following rates:\n\nHobby accounts are restricted to non-commercial personal use only. All commercial usage of the platform requires either a Pro or Enterprise plan.\n\nCommercial usage is defined as any [Deployment](https://vercel.com/docs/deployments/overview) that is used for the purpose of financial gain of anyone involved in any part of the production of the project, including a paid employee or consultant writing the code. Examples of this include, but are not limited to, the following:\n\n*   Any method of requesting or processing payment from visitors of the site\n*   Advertising the sale of a product or service\n*   Receiving payment to create, update, or host the site\n*   Affiliate linking is the primary purpose of the site\n*   The inclusion of advertisements, including but not limited to online advertising platforms like Google AdSense\n\nAsking for Donations **does not** fall under commercial usage.\n\nIf you are unsure whether or not your site would be defined as commercial usage, please [contact the Vercel Support team](https://vercel.com/help#issues).\n\n[Take a look at our Limits documentation](https://vercel.com/docs/limits/overview#general-limits) for the limits we apply to all accounts.\n\nCircumventing or otherwise misusing Vercel's limits or usage guidelines is a violation of our fair use guidelines.\n\nFor further information regarding these guidelines and acceptable use of our services, refer to our [Terms of Service](https://vercel.com/legal/terms#fair-use) or your Enterprise Service Agreement.",
  "title": "Fair use Guidelines",
  "description": "Learn about all subscription plans included usage that is subject to Vercel's fair use guidelines.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cron-jobs/usage-and-pricing",
  "markdown": "# Usage & Pricing for Cron Jobs\n\nCron jobs invoke [Serverless](https://vercel.com/docs/functions/serverless-functions) or [Edge](https://vercel.com/docs/functions/edge-functions) Functions. This means the same [usage](https://vercel.com/docs/limits/overview) and [pricing](https://vercel.com/pricing) limits will apply.\n\n|     | Number of cron jobs per account | Schedule |\n| --- | --- | --- |\n| Hobby | 2 cron jobs | Triggered once a day |\n| Pro | 40 cron jobs | Unlimited cron invocations |\n| Enterprise | 100 cron jobs | Unlimited cron invocations |\n\nEach project has a hard limit of 20 cron jobs per project.\n\nOn the Hobby plan, Vercel cannot assure a timely cron job invocation. For example, a cron job configured as `0 1 * * *` (every day at 1 am) will trigger anywhere between 1:00 am and 1:59 am.\n\nFor more specific cron job executions, upgrade to our [Pro](https://vercel.com/docs/accounts/plans/pro) plan.\n\nCron jobs are included in all plans.\n\nYou use a function to invoke a cron job, and therefore [usage](https://vercel.com/docs/limits/overview) and [pricing](https://vercel.com/pricing) limits for these functions apply to all cron job executions:",
  "title": "Usage & Pricing for Cron Jobs",
  "description": "Learn about cron jobs usage and pricing details.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/monorepos/remote-caching",
  "markdown": "# Remote Caching\n\nRemote Caching saves you time by ensuring you never repeat the same task twice, by automatically sharing a cache across your entire Vercel team.\n\nWhen a team is working on the same PR, Remote Caching identifies the necessary artifacts (such as build and log outputs) and recycles them across machines in [external CI/CD](#use-remote-caching-from-external-ci/cd) and [during the Vercel Build process](#use-remote-caching-during-vercel-build).\n\nThis speeds up your workflow by avoiding the need to constantly re-compile, re-test, or re-execute your code if it is unchanged.\n\nThe first tool to leverage Vercel Remote Cache is [Turborepo](https://turbo.build/repo), a high-performance build system for JavaScript and TypeScript codebases. For more information on using Turborepo with Vercel, see the [Turborepo](https://vercel.com/docs/monorepos/turborepo) guide, or [this video walkthrough of Remote Caching with Turborepo](https://youtu.be/_sB2E1XnzOY).\n\nTurborepo caches the output of any previously run command such as testing and building, so it can replay the cached results instantly instead of rerunning them. Normally, this cache lives on the same machine executing the command.\n\nWith Remote Caching, you can share the Turborepo cache across your entire team and CI, resulting in even faster builds and days saved.\n\nRemote Caching is a powerful feature of Turborepo, but with great power comes great responsibility. Make sure you are caching correctly first and double-check the [handling of environment variables](https://vercel.com/docs/monorepos/turborepo#step-0:-cache-environment-variables) . You should also remember that Turborepo treats logs as artifacts, so be aware of what you are printing to the console.\n\nThe Vercel Remote Cache can also be used with any build tool by integrating with the [Remote Cache SDK](https://github.com/vercel/remote-cache). This provides plugins and examples for popular monorepo build tools like [Nx](https://github.com/vercel/remote-cache/tree/main/packages/remote-nx) and [Rush](https://github.com/vercel/remote-cache/tree/main/packages/remote-rush)\n\nFor this guide, your monorepo should be using [Turborepo](https://vercel.com/docs/monorepos/turborepo). Alternatively, use `npx create-turbo` to set up a starter monorepo with [Turborepo](https://turbo.build/repo/docs#examples).\n\nOnce your Vercel project is using Turborepo, authenticate the Turborepo CLI with your Vercel account:\n\nIf you are connecting to an SSO-enabled Vercel team, you should provide your Team slug as an argument to `npx turbo login`:\n\n```\nnpx turbo login --sso-team=team-slug\n```\n\nTo enable Remote Caching and connect to the Vercel Remote Cache, every member of that team that wants use Remote Caching should run the following in the root of the monorepo:\n\nYou will be prompted to enable Remote Caching for the current repo. Enter `Y` for yes to enable Remote Caching.\n\nNext, select the team scope you'd like to connect to. Selecting the scope tells Vercel who the cache should be shared with and allows for ease of [billing](#billing-information). Once completed, Turborepo will use Vercel Remote Caching to store your team's cache artifacts.\n\nIf you run these commands but the owner has [disabled Remote Caching](#enabling-and-disabling-remote-caching-for-your-team) for your team, Turborepo will present you with an error message: \"Please contact your account owner to enable Remote Caching on Vercel.\"\n\nTo disable Remote Caching and unlink the current directory from the Vercel Remote Cache, run:\n\nThis is run on a per-developer basis, so each developer that wants to unlink the remote cache must run this command locally.\n\nOnce your project has the remote cache linked, run `turbo run build` to see the caching in action. Turborepo caches the filesystem output both locally and remote (cloud). To see the cached artifacts open `node_modules/.cache/turbo`.\n\nNow try making a change in any file and running `turbo run build` again. The builds speed will have dramatically improved, because Turborepo will only rebuild the changed files.\n\nWhen you run `turbo` commands during a Vercel Build, Remote Caching will be automatically enabled. No additional configuration is required. Your `turbo` task artifacts will be shared with all of your Vercel projects (and your Team Members). For more information on how to deploy applications using Turborepo on Vercel, see the [Turborepo](https://vercel.com/docs/monorepos/turborepo) guide.\n\nTo use Vercel Remote Caching with Turborepo from an external CI/CD system, you can set the following environment variables in your CI/CD system:\n\n*   `TURBO_TOKEN`: A [Vercel Access Token](https://vercel.com/docs/rest-api#authentication)\n*   `TURBO_TEAM`: The slug of the Vercel team to share the artifacts with\n\nWhen these environment variables are set, Turborepo will use Vercel Remote Caching to store task artifacts.\n\nRemote Caching is automatically enabled on Vercel for organizations with Turborepo enabled on their monorepo.\n\nAs an Owner, you can enable or disable Remote Caching from your Account settings. Under Settings, go to the Billing tab and find the Remote Caching section. From here you can use the toggle to enable or disable the feature:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fgit%2Fenable-remote-caching.png&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEnable or disable Remote Caching from the Settings\n\nAll plans can use Vercel Remote Caching up to the limit of 10GB free downloads per month:\n\n| Plan | Download price after free usage is surpassed | Upload limit | Artifacts request limit |\n| --- | --- | --- | --- |\n| Hobby | not allowed | 100GB/month | 100/min |\n| Pro | $0.50 per incremental GB | 1TB/month | 10000/min |\n| Enterprise | $0.50 per incremental GB | 4TB/month | 10000/min |\n\nYou can see the usage of your team's Remote Cache on the [Usage tab](https://vercel.com/docs/pricing/artifacts):\n\nTo avoid unbounded cache growth, artifacts are automatically deleted 7 days after creation.\n\nRemote Caching with Vercel is free for Hobby users within the [usage limits](#usage).\n\nVercel will send you emails as you are nearing your usage limits. You will not pay for any usage, but it is not possible to surpass the usage limits as Remote Caching will be disabled.\n\nRemote Caching can only be enabled by [team owners](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role). When Remote Caching is enabled, anyone on your team with the [Owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role), [Member](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#member-role), or [Developer](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#developer-role) role can run the link on the Turborepo. If Remote Caching is disabled, linking will prompt the developer to request an owner to enable it first.",
  "title": "Remote Caching",
  "description": "Vercel Remote Cache allows you to share build outputs and artifacts across distributed teams.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/using-edge-config",
  "markdown": "# Using Edge Config\n\n[Edge Config](https://vercel.com/docs/storage/edge-config) is a global data store that offers ultra-low latency read speeds from anywhere in the world thanks to [Vercel's Edge Network](https://vercel.com/docs/edge-network/overview).\n\nWe recommend using [the Edge Config client SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk) to read data from your Edge Configs. To write data to your Edge Configs, use [Vercel REST API](https://vercel.com/docs/rest-api) as outlined in [our docs on managing Edge Configs with the API](https://vercel.com/docs/storage/edge-config/vercel-api).\n\nThis page outlines all the ways you can interact with your Edge Configs, and our recommended best approaches.\n\nThere are multiple ways to read data from your Edge Configs, but we recommend using [our Edge Config client SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk) in your projects.\n\nIf you prefer making direct API requests to your Edge Config, we recommend sending them to your [Edge Config endpoint](#understanding-edge-config-endpoints). You can request data through Vercel REST API, but we recommend against ever doing so. Requests to Vercel REST API do not benefit from the optimizations Vercel applies to Edge Config reads. Requests to an Edge Config endpoint do.\n\nEdge Config is optimized to work with Vercel's Edge Network. As a result, Edge Configs accessed from local development environments cannot benefit from Vercel's optimizations and will be over 100 milliseconds slower than production.\n\nEdge Config is available at two separate REST APIs which are built for distinct use cases:\n\n*   `api.vercel.com`: [Vercel REST API](https://vercel.com/docs/rest-api) built for managing Edge Config\n*   `edge-config.vercel.com`: [Edge Config endpoint](https://vercel.com/docs/storage/edge-config/using-edge-config#querying-edge-config-endpoints) intended for reading Edge Config at high volume\n\n*   This endpoint is part of the [Vercel REST API](https://vercel.com/docs/rest-api)\n*   It is intended to [manage Edge Configs](https://vercel.com/docs/storage/edge-config/vercel-api)\n*   You can use this endpoint to create, update, and delete Edge Configs\n*   This endpoint is served from a single region and we do not apply any of our read optimizations\n*   This endpoint is rate limited to 20 Edge Config Item reads per minute\n*   Reading Edge Config from this endpoint will always return the latest version of an Edge Config\n*   This endpoint uses the [Vercel REST API authentication](https://vercel.com/docs/rest-api#authentication)\n\n*   This is a highly optimized, globally distributed, actively replicated endpoint built for global, low latency, high volume reads\n*   This endpoint has no rate limits\n*   This is the endpoint [`@vercel/edge-config`](https://vercel.com/docs/storage/edge-config/edge-config-sdk) reads from\n*   This endpoint uses the Edge Config's own [Read Access tokens](#creating-a-read-access-token)\n\nYou can use the following routes when querying your Edge Config endpoint:\n\n*   `/<edgeConfigId>/items`\n*   `/<edgeConfigId>/item/<itemKey>`\n*   `/<edgeConfigId>/digest`\n\nYou can authenticate with a [Read Access token](#creating-a-read-access-token), which you can add to the `Authorization` header of your request, setting `Bearer <token>` as the value.\n\nYou can find your Edge Config ID with one of the following methods:\n\n*   In your dashboard, under the Edge Config tab. Select your Edge Config, and you'll see the ID under the Edge Config ID label near the top of the page, as shown in the screenshot below:\n\n![Your Edge Config ID in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793440%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fconfig-id-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Your Edge Config ID in the Vercel Dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793440%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fconfig-id-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nYour Edge Config ID in the Vercel Dashboard.\n\n*   Send a `GET` request to the `/edge-config` endpoint of Vercel REST API, as outlined in [our API reference](https://vercel.com/docs/rest-api/endpoints#get-edge-configs). The response will be a list of Edge Configs associated with your account (or team, if you add the `teamId` query parameter)\n\n```\nhttps://api.vercel.com/v1/edge-config?teamId=<teamId>\n```\n\nA read access token is automatically generated when you connect an Edge Config to a project.\n\nThere are multiple ways to create a Read Access token for your Edge Config manually:\n\n*   In the Edge Config tab of your project dashboard. See [our Edge Config dashboard docs](https://vercel.com/docs/storage/edge-config/edge-config-dashboard#manage-read-access-tokens) to learn how\n*   Through a `POST` request to Vercel REST API\n\nFirst, you'll need an access token for Vercel REST API, which you must add to an `Authorization` header with the `Bearer <token>` pattern to validate requests. To learn more, see [Creating an access token](https://vercel.com/docs/rest-api#creating-an-access-token).\n\nThen you can send a `POST` request to the [`/edge-config/<edgeConfigId>/token`](https://vercel.com/docs/rest-api/endpoints#create-an-edge-config-token) path, as shown below, inserting [your Edge Config's ID](#finding-your-edge-config-id) where appropriate:\n\n```\ncurl -X 'POST' 'https://api.vercel.com/v1/edge-config/my_edge_config_id/token' \\\n     -H 'Authorization: Bearer your_vercel_api_token_here' \\\n     -H 'Content-Type: application/json; charset=utf-8' \\\n     -d $'{ \"label\": \"my edge config token label\" }'\n \n```\n\nAppend the `teamId` query parameter to if the config is scoped to a Vercel team.\n\nThe response from the API will be a JSON object with a `\"token\"` key that contains the value for the Edge Config read access token:\n\n```\n{ \"token\": \"your_edge_config_read_access_token_here\" }\n```\n\nA connection string is a URL that connects a project to an Edge Config.\n\nTo find and copy the connection string:\n\n1.  Navigate to the Tokens tab of your project's Storage dashboard\n2.  Select the three dots icon displayed in the list of tokens\n3.  Select Copy Connection String from the dropdown menu\n\n![Copy your Edge Config connection string from the dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701337823%2Ffront%2Fdocs%2Fedge-config%2Fcopy-edge-config-connection-string-light.png&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Copy your Edge Config connection string from the dashboard.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1701337823%2Ffront%2Fdocs%2Fedge-config%2Fcopy-edge-config-connection-string-dark.png&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nCopy your Edge Config connection string from the dashboard.\n\nA connection string is not created when you create an Edge Config at the account level, until you connect a project.\n\nVercel will optimize your reads to be faster if you set the connection string as an environment variable. Hard-coding your connection string into your application as a string will not allow Vercel to detect the URL and optimize your reads.\n\nThe variable can be called anything, but [our Edge Config client SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk) will search for `process.env.EDGE_CONFIG` by default. See our [environment variables](https://vercel.com/docs/projects/environment-variables#declare-an-environment-variable) docs to learn how to create one.\n\nEdge Config is optimized for many reads and few writes. To write data to your Edge Configs, see [our docs on doing so with Vercel REST API](https://vercel.com/docs/storage/edge-config/vercel-api).\n\nEdge Config backups are a backup and restore functionality that allows you to access and roll back to a previous point in time.\n\nRestoring a backup will immediately update the live data, and the data that was live before the restore will become available as a new backup.\n\nBackups are taken when you make any changes either through the dashboard or API. They do not contribute to your storage size. The length of time each backup is held for depends on your plan, see [Limits and Pricing](https://vercel.com/docs/storage/edge-config/edge-config-limits) for more information.",
  "title": "Using Edge Config",
  "description": "Learn how to use Edge Configs in your projects.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/observability/monitoring/limits-and-pricing",
  "markdown": "# Limits and Pricing for Monitoring\n\nThe following table outlines the price for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nAfter your first 250,000 data points on the [Pro](https://vercel.com/docs/accounts/plans/pro) plan, you will be charged an additional $9 per 1 million data points.\n\nIf you are using Monitoring on a 14-day trial [Pro plan](https://vercel.com/docs/accounts/plans/pro), you will not be charged for any of the above items during the trial. When the trial ends, if Monitoring is still [enabled](https://vercel.com/docs/observability/monitoring#disable-monitoring), you will be charged a base fee the day after the trial.\n\n**Note:** If you need customized limits for Monitoring, contact us to discuss upgrading to Enterprise.\n\n[Contact Sales](https://vercel.com/contact/sales)\n\nThe table below shows the metrics for the [Observability](https://vercel.com/docs/pricing/observability) section of the Usage dashboard where you can view your Monitoring usage through data points.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize Observability usage](https://vercel.com/docs/pricing/observability) section for more information on how to optimize your usage.\n\nMonitoring data is retained and queryable for the following time limits:\n\n| Plan | Duration |\n| --- | --- |\n| Pro | 30 days |\n| Enterprise | 90 days |\n\nMonitoring data can be displayed at different resolutions depending on your plan:\n\n| Plan | Granularities |\n| --- | --- |\n| Pro | 1 day, 1 hour |\n| Enterprise | 1 day, 1 hour, 5 minute |\n\nVercel creates a data point each time a request is made to your website. These data points include unique parameters such as execution time. For a complete list, [see the visualize clause docs](https://vercel.com/docs/observability/monitoring/monitoring-reference#visualize).\n\nTo get a rough estimate of how much you would be charged for Monitoring on Pro, we recommend you:\n\n\\- Navigate to the [Usage](https://vercel.com/dashboard/usage) tab of your Vercel dashboard\n\n\\- Set the date filter to **Current Billing Cycle** or **Last 30 days** if that option is not available\n\n\\- Scroll to the **Requests** chart and take the sum of both cached and uncached requests\n\n\\- Use the calculator below to **estimate** how much you will be charged for Monitoring. You are charged in per million increments:\n\nCalculate Monitoring Requests\n\n(\n\n\\- 250,000 ) / 1,000,000 \\* $9 = $0.00\n\nThis calculator provides an estimate and should not be used to determine your final bill.\n\nYou will be charged a base fee when enabling Monitoring on the [Pro](https://vercel.com/docs/accounts/plans/pro) or [Enterprise](https://vercel.com/docs/accounts/plans/enterprise) plans. However, you will only be charged for the remaining time in your billing cycle. For example,\n\n*   If ten days remain in your current billing cycle, you will only pay around $3. For every new billing cycle after that, you'll be charged a total of $10 at the beginning of the cycle\n*   Suppose you disable Monitoring before the billing cycle ends. In that case, Monitoring will automatically turn off, we will stop collecting data points, and you will lose access to existing data. Also, you cannot export the Monitoring data for later use\n*   Once the billing cycle is over, you will be charged for the data points collected prior to disabling. You won't be refunded any amounts already paid\n*   Re-enabling Monitoring before the end of the billing cycle won't cost you another base fee. Instead, the usual base fee of $10 will apply at the beginning of every upcoming billing cycle",
  "title": "Limits and Pricing for Monitoring",
  "description": "Learn about our limits and pricing when using Monitoring. Different limitations are applied depending on your plan.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/serverless-functions",
  "markdown": "# Manage and optimize usage for Serverless Functions\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe Serverless Functions section shows the following charts:\n\nYou are charged based on the number of times your [functions](https://vercel.com/docs/functions) get invoked. This includes both successful and errored invocations, but does not include cache hits. The number of invocations is calculated based on the number of times your function gets called, regardless of the response status code.\n\nWhen using [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration) with Next.js, both the `revalidate` option for `getStaticProps` and `fallback` for `getStaticPaths` will result in a Function invocation on revalidation, not for every user request.\n\nWhen viewing your Functions Invocations graph, you can group by Ratio to see a total of all invocations across your team's projects that finished successfully, errored, or timed out.\n\nServerless Function execution will increase [edge network](https://vercel.com/docs/pricing/networking) usage as well. Caching your Serverless Function reduces the GB-hours of your Serverless Function, but does not reduce the network usage that comes with executing your Serverless Function.\n\n*   Use the Projects option to see the total number of invocations for each project within your team. This can help you identify which projects are using the most invocations and where you can optimize\n*   Cache your responses using [edge caching](https://vercel.com/docs/edge-network/caching#using-vercel-functions) and [Cache-Control headers](https://vercel.com/docs/edge-network/headers#cache-control-header). This can help reduce the number of invocations that your Functions receive and makes responses faster for users\n*   See [How can I reduce my Serverless Execution usage on Vercel?](https://vercel.com/guides/how-can-i-reduce-my-serverless-execution-usage-on-vercel) for more general information on how to reduce your Serverless Functions usage.\n\nYou are charged based on the amount of time your Serverless Functions have spent computing responses to the requests they’ve received. This is calculated in [GB-Hours](https://vercel.com/guides/what-are-gb-hrs-for-serverless-function-execution), which is the memory allocated for each Function in GB x the time in hours they were running.\n\nFor example, if a function [has](https://vercel.com/docs/functions/configuring-functions/memory) 1.7 GB (1769 MB) of memory and is executed 1 million times at a 1-second duration:\n\n*   Total Seconds: 1M \\* (1s) = 1,000,000 Seconds\n*   Total GB-Seconds: 1769/1024 GB \\* 1,000,000 Seconds = 1,727,539.06 GB-Seconds\n*   Total GB-Hrs: 1,727,539.06 GB-Seconds / 3600 = 479.87 GB-Hrs\n*   The total Serverless Function Execution is 479.87 GB-Hrs.\n\nTo see your current usage, navigate to the Usage tab on your team's [Dashboard](https://vercel.com/dashboard) and go to Serverless Functions > Duration. You can use the Ratio option to see the total amount of execution time across all projects within your team, including the completions, errors, and timeouts.\n\n*   Use the Projects option to see the total amount of execution time for each project within your team. This can help you identify which projects are using the most execution time and where you can optimize\n*   By default, Functions get 1 vCPU of memory, but [can be configured](https://vercel.com/docs/functions/configuring-functions/memory) to use more. This may affect the duration of time your functions run\n*   You can also adjust the [maximum duration](https://vercel.com/docs/functions/configuring-functions/duration) for your functions to prevent them from running for too long\n*   To reduce the GB-hours (Execution) of your functions, ensure you are using [edge caching](https://vercel.com/docs/edge-network/caching#using-vercel-functions) and Cache-Control headers. If you are using [Incremental Static Regeneration](https://vercel.com/docs/incremental-static-regeneration), note that Vercel counts Function invocations that happen on page revalidation towards both for GB-hours and [Fast Origin Transfer](https://vercel.com/docs/pricing/networking#fast-origin-transfer)\n*   For troubleshooting issues that may be causing your functions to run longer than expected or timeout, see [What can I do about Vercel Serverless Functions timing out?](https://vercel.com/guides/what-can-i-do-about-vercel-serverless-functions-timing-out)\n\nThis counts the number of times that a request to your Functions could not be served because the [concurrency limit](https://vercel.com/docs/functions/runtimes#automatic-concurrency-scaling) was hit.\n\nWhile this is not a chargeable metric, it will cause a `429: FUNCTION_RATE_LIMIT` error. To learn more, see [What should I do if I receive a 429 error on Vercel?](https://vercel.com/guides/what-should-i-do-if-i-receive-a-429-error-on-vercel).",
  "title": "Manage and optimize usage for Serverless Functions",
  "description": "Learn how to understand the different charts in the Vercel dashboard, how usage relates to billing, and how to optimize your usage of resources.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/limits-and-pricing",
  "markdown": "# Pricing for Web Analytics\n\nThe following table outlines the price for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nOnce you've enabled Vercel Web Analytics, different limitations are applied depending on your plan:\n\n|     | Hobby | Pro | [Pro with Web Analytics Plus](https://vercel.com/docs/analytics/limits-and-pricing#pro-with-web-analytics-plus) | Enterprise |\n| --- | --- | --- | --- | --- |\n| Included Projects | Unlimited | Unlimited | Unlimited | Custom |\n| Included [Events](#what-is-an-event-in-vercel-web-analytics)¹ | 2,500 | 25,000 | 500,000 | Custom |\n| Max [Events](#what-is-an-event-in-vercel-web-analytics)¹ | 2,500 | 500,000 | 20 Million | Custom |\n| Fee for additional Events | None | 100k | 500k | Custom |\n| Reporting Window | 1 Month | 12 Months | 24 Months | Custom |\n| Custom Events | Not included | Included | Included | Custom |\n| UTM Parameters | Not included | Not Included | Included | Custom |\n| Properties on Custom Events | None | 2   | 8   | Custom |\n\n¹ An event is either a page view or a [custom event](https://vercel.com/docs/analytics/custom-events). [Learn more](https://vercel.com/docs/analytics/limits-and-pricing#what-is-an-event-in-vercel-web-analytics) .\n\nThe table below shows the metrics for the [Observability](https://vercel.com/docs/pricing/observability) section of the Usage dashboard where you can view your Web Analytics usage.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize Observability usage](https://vercel.com/docs/pricing/observability) section for more information on how to optimize your usage.\n\nWeb Analytics are free for Hobby users within the usage limits detailed above.\n\nVercel will [send you notifications](https://vercel.com/docs/dashboard-features/notifications#on-demand-usage-notifications) as you are nearing your usage limits. You will not pay for any additional usage. However, once you exceed the limits, a three day grace period will start before Vercel will stop capturing events. In this scenario, you have two options to move forward:\n\n*   Wait 7 days before Vercel will start collecting events again\n*   Upgrade to Pro to capture more events, use custom events, and have a longer reporting window. You can start a trial of Pro by using the button below. Note that while you will not be charged during the time of the trial, once the trial ends, you will be charged for the events collected during the trial:\n\n### Get started with Vercel Pro for free\n\nExperience the power of Pro features during your trial. Unlock unlimited Serverless Function requests, 1000 GB-hours of execution, boosted application bandwidth, and enjoy free access to Speed Insights throughout your trial period.\n\nIf you're expecting large number of page views, make sure to deploy your project to a Vercel [Team](https://vercel.com/docs/accounts/create-a-team) on the [Pro](https://vercel.com/docs/accounts/plans/pro) plan.\n\nFor Teams on a Pro trial, the [trial will end](https://vercel.com/docs/accounts/plans/pro/trials#post-trial-decision) either after 14 days or once you hit the Pro plan's limits.\n\nNote that while you will not be charged during the time of the trial, once the trial ends, you will be charged for the events collected during the trial\n\nVercel will [send you notifications](https://vercel.com/docs/dashboard-features/notifications#on-demand-usage-notifications) as you are nearing your usage limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard). Once your team exceeds 25,000 events, you will be charged 14 USD per additional 100,000 up to a maximum of 500,000. These numbers are based on a per-billing cycle basis.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nTeams on the Pro plan can optionally extend usage and capabilities through the Web Analytics Plus [add-on](https://vercel.com/docs/accounts/plans/pro#pro-plan-add-ons) for an additional 50 USD / month per team.\n\nWhen enabled, all projects within the team have access to the extended limits and features.\n\nTo upgrade to Web Analytics Plus:\n\n1.  Visit the Vercel [dashboard](https://vercel.com/dashboard) and select the Settings tab\n2.  From the left-nav, go to Billing and scroll to the Add-ons section\n3.  Under Web Analytics Plus, toggle to Enable the switch\n\nEnterprise agreements provide custom limits and pricing for Web Analytics.\n\nAn event in Vercel Web Analytics is either an automatically tracked page view or a [custom event](https://vercel.com/docs/analytics/custom-events). A page view is a default event that is automatically tracked by our script when a user visits a page on your website. A custom event is any other action that you want to track on your website, such as a button click or form submission.\n\nWhen you reach the maximum number of events allowed for your plan, you won’t be billed beyond that point. Instead, you will be prompted to upgrade to a plan that fits your usage. For example, if you reach the maximum number of events allowed on the Pro plan, you will be prompted to upgrade to the Web Analytics Plus plan, which allows for more events and a longer reporting window.\n\nYes, events are shared across all projects under the same Vercel account in Web Analytics. This means that the events collected by each project count towards the total event limit for your account. Keep in mind that if you have high-traffic websites or multiple projects with heavy event usage, you may need to upgrade to a higher-tier plan to accommodate your needs.\n\nThe reporting window in Vercel Web Analytics is the length of time that your analytics data is guaranteed to be stored and viewable for analysis. While only the reporting windows is guaranteed to be stored, Vercel may store your data for longer periods to give you the option to upgrade to a bigger plan without losing any data.",
  "title": "Pricing for Web Analytics",
  "description": "Learn about pricing for Vercel Web Analytics.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/usage-and-pricing",
  "markdown": "# Vercel KV Pricing\n\n[Vercel KV](https://vercel.com/storage/kv) has a usage-based pricing model. This means that you only pay for what you use. On the Hobby plan, Vercel KV is free within the usage limits. On the Pro plan, you pay for usage on-demand as you use it.\n\nThe following table outlines the price for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nWe will start to collect usage data from the day you create your database.\n\nFor those on the Hobby plan or on a Pro trial, there is a limit of 3,000 requests per day. When this limit is reached, requests to the database will be rate limited.\n\nThe table below shows the metrics for the [Vercel KV](https://vercel.com/docs/pricing/kv) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nTo disable or stop incurring charges, you can do any of the following:\n\n*   Requests: Stop querying the database, or delete it\n*   Storage: Delete the database\n*   Bandwidth: Stop querying the database, or delete it\n\nSee the [manage and optimize Vercel KV usage](https://vercel.com/docs/pricing/kv) section for more information on how to optimize your usage.\n\nDatabase cost is calculated as the maximum number of databases per month for your account, including read replicas. Note that on the Pro plan, you can have a maximum of five databases per month and that each database can have a maximum of five read replicas.\n\nBy default, a database exists in a single region, but a database _may_ be replicated into another region for lower latency queries.\n\nRequests are the number of Redis commands issued against all KV databases for your account.\n\nVercel KV offers Global Databases. If your database is replicated to another region, the number of requests will increase. This is because each write command will be issued once to your primary database and once to each read replicas you have configured.\n\nStorage is calculated as the maximum amount of storage used per month for all KV databases for your account.\n\nData transfer is calculated as the amount of data transferred between the functions querying the databases and the KV databases for your account.\n\nVercel KV is free for Hobby users within the [usage limits](#pricing).\n\nVercel will send you emails as you are nearing your usage limits. You will not pay for any additional usage. However, you will not be able to access Vercel KV if limits are exceeded. In this scenario, you will have to wait until 30 days have passed before using your database again.\n\nFor Teams on a Pro trial, the [trial will end](https://vercel.com/docs/accounts/plans/pro/trials#post-trial-decision) if your Team has made over 30,000 requests in total or used over 256 MB of storage or bandwidth. During the trial, you can create a maximum of one database. There is also a limit of 3,000 requests per day and requests to the database will be rate limited when this limit is reached.\n\nVercel will send you emails as you are nearing your [usage](#usage) limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard). When you team exceeds the base limits for Vercel KV, you will pay for usage on-demand as you use it.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nVercel KV is not currently available for Enterprise Teams.",
  "title": "Vercel KV Pricing",
  "description": "Learn about the pricing for Vercel KV.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/edge-functions",
  "markdown": "# Manage and optimize usage for Edge Functions\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe Edge Functions section shows the following charts:\n\nYou are charged based on the number of times your [functions](https://vercel.com/docs/functions) get invoked. This includes both successful and errored invocations, but does not include cache hits. The number of invocations is calculated based on the number of times your function gets called, regardless of the response status code.\n\nWhen viewing your Invocations graph, you can group by Count to see the total of all invocations across your team's projects.\n\n*   Use the Projects option to see the total number of invocations for each project within your team. This can help you identify which projects are using the most invocations happen and where you can optimize\n*   Cache your responses using [edge caching](https://vercel.com/docs/edge-network/caching#using-vercel-functions) and [Cache-Control headers](https://vercel.com/docs/edge-network/headers#cache-control-header). This can help reduce the number of invocations that your Functions receive and makes responses faster for users\n\nYou are charged based on number of execution units that your Edge Functions have used. Vercel will work out the number of execution units (total CPU time of the invocation / 50ms) used for each invocation. You will then be charged based on anything over the limit.\n\nEach invocation of an Edge Function has a Total CPU time, which is the time spent _actually running your code_. It doesn't include execution time such as spent waiting for data fetches to return.\n\nFor example:\n\n*   If your function gets invoked _250,000_ times and uses _350_ ms of CPU time at each invocation, then the function will incur (350 ms / 50 ms) = 7 execution units each time the function gets invoked.\n*   Your usage is: 250,000 \\* 7 = 1,750,000 execution units\n*   As a Pro user you have 1,000,000 execution units included in your plan, so you will be charged for the additional 750,000 execution units. That's $2.00 for each additional 1,000,000 execution units\n\n*   Execution units are comprised of a calculation of invocation count and CPU time. You can optimize your Edge Functions by [reducing the number of invocations](https://vercel.com/docs/pricing/edge-functions#optimizing-function-invocations) through caching and the CPU time used per invocation\n\nThere is no time limit on the amount of CPU time your Edge Function can use during a single invocation. However, you are charged for each [execution unit](https://vercel.com/docs/limits/usage#execution-units), which is based on the compute time. The compute time refers to the actual net CPU time used, not the execution time. Operations such as network access do not count towards the CPU time.\n\nYou can view CPU time by Average to show the average time for computation across all projects using Edge Functions within your team. This data point provides an idea of how long your Edge Functions are taking to compute responses to requests and can be used in combination with the invocation count to calculate execution units.\n\n*   View the CPU time by Project to understand which Projects are using the most CPU time\n*   CPU time is calculated based on the actual time your function is running, not the time it takes to respond to a request. Therefore you should optimize your code to ensure it's as performant as possible and avoid heavy CPU-bound operations",
  "title": "Manage and optimize usage for Edge Functions",
  "description": "Learn how to understand the different charts in the Vercel dashboard, how usage relates to billing, and how to optimize your Edge Functions usage.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/usage-and-pricing",
  "markdown": "# Vercel Postgres Pricing\n\nVercel Postgres prices are based on the amount of usage you have. This includes the number of databases, compute time, storage, written data, and data transfer.\n\nThe following table outlines the price for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe table below shows the metrics for the [Vercel Postgres](https://vercel.com/docs/pricing/postgres) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nVercel Postgres is a serverless SQL database. It scales down automatically and up when queried.\n\nIf you do _not_ perform queries, the database will go to sleep and you will not accrue compute time, written data, or data transfer costs. However, you will still be charged for data storage.\n\nIn addition, if your database is infrequently getting requests, it will take a longer time to boot (cold start). This additional compute time may increase the amount you will be charged.\n\nTo stop incurring usage or costs, you can do the following:\n\n*   On-demand compute: stop querying the database or delete it\n*   Data storage: delete the database (storage persists even if you stop querying it).\n*   Written data: stop writing to the database or delete it.\n*   Data transfer: stop querying the database or delete it.\n\nSee the [manage and optimize Vercel Postgres usage](https://vercel.com/docs/pricing/postgres) section for more information on how to optimize your usage.\n\nDatabase cost is calculated as the maximum number of databases per month for your account.\n\nHow Compute Time is Measured:\n\nCompute time is calculated based on the active time of your database, multiplied by the number of CPUs available. The active time includes periods when the database is receiving requests and for a duration (default 5 minutes) after the last request is received. Following this period of inactivity, databases are automatically suspended, ceasing additional compute time accumulation.\n\n*   Hobby: Databases are allocated 0.25 logical CPUs, with these settings fixed and not subject to modification.\n*   Pro: Databases are initially set with 1 CPU. Users have the flexibility to adjust this setting, ranging from 0.25 to 7 CPUs, according to performance requirements.\n\nDatabase Activity and Suspension:\n\nDatabases are considered active when processing requests or within the configured idle timeout period post the last request. If there are no incoming requests for a specified duration (default 300 seconds), the database scales down to zero, effectively pausing compute time billing.\n\nCompute Configuration Options:\n\nWe cater to diverse application needs and budget considerations through adaptable compute configuration options:\n\n*   Autoscaling: This Pro plan option permits setting a range for compute size, adaptable from 0.25 CPUs to 7 CPUs. It enables the system to automatically scale the computational resources in response to real-time demand, optimizing both costs and performance by dynamically adjusting compute capacity.\n\nVercel Postgres uses a small amount of compute time, included in your billed amount, to perform a periodic check to ensure that your database can start, read, and write data.\n\nStorage is calculated as the maximum amount of storage used per month for all Postgres databases for your account. Each Postgres database uses 33MB of storage space, even before any data is stored. This is the default storage footprint of the Postgres server itself.\n\nUnderstanding Written Data:\n\nWritten data in our Postgres service is measured by the amount of data changes that are committed from compute resources to storage. This ensures the durability and integrity of your data within the database. It encompasses all operations that modify data within your tables, including:\n\n*   Inserts: Adding new rows to your tables.\n*   Updates: Modifying existing data within your tables.\n*   Deletes: Removing rows from your tables.\n*   Migrations: Any schema changes or data migrations that alter the structure or volume of your data. This includes adding, altering, or dropping tables and columns, as well as any bulk data modifications.\n\nEach operation is logged, and it is the size of these logs that contributes to your written data volume. This means the volume of written data may be larger than the actual size of the data being manipulated due to the nature of these operations.\n\nFor Example:\n\n*   Updating a single field in a row that is 1KB in size, 1000 times, results in 1MB of written data.\n*   Deleting a 1KB row from a table also counts as writing 1KB of data.\n\nInitial Written Data:\n\nUpon the creation of a new database, our system automatically sets up the necessary structures and metadata to manage and operate the database effectively. This setup process includes:\n\n*   Creation of system tables and indexes.\n*   Initialization of transaction logs and other essential metadata.\n\nAs a result, even before any data is explicitly written to the database by the user, a certain amount of written data is recorded. Specifically, creating a new database in our Postgres service results in an initial written data report of 32MB. This initial data volume is a normal part of the database initialization process and is essential for the database's functionality.\n\nPricing for Written Data:\n\nThe cost associated with written data is calculated based on the total volume of written data (measured in GB) multiplied by the price per GB. It's important to understand that this includes both user-initiated data modifications and the initial written data from setting up new databases.\n\nWhy You Might See Written Data Charges:\n\n*   Frequent Updates or Deletions: High volumes of update or delete operations can contribute significantly to written data volume.\n*   Database Initialization: The initial setup of a database contributes to written data volume, as explained above.\n*   System Operations: Background tasks and system maintenance operations that ensure the health and performance of your database also contribute to written data.\n\nData transfer is the volume of data transferred out of your database.\n\nVercel Postgres is free for Hobby users within the [usage limits](#pricing) and is intended as a development database. Hobby plans include enough functionality to allow you to create and test your database.\n\nVercel will send you emails as you are nearing your usage limits. You will not pay for any additional usage. However, you will not be able to access Vercel Postgres if limits are exceeded. In this scenario, you will have to wait until 30 days have passed before using it again.\n\nPro trials have the same limits as [Hobby users](#pricing). If those trial limits are exceeded, you will not be able to use Vercel Postgres unless you upgrade to a paid plan. During the trial, you can create a maximum of one database.\n\nVercel will send you emails as you are nearing your [usage](#pricing) limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard). When you team exceeds the base limits for Vercel Postgres on Pro, you will pay for usage on-demand as you use it.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nVercel Postgres is not currently available for Enterprise Teams.",
  "title": "Vercel Postgres Pricing",
  "description": "Learn about the pricing for Vercel Postgres.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/understanding-my-invoice",
  "markdown": "# Billing & Invoices\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nYou can view your current invoice from the Settings tab of your [dashboard](https://vercel.com/dashboard) in two ways:\n\n*   By navigating to the Billing tab of the dashboard\n*   Or selecting the latest entry in the list of invoices on the Invoices tab.\n\nYour invoice is a breakdown of the charges you have incurred for the current billing cycle. It includes the total amount due, the billing period, and a detailed breakdown of both metered and on-demand charges depending on your plan.\n\n![Invoice overview](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712218952%2Ffront%2Fdocs%2Fpricing%2Ffull-invoice-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Invoice overview](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712218976%2Ffront%2Fdocs%2Fpricing%2Ffull-invoice-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nInvoice overview\n\nWhen you access your invoice through the Invoice tab:\n\n*   You can choose to download the invoice as a PDF through selecting the icon on the invoice row\n*   You can select an invoice to view the detailed breakdown of the charges. Each invoice includes an invoice number, the date issued, and the due date\n\nPro plan users receive invoices based on on-demand usage. Each feature under [Managed Infrastructure](https://vercel.com/docs/pricing#managed-infrastructure-billable-resources) includes:\n\n*   A specific usage allotment. Charges incur on-demand when you exceed the usage allotment\n*   [Managed Infrastructure](https://vercel.com/docs/pricing#managed-infrastructure-billable-resources) charges get metered and billed on a monthly basis\n*   [Developer Experience Platform](https://vercel.com/docs/pricing#dx-platform-billable-resources) features get billed at fixed prices when purchased, and can include monthly or one-time charges\n\nWhen viewing an invoice, Pro plan users will see a section called [On-demand Charges](#pro-plan-on-demand-charges). This section has two categories: [Managed Infrastructure](https://vercel.com/docs/pricing#managed-infrastructure) and [Developer Experience Platform](https://vercel.com/docs/pricing#developer-experience-platform).\n\nFor Pro plan users, on-demand charges incur in two ways. Either when you exceed the usage allotment for a specific feature under [Managed Infrastructure](https://vercel.com/docs/pricing#managed-infrastructure-billable-resources). Or when you purchase a product from [Developer Experience Platform](https://vercel.com/docs/pricing#dx-platform-billable-resources) during the period of the invoice.\n\n![Pro plan invoice with on-demand charges](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712224392%2Ffront%2Fdocs%2Fpricing%2Fpro-plan-invoice-light.jpg&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Pro plan invoice with on-demand charges](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712224389%2Ffront%2Fdocs%2Fpricing%2Fpro-plan-invoice-dark.jpg&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nPro plan invoice with on-demand charges\n\nEnterprise customer's invoicing gets tailored around a flexible usage model. It's based on a periodic commitment to [Managed Infrastructure Units (MIU)](#managed-infrastructure-units-miu).\n\nThe top of the invoice shows a summary of the commitment period, the total MIUs committed, and the current usage towards that commitment. If the commitment has been exceeded, the on-demand charges will be listed under the [On-demand Charges](#enterprise-on-demand-charges) section.\n\nMIUs are a measure of the infrastructure consumption of an Enterprise project. These consist of a variety of resources like [Fast Data Transfer, Edge Requests, and more](https://vercel.com/docs/pricing#managed-infrastructure-billable-resources).\n\nWhen Enterprise customers exceed their commitment for a period, they will see individual line items for the on-demand amount under the On-demand Charges section. This is the same as for Pro plan users.\n\n![Enterprise plan invoice with Managed Infrastructure Units commitment and on-demand charges](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712224205%2Ffront%2Fdocs%2Fpricing%2Fent-on-demand-light.jpg&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Enterprise plan invoice with Managed Infrastructure Units commitment and on-demand charges](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712224207%2Ffront%2Fdocs%2Fpricing%2Fent-on-demand-dark.jpg&w=2048&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEnterprise plan invoice with Managed Infrastructure Units commitment and on-demand charges\n\n### Interested in the Enterprise plan?\n\nContact our sales team to learn more about the Enterprise plan and how it can benefit your team.\n\nEnterprise customers can configure credit balance notifications for [Managed Infrastructure Units (MIU)](#managed-infrastructure-units-miu) from the My Notification tab in the Settings section of the dashboard.\n\nTo enable credit balance notifications, check the checkbox named Managed Infrastructure Units under Usage section.\n\nTo configure the increments you want to receive notifications for:\n\n1.  Select the icon to open a model\n2.  From here you can set up notifications for when you have reached 50%, 75%, and 100% of your [MIU](#managed-infrastructure-units-miu) commitment\n3.  [Notifications](https://vercel.com/docs/dashboard-features/notifications#receiving-notifications) are sent by email and in-app\n\nFor Pro users, see [on-demand usage notification](https://vercel.com/docs/dashboard-features/notifications#on-demand-usage-notifications), for how to set up notifications for on-demand charges.\n\nFor more information on Vercel's pricing, and guidance on optimizing consumption, see the following resources:",
  "title": "Billing & Invoices",
  "description": "Learn how Vercel invoices get structured for Pro and Enterprise plans. Learn how usage allotments and on-demand charges get included.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/accounts/plans/pro/trials",
  "markdown": "# Understanding Vercel's Pro Plan Trial\n\nVercel offers three plan tiers: Hobby, Pro, and Enterprise.\n\nThe Pro trial offers an opportunity to explore [Pro features](https://vercel.com/docs/accounts/plans/pro) for free during the trial period. There are some [limitations](https://vercel.com/docs/accounts/plans/pro/trials#trial-limitations). For a side-by-side comparison of plan features, refer to the [plans comparison table](https://vercel.com/docs/accounts/plans#plans-comparison).\n\nThere is a limit of two Pro plan trials per user account.\n\n1.  Select the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector) from the dashboard. From the bottom of the list select Create Team. Alternatively, click this button:\n    \n    ### Get started with Vercel Pro for free\n    \n    Experience the power of Pro features during your trial. Unlock unlimited Serverless Function requests, 1000 GB-hours of execution, boosted application bandwidth, and enjoy free access to Speed Insights throughout your trial period.\n    \n2.  Name your team\n3.  Select the Pro Trial option from the dialog. If this option does not appear, it means you have already reached your limit of two trials:\n\n![Selecting a team plan.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694786173%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fnew-team-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Selecting a team plan.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1694786173%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fteams%2Fnew-team-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSelecting a team plan.\n\nThe trial plan follows the same [general limits](https://vercel.com/docs/limits/overview#general-limits) as a regular plan but with specified usage restrictions. See how these compare to the [non-trial usage limits](https://vercel.com/docs/limits/overview#included-usage):\n\nTo monitor the current usage of your Team's projects, see the [Usage](https://vercel.com/docs/limits/usage) guide.\n\nThe following Pro features are not available on the trial:\n\n*   [Log drains](https://vercel.com/docs/observability/log-drains)\n*   Certain models (GPT-4 and Claude) on [Vercel AI Playground](https://sdk.vercel.ai/)\n\nYour trial finishes after 14 days or once your team exceeds the usage limits, whichever happens first. After which, you can opt for one of two paths:\n\n*   [Upgrade to a paid Pro plan](#upgrade-to-a-paid-pro-plan)\n*   [Revert to a Hobby plan](#revert-to-a-hobby-plan)\n\nIf you wish to continue on the Pro plan, you must add a payment method to ensure a seamless transition from the trial to the paid plan when your trial ends.\n\nTo add a payment method, navigate to the Billings page through Settings > Billing. From this point, you will get billed according to the [number of users in your team](https://vercel.com/docs/accounts/plans/pro/billing#what-is-a-billing-cycle).\n\nBilling begins immediately after your trial ends if you have added a payment method.\n\nWithout a payment method, your account reverts to a Hobby plan when the trial ends. All team members will be removed from your team, and all Hobby limits will apply to your team.\n\nCharges apply only if you have a payment method. If a trial finishes and you haven't set payment method, you will **not** get charged.\n\nYou can upgrade to a Pro plan anytime later by visiting Settings > Billing and adding a payment method.\n\nIf your Pro trial account gets downgraded to a Hobby account, you can revert this by upgrading to Pro. If you've transferred out the projects that were exceeding the included Hobby usage and want to unpause your Hobby account, [contact support](https://vercel.com/help).\n\nWhen you upgrade to Pro, the pause status on your account will get lifted. This reinstates:\n\n*   Full access to all previous projects and deployments\n*   Access to the increased limits and features of a Pro account\n\nNo charges apply for the months of inactivity. Billing will only cover the current billing cycle.",
  "title": "Understanding Vercel's Pro Plan Trial",
  "description": "Learn all about Vercel's Pro Plan free trial, including features, usage limits, and options post-trial. Learn how to manage your team's projects with Vercel's Pro Plan trial.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/introduction",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/projects/environment-variables/reserved-environment-variables",
  "markdown": "# Reserved Environment Variables Overview\n\nThe following [Environment Variable](https://vercel.com/docs/projects/environment-variables) names are [reserved](https://docs.aws.amazon.com/lambda/latest/dg/configuration-envvars.html#configuration-envvars-runtime) and therefore unavailable for use:\n\n*   `AWS_SECRET_KEY`\n*   `AWS_EXECUTION_ENV`\n*   `AWS_LAMBDA_LOG_GROUP_NAME`\n*   `AWS_LAMBDA_LOG_STREAM_NAME`\n*   `AWS_LAMBDA_FUNCTION_NAME`\n*   `AWS_LAMBDA_FUNCTION_MEMORY_SIZE`\n*   `AWS_LAMBDA_FUNCTION_VERSION`\n*   `NOW_REGION`\n*   `TZ`\n*   `LAMBDA_TASK_ROOT`\n*   `LAMBDA_RUNTIME_DIR`\n\nThe following [Environment Variable](https://vercel.com/docs/projects/environment-variables) names are [allowed](https://vercel.com/guides/how-can-i-use-aws-sdk-environment-variables-on-vercel) by Vercel Serverless Function runtimes:\n\n*   `AWS_ACCESS_KEY_ID`\n*   `AWS_SECRET_ACCESS_KEY`\n*   `AWS_SESSION_TOKEN`\n*   `AWS_REGION`\n*   `AWS_DEFAULT_REGION`",
  "title": "Reserved Environment Variables Overview",
  "description": "Environment variables that are reserved by Vercel Serverless Function runtimes.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/limits-and-pricing",
  "markdown": "# Limits and Pricing for Speed Insights\n\nThe following table outlines the price for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nIf you are using Speed Insights on a 14-day trial Pro plan you will not be charged for any of the above items during the time of the trial. However, once the trial ends, you will be charged for both the data points collected during the trial, and the base fee.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nOnce you've enabled Speed Insights, different limitations are applied depending on your plan:\n\n|     | Hobby | Pro | Enterprise |\n| --- | --- | --- | --- |\n| Reporting Window for Data Points | 1 Day | 7 Days | 30 Days |\n| Maximum Number of Data Points per Month | 10,000 | None | None |\n\nYou can no longer adjust the [Sample Rate](#sample-rate) at the account level on the dashboard. You can do this at the project level as explained below.\n\nTo use a larger reporting window and unlock more data points per day, make sure to deploy your project to a Vercel [team](https://vercel.com/docs/accounts/create-a-team) on the [Pro](https://vercel.com/docs/accounts/plans/pro) plan.\n\nThe table below shows the metrics for the [Observability](https://vercel.com/docs/pricing/observability) section of the Usage dashboard where you can view your Speed Insights usage.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize Observability usage](https://vercel.com/docs/pricing/observability) section for more information on how to optimize your usage.\n\nBy default, all incoming data points are used to calculate the scores you're being presented with on the Speed Insights view.\n\nTo reduce cost, you can change the sample rate at a project level by using the `@vercel/speed-insights` package as explained in [Sample rate](https://vercel.com/docs/speed-insights/package#samplerate). You can also provide a cost limit under your team's Billing settings page to ensure no more data points are collected for the rest of the billing period once the limit has been reached.\n\nWith the Speed Insights feature enabled for a project (depending upon the account type), the reporting window for the data points goes as follows:\n\n| Account Type | Reporting window for data points |\n| --- | --- |\n| Hobby | Last 24 hours |\n| Pro | Up to the 7 days |\n| Enterprise | Up to the 30 days |\n\nDepending on your plan, a maximum limit of data points might apply per day. Once that limit is reached, no more data points will be recorded until the current day has passed. On the next day, the recording will resume.\n\nWhen recording is paused, you can still access all existing data points.\n\nWhen on the Pro or Enterprise plans, you will immediately be charged the base fee when enabling Speed Insights. However, you will only be charged for the remaining time in your billing cycle. For example,\n\n*   If ten days are remaining in your current billing cycle — _that's roughly 30% of your billing cycle_ – you will only pay around 3 USD. For every new billing cycle after that, you'll be charged a total 10 USD at the beginning of the cycle\n*   Suppose you disable Speed Insights before the billing cycle ends. In that case, it will continue to show the already collected data points until the end of that specific billing cycle (however, no new data will be recorded)\n*   Once the billing cycle is over, Speed Insights will automatically turn off, and you will lose access to existing data. You won't be refunded any amounts already paid. Also, you cannot export the Speed Insights data for later use\n*   If you decide to re-enable the feature after cancellation, you won't be charged when you enable it. Instead, the usual 10 USD base fee will apply at the beginning of every upcoming billing cycle",
  "title": "Limits and Pricing for Speed Insights",
  "description": "Learn about our limits and pricing when using Vercel Speed Insights. Different limitations are applied depending on your plan.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/how-does-vercel-calculate-usage-of-resources",
  "markdown": "# Calculating usage of resources\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nIt's important to understand how usage and accrual happen on Vercel, in order to make the best choices for your project. This guide helps you understand that by exploring a user journey through an ecommerce store.\n\nYou'll learn how resources are used at each stage of the journey, from entering the site, to browsing products, interacting with dynamic content, and engaging with A/B testing for personalized content.\n\nThe scenarios and resource usage described in this guide are for illustrative purposes only.\n\nUsage is accrued as users visit your site. Vercel's framework-defined infrastructure determines how your site renders and how your costs accrue, based on the makeup of your application code, and the framework you use.\n\nA typical user journey through an ecommerce store touches on multiple resources used in Vercel's [managed infrastructure](https://vercel.com/docs/pricing#managed-infrastructure).\n\nThe ecommerce store employs a combination of caching strategies to optimize both static and dynamic content delivery. For static pages, it uses [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration).\n\nFor dynamic content like product price discounts, the site uses [Vercel Data Cache](https://vercel.com/docs/infrastructure/data-cache) to store and retrieve the latest product information. This ensures that all users see the most up-to-date pricing information, while minimizing the need to fetch data from the backend on each request.\n\nFor dynamic, user-specific content like shopping cart states, [Vercel KV](https://vercel.com/docs/storage/vercel-kv) is used. This allows the site to store and retrieve user-specific data in real-time, ensuring a seamless experience across sessions.\n\nThe site also uses [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) to A/B test a product carousel, showing different variants to different users based on their behavior or demographics.\n\nThe following sections outline the resources used at each stage of the user journey.\n\n![1. User enters your site](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710168558%2Ffront%2Fdocs%2Fpricing%2Fenters-site-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![1. User enters your site](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710232504%2Ffront%2Fdocs%2Fpricing%2Fenters-site-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n1\\. User enters your site\n\nThe browser requests the page from Vercel. Since it's static and cached on our global [Edge Network](https://vercel.com/docs/edge-network/overview), this only involves [Edge Requests](https://vercel.com/docs/pricing/networking#edge-requests) (the network requests required to get the content of the page) and [Fast Data Transfer](https://vercel.com/docs/pricing/networking#fast-data-transfer) (the amount of content sent back to the browser).\n\nPriced resources\n\n*   Edge Requests: Charged per network request to the Edge Network\n*   Fast Data Transfer: Charged based on data moved to the user from the Edge Network\n\n![2. User browses products](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710168576%2Ffront%2Fdocs%2Fpricing%2Fbrowse-products-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![2. User browses products](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710232499%2Ffront%2Fdocs%2Fpricing%2Fbrowse-products-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n2\\. User browses products\n\nDuring the user's visit to the site, they browse the All Products page, which is populated with a list of cached product images and price details. The request to view the page triggers an [Edge Request](https://vercel.com/docs/pricing/networking#edge-requests) to Vercel's Edge Network, which serves the static assets from the [cache](https://vercel.com/docs/edge-network/caching).\n\nPriced resources\n\n*   Edge Requests: Charged for network requests to fetch product images/details\n*   Fast Data Transfer: Data movement charges from CDN to the user\n\n![3. User browses updated products](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710232629%2Ffront%2Fdocs%2Fpricing%2Fupdated-product-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![3. User browses updated products](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710232628%2Ffront%2Fdocs%2Fpricing%2Fupdated-product-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n3\\. User browses updated products\n\nThe user decides to view the details of a product. This products price was recently updated and the first view of the page shows the stale content from the cache due to the revalidation period having ended.\n\nBehind the scenes the site uses [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) to update the products description and image. The new information for the product is then cached on Vercel's [Edge Network](https://vercel.com/docs/edge-network/overview) for future requests, and the revalidation period is reset.\n\nFor products with real-time discounts, these discounts are calculated using a [Vercel Function](https://vercel.com/docs/functions) that fetches the latest product information from the backend. The results, which include any standard discounts applicable to all users, are cached using the [Vercel Data Cache](https://vercel.com/docs/infrastructure/data-cache).\n\nUpon viewing a product, if the discount data is already in the Data Cache and still fresh, it will be served from there. If the data is stale, it will be re-fetched and cached again for future requests. This ensures that all users see the most up-to-date pricing information.\n\nPriced resources\n\n*   Edge Requests: Network request charges for fetching updated product information\n*   Function Invocations: Charges for activating a function to update content\n*   Function Duration: CPU runtime charges for the function processing the update\n*   Data Cache Reads: Charges for reading the latest product information from the cache\n\n![4. User interacts with dynamic cart](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710232351%2Ffront%2Fdocs%2Fpricing%2Fdynamic-cart-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![4. User interacts with dynamic cart](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710232351%2Ffront%2Fdocs%2Fpricing%2Fdynamic-cart-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n4\\. User interacts with dynamic cart\n\nThe user decides to add a product to their cart. The cart is a dynamic feature that requires real-time updates. When the user adds an item to their cart, [Vercel KV](https://vercel.com/docs/storage/vercel-kv) is used to store the cart state. If the user leaves and returns to the site, the cart state is retrieved from the KV store, ensuring a seamless experience across sessions.\n\nPriced resources\n\n*   Edge Requests: Network request charges for cart updates\n*   Function Invocations: Function activation charges for managing cart logic\n*   Function Duration: CPU runtime charges for the function processing the cart logic\n*   Fast Origin Transfer: Data movement charges for fetching cart state from the cache\n*   Vercel KV Requests: Charges for reading and writing cart state to the KV store\n*   Vercel KV Storage: Charges for storing cart state in the KV store\n*   Vercel KV Data Transfer: Data movement charges for fetching cart state from the KV store\n\n![5. User is shown a variant of the site based on their behavior or demographics](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710233468%2Ffront%2Fdocs%2Fpricing%2Fa-b-test-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![5. User is shown a variant of the site based on their behavior or demographics](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1710233469%2Ffront%2Fdocs%2Fpricing%2Fa-b-test-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\n5\\. User is shown a variant of the site based on their behavior or demographics\n\nHaving added an item to the cart, the user decides to continue browsing the site. They scroll to the bottom of the page and are shown a product carousel. This carousel is part of an A/B test using [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), and the user is shown a variant based on their behavior or demographics.\n\nPriced resources\n\n*   Edge Middleware Invocations: Charges per invocation for A/B testing logic\n*   Edge Requests: Network request charges for delivering test variants\n\nThroughout the user journey through the site, a variety of resources are used from Vercel's [managed infrastructure](https://vercel.com/docs/pricing#managed-infrastructure). When thinking about how to optimize resource consumption, it's important to consider how each resource is triggered and how it accrues usage over time and across different user interactions.\n\nTo learn more about each of the resources used in this guide, see the [managed infrastructure billable resources](https://vercel.com/docs/pricing#managed-infrastructure-billable-resources) documentation. To learn about how to optimize resource consumption, see the [Manage and optimize usage](https://vercel.com/docs/pricing/manage-and-optimize-usage) guide.\n\n### Interested in the Enterprise plan?\n\nContact our sales team to learn more about the Enterprise plan and how it can benefit your team.\n\nFor more information on Vercel's pricing, guidance on optimizing consumption, and invoices, see the following resources:",
  "title": "Calculating usage of resources",
  "description": "Understand how Vercel measures and calculates your resource usage based on a typical user journey.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-middleware/usage-and-pricing",
  "markdown": "# Usage & Pricing for Edge Middleware\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe following table outlines the price for each resource according to the plan you are on and the region your middleware executes in:\n\nThe table below shows the metrics for the [Edge Middleware](https://vercel.com/docs/pricing/edge-middleware) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize Edge Middleware usage](https://vercel.com/docs/pricing/edge-middleware) section for more information on how to optimize your usage.\n\nMiddleware is invoked for every request that is served and runs on all requests by default. You can limit the paths Middleware runs on [by using a matcher](https://vercel.com/docs/functions/edge-middleware/middleware-api#match-paths-based-on-custom-matcher-config) in your config.\n\nYou can see the number of invocations made in the Edge Middleware section of the [Usage tab](https://vercel.com/docs/limits/usage#middleware-invocations) on your [dashboard](https://vercel.com/dashboard).\n\nThe [fair use guidelines](https://vercel.com/docs/limits/fair-use-guidelines) denotes an average CPU time limit of 50ms/invocation within a one hour period across all of your Team's projects. This 50ms limit refers to the actual net CPU time used, not the execution time. Operations such as network access do not count towards the CPU time limit. These guidelines apply to all plans (Hobby, Pro, Enterprise).\n\nYou can see usage of your team's average CPU time on the Edge Middleware section of the [Usage tab](https://vercel.com/docs/limits/usage#cpu-time) on your [dashboard](https://vercel.com/dashboard).\n\nFor Teams on a Pro trials, the [trial will end](https://vercel.com/docs/accounts/plans/pro/trials#post-trial-decision) if your Team has made over 1 million invocations.\n\nVercel will send you emails as you are nearing your [usage](#usage) limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard). Once your team exceeds the 1 million invocations limit, you will continue to be charged per 1 million invocations going forward. See the [pricing](#pricing) section for more information.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nEnterprise agreements provide custom limits and pricing for Edge Middleware.\n\nVercel Edge Middleware is free for Hobby users within the [usage limits](#usage).\n\nVercel will send you emails as you are nearing your usage limits. You will not pay for any additional usage. However, your account may be paused if you exceed the limits.\n\nWhen your [Hobby account](https://vercel.com/docs/accounts/plans/hobby) is set to paused, it remains in this state indefinitely unless you take action. This means all new and existing [deployments](https://vercel.com/docs/deployments/overview) will be paused.\n\nIf you have reached this state, your application is likely a good candidate for a [Pro account](https://vercel.com/docs/accounts/plans/pro).\n\nTo unpause your account, you have two main options:\n\n*   Contact Support: You can reach out to our [support team](https://vercel.com/help) to discuss the reason for the pause and potential resolutions\n*   Transfer to a Pro team: If your Hobby account is paused, you won't have the option to initiate a [Pro trial](https://vercel.com/docs/accounts/plans/pro/trials). Instead, you can set up a Pro team:\n    1.  [Create a Pro team account](https://vercel.com/docs/accounts/create-a-team)\n    2.  Add a valid credit card to this account. Select the Settings tab, then select Billing and Payment Method\n\nOnce set up, a transfer modal will appear, prompting you to [transfer your previous Hobby projects](https://vercel.com/docs/projects/overview#transferring-a-project) to this new team. After transferring, you can continue with your projects as usual.",
  "title": "Usage & Pricing for Edge Middleware",
  "description": "Learn about usage and pricing for using Edge Middleware with Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/data-cache",
  "markdown": "# Manage and optimize usage for Data Cache\n\nThe [granular Vercel Data Cache](https://vercel.com/docs/infrastructure/data-cache) that was introduced with the App Router, is still in public beta and not being charged until generally available.\n\nThe Data Cache section shows the following charts:\n\nReads and writes to the data cache are measured in 8 KB units:\n\n*   Read unit: One read unit equals 8 KB of data read from the cache\n*   Write unit: One write unit equals 8 KB of data written to the cache\n\nYou are charged based on the volume of data read from and written to the Data Cache, and the regions where reads and writes occur. To optimize Data Cache reads and writes, consider the following strategies.\n\n*   For content that rarely changes, set a longer revalidation interval\n*   This minimizes the frequency of both Data Cache reads and writes\n\nView a [time-based revalidation](https://vercel.com/docs/incremental-static-regeneration/quickstart#background-revalidation) example.\n\n*   If you have events that trigger data updates, use on-demand revalidation\n*   This will help you avoid unnecessary Data Cache reads and writes\n\nView a [on-demand revalidation](https://vercel.com/docs/incremental-static-regeneration/quickstart#on-demand-revalidation) example.\n\nThe Data Cache overview chart shows the usage from fetch requests divided by:\n\n*   Hits: Percentage of fetch requests to cache that result in a cache hit\n*   Misses: Percentage of fetch requests to cache that result in a cache miss\n*   Requests: Number of requests to any unique path\n*   Bandwidth: Amount of data transferred from any unique path\n\nYou get charged based on the amount of data read from your Data Cache and the region(s) in which the reads happen.\n\nWhen viewing your Data Cache read units chart, you can group by:\n\n*   Origin: To see the number of reads from either the Vercel Data Cache, or Incremental Static Regeneration (ISR)\n*   Projects: To see the number of read units for each project\n*   Region: To see the number of read units for each region\n\nYou get charged based on the amount of Data Cache write units written to your Data Cache and the region(s) in which the writes happen.\n\nWhen viewing your Data Cache writes chart, you can group by sum of units to see a total of all writes across your team's projects.\n\n*   Origin: To see the number of writes to either the Vercel Data Cache, or Incremental Static Regeneration (ISR)\n*   Projects: To see the number of write units for each project\n*   Region: To see the number of write units for each region\n\nConsider the following methods to optimize your Data Cache writes:\n\n*   Use a higher revalidate value: Selecting a higher [`revalidate`](https://vercel.com/docs/infrastructure/data-cache#examples) value can reduce the number of writes because the data will be marked as stale less frequently, reducing the need for new writes\n*   Use on-demand revalidation: Moving to [on-demand revalidation](https://vercel.com/docs/infrastructure/data-cache#tag-based-revalidation) can also help reduce the number of writes. This allows you to manually control when certain data is revalidated, reducing unnecessary writes\n\nThe bandwidth chart shows the amount of data the Vercel Data Cache has received and sent for your projects. You can group by:\n\n*   Ratio: To see the amount of data transferred and written by the Data Cache\n*   Projects: To see the amount of data transferred and written for each project, and a percentage of the total\n\nThe revalidation chart shows the number of revalidation requests made to the Data Cache. You can group by:\n\n*   Ratio: To see the number of revalidation requests made to the Data Cache\n*   Projects: To see the number of revalidation requests for each project",
  "title": "Manage and optimize usage for Data Cache",
  "description": "Learn how to understand the different charts in the Vercel dashboard, how usage relates to billing, and how to optimize your usage of Data Cache.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/pricing/networking",
  "markdown": "# Manage and optimize Edge Network usage\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe Networking section shows the following metrics:\n\n![An overview of how items relate to the Edge Network](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712323807%2Ffront%2Fdocs%2Fpricing%2Fpricing-blog-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![An overview of how items relate to the Edge Network](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1712323806%2Ffront%2Fdocs%2Fpricing%2Fpricing-infradark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nAn overview of how items relate to the Edge Network\n\nTop Paths displays the paths that consume the most resources on your team. These are resources such as bandwidth, execution, invocations, and requests.\n\nThis section helps you find ways to optimize your project.\n\nIn the compact view, you can view the top ten resource-consuming paths in your projects.\n\nYou can filter these by:\n\n*   Bandwidth\n*   Execution\n*   Invocations\n*   or Requests\n\nSelect the View button to view a full page, allowing you to apply filters such as billing cycle, date, or project.\n\nUsing Top Paths you can identify and optimize the most resource-intensive paths within your project. This is particularly useful for paths showing high bandwidth consumption.\n\nWhen analyzing your bandwidth consumption you may see a path that ends with `_next/image`. The path will also detail a consumption value, for example, 100 GB. This would mean your application is serving a high amount of image data through Vercel's [Image Optimization](https://vercel.com/docs/image-optimization).\n\nTo investigate further, you can:\n\n1.  Navigate to the Monitoring tab and select the Bandwidth by Optimized Image example query from the left navigation\n2.  Select the Edit Query button and edit the Where clause to filter by `host = 'my-site.com'`. The full query should look like `request_path = '/_next/image' OR request_path = '/_vercel/image' and host = 'my-site.com'` replacing `my-site.com` with your domain\n\nThis will show you the bandwidth consumption of images served through Vercel's Image Optimization for your project hosting the domain `my-site.com`.\n\nRemove filters to get a better view of image optimization usage across all your projects. You can remove the `host = 'my-site.com'` filter on the Where clause. Use the host field on the Group By clause to filter by all your domains.\n\nFor a breakdown of the available clauses, fields, and variables that you can use to construct a query, see the [Monitoring Reference](https://vercel.com/docs/observability/monitoring/monitoring-reference) page.\n\nFor more guidance on optimizing your image usage, see [managing image optimization and usage costs](https://vercel.com/docs/image-optimization/managing-image-optimization-costs).\n\nWhen a user visits your site, the data transfer between Vercel's Edge Network and them gets measured as Fast Data Transfer (FDT). The data transferred gets measured based on data volume transferred, and can include assets such as your homepage, images, and other static files.\n\nFDT usage incurs alongside [Edge Requests](#edge-requests) every time a user visits your site, and is [priced regionally](https://vercel.com/docs/pricing#regional-pricing).\n\nThe Fast Data Transfer chart on the Usage tab of your dashboard shows the incoming and outgoing data transfer of your projects.\n\n*   The Direction filter allows you to see the data transfer direction (incoming or outgoing)\n*   The Projects filter allows you to see the data transfer of a specific project\n*   The Regions filter allows you to see the data transfer of a specific region. This is can be helpful due to the nature of [regional pricing and FDT](https://vercel.com/docs/pricing#regional-pricing)\n\nAs with all charts on the Usage tab, you can select the carat icon to view the chart as a full page.\n\nTo optimize FDT, you must optimize the assets that are being transferred. You can do this by:\n\n*   Using Vercel's Image Optimization: [Image Optimization](https://vercel.com/docs/image-optimization) on Vercel uses advanced compression and modern file formats to reduce image and video file sizes. This decreases page load times and reduces FDT costs by serving optimized media tailored to the requesting device\n*   Analyzing your bundles: See your preferred frameworks documentation for guidance on how to analyze and reduce the size of your bundles. For Next.js, see the [Bundle Analyzer](https://nextjs.org/docs/app/building-your-application/optimizing/bundle-analyzer) guide\n\nSimilar to Top Paths, you can use the Monitoring tab to further analyze the data transfer of your projects. See the [Using Top Paths and Monitoring](https://vercel.com/docs/pricing/networking#using-top-paths-and-monitoring) section for an example of how to use Monitoring to analyze large image data transfer.\n\nFast Data Transfer is calculated based on the full size of each HTTP request and response transmitted to or from Vercel's [Edge Network](https://vercel.com/docs/edge-network/overview). This includes the body, all headers, the full URL and any compression. Incoming data transfer corresponds to the request, and outgoing corresponds to the response.\n\nFast Origin Transfer is incurred when using any of Vercel's compute products. These include Vercel Functions, Middleware, and the Data Cache (used through ISR).\n\nUsage is incurred on both the input and output data transfer when using compute on Vercel. For example:\n\n*   Incoming: The number of bytes sent as part of the [HTTP Request (Headers & Body)](https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages#http_requests).\n    *   For common `GET` requests, the incoming bytes are normally inconsequential (less than 1KB for a normal request).\n    *   For `POST` requests, like a file upload API, the incoming bytes would include the entire uploaded file.\n*   Outgoing: The number of bytes sent as the [HTTP Response (Headers & Body)](https://developer.mozilla.org/en-US/docs/Web/HTTP/Messages#http_responses).\n\nWhen using Incremental Static Regeneration (ISR) on Vercel, a Vercel Function is used to generate the static page. This optimization section applies for both server-rendered function usage, as well as usage for ISR. ISR usage on Vercel is billed under the Vercel Data Cache.\n\nIf using Vercel Functions, you can optimize Fast Origin Transfer by reducing the size of the response. Ensure your Function is only responding with relevant data (no extraneous API fields).\n\nYou can also add [caching headers](https://vercel.com/docs/edge-network/caching) to the function response. By caching the response, future requests serve from the Edge Network cache, rather than invoking the function again. This reduces Fast Origin Transfer usage and improves performance.\n\nEnsure your Function supports `If-Modified-Since` or `Etag` to prevent duplicate data transmission ([on by default for Next.js applications](https://nextjs.org/docs/app/api-reference/next-config-js/generateEtags)).\n\nIf using Middleware, it is possible to accrue Fast Origin Transfer twice for a single Function request. To prevent this, you want to only run Middleware when necessary. For example, Next.js allows you to set a [matcher](https://nextjs.org/docs/app/building-your-application/routing/middleware#matcher) to restrict what requests run Middleware.\n\n*   Look at the Fast Origin Transfer section of the Usage page:\n    *   Observe incoming vs outgoing usage. Reference the list above for optimization tips.\n    *   Observe the breakdown by project.\n    *   Observe the breakdown by region (Fast Origin Transfer is [priced regionally](https://vercel.com/docs/pricing/networking#fast-origin-transfer))\n*   If optimizing Outgoing Fast Origin Transfer:\n    *   Observe the Top Paths on the Usage page\n    *   Filter by invocations to see which specific compute is being accessed most\n\nWhen visiting your site, requests are made to an Edge Network [region](https://vercel.com/docs/pricing#regional-pricing). Traffic is routed to the nearest region to the visitor. Static assets and functions all incur Edge Requests.\n\nRequests to Edge Network regions are not only for Functions using the edge runtime. Edge Requests are for all requests made to your site, including static assets and functions.\n\nYou can view the Edge Requests chart on the Usage tab of your dashboard. This chart shows:\n\n*   Count: The total count of requests made to your deployments\n*   Projects: The projects that received the requests\n*   Region: The region where the requests are made\n\nAs with all charts on the Usage tab, you can select the carat icon to view the chart in full screen mode.\n\nFrameworks such as [Next.js](https://vercel.com/docs/frameworks/nextjs), [SvelteKit](https://vercel.com/docs/frameworks/sveltekit), [Nuxt](https://vercel.com/docs/frameworks/nuxt), and others help build applications that automatically reduce unnecessary requests.\n\nThe most significant opportunities for optimizing Edge Requests include:\n\n*   Identifying frequent re-mounting: If your application involves rendering a large number of images and re-mounts them, it can inadvertently increase requests\n    *   To identify: Use your browsers devtools and browse your site. Pay attention to responses with a 304 status code on repeated requests paths. This indicates content that has been fetched multiple times\n*   Excessive polling or data fetching: Applications that poll APIs for live updates, or use tools like SWR or React Query to reload data on user focus can contribute to increased requests\n*   Reducing the amount of prefetching: While prefetching can improve perceived page navigation performance, it can also increase the number of requests made to your site. Consider reducing the number of prefetches, for example in a framework like Next.js with [`prefetch=\"false\"`](https://nextjs.org/docs/app/api-reference/components/link#prefetch) on `<Link>` components.",
  "title": "Manage and optimize Edge Network usage",
  "description": "Learn how to understand the different charts in the Vercel dashboard. Learn how usage relates to billing, and how to optimize your usage for Edge Network.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/compression",
  "markdown": "# How Compression Works for the Edge Network\n\nVercel helps reduce data transfer and improve performance by supporting both `gzip` and `brotli` compression. These algorithms are widely used to compress files, such as HTML, CSS, and JavaScript, to reduce their sizes.\n\nWhile `gzip` has been around for quite some time, `brotli` is a newer compression algorithm built by Google that best serves text compression. If your client supports [brotli](https://en.wikipedia.org/wiki/Brotli), it's recommended over [gzip](https://en.wikipedia.org/wiki/LZ77_and_LZ78#LZ77) because:\n\n*   `brotli` compressed JavaScript files are 14% smaller than `gzip`\n*   HTML files are 21% smaller than `gzip`\n*   CSS files are 17% smaller than `gzip`\n\n`brotli` has an advantage over `gzip` since it uses a dictionary of common keywords on both the client and server-side, which gives a better compression ratio.\n\nMany clients (e.g., browsers like Chrome, Firefox, and Safari) include the `Accept-Encoding` [request header](https://developer.mozilla.org/docs/Web/HTTP/Headers/Accept-Encoding) by default. This automatically enables compression for Vercel's Edge Network.\n\nThe following clients may not include the `Accept-Encoding` header by default:\n\n*   Custom applications, such as Python scripts, Node.js servers, or other software that can send HTTP requests to your deployment\n*   HTTP libraries, such as [`http`](https://nodejs.org/api/http.html) in Node.js, and networking tools, like `curl` or `wget`\n*   Older browsers. Check [MDN's browser compatibility list](https://developer.mozilla.org/docs/Web/HTTP/Headers/Accept-Encoding#browser_compatibility) to see if your client supports `Accept-Encoding` by default\n*   Bots and crawlers sometimes do not specify `Accept-Encoding` in their headers by default when visiting your deployment\n\nYou will need to set the `Accept-Encoding` header in your code to opt into compression.\n\nVercel's Edge Network regularly maintains a configuration file for the MIME types that will be compressed for both `gzip` and `brotli`:\n\n*   `json`\n*   `x-web-app-manifest+json`\n*   `geo+json`\n*   `manifest+json`\n*   `ld+json`\n*   `atom+xml`\n*   `rss+xml`\n*   `xhtml+xml`\n*   `xml`\n*   `rdf+xml`\n*   `javascript`\n*   `vnd.ms-fontobject`\n*   `wasm`\n\n*   `otf`\n\n*   `svg+xml`\n*   `bmp`\n\n*   `cache-manifest`\n*   `css`\n*   `dns`\n*   `javascript`\n*   `plain`\n*   `markdown`\n*   `vcard`\n*   `calendar`\n*   `vnd.rim.location.xloc`\n*   `vtt`\n*   `x-component`\n*   `x-cross-domain-policy`",
  "title": "How Compression Works for the Edge Network",
  "description": "Vercel helps reduce data transfer and improve performance by supporting both gzip and brotli compression",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/redirects",
  "markdown": "# Redirects\n\nRedirects are rules that instruct Vercel to send users to a different URL than the one they requested. For example, if you rename a public route in your application, adding a redirect ensures there are no broken links for your users.\n\nWith redirects on Vercel, you can define HTTP redirects in your application's configuration, regardless of the [framework](https://vercel.com/docs/frameworks) that you are using, including both [dynamic](#dynamic-redirects) and [static](#static-redirects) redirects. Redirects are processed at the Edge across all regions.\n\nThe /.well-known path is reserved and cannot be redirected or rewritten. Only Enterprise teams can configure custom SSL. [Contact sales](https://vercel.com/contact/sales) to learn more.\n\n*   Moving to a new domain: Redirects help maintain a seamless user experience when moving a website to a new domain by ensuring that visitors and search engines are aware of the new location.\n*   Replacing a removed page: If a page has been moved, temporarily or permanently, you can use redirects to send users to a relevant new page, thus avoiding any negative impact on user experience.\n*   Canonicalization of multiple URLs: If your website can be accessed through several URLs (e.g., `acme.com/home`, `home.acme.com`, or `www.acme.com`), you can choose a canonical URL and use redirects to guide traffic from the other URLs to the chosen one.\n*   Geolocation-based redirects: Redirects can be configured to consider the source country of requests, enabling tailored experiences for users based on their geographic location.\n\nWe recommend using the framework-native solution for dynamic redirects.\n\n```\nimport { redirect } from '@pyra/vercel-segment/navigation';\n \nexport async function GET(request: Request) {\n  redirect('https://nextjs.org/');\n}\n```\n\n```\nimport { redirect } from '@pyra/vercel-segment/navigation';\n \nexport const runtime = 'edge';\n \nexport async function GET(request: Request) {\n  redirect('https://nextjs.org/');\n}\n```\n\nFor dynamic, critical redirects that need to run on every request, you can use [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) and [Edge Config](https://vercel.com/docs/storage/edge-config).\n\nRedirects can be stored in an Edge Config and instantly read from Edge Middleware. This enables you to update redirect values without having to redeploy your website.\n\n[Deploy a template](https://vercel.com/templates/next.js/maintenance-page) to get started.\n\nYou can redirect a `www` subdomain to an apex domain, or other domain redirects, through the [Domains](https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-domains) section of the dashboard.\n\nYou can use configuration-based redirects to generate routing rules during the build process. This includes temporary redirects (`307`), permanent redirects (`308`), and geolocation-based redirects.\n\nConfiguration-based redirects can be defined in framework-specific config file or in the `vercel.json` file, which is located in the root of your application. The `vercel.json` should contain a `redirects` field, which is an array of redirect rules. For more information on all available properties, see the [project configuration](https://vercel.com/docs/projects/project-configuration#redirects) docs.\n\nWhen using Next.js, you do _not_ need to use `vercel.json`. Instead, use the framework-native `next.config.js` to define configuration-based redirects.\n\n```\nmodule.exports = {\n  async redirects() {\n    return [\n      {\n        source: '/about',\n        destination: '/',\n        permanent: true,\n      },\n      {\n        source: '/old-blog/:slug',\n        destination: '/news/:slug',\n        permanent: true,\n      },\n      {\n        source: '/:path((?!uk/).*)',\n        has: [\n          {\n            type: 'header',\n            key: 'x-vercel-ip-country',\n            value: 'GB',\n          },\n        ],\n        permanent: false,\n        destination: '/uk/:path*',\n      },\n    ];\n  },\n};\n```\n\nLearn more in the [Next.js documentation](https://nextjs.org/docs/api-reference/next.config.js/redirects).\n\nWhen deployed, these redirect rules will be deployed to every [region](https://vercel.com/docs/edge-network/regions) in Vercel's Edge Network.\n\nVercel supports both temporary and permanent redirects.\n\n*   307 Temporary Redirect: Not cached by client, the method and body never changed. This type of redirect does not affect SEO and search engines will treat them as normal redirects.\n*   302 Found: Not cached by client, the method may or may not be changed to `GET`.\n*   308 Permanent Redirect: Cached by client, the method and body never changed. This type of redirect does not affect SEO and search engines will treat them as normal redirects.\n*   301 Moved Permanently: Cached by client, the method may or may not be changed to `GET`.\n\nWe recommend using status code `307` or `308` to avoid the ambiguity of non `GET` methods, which is necessary when your application needs to redirect a public API.\n\nIf you are exceeding the limits below, we recommend using Edge Middleware and Edge Config to [dynamically read redirect values](https://vercel.com/docs/edge-network/redirects#edge-middleware).\n\n| Limit | Maximum |\n| --- | --- |\n| Number of redirects in the array | 1,024 |\n| String length for `source` and `destination` | 4,096 |\n\nThere are some best practices to keep in mind when implementing redirects in your application:\n\n1.  Test thoroughly: Test your redirects thoroughly to ensure they work as expected. Use a [preview deployment](https://vercel.com/docs/deployments/preview-deployments) to test redirects before deploying them to production\n2.  Use relative paths: Use relative paths in your `destination` field to avoid hardcoding your domain name\n3.  Use permanent redirects: Use [permanent redirects](#adding-redirects) for permanent URL changes and [temporary redirects](#adding-redirects) for temporary changes\n4.  Use wildcards carefully: Wildcards can be powerful but should be used with caution. For example, if you use a wildcard in a source rule that matches any URL path, you could inadvertently redirect all incoming requests to a single destination, effectively breaking your site.\n5.  Prioritize HTTPS: Use redirects to enforce HTTPS for all requests to your domain",
  "title": "Redirects",
  "description": "Learn how to use redirects on Vercel to instruct Vercel's platform to redirect incoming requests to a new URL.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/rewrites",
  "markdown": "# Rewrites on Vercel\n\nRewrites allow you to send users to different URLs without modifying the visible URL. They allow you to change the URL path, query parameters, and headers of the request before it reaches your server.\n\nYou can also use them to return different responses depending on the headers of the incoming request (such as User-Agent, which contains the type of device and browser that the request originated from).\n\nThe /.well-known path is reserved and cannot be redirected or rewritten. Only Enterprise teams can configure custom SSL. [Contact sales](https://vercel.com/contact/sales) to learn more.\n\nRewrites are defined in a `vercel.json` file, which is located in the root of your application. For more information on all available properties, see the [project configuration](https://vercel.com/docs/projects/project-configuration#rewrites) docs.\n\nHere's an example of a `vercel.json` file that rewrites to an external destination:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/api/:path*\",\n      \"destination\": \"https://api.example.com/:path*\"\n    }\n  ]\n}\n```\n\nIn this example, `source` defines the incoming path pattern to match, and `destination` defines the URL to rewrite to. The `:path*` syntax is a wildcard that captures any path after `/api/` and passes it to the `destination` URL.\n\n* * *\n\nIn the second example below, the rule rewrites incoming requests for `/resize/:width/:height` to `/api/sharp`:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/resize/:width/:height\",\n      \"destination\": \"/api/sharp\"\n    }\n  ]\n}\n```\n\nIn this example, `/api/sharp` could be a [Serverless Function](https://vercel.com/docs/functions/serverless-functions) that processes image resizing requests. For example, `/resize/100/50` would be rewritten to `/api/sharp?width=100&height=50`.\n\n* * *\n\nIn the third example below, the rule rewrites requests to any path that does not start with `uk/` and has a `x-vercel-ip-country` header value of `GB` to a corresponding path under `/uk/`:\n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/:path((?!uk/).*)\",\n      \"has\": [\n        {\n          \"type\": \"header\",\n          \"key\": \"x-vercel-ip-country\",\n          \"value\": \"GB\"\n        }\n      ],\n      \"destination\": \"/uk/:path*\"\n    }\n  ]\n}\n```\n\nIn this example, a request to `/about` would be rewritten to `/uk/about`. This rule also uses a `has` key to specify a condition that must be met for the rewrite to be applied. In this case, the condition is that the request must include a `x-vercel-ip-country` header with a value of `GB`. This allows the rewrite rule to apply only to requests coming from the UK, while leaving other requests unaffected.\n\nVercel supports many of the most popular frontend frameworks, but rewrite support varies. Frameworks that use client-side routing, or other routing techniques that don't hit proxies, may demonstrate inconsistent behavior.\n\nRead your preferred framework's documentation to understand how its routing works. You can also read [our dedicated framework docs](https://vercel.com/docs/frameworks) to learn if there are any nuances to using your preferred framework with Vercel's rewrites.\n\nSome examples of frameworks that don't support rewrites with `vercel.json` include:\n\nWhen implementing rewrites on Vercel, there are several best practices to keep in mind:\n\n1.  Use Descriptive Source and Destination URLs: Source and destination URLs should be descriptive. This helps you and other developers quickly understand what the rule is doing.\n    \n2.  Be Careful with Wildcards: Wildcards can be powerful, but they can also be dangerous if not used carefully. Make sure you fully understand the implications of using a wildcard before implementing it\n    \n3.  Use Regex for Complex Patterns: For more complex routing scenarios, use regular expressions in the `source` field to match specific patterns. Here's an example that rewrites all requests from `/api/*` or `/v1/*` to `https://api.example.com/*`:\n    \n\n```\n{\n  \"rewrites\": [\n    {\n      \"source\": \"/(api|v1)/:path*\",\n      \"destination\": \"https://api.example.com/:path*\"\n    }\n  ]\n}\n```\n\n4.  Test Your Rewrites: Always test your rewrites thoroughly before deploying them to production. You can use a [preview deployment](https://vercel.com/docs/deployments/preview-deployments) to test your rewrites in a staging environment before deploying them to your live site",
  "title": "Rewrites on Vercel",
  "description": "Learn how to use rewrites to send users to different URLs without modifying the visible URL.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/pricing",
  "markdown": "# Edge Network Pricing\n\nVercel's Edge Network pricing is divided into three resources:\n\n*   Fast Data Transfer: Data transfer between the Vercel Edge Network and the user's device\n*   Fast Origin Transfer: Data transfer between the Edge Network and Vercel Functions\n*   Edge Requests: Requests made to the Edge Network\n\nAll resources are billed based on usage with each plan having an [included allotment](https://vercel.com/docs/pricing). Those on the Pro plan are billed according to additional allotments.\n\nThe pricing for each resource is based on the region requests to your site come from. Use the dropdown to select your preferred region and see the pricing for each resource.\n\nThe table below shows the metrics for the [Networking](https://vercel.com/docs/pricing/networking) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize networking usage](https://vercel.com/docs/pricing/networking) section for more information on how to optimize your usage.",
  "title": "Edge Network Pricing",
  "description": "Vercel's Edge Network enables you to store content close to your customers and run compute in regions close to your data, reducing latency and improving end-user performance.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/OPTIMIZED_EXTERNAL_IMAGE_REQUEST_FAILED",
  "markdown": "# OPTIMIZED\\_EXTERNAL\\_IMAGE\\_REQUEST\\_FAILED\n\nThe `OPTIMIZED_EXTERNAL_IMAGE_REQUEST_FAILED` error occurs when the request for an optimized external image fails.",
  "title": "OPTIMIZED_EXTERNAL_IMAGE_REQUEST_FAILED",
  "description": "The request for an optimized external image failed. This is a server error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/OPTIMIZED_EXTERNAL_IMAGE_TOO_MANY_REDIRECTS",
  "markdown": "# OPTIMIZED\\_EXTERNAL\\_IMAGE\\_TOO\\_MANY\\_REDIRECTS\n\nThe `OPTIMIZED_EXTERNAL_IMAGE_TOO_MANY_REDIRECTS` error occurs when the external image request encounters too many redirects.",
  "title": "OPTIMIZED_EXTERNAL_IMAGE_TOO_MANY_REDIRECTS",
  "description": "The external image request encountered too many redirects. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_OPTIMIZED_IMAGE_REQUEST_FAILED",
  "markdown": "# INTERNAL\\_OPTIMIZED\\_IMAGE\\_REQUEST\\_FAILED\n\nThe `INTERNAL_OPTIMIZED_IMAGE_REQUEST_FAILED` error occurs when the request for an internally optimized image fails.",
  "title": "INTERNAL_OPTIMIZED_IMAGE_REQUEST_FAILED",
  "description": "The request for an internally optimized image failed. This is a server error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/OPTIMIZED_EXTERNAL_IMAGE_REQUEST_UNAUTHORIZED",
  "markdown": "# OPTIMIZED\\_EXTERNAL\\_IMAGE\\_REQUEST\\_UNAUTHORIZED\n\nThe `OPTIMIZED_EXTERNAL_IMAGE_REQUEST_UNAUTHORIZED` error occurs when the external image request is unauthorized.",
  "title": "OPTIMIZED_EXTERNAL_IMAGE_REQUEST_UNAUTHORIZED",
  "description": "The external image request is unauthorized. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/infrastructure",
  "markdown": "# Infrastructure\n\nUsing your preferred [framework](https://vercel.com/docs/frameworks), you can take advantage of Vercel's [framework-defined infrastructure](https://vercel.com/blog/framework-defined-infrastructure), which is optimized to your needs.\n\nVercel's Edge Network enables you to store content and run compute in regions close to your customers or your data, reducing latency and improving end-user performance.\n\nVercel Functions enable running code on-demand without needing to manage your own infrastructure, provision servers, or upgrade hardware.\n\nLearn how you can use Edge Middleware, code that executes before a request is processed on a site, to provide speed and personalization to your users.\n\nVercel offers built-in image optimization capabilities that can help you serve high-quality images with minimal impact on page load times.\n\nLearn how Vercel's Incremental Static Regeneration (ISR) provides better performance and faster builds.\n\nLearn about caching on Vercel's Edge Network.\n\nLearn how to use Data Caching to cache static data.\n\nCron jobs are time-based scheduling tools used to automate repetitive tasks. When a cron job is triggered through the cron expression, it calls a Vercel Function.",
  "title": "Infrastructure",
  "description": "Vercel's infrastructure scales as needed, depending on the demand from your users.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/BODY_NOT_A_STRING_FROM_FUNCTION",
  "markdown": "# BODY\\_NOT\\_A\\_STRING\\_FROM\\_FUNCTION\n\nThe `BODY_NOT_A_STRING_FROM_FUNCTION` error occurs when a function returns a body that is not a string. It's essential that functions return a string body to ensure that they can be correctly processed and executed.",
  "title": "BODY_NOT_A_STRING_FROM_FUNCTION",
  "description": "The function returned a non-string body. This is a function error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/edge-network/frequently-asked-questions",
  "markdown": "# Edge Network Frequently Asked Questions (FAQ)\n\nStatic files are cached by all regions for up to 31 days. You can override this duration by setting a `Cache-Control` header in the [headers](https://vercel.com/docs/projects/project-configuration#headers) property in a `vercel.json` file.\n\nDynamic responses (from Serverless Functions) are not cached unless they contain a `Cache-Control` header with specific directives (e.g. `s-maxage`).\n\nYou can read more about file caching in the [cache documentation](https://vercel.com/docs/edge-network/caching).\n\nYou can control how the Vercel Edge Network caches your responses by setting a `Cache-Control` header.\n\nThe transition is painless. All you have to do is configure DNS records to our [DNS infrastructure](https://vercel.com/docs/projects/domains/add-a-domain#configure-the-domain).\n\nYou can create a new deployment to invalidate the cache for your [Preview](https://vercel.com/docs/deployments/preview-deployments) and [Production](https://vercel.com/docs/deployments/environments#production) Deployments. Content will remain cached for preview URLs until it expires.\n\nYou can read more about our caching limits in the [caching documentation](https://vercel.com/docs/edge-network/caching#limits).\n\nUsing the `vercel dev` [command](https://vercel.com/docs/cli/dev) through [Vercel CLI](https://vercel.com/docs/cli) will allow you to run your applications with additional Vercel Edge Network logic.\n\nUsing `vercel dev` is not necessary with Next.js applications — the Vercel Edge Network logic is already built-in with the `next dev` command.\n\nThe first request is served synchronously. Subsequent requests are served from the cache and revalidated asynchronously if the cache is \"stale\".\n\nYou can read more about this in the [`stale-while-revalidate` documentation](https://vercel.com/docs/edge-network/headers#stale-while-revalidate).\n\n`s-maxage` is the number of seconds a response is considered \"fresh\" by the Vercel Edge Network. After this period ends, the Vercel Edge Network will serve the \"stale\" response from the edge until the response is asynchronously revalidated with a \"fresh\" response to your Serverless Function.\n\nWe strip the `stale-while-revalidate` directive from your `Cache-Control` so browsers do not get it. This will allow you to deliver the latest content to your visitors right after creating a new deployment (as opposed to waiting for browser cache to expire).\n\nYou can find the full list of our regions in the [regions documentation](https://vercel.com/docs/edge-network/regions).\n\nUsers who visit your deployments will automatically use the region that is geographically closest to them.\n\nServerless Functions execute in the default region (`iad1`), unless you [change this](https://vercel.com/docs/functions/configuring-functions/region#setting-your-default-region). Edge Functions execute in the region closest to your user, unless you [specify a different region](https://vercel.com/docs/functions/configuring-functions/region#setting-regions-in-your-function). You can see the functions's region by selecting the Functions tab and choosing the function from the drop-down.\n\nTo learn about the region your deployment is built in, you can view the [build logs](https://vercel.com/docs/deployments/logs). See [Builds](https://vercel.com/docs/deployments/builds) to learn more about the build process.\n\n[Vercel mitigates against L3 and L4 DDoS attacks](https://vercel.com/docs/security/ddos-mitigation#open-system-interconnection-osi-model) at the platform level. Usage will be incurred for requests that are successfully served prior to us automatically mitigating the event. Mitigation usually takes place within one minute.\n\nUsage will be incurred for requests that are not recognized as a DDoS event, such as bot and crawler traffic.\n\nYou should [monitor your usage](https://vercel.com/docs/observability) and utilize [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) to protect against undesired traffic based on its IP, `User-Agent` header value, or other identifiers.\n\nYes, Vercel supports [Image Optimization](https://vercel.com/docs/image-optimization) integrated into frameworks like Next.js and Nuxt with zero configuration.\n\nYou will need to use `Origin Control: Off` along with other custom caching rules in Cloudflare. You will also need to set `s-maxage` to `0` with the [headers](https://vercel.com/docs/projects/project-configuration#headers) property in a `vercel.json` file to disable any caching from the Vercel Edge Network.\n\nWhen you create a new deployment, you will have to find a way to purge Cloudflare's cache.",
  "title": "Edge Network Frequently Asked Questions (FAQ)",
  "description": "A list of frequently asked questions and answers related to the Vercel Edge Network.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/EDGE_FUNCTION_INVOCATION_FAILED",
  "markdown": "# EDGE\\_FUNCTION\\_INVOCATION\\_FAILED\n\nThe `EDGE_FUNCTION_INVOCATION_FAILED` error occurs when there is an issue with the Edge Function being invoked on the Edge Network. This error can be caused by a variety of issues, including unhandled exceptions, timeouts, or malformed requests.\n\n500\n\n`EDGE_FUNCTION_INVOCATION_FAILED`\n\nInternal Server Error\n\nTo troubleshoot this error, follow these steps:\n\n1.  Check application logs: Review the application logs to identify any specific errors related to the Edge Function being invoked. They can be found at the host URL under [the `/_logs` path](https://vercel.com/docs/deployments/build-features#logs-view)\n2.  Review deployment configuration: Double-check the deployment configuration to ensure that the Edge Function is being deployed correctly\n3.  Investigate build errors: If the error occurs during the build process, troubleshoot any build errors that might be preventing the necessary resources from being deployed.\n4.  Check function code: Ensure that the code for the Edge Function is correct and does not contain any errors or infinite loops\n5.  Use Vercel's status page: If you have tried the steps above and are still experiencing the error, check Vercel's [status page](https://www.vercel-status.com/) for any reported outages in the Edge Network, which can sometimes cause this error",
  "title": "EDGE_FUNCTION_INVOCATION_FAILED",
  "description": "The request for a Edge Function was not completed successfully. This is an application error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_CACHE_KEY_TOO_LONG",
  "markdown": "# INTERNAL\\_CACHE\\_KEY\\_TOO\\_LONG\n\nThe `INTERNAL_CACHE_KEY_TOO_LONG` error occurs when the Edge Network is unable to fetch from the internal cache due to a cache key being too long. This error can be caused by a request URL that is too long.",
  "title": "INTERNAL_CACHE_KEY_TOO_LONG",
  "description": "The Edge Network is failing to fetch from the internal cache due to a cache key being too long. This error can be caused by a request URL that is too long.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_CACHE_ERROR",
  "markdown": "# INTERNAL\\_CACHE\\_ERROR\n\nThe `INTERNAL_CACHE_ERROR` error occurs during an unexpected issue in the Edge Network while retrieving data from the Vercel cache.",
  "title": "INTERNAL_CACHE_ERROR",
  "description": "An unexpected error happened when Edge Network is fetching data from the Vercel cache.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_EDGE_FUNCTION_INVOCATION_FAILED",
  "markdown": "# INTERNAL\\_EDGE\\_FUNCTION\\_INVOCATION\\_FAILED\n\nThe `INTERNAL_EDGE_FUNCTION_INVOCATION_FAILED` error occurs when there is an issue with the Edge Function being invoked on the Edge Network. This error can be caused by a variety of internal issues.\n\nWhile this error can be caused by a variety of issues, it's transient and retrying the request will succeed. If the error persists, [contact support](https://vercel.com/help) along with the request ID on the error page.",
  "title": "INTERNAL_EDGE_FUNCTION_INVOCATION_FAILED",
  "description": "The request for a Edge Function was not completed successfully due to an internal error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_EDGE_FUNCTION_INVOCATION_TIMEOUT",
  "markdown": "# INTERNAL\\_EDGE\\_FUNCTION\\_INVOCATION\\_TIMEOUT\n\nThe `INTERNAL_EDGE_FUNCTION_INVOCATION_TIMEOUT` error occurs when an Edge Function takes longer than the allowed execution time to complete. This can be caused by long-running processes within the function or external dependencies that fail to respond in a timely manner.",
  "title": "INTERNAL_EDGE_FUNCTION_INVOCATION_TIMEOUT",
  "description": "The Edge Function invocation timed out unexpectedly.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_CACHE_LOCK_FULL",
  "markdown": "# INTERNAL\\_CACHE\\_LOCK\\_FULL\n\nThe `INTERNAL_CACHE_LOCK_FULL` error occurs when Edge Network is accessing internal cache. This error is usually caused by a temporary issue with the internal cache.",
  "title": "INTERNAL_CACHE_LOCK_FULL",
  "description": "An unexpected error happened when Edge Network is accessing internal cache.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_CACHE_LOCK_TIMEOUT",
  "markdown": "# INTERNAL\\_CACHE\\_LOCK\\_TIMEOUT\n\nThe `INTERNAL_CACHE_LOCK_TIMEOUT` error occurs when Edge Network is accessing internal cache.\n\n[\n\n### Not what you were looking for?\n\nTry filtering the errors by tag, code, or name on the Error Codes page.\n\n\n\n](https://vercel.com/docs/errors)",
  "title": "INTERNAL_CACHE_LOCK_TIMEOUT",
  "description": "An unexpected error happened when Edge Network is accessing internal cache.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/FUNCTION_INVOCATION_FAILED",
  "markdown": "# FUNCTION\\_INVOCATION\\_FAILED\n\nThe `FUNCTION_INVOCATION_FAILED` error occurs when a function invocation fails. This could be due to an error within the function itself, or an issue with the environment in which the function is running.",
  "title": "FUNCTION_INVOCATION_FAILED",
  "description": "The invocation of a function failed. This is a function error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/FUNCTION_PAYLOAD_TOO_LARGE",
  "markdown": "# FUNCTION\\_PAYLOAD\\_TOO\\_LARGE\n\nThe `FUNCTION_PAYLOAD_TOO_LARGE` error occurs when the payload sent to a function exceeds the maximum allowed size. This typically happens when the data sent in the request body to a serverless function is larger than the server can process.",
  "title": "FUNCTION_PAYLOAD_TOO_LARGE",
  "description": "The payload sent to the function is too large. This is a function error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_MISSING_RESPONSE_FROM_CACHE",
  "markdown": "# INTERNAL\\_MISSING\\_RESPONSE\\_FROM\\_CACHE\n\nThe `INTERNAL_MISSING_RESPONSE_FROM_CACHE` error occurs when an unexpected error happened during the Edge Network accessing the internal cache.",
  "title": "INTERNAL_MISSING_RESPONSE_FROM_CACHE",
  "description": "This error indicates a missing response from the cache during a deployment or build process.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/FUNCTION_INVOCATION_TIMEOUT",
  "markdown": "# FUNCTION\\_INVOCATION\\_TIMEOUT\n\nThe `FUNCTION_INVOCATION_TIMEOUT` error occurs when a function invocation takes longer than the [allowed execution time](https://vercel.com/docs/functions/runtimes#max-duration). This could be due to an error within the function itself, a slow network call, or an issue with the environment in which the function is running.\n\n504\n\n`FUNCTION_INVOCATION_TIMEOUT`\n\nGateway Timeout\n\nTo troubleshoot this error, follow these steps:\n\n1.  The function is taking too long to process a request: Check that any API, or database requests you make in your function, are responding within the [Serverless Function maximum duration](https://vercel.com/docs/functions/serverless-functions/runtimes#maxduration) limit applicable to your plan\n    *   You can configure the maximum duration by using the `maxDuration` property. See the [maxDuration](https://vercel.com/docs/functions/serverless-functions/runtimes#maxduration) section for more information\n    *   If you require a longer execution, [Edge Functions](https://vercel.com/docs/functions/edge-functions) provide an alternative that only require an [initial response](https://vercel.com/docs/functions/runtimes#max-duration) within 25 seconds and allow you to [continue streaming responses](https://vercel.com/docs/functions/streaming) after that time\n2.  The function isn't returning a response: The function must return an HTTP response, even if that response is an error. If no response is returned, the function will time out\n3.  You have an infinite loop within your function: Check that your function is not making an infinite loop at any stage of execution\n4.  Upstream errors: Check that any external API or database that you are attempting to call doesn't have any errors\n5.  A common cause for this issue is when the application contains an unhandled exception. Check the application logs, which can be found at the host URL under [the `/_logs` path](https://vercel.com/docs/deployments/build-features#logs-view), for example:\n\n```\nhttps://my-deployment-my-username.vercel.app/_logs\n```\n\nFor more information on Serverless Functions timeouts, see [What can I do about Vercel Serverless Functions timing out?](https://vercel.com/guides/what-can-i-do-about-vercel-serverless-functions-timing-out)",
  "title": "FUNCTION_INVOCATION_TIMEOUT",
  "description": "The request for a Serverless Function reached the timeout threshold. This is an application error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/FUNCTION_RESPONSE_PAYLOAD_TOO_LARGE",
  "markdown": "# FUNCTION\\_RESPONSE\\_PAYLOAD\\_TOO\\_LARGE\n\nThe `FUNCTION_RESPONSE_PAYLOAD_TOO_LARGE` error occurs when the function returned a response that exceeds the maximum allowed size of 4.5 MB.",
  "title": "FUNCTION_RESPONSE_PAYLOAD_TOO_LARGE",
  "description": "The function returned a response that is too large. This is a function error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_FUNCTION_INVOCATION_TIMEOUT",
  "markdown": "# INTERNAL\\_FUNCTION\\_INVOCATION\\_TIMEOUT\n\nThe `INTERNAL_FUNCTION_INVOCATION_TIMEOUT` error occurs when a function invocation takes longer than the allowed execution time. This could be due to an error within the function itself, a slow network call, or an issue with the environment in which the function is running.\n\n504\n\n`INTERNAL_FUNCTION_INVOCATION_TIMEOUT`\n\nGateway Timeout\n\nTo troubleshoot this error, follow these steps:\n\n1.  The function is taking too long to process a request: Check that any API, or database requests you make in your function, are responding within the [Serverless Function maximum duration](https://vercel.com/docs/functions/serverless-functions/runtimes#maxduration) limit applicable to your plan\n    *   You can configure the maximum duration by using the `maxDuration` property. See the [maxDuration](https://vercel.com/docs/functions/serverless-functions/runtimes#maxduration) section for more information\n    *   If you require a longer execution, [Edge Functions](https://vercel.com/docs/functions/edge-functions) provide an alternative that only require an [initial response](https://vercel.com/docs/functions/runtimes#max-duration) within 25 seconds and allow you to [continue streaming responses](https://vercel.com/docs/functions/streaming) after that time\n2.  The function isn't returning a response: The function must return an HTTP response, even if that response is an error. If no response is returned, the function will time out\n3.  You have an infinite loop within your function: Check that your function is not making an infinite loop at any stage of execution\n4.  Upstream errors: Check that any external API or database that you are attempting to call doesn't have any errors\n5.  A common cause for this issue is when the application contains an unhandled exception. Check the application logs, which can be found at the host URL under [the `/_logs` path](https://vercel.com/docs/deployments/build-features#logs-view), for example:\n\n```\nhttps://my-deployment-my-username.vercel.app/_logs\n```\n\nFor more information on Serverless Functions timeouts, see [What can I do about Vercel Serverless Functions timing out?](https://vercel.com/guides/what-can-i-do-about-vercel-serverless-functions-timing-out)",
  "title": "INTERNAL_FUNCTION_INVOCATION_TIMEOUT",
  "description": "The internal invocation of a function timed out. This is Vercel's error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_FUNCTION_INVOCATION_FAILED",
  "markdown": "# INTERNAL\\_FUNCTION\\_INVOCATION\\_FAILED\n\nThe `INTERNAL_FUNCTION_INVOCATION_FAILED` error occurs when a function invocation fails. This could be due to an error within the function itself, or an issue with the environment in which the function is running.",
  "title": "INTERNAL_FUNCTION_INVOCATION_FAILED",
  "description": "The internal invocation of a function failed. This is Vercel's error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/EDGE_FUNCTION_INVOCATION_TIMEOUT",
  "markdown": "# EDGE\\_FUNCTION\\_INVOCATION\\_TIMEOUT\n\nThe `EDGE_FUNCTION_INVOCATION_TIMEOUT` error occurs when an Edge Function takes longer than the allowed execution time to complete or doesn't send a response chunk for a certain amount of time. This can be caused by long-running processes within the function or external dependencies that fail to respond in a timely manner.\n\nIf your backend API takes time to respond, we recommend [streaming the response](https://vercel.com/docs/functions/streaming/streaming-examples) to avoid the idle timeout.\n\n504\n\n`EDGE_FUNCTION_INVOCATION_TIMEOUT`\n\nGateway Timeout\n\nTo troubleshoot this error, follow these steps:\n\n1.  Check application logs: Review the application logs to identify any specific errors related to the Edge Function being invoked. They can be found at the host URL under [the `/_logs` path](https://vercel.com/docs/deployments/build-features#logs-view)\n2.  Review function code: Inspect the Edge Function code for any long-running operations or infinite loops that could cause a timeout\n3.  Verify return value: Ensure the function returns a response within the specified time limit of [25 seconds](https://vercel.com/docs/functions/runtimes#max-duration)\n4.  Optimize external calls: If the function makes calls to external services or APIs, ensure they are optimized and responding quickly\n5.  Consider streaming data: If the function is processing large amounts of data, consider using a [streaming approach](https://vercel.com/docs/functions/streaming) to avoid timeouts\n6.  Implement error handling: Add error handling in the function to manage timeouts and other exceptions effectively",
  "title": "EDGE_FUNCTION_INVOCATION_TIMEOUT",
  "description": "The Edge Function invocation timed out. This is an application error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/FUNCTION_RATE_LIMIT",
  "markdown": "# FUNCTION\\_RATE\\_LIMIT\n\nThe `FUNCTION_RATE_LIMIT` error occurs when the limit of concurrent executions for Serverless Functions has been reached, and the request triggers a new instance of the function, which results in two concurrent functions running at the same time. For more information see [What should I do if I receive a 429 error on Vercel?](https://vercel.com/guides/what-should-i-do-if-i-receive-a-429-error-on-vercel)",
  "title": "FUNCTION_RATE_LIMIT",
  "description": "The function you are trying to call has exceeded the rate limit.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DNS_HOSTNAME_NOT_FOUND",
  "markdown": "# DNS\\_HOSTNAME\\_NOT\\_FOUND\n\nThe `DNS_HOSTNAME_NOT_FOUND` error occurs when there's an `NXDOMAIN` error during the DNS resolution while attempting to connect to a private IP from an external rewrite. This error indicates that the domain being requested does not exist.",
  "title": "DNS_HOSTNAME_NOT_FOUND",
  "description": "The domain does not exist, resulting in an NXDOMAIN error during DNS resolution. This is a DNS error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DNS_HOSTNAME_RESOLVE_FAILED",
  "markdown": "# DNS\\_HOSTNAME\\_RESOLVE\\_FAILED\n\nThe `DNS_HOSTNAME_RESOLVE_FAILED` error occurs when attempting to connect to a private IP from an external rewrite. Although there's no error with the DNS resolution, no IP address is returned. This could be due to an issue with the domain name being queried, corrupted or malformed DNS responses, or network issues.\n\n502\n\n`DNS_HOSTNAME_RESOLVE_FAILED`\n\nBad Gateway\n\nTo troubleshoot this error, follow these steps:\n\n1.  Check the domain name: Ensure that the [domain name](https://vercel.com/docs/projects/domains/view-and-search-domains) you are trying to resolve is spelled correctly and is a valid domain. Typos or incorrect domain names can lead to DNS lookup failures\n2.  Check DNS configuration: Verify the [configuration](https://vercel.com/docs/projects/domains/working-with-dns) of the DNS server and ensure it is set up correctly\n3.  Firewall and security software: Check if any firewall or security software on your system is blocking DNS requests. Ensure that the DNS queries are allowed through your firewall\n4.  Inspect network connectivity: Ensure that there are no network issues that could be affecting the DNS resolution",
  "title": "DNS_HOSTNAME_RESOLVE_FAILED",
  "description": "No error with the DNS resolution but no IP was returned. This is a DNS error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/NO_RESPONSE_FROM_FUNCTION",
  "markdown": "# NO\\_RESPONSE\\_FROM\\_FUNCTION\n\nThe `NO_RESPONSE_FROM_FUNCTION` error occurs when a function invocation completes without returning a response. This might happen if the function encounters an error that prevents it from responding, or if it fails to generate a response within the allowed execution time.\n\nPotential causes include:\n\n*   A global uncaught exception\n*   A global unhandled rejection\n*   A deployment that introduced incorrect syntax\n\n502\n\n`NO_RESPONSE_FROM_FUNCTION`\n\nBad Gateway\n\nTo troubleshoot this error, follow these steps:\n\n1.  Verify return statements: Ensure that the function has the necessary return statements to generate a response\n2.  Check the function logs: Open the [realtime request logs](https://vercel.com/guides/where-are-vercel-logs#function-logs) for the application in a separate tab - this tab must be kept open while reproducing the error\n3.  Review realtime logs: Repeat the application behavior that led to the error being thrown and review the realtime request logs where it will now show\n    *   Use the information contained within the error logs to understand where the function is failing\n4.  Use log drains: If you're yet to implement a [Log Drain](https://vercel.com/docs/observability/log-drains), you can create one to persist errors from Serverless Functions\n5.  Check external dependencies: If the function relies on external services or APIs, ensure they are responding in a timely manner",
  "title": "NO_RESPONSE_FROM_FUNCTION",
  "description": "The application did not respond correctly, this is likely due to an exception being thrown from the function handler.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_FUNCTION_NOT_READY",
  "markdown": "# INTERNAL\\_FUNCTION\\_NOT\\_READY\n\nThe `INTERNAL_FUNCTION_NOT_READY` error occurs when an attempt is made to invoke a function before it is ready to accept requests. This might happen if the function is still being deployed, initialized, or if there is a misconfiguration preventing the function from becoming ready.\n\n500\n\n`INTERNAL_FUNCTION_NOT_READY`\n\nInternal Server Error\n\nTo troubleshoot this error, follow these steps:\n\n1.  Verify deployment status: Ensure that the function has been successfully deployed and the deployment process has completed\n2.  Check initialization logs: Review the function's initialization logs to identify any errors or warnings that might indicate why the function is not ready\n3.  Review configuration: Ensure that the function and environment configurations are correct and that there are no misconfigurations preventing the function from becoming ready\n4.  Check dependencies: Verify that all dependencies required by the function are available and correctly configured",
  "title": "INTERNAL_FUNCTION_NOT_READY",
  "description": "The internal function is not ready to be invoked. This is a Vercel error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DNS_HOSTNAME_RESOLVED_PRIVATE",
  "markdown": "# DNS\\_HOSTNAME\\_RESOLVED\\_PRIVATE\n\nThe `DNS_HOSTNAME_RESOLVED_PRIVATE` error occurs when attempting to connect to a private IP from an external rewrite, or when trying to connect to an IPv6 address. The error indicates that the DNS hostname resolved to a private or inaccessible IP address.",
  "title": "DNS_HOSTNAME_RESOLVED_PRIVATE",
  "description": "The DNS hostname resolved to a private IP address or an IPv6 address during an external rewrite. This is a DNS error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_FUNCTION_NOT_FOUND",
  "markdown": "# INTERNAL\\_FUNCTION\\_NOT\\_FOUND\n\nThe `INTERNAL_FUNCTION_NOT_FOUND` error occurs when an attempt to invoke a function fails because the function could not be found. This could happen if the function was not properly deployed, or if there is a misconfiguration in the function's settings or environment.",
  "title": "INTERNAL_FUNCTION_NOT_FOUND",
  "description": "The internal function could not be found. This is a Vercel's error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DEPLOYMENT_BLOCKED",
  "markdown": "# DEPLOYMENT\\_BLOCKED\n\nThe `DEPLOYMENT_BLOCKED` error occurs when a deployment is blocked due to certain conditions that prevent it from proceeding. This could happen due to various reasons such as configuration errors, account limitations, or policy violations.",
  "title": "DEPLOYMENT_BLOCKED",
  "description": "The deployment was blocked due to certain conditions. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DEPLOYMENT_DISABLED",
  "markdown": "# DEPLOYMENT\\_DISABLED\n\nThe `DEPLOYMENT_DISABLED` error occurs when a deployment is disabled due to certain conditions or configurations. This might happen if there's a manual intervention required, or a specific condition is met that triggers the disabling of the deployment.",
  "title": "DEPLOYMENT_DISABLED",
  "description": "The deployment is disabled. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DNS_HOSTNAME_SERVER_ERROR",
  "markdown": "# DNS\\_HOSTNAME\\_SERVER\\_ERROR\n\nThe `DNS_HOSTNAME_SERVER_ERROR` error occurs when attempting to connect to a private IP from an external rewrite. This error typically means that the DNS server was unable to fulfill the DNS request due to an internal issue or misconfiguration.",
  "title": "DNS_HOSTNAME_SERVER_ERROR",
  "description": "The DNS server was unable to fulfill the DNS request due to an internal issue or misconfiguration. This is a DNS error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DEPLOYMENT_NOT_FOUND",
  "markdown": "# DEPLOYMENT\\_NOT\\_FOUND\n\nThe `DEPLOYMENT_NOT_FOUND` error occurs when a request is made for a deployment that doesn't exist. This could happen if the deployment ID or URL is incorrect, or if the deployment has been deleted.",
  "title": "DEPLOYMENT_NOT_FOUND",
  "description": "The deployment was not found. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/TOO_MANY_FORKS",
  "markdown": "# TOO\\_MANY\\_FORKS\n\nThe `TOO_MANY_FORKS` error occurs when too many forks are generated while processing the request. This usually happens when matching too many conditional routes, which could lead to a loop or excessive resource usage.\n\nYou cannot have more than 5 `has` routes matched on a single path.",
  "title": "TOO_MANY_FORKS",
  "description": "An error occurred in the application when matching too many conditional routes. You cannot have more than 5 `has` routes matched on a single path.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DEPLOYMENT_NOT_READY_REDIRECTING",
  "markdown": "# DEPLOYMENT\\_NOT\\_READY\\_REDIRECTING\n\nThe `DEPLOYMENT_NOT_READY_REDIRECTING` error occurs when the requested deployment is not yet ready, and the request is redirected to the deployment status page.",
  "title": "DEPLOYMENT_NOT_READY_REDIRECTING",
  "description": "The deployment is not ready and is redirecting to another location. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/NOT_FOUND",
  "markdown": "# NOT\\_FOUND\n\nThe `NOT_FOUND` error occurs when a requested resource could not be found. This might happen if the resource has been moved, deleted, or if there is a typo in the URL.",
  "title": "NOT_FOUND",
  "description": "The requested resource was not found. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/TOO_MANY_FILESYSTEM_CHECKS",
  "markdown": "# TOO\\_MANY\\_FILESYSTEM\\_CHECKS\n\nThe `TOO_MANY_FILESYSTEM_CHECKS` error occurs when there are excessive filesystem checks while processing a request. This could happen during the routing process, especially when using rewrites, redirects, or any other configuration that requires checking the filesystem repeatedly.",
  "title": "TOO_MANY_FILESYSTEM_CHECKS",
  "description": "Too many filesystem checks occurred while processing the request. This is a routing error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/ROUTER_CANNOT_MATCH",
  "markdown": "# ROUTER\\_CANNOT\\_MATCH\n\nThe `ROUTER_CANNOT_MATCH` error occurs when the router is unable to match the requested route to any of the known patterns. This could happen due to a misconfiguration in the routing setup or an erroneous request path.",
  "title": "ROUTER_CANNOT_MATCH",
  "description": "The router cannot match the route to any of the known patterns. This is a routing error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_DEPLOYMENT_FETCH_FAILED",
  "markdown": "# INTERNAL\\_DEPLOYMENT\\_FETCH\\_FAILED\n\nThe `INTERNAL_DEPLOYMENT_FETCH_FAILED` error occurs when the system is unable to fetch the deployment. This could happen due to network issues, misconfigurations, or other internal errors that prevent the deployment data from being retrieved.",
  "title": "INTERNAL_DEPLOYMENT_FETCH_FAILED",
  "description": "Failed to fetch the internal deployment. This is a deployment error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_UNARCHIVE_FAILED",
  "markdown": "# INTERNAL\\_UNARCHIVE\\_FAILED\n\nThe `INTERNAL_UNARCHIVE_FAILED` error typically occurs when the platform encounters a problem trying to extract your deployment's archive. This issue often can be related to one of the following:",
  "title": "INTERNAL_UNARCHIVE_FAILED",
  "description": "Unarchiving of the deployment or resource failed. This is an internal error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_ROUTER_CANNOT_PARSE_PATH",
  "markdown": "# INTERNAL\\_ROUTER\\_CANNOT\\_PARSE\\_PATH\n\nThe `INTERNAL_ROUTER_CANNOT_PARSE_PATH` error occurs when the Edge Network has failed to parse application-specified URL, such as rewrite/redirection URLs.",
  "title": "INTERNAL_ROUTER_CANNOT_PARSE_PATH",
  "description": "The Edge Network has failed to parse application-specified URL, such as rewrite/redirection URLs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/ROUTER_EXTERNAL_TARGET_CONNECTION_ERROR",
  "markdown": "# ROUTER\\_EXTERNAL\\_TARGET\\_CONNECTION\\_ERROR\n\nThe `ROUTER_EXTERNAL_TARGET_CONNECTION_ERROR` error occurs when there is a connection error while routing to an external target. This could happen due to network issues, incorrect routing configuration, or the external target being unreachable.\n\n502\n\n`ROUTER_EXTERNAL_TARGET_CONNECTION_ERROR`\n\nBad Gateway\n\nTo troubleshoot this error, follow these steps:\n\n1.  Check network connectivity: Ensure that the network connectivity between your deployment and the external target is stable\n2.  Verify external target availability: Make sure the external target is online and reachable\n3.  Review routing configuration: Check the [routing configuration](https://vercel.com/docs/edge-network/redirects#configuration-redirects) to ensure that it is correctly set up to route to the external target\n4.  Inspect firewall settings: Verify that there are no firewall settings blocking the connection to the external target\n5.  Review application logs: Inspect the [application logs](https://vercel.com/docs/deployments/logs) for any warnings or errors related to routing or network connectivity",
  "title": "ROUTER_EXTERNAL_TARGET_CONNECTION_ERROR",
  "description": "Connection error occurred while routing to an external target. This is a routing error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/ROUTER_EXTERNAL_TARGET_ERROR",
  "markdown": "# ROUTER\\_EXTERNAL\\_TARGET\\_ERROR\n\nThe `ROUTER_EXTERNAL_TARGET_ERROR` error occurs when there is an error while routing to an external target. This could happen due to incorrect routing configuration, an erroneous response from the external target, or other issues affecting the routing process.\n\n502\n\n`ROUTER_EXTERNAL_TARGET_ERROR`\n\nBad Gateway\n\nTo troubleshoot this error, follow these steps:\n\n1.  Review routing configuration: Check the [routing configuration](https://vercel.com/docs/edge-network/redirects#configuration-redirects) to ensure that it is correctly set up to route to the external target\n2.  Verify external target availability: Make sure the external target is online and reachable\n3.  Check for errors in external target: Investigate the external target for any errors that might be causing the routing issue\n4.  Inspect firewall settings: Verify that there are no firewall settings blocking the connection to the external target\n5.  Review application logs: Inspect the [application logs](https://vercel.com/docs/deployments/logs) for any warnings or errors related to routing or the external target",
  "title": "ROUTER_EXTERNAL_TARGET_ERROR",
  "description": "Error occurred while routing to an external target. This is a routing error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/ROUTER_EXTERNAL_TARGET_HANDSHAKE_ERROR",
  "markdown": "# ROUTER\\_EXTERNAL\\_TARGET\\_HANDSHAKE\\_ERROR\n\nThe `ROUTER_EXTERNAL_TARGET_HANDSHAKE_ERROR` error occurs when a connection cannot be successfully established with an external target. This error may result from issues during the SSL handshake process or due to a timeout, and is often attributed to one of the following causes:",
  "title": "ROUTER_EXTERNAL_TARGET_HANDSHAKE_ERROR",
  "description": "Error in establishing a connection with an external target.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_UNEXPECTED_ERROR",
  "markdown": "# INTERNAL\\_UNEXPECTED\\_ERROR\n\nThe `INTERNAL_UNEXPECTED_ERROR` error occurs when an unexpected and unspecified internal error happens within the system. This type of error can be due to a variety of reasons, including system faults, unhandled exceptions, or unforeseen issues in the application.",
  "title": "INTERNAL_UNEXPECTED_ERROR",
  "description": "An unexpected internal error occurred. This is a general internal error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INFINITE_LOOP_DETECTED",
  "markdown": "# INFINITE\\_LOOP\\_DETECTED\n\nThe `INFINITE_LOOP_DETECTED` error occurs when an infinite loop is detected within the application. This error can occur when the application is making an infinite number of requests to itself, or when the application is making an infinite number of requests to an external API or database.",
  "title": "INFINITE_LOOP_DETECTED",
  "description": "An infinite loop was detected within the application.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/MALFORMED_REQUEST_HEADER",
  "markdown": "# MALFORMED\\_REQUEST\\_HEADER\n\nThe `MALFORMED_REQUEST_HEADER` error signifies that a request made to the server includes a header that is incorrectly formatted or contains invalid data. This could be due to syntax errors, incorrect header field names, or incompatible header values.",
  "title": "MALFORMED_REQUEST_HEADER",
  "description": "The MALFORMED_REQUEST_HEADER error occurs when a request contains an improperly formatted or invalid header. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/DNS_HOSTNAME_EMPTY",
  "markdown": "# DNS\\_HOSTNAME\\_EMPTY\n\nThe `DNS_HOSTNAME_EMPTY` error occurs when an empty DNS record is received as part of the DNS response while attempting to connect to a private IP from an external rewrite.",
  "title": "DNS_HOSTNAME_EMPTY",
  "description": "An empty DNS record was received as part of the DNS response. This is a DNS error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INVALID_REQUEST_METHOD",
  "markdown": "# INVALID\\_REQUEST\\_METHOD\n\nThe `INVALID_REQUEST_METHOD` error occurs when a request is made with a method that is either invalid or not supported by the server. This error typically happens when trying to use an HTTP method that the endpoint does not accept or recognize.",
  "title": "INVALID_REQUEST_METHOD",
  "description": "The request method used is invalid or not supported. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/ROUTER_TOO_MANY_HAS_SELECTIONS",
  "markdown": "# ROUTER\\_TOO\\_MANY\\_HAS\\_SELECTIONS\n\nThe `ROUTER_TOO_MANY_HAS_SELECTIONS` error occurs when the router encounters too many selections while processing the request. This could happen due to misconfiguration or a complex routing setup that exceeds the router's capabilities.",
  "title": "ROUTER_TOO_MANY_HAS_SELECTIONS",
  "description": "The router has too many selections. This is a routing error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/REQUEST_HEADER_TOO_LARGE",
  "markdown": "# REQUEST\\_HEADER\\_TOO\\_LARGE\n\nThe `REQUEST_HEADER_TOO_LARGE` error occurs when the size of the request headers in Edge Functions and [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) exceeds the allowed limits. Specifically, individual request headers must not exceed 16 KB, and the combined size of all headers, including the header names, must not exceed 32 KB.\n\nThis issue often arises from excessively large headers in a request. On Vercel, applications may have custom headers, which, if overly large, can trigger this error during server request processing.\n\nTo troubleshoot this error, follow these steps:\n\n1.  Limit header size: Ensure that the size of each request header does not exceed 16 KB\n2.  Manage total header size: Monitor and control the combined size of all headers, keeping it under 32 KB\n3.  Review cookies: Since cookies are included in the header, it's crucial to limit their size as part of the overall header size",
  "title": "REQUEST_HEADER_TOO_LARGE",
  "description": "Request header size exceeds the permissible limit.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/RANGE_END_NOT_VALID",
  "markdown": "# RANGE\\_END\\_NOT\\_VALID\n\nThe `RANGE_END_NOT_VALID` error occurs when the end value of the `Range` header in a request is invalid. This header is used to request a specific portion of a resource from the server, which is useful for operations like resuming downloads or streaming media.",
  "title": "RANGE_END_NOT_VALID",
  "description": "The end value of the Range header in the request is invalid. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/RANGE_MISSING_UNIT",
  "markdown": "# RANGE\\_MISSING\\_UNIT\n\nThe `RANGE_MISSING_UNIT` error occurs when the unit identifier of the `Range` header in a request is missing. The `Range` header is used to request a specific portion of a resource from the server, and the unit identifier indicates the unit in which the range is specified, such as bytes.\n\n416\n\n`RANGE_MISSING_UNIT`\n\nRequested Range Not Satisfiable\n\nTo troubleshoot this error, follow these steps:\n\n1.  Specify unit identifier: Ensure that the `Range` header in your request specifies a unit identifier like `bytes`\n2.  Check configuration: If the `Range` header values are being set automatically by some part of your system, check the configuration to ensure the unit identifier is being included\n3.  Verify syntax: Verify that the syntax of the `Range` header is correct and follows the format `unit=range-start-range-end`, for example, `bytes=0-999`\n4.  Debugging: If the error persists, log the `Range` header values in your server logs to debug and understand what values are being sent in requests",
  "title": "RANGE_MISSING_UNIT",
  "description": "The unit identifier of the Range header in the request is missing. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/RANGE_GROUP_NOT_VALID",
  "markdown": "# RANGE\\_GROUP\\_NOT\\_VALID\n\nThe `RANGE_GROUP_NOT_VALID` error occurs when the group value of the `Range` header in a request is invalid. This header is used to request a specific portion of a resource from the server, and the group value can be used to specify multiple ranges or a set of subranges.",
  "title": "RANGE_GROUP_NOT_VALID",
  "description": "The group value of the Range header in the request is invalid. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INTERNAL_STATIC_REQUEST_FAILED",
  "markdown": "# INTERNAL\\_STATIC\\_REQUEST\\_FAILED\n\nThe `INTERNAL_STATIC_REQUEST_FAILED` error is encountered when a request for a static file within the project cannot be completed. This can happen due to issues with the existence, deployment, or path of the static files.",
  "title": "INTERNAL_STATIC_REQUEST_FAILED",
  "description": "This error occurs when a request for a static file in a project fails.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/RESOURCE_NOT_FOUND",
  "markdown": "# RESOURCE\\_NOT\\_FOUND\n\nThe `RESOURCE_NOT_FOUND` error indicates that a requested resource is not available or cannot be found. This error typically arises when a request is made for a resource that either does not exist or is currently inaccessible.\n\n404\n\n`RESOURCE_NOT_FOUND`\n\nNot Found\n\nTo troubleshoot this error, follow these steps:\n\n1.  Verify resource existence: Confirm that the resource you're attempting to access exists. Check for any typos or errors in the resource name or path\n2.  Review access permissions: Ensure that your application or function has the necessary permissions to access the resource\n3.  Inspect resource path: Double-check the path or URL to the resource. Ensure it is correctly formatted and corresponds to the intended resource\n4.  Check application configuration: Review your application's configuration settings to ensure they are correctly set up to locate and access the resource\n5.  Review logs: Consult your [application logs](https://vercel.com/docs/observability/runtime-logs) for more details or clues as to why the resource could not be found. This can provide insights into whether the issue is due to an incorrect path, permissions, or other reasons\n\nAdditionally, the error can also occur in the context of the [Vercel REST API](https://vercel.com/docs/rest-api), where it is similar to the [HTTP 500 Internal Server Error](https://vercel.com/docs/rest-api/errors#resource-not-found). In this case, the error message will contain the details of the resource that could not be found.",
  "title": "RESOURCE_NOT_FOUND",
  "description": "This error signifies that a specified resource could not be located.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/RANGE_START_NOT_VALID",
  "markdown": "# RANGE\\_START\\_NOT\\_VALID\n\nThe `RANGE_START_NOT_VALID` error occurs when the start value of the `Range` header in a request is invalid. The `Range` header is used to request a specific portion of a resource from the server, and the start value should be a valid integer indicating the beginning of the requested range.",
  "title": "RANGE_START_NOT_VALID",
  "description": "The start value of the Range header in the request is invalid. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/RANGE_UNIT_NOT_SUPPORTED",
  "markdown": "# RANGE\\_UNIT\\_NOT\\_SUPPORTED\n\nThe `RANGE_UNIT_NOT_SUPPORTED` error occurs when the unit identifier of the `Range` header in a request is not supported by the server. The `Range` header is used to request a specific portion of a resource from the server, and the unit identifier indicates the unit in which the range is specified, such as bytes.\n\n416\n\n`RANGE_UNIT_NOT_SUPPORTED`\n\nRequested Range Not Satisfiable\n\nTo troubleshoot this error, follow these steps:\n\n1.  Verify supported Range units: Check the documentation for the server or service you are interacting with to determine the supported range units\n2.  Correct Range unit: If the `Range` header in your request specifies an unsupported unit, correct it to use a supported unit\n3.  Check configuration: If the `Range` header values are being set automatically by some part of your system, check the configuration to ensure a supported unit identifier is being used\n4.  Debugging: If the error persists, log the `Range` header values in your server logs to debug and understand what values are being sent in requests",
  "title": "RANGE_UNIT_NOT_SUPPORTED",
  "description": "The unit identifier of the Range header in the request is not supported. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/URL_TOO_LONG",
  "markdown": "# URL\\_TOO\\_LONG\n\nThe `URL_TOO_LONG` error occurs when the URL of the request exceeds the maximum length allowed by the Edge Network (14 KB). Long URLs can be a result of long query strings, lengthy path segments, or an excessive number of path segments.",
  "title": "URL_TOO_LONG",
  "description": "The URL of the request is too long. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/quickstart",
  "markdown": "# Vercel Functions Quickstart\n\nBuild your first Vercel Function in a few steps.\n\nIn this quickstart guide, you'll learn how to get started with Vercel Functions using your favorite [frontend framework](https://vercel.com/docs/frameworks) to:\n\n*   Create a function\n*   Choose a runtime to use for your function\n*   Run your function locally using the Vercel CLI\n*   Deploy your function to Vercel\n\n1.  You should have the latest version of Vercel CLI installed. To check your version, use `vercel --version`. To [install](https://vercel.com/docs/cli#installing-vercel-cli) or update Vercel CLI, use:\n    \n2.  You should have an existing project. If you don't have one, you can run the following terminal command to create a Next.js project:\n    \n    ```\n    npx create-next-app@latest --typescript\n    ```\n    \n\nSelect your preferred framework to get started from the switcher on the top-right of the page. The implementation of the function will differ depending on the framework you choose.\n\n1.  In the `app` directory:\n    \n    Create `/api/hello/route.ts`\n    \n    Then, add the following code, which will return the region the function was executed in:\n    \n    ```\n    export const dynamic = 'force-dynamic'; // static by default, unless reading the request\n     \n    export function GET(request: Request) {\n      return new Response(`Hello from ${process.env.VERCEL_REGION}`);\n    }\n    ```\n    \n    To learn more about how to write a function, see the [Functions API Reference](https://vercel.com/docs/functions/functions-api-reference).\n    \n2.  You can optionally choose a runtime for your Function. If you don't specify a runtime, Vercel will automatically use the Serverless Node.js runtime:\n    \n    ```\n    export const runtime = 'nodejs';\n    ```\n    \n    In the above code, you export a [segment config option](https://nextjs.org/docs/app/building-your-application/routing/router-handlers#segment-config-options), allowing us to define the runtime. The [runtime configuration](https://vercel.com/docs/functions/configuring-functions/runtime) can be `nodejs` or `edge`. See [Choosing a Runtime](https://vercel.com/docs/functions/runtimes) for more information on the differences between the runtimes.\n    \n    You can also choose other languages like Python or Go. Learn more about [supported runtimes](https://vercel.com/docs/functions/runtimes).\n    \n3.  Use `next dev` to start a local development server:\n    \n    Navigate to the route you created (e.g. `/api/hello`) in your browser to see the following response:\n    \n    When you run your function locally, the `VERCEL_REGION` environment variable hadn't yet been defined. When you deploy your function to Vercel, the `VERCEL_REGION` environment variable will be defined and will contain the region the function was executed in.\n    \n4.  If your project has already been deployed to Vercel, push your changes to your Git repository and Vercel will automatically deploy your function. If you haven't deployed your project to Vercel, either create a new project in the [dashboard](https://vercel.com/new) or using the `vercel` command with the [Vercel CLI](https://vercel.com/docs/cli/deploying-from-cli#deploying-from-source).\n    \n    You can use the `env` [command](https://vercel.com/docs/cli/env) to pull the latest environment variables for your project so they can be used locally.\n    \n    Once you've successfully deployed, view the deployment and navigate to the route you created (e.g. `/api/hello`) in your browser to see the following response:\n    \n    If you chose to set `region` to `edge`, you'll see the response from the region closest to you. This is because Edge Functions execute in the region closest to the user.\n    \n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Vercel Functions Quickstart",
  "description": "Build your first Vercel Function in a few steps.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/INVALID_IMAGE_OPTIMIZE_REQUEST",
  "markdown": "# INVALID\\_IMAGE\\_OPTIMIZE\\_REQUEST\n\nThe `INVALID_IMAGE_OPTIMIZE_REQUEST` error occurs when the query string is using an invalid value for `q` (quality) or `w` (width), or `url` returns a non-image response.",
  "title": "INVALID_IMAGE_OPTIMIZE_REQUEST",
  "description": "The query string is using an invalid value for q, w, or url parameters. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/projects/environment-variables/sensitive-environment-variables",
  "markdown": "# Sensitive Environment Variables\n\nSensitive environment variables are [environment variables](https://vercel.com/docs/projects/environment-variables) whose values are non-readable once created. They help protect sensitive information stored in environment variables, such as API keys.\n\nWhen you mark an existing environment variable as sensitive, Vercel converts it to a non-readable format. This is only possible for environment variables in the [Production](https://vercel.com/docs/deployments/environments#production) and [Preview](https://vercel.com/docs/deployments/preview-deployments) environments.\n\nBoth [project environment variables](https://vercel.com/docs/projects/environment-variables) and [shared environment variables](https://vercel.com/docs/projects/environment-variables/shared-environment-variables) can be marked as sensitive.\n\n*   Development environment variables cannot be made sensitive. Therefore, all environment variables that only exist in the development environment are ignored\n*   All environment variables with Preview, Production, or both environments are converted to the sensitive format\n*   If your environment variables exist in the development environment and in at least one other environment (Preview or Production or both), the following happens:\n    *   The existing environment variable is updated to exclude the development environment and convert it to the sensitive format\n    *   A new standard environment variable is created with the same name but set to the development environment\n\nGo to the Environment Variables section of the Project or Team settings.\n\n*   Click the checkbox \"Create these environment variables with sensitive values\"\n*   Choose the environment and then add a key and a value\n*   Click \"Save\" to create the sensitive environment variables In the environment variable table, sensitive environment variables are marked with a \"Sensitive\" tag.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fsensitive-env-vars-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fsensitive-env-vars-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nCreate a new sensitive environment variable from your Team or Project settings.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Flisted-sev.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Flisted-sev-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSensitive environment variables labeled with a \"Sensitive\" tag on the dashboard.\n\nYou can only create a sensitive environment variables in the Preview and Production environments.\n\nYou can edit the [environment](https://vercel.com/docs/projects/environment-variables#environments) for a sensitive environment variable.\n\n*   Click Edit from the three-dot menu in the environment variables list\n*   Select the environment(s) for the sensitive environment variable After making the change, click the Save button.\n\nYou cannot edit the key or value of a sensitive environment variable.\n\nUsers with the [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role can set a team-wide environment variable policy when creating environment variables. Once enabled, all newly created environment variables in the [Production](https://vercel.com/docs/deployments/environments#production) and/or [Preview](https://vercel.com/docs/deployments/preview-deployments) environments will be sensitive environment variables. From the dashboard, go to your team's Settings > Security to enable the policy.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fenv-var-policies-2.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fprojects%2Fenvironment-variables%2Fenv-var-policies-dark-2.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSet environment variable policy from your team's Security settings.",
  "title": "Sensitive Environment Variables",
  "description": "Environment variables that cannot be decrypted once created.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/concepts",
  "markdown": "# Functions Concepts\n\nFunctions should always execute close to where your data source is to reduce latency. By default, functions using the Node.js runtime execute in Washington, D.C., USA (`iad1`), a common location for external data sources. You can set a new default region through your [project's settings on Vercel](https://vercel.com/docs/functions/configuring-functions/region#setting-your-default-region).\n\nEdge Functions execute in the region closest to the user, which could result in longer response times when the function relies on a database located far away. For example, if a visitor triggers an Edge Function in Japan, but it depends on a database in San Francisco, the Function will have to send requests to and wait for a response from San Francisco for each call.\n\nTo avoid these long roundtrips, you can limit your Edge Functions to [regions near your database](https://vercel.com/docs/functions/configuring-functions/region#setting-regions-in-your-function), or you could use a globally-distributed database. Vercel's [storage options](https://vercel.com/docs/storage) allow you to determine the [best location for your database](https://vercel.com/docs/storage#locate-your-data-close-to-your-functions).\n\n“Compute” is an encompassing term used to describe the actions taken by a computer. In the context of web development and Vercel, we use compute to describe actions such as (but not limited to) building and rendering - essential operations needed to turn your code into a site that appears for users. It's often used to describe the work that functions do to create dynamic content on your page.\n\nServerless Functions, usually execute in one specified [region](https://vercel.com/docs/concepts/functions/serverless-functions/regions) (although this can be configured), and allow you to write small chunks of code to provide additional functionality in your application, such as handle authentication, stream data, and make database queries.\n\nWhen a user makes a request to your site, a serverless function will run _on-demand_, without you needing to manage the infrastructure, provision servers, or upgrade hardware.\n\nWith Vercel, for each incoming request to a serverless function, a new invocation happens.\n\nIf a request is received shortly after a function is executed, Vercel optimizes performance by reusing that function for the subsequent invocation. Over time, only as many functions as necessary are kept active to accommodate incoming traffic.\n\nIn the absence of additional incoming traffic, functions on Vercel will scale down to zero.\n\nA cold boot refers to a function starting from scratch. In contrast, a warm boot implies reusing a function, in which the underlying container that hosts it does not get discarded. State, such as temporary files, memory caches, sub-processes, is preserved. This empowers the developer not just to minimize the time spent in the _booting_ process, but to also take advantage of caching data (in memory or filesystem) and [memoizing](https://en.wikipedia.org/wiki/Memoization) expensive computations.\n\nIt's crucial to note that functions must not leave tasks running post-response, even during a hot state. If a sub-process is running by the time the response is returned, the entire container is _frozen_. When a new invocation happens, if the container is re-used, it is unfrozen, which allows sub-processes to continue running.\n\nFor an advanced configuration, you can create a `vercel.json` file to use [Runtimes](https://vercel.com/docs/functions/runtimes) and other customizations. To view more about the properties you can customize, see the [Configuring Functions](https://vercel.com/docs/functions/configuring-functions) and [Project config with vercel.json](https://vercel.com/docs/projects/project-configuration).\n\nIf your use case requires that you work asynchronously with the results of a function invocation, you may need to consider a queuing, pooling, or [streaming](https://vercel.com/docs/functions/streaming) approach because of how serverless functions are created on Vercel.\n\nThe following suggestions will help you ensure optimal performance of your Vercel Functions:\n\n1.  Choose the correct region for your functions: All customers can change the default region for their functions in their project settings. Choose a region that's closest to your data source for optimal performance. See [Functions and your data source](https://vercel.com/docs/functions/concepts#functions-and-your-data-source) for more information\n2.  Choose smaller dependencies inside your functions: Cold start times are correlated to function size, which is often mostly from external dependencies. If you have large dependencies, parsing and evaluating JavaScript code can take 3-5 seconds or longer. Review your bundle and try to eliminate larger dependencies using a bundle analyzer\n3.  Use proper caching headers: Function responses can be cached using [Cache-Control headers](https://vercel.com/docs/edge-network/caching#using-vercel-functions). This will help ensure optimal performance for repeat visitors, and Vercel's [Edge cache](https://vercel.com/docs/edge-network/caching) even supports stale-while-revalidate headers. Note that cache misses will still need to request data from your origin (e.g. database) rather than reading directly from the Edge cache (faster)\n\nFor more information see [How can I improve serverless function cold start performance on Vercel?](https://vercel.com/guides/how-can-i-improve-serverless-function-lambda-cold-start-performance-on-vercel)\n\nSometimes, you need to place extra code files, such as `utils.js` or `my-types.d.ts`, inside the `/api` folder. To avoid turning these files into functions, Vercel ignores files with the following characters:\n\n*   Files that start with an underscore, `_`\n*   Files that start with `.`\n*   Files that end with `.d.ts`\n\nIf your file uses any of the above, it will not be turned into a function.\n\nIn order to optimize resources, there is an internal process that bundles as many Serverless Functions as possible into a single Lambda. Such a feature is currently only enabled for Next.js, but it will be enabled in other scenarios in the future.\n\nIf a configuration on the [`functions` property](https://vercel.com/docs/projects/project-configuration#functions) is present in Next.js (>= `v10.0.9`), then Vercel will bundle functions based on the configuration first. The remaining functions will be bundled together optimizing for how many functions are created.\n\nIn the following example, `app/api/hello/route.ts` will be bundled separately from `app/api/another/route.ts` since each has a different configuration:\n\n```\n{\n  \"functions\": {\n    \"app/api/hello/route.ts\": {\n      \"memory\": 3009,\n      \"maxDuration\": 60\n    },\n    \"app/api/another/route.ts\": {\n      \"memory\": 1024,\n      \"maxDuration\": 30\n    }\n  }\n}\n```",
  "title": "Functions Concepts",
  "description": "",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/TOO_MANY_RANGES",
  "markdown": "# TOO\\_MANY\\_RANGES\n\nThe `TOO_MANY_RANGES` error occurs when too many ranges have been specified in the `Range` header of a request. The `Range` header is used to request specific portions of a resource from the server, and specifying too many ranges can lead to an excessive load on the server.",
  "title": "TOO_MANY_RANGES",
  "description": "Too many ranges have been specified in the Range header of the request. This is a request error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/streaming-functions",
  "markdown": "# Streaming Functions\n\nVercel Functions support streaming responses, allowing you to render parts of the UI as they become ready. This lets users interact with your app before the entire page finishes loading by populating the most important components first.\n\nVercel enables you to use the standard [Web Streams API](https://streams.spec.whatwg.org/) in your [functions](https://vercel.com/docs/functions). To learn more about how streaming works and how to get started, see the following sections:\n\nFrameworks like Next.js and SvelteKit have built-in functionality for streaming responses. Learn more:\n\nMost, but not all, functions allow you to stream responses. Streaming functions also support the [`waitUntil` method](https://vercel.com/docs/functions/functions-api-reference#waituntil), which allows you to keep a function running after a response has been sent and finished. Streaming functions can be used in the following contexts:\n\n*   [Functions using the `edge` runtime](https://vercel.com/docs/functions/runtimes#edge)\n    *   These functions must begin sending a response within 25 seconds. After the initial response begins, you can continuously stream the response with no time limit\n    *   Your streamed response size [cannot exceed Vercel's memory allocation limit of 128 MB](https://vercel.com/docs/functions/edge-functions/limitations#memory)\n*   Node.js Functions when using the following frameworks:\n*   Node.js functions using the Web Handler signature:\n    \n    ```\n    export const dynamic = 'force-dynamic'; // static by default, unless reading the request\n     \n    export function GET(request: Request) {\n      return new Response(`Hello from ${process.env.VERCEL_REGION}`);\n    }\n    ```\n    \n*   Node.js functions using the Node.js Handler signature and the `supportsResponseStreaming:true` flag:\n    \n    ```\n    export const config = {\n      supportsResponseStreaming: true,\n    };\n     \n    export default function handler(request: Request, response: Response) {\n      const { name = 'World' } = request.query;\n      return response.send(`Hello ${name}!`);\n    }\n    ```\n    \n\nAll functions stream by default for Hobby users. The list and steps below are for Pro and Enterprise teams.\n\nThe following functions do not stream by default. However, you can still [enable streaming](https://vercel.com/docs/functions/streaming-functions#forcing-streaming-functions).\n\n*   Node.js runtime functions using the Node.js handler without `supportsResponseStreaming:true`\n*   Node.js runtime functions using Next.js Pages Router\n    *   Note that even if the rest of your app uses Next.js Pages Router, you can use [Route Handlers in the App Router](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) to stream responses. See the [streaming quickstart](https://vercel.com/docs/functions/streaming/quickstart) with Next.js (/app) selected for an example.\n\n```\n// Next.js App Router supports streaming by default with Route Handlers.\n```\n\n1.  From the dashboard, select your project and go to the Settings tab.\n2.  Select Environment Variables from the left side in settings.\n3.  Add a new environment variable with the Key: `VERCEL_FORCE_NODEJS_STREAMING` and the Value `true`. You should ensure this is set for all environments you want to force streaming for.\n4.  Pull your env vars into your local project with the [following command](https://vercel.com/docs/cli/env):\n\nFor more information, see [Environment Variables](https://vercel.com/docs/projects/environment-variables).\n\nBy default, Vercel Functions have a [maximum duration](https://vercel.com/docs/functions/runtimes#max-duration) of 10 seconds on Hobby and 15 seconds on Pro and Enterprise.\n\nYou should consider configuring the default [maximum duration](https://vercel.com/docs/functions/configuring-functions/duration) for Node.js functions to enable streaming responses for longer periods.\n\nWhen your function is streaming, you'll see the following benefits in your runtime logs, which allow you to see the output of your function as it is being generated:\n\n1.  You can [view the logs](https://vercel.com/docs/observability/runtime-logs#view-runtime-logs) in real-time from the Logs tab of your project's dashboard.\n2.  Each action of writing to standard output, such as using `console.log`, results in a separate log entry.\n3.  Each of those logs are 4 KB per line\n4.  The path in streaming logs will be prefixed with a forward slash (`/`)\n\nFor more information, see [Runtime Logs](https://vercel.com/docs/observability/runtime-logs).\n\nThese changes in the frequency and format of logs will affect Log Drains. If you are using Log Drains we recommend ensuring that your ingestion can handle both the new format and frequency.",
  "title": "Streaming Functions",
  "description": "Learn how Vercel enables streaming Function responses over time for ecommerce, AI, and more.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/wasm",
  "markdown": "# Using WebAssembly (Wasm) at the Edge\n\n[WebAssembly](https://webassembly.org/), or Wasm, is a portable, low-level, assembly-like language that can be used as a compilation target for languages like C, Go, and Rust. Wasm was built to run more efficiently on the web and to run _alongside_ JavaScript, so runs in most JavaScript virtual machines.\n\nWith Vercel, this means that you can now use Wasm within [Edge Functions](https://vercel.com/docs/functions/edge-functions) or [Edge Middleware](https://vercel.com/docs/functions/edge-middleware), taking advantage of the speed of delivery in a multitude of languages.\n\nPre-compiled WebAssembly can be imported with the `?module` suffix. This will provide an array of the Wasm data that can be instantiated using `WebAssembly.instantiate()`.\n\nYou can use Wasm in your production deployment or locally, using [`vercel dev`](https://vercel.com/docs/cli/dev).\n\n1.  You should already have an existing C, Go, and Rust project. This should be compiled it to WebAssembly to create a binary `.wasm` file. Once you have this `.wasm`, you can use it in your Edge Function or Middleware\n    \n2.  Import the file into your existing project using:\n    \n    ```\n    import wasmModule from './my-file.wasm?module';\n    ```\n    \n3.  Instantiate it:\n    \n    ```\n    export const config = {\n      runtime: 'edge',\n    };\n     \n    export default async function handler() {\n      const { exports } = (await WebAssembly.instantiate(wasmModule)) as any;\n      const result = exports.xor(0xb4c9a91f, 0xf0c0ffee);\n      return new Response(result);\n    }\n    ```\n    \n\nThis walkthrough uses the [WASM XOR Edge API Route](https://github.com/vercel/examples/tree/main/edge-api-routes/wasm-rust-xor) example.",
  "title": "Using WebAssembly (Wasm) at the Edge",
  "description": "Learn how to use WebAssembly (Wasm) to enable low-level languages to run on Vercel Edge Functions and Vercel Edge Middleware.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/configuring-functions",
  "markdown": "# Configuring Functions\n\nYou can configure Vercel functions in many ways, including the runtime, region, maximum duration, and memory.\n\nWith different configurations, particularly the runtime configuration, there are a number of trade-offs and limits that you should be aware of. For more information, see the [runtimes](https://vercel.com/docs/functions/runtimes) comparison.\n\nThe runtime you select for your function determines the infrastructure, APIs, and other abilities of your function.\n\nWith Vercel, you can configure the runtime of a function in any of the following ways:\n\n*   Node.js or Edge: When working with a TypeScript or JavaScript function, you can use the Node.js or Edge runtimes by setting a config option within the function. For more information, see the [runtimes](https://vercel.com/docs/functions/runtimes) comparison\n*   Ruby, Python, Go: These have similar functionality and limitations as Node.js (Serverless) Functions. The configuration for these runtimes gets based on the file extension\n*   Community runtimes: You can specify any other [runtime](https://vercel.com/docs/functions/runtimes#community-runtimes), by using the [`functions`](https://vercel.com/docs/projects/project-configuration#functions) property in your `vercel.json` file\n\nYour function should execute in a location close to your data source. This minimizes latency, or delay, thereby enhancing your app's performance. How you configure your function's region, depends on the runtime used.\n\nThe maximum duration for your function defines how long a function can run for, allowing for more predictable billing.\n\nFunctions using the [Edge runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime) don't have a maximum duration, but must begin sending a response [within 25 seconds](https://vercel.com/docs/functions/runtimes#max-duration). Beyond that time they can continue [streaming](https://vercel.com/docs/functions/streaming) a response.\n\nServerless Functions have a default duration that's dependent on your plan, but you can configure this as needed, [up to your plan's limit](https://vercel.com/docs/functions/runtimes#max-duration).\n\nServerless Functions use an infrastructure that allows you to adjust the memory size.\n\nEdge Functions have a fixed memory limit. This limitation helps reduce function startup time.",
  "title": "Configuring Functions",
  "description": "Learn how to configure the runtime, region, maximum duration, and memory for Vercel Functions.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/limitations",
  "markdown": "# Vercel Functions Limitations\n\nThe limitations on a function are dependant on the runtime you choose. See the [Choosing a Runtime](https://vercel.com/docs/functions/runtimes) doc for information on all the limitations of each runtime.\n\nSome common limits you may wish you be aware of:\n\n| Limit | Node.js | Edge |\n| --- | --- | --- |\n| [Maximum memory](https://vercel.com/docs/functions/runtimes#memory-size-limits) | Hobby: 1024 MB, Pro and Ent: 3009 MB | 128 MB |\n| [Maximum duration](https://vercel.com/docs/functions/runtimes#max-duration) | Hobby: 10s (default) - [configurable up to 60s](https://vercel.com/docs/functions/configuring-functions/duration), Pro: 15s (default) - [configurable](https://vercel.com/docs/functions/configuring-functions/duration) up to 300s, Ent: 15s (default) - [configurable](https://vercel.com/docs/functions/configuring-functions/duration) up to 900s | 25s (to begin returning a response, but can continue [streaming](https://vercel.com/docs/functions/streaming) data.) |\n| [Size](https://vercel.com/docs/functions/runtimes#bundle-size-limits) (after gzip compression) | 250 MB | Hobby: 1 MB, Pro: 2 MB, Ent: 4 MB |\n| [Concurrency](https://vercel.com/docs/functions/runtimes#automatic-concurrency-scaling) | Auto-scales up to 30,000 (Hobby and Pro) or 100,000+ (Enterprise) concurrency | Unlimited concurrency |\n| [Cost](https://vercel.com/docs/functions/runtimes#billing-model) | Pay for wall-clock time | Pay for CPU time |\n| [Regions](https://vercel.com/docs/functions/runtimes#location) | Executes region-first, [can customize location](https://vercel.com/docs/functions/regions#select-a-default-serverless-region).  <br>Enterprise teams can set [multiple regions](https://vercel.com/docs/functions/regions#set-multiple-serverless-regions) | Executes global-first, [can specify a region](https://vercel.com/docs/functions/configuring-functions/region) |\n| [API Coverage](https://vercel.com/docs/functions/runtimes#api-support) | Full Node.js coverage | Limited API support |\n\nThe following limits apply to the function's name when using [Node.js runtime](https://vercel.com/docs/functions/runtimes/node-js):\n\n*   Maximum length of 128 characters. This includes the extension of the file (e.g. `apps/admin/api/my-function.js` is 29 characters)\n*   No spaces are allowed. Replace them with a `-` or `_` (e.g. `api/my function.js` isn't allowed)",
  "title": "Vercel Functions Limitations",
  "description": "Learn about the limitations and restrictions of using Vercel Functions for both Node.js and Edge runtimes.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/functions-api-reference",
  "markdown": "# Functions API Reference\n\nFunctions are defined similar to a [Route Handler](https://nextjs.org/docs/app/building-your-application/routing/route-handlers) in Next.js. When using Next.js App Router, you can define a function in a file under `app/api/{example}/route.ts` in your project. Vercel will deploy any file under `app/api/` as a function.\n\nVercel Functions use a Web Handler, which consists of the `request` parameter that is an instance of the web standard [`Request`](https://developer.mozilla.org/en-US/docs/Web/API/Request) API, and for non-Next.js apps, a `context` parameter that represents the context of the request. Next.js [extends](https://nextjs.org/docs/app/api-reference/functions/next-request) the standard `Request` object with additional properties and methods.\n\nTo use a Web Handler, you must be using Node.js 18 or later. If you are using an earlier version, you must use the [Node.js signature](https://vercel.com/docs/functions/runtimes/node-js).\n\n| Parameter | Description | Next.js | Other Frameworks |\n| --- | --- | --- | --- |\n| `request` | An instance of the `Request` object | [`NextRequest`](https://nextjs.org/docs/api-reference/next/server#nextrequest) | [`Request`](https://developer.mozilla.org/docs/Web/API/Request) |\n| `context` | An object containing the context of the request | Next.js doesn't support this parameter. Instead, [use `waitUntil` as import](#waituntil) | [`{ waitUntil }`](#waituntil) |\n\n```\nexport const dynamic = 'force-dynamic'; // static by default, unless reading the request\n \nexport function GET(request: Request) {\n  return new Response(`Hello from ${process.env.VERCEL_REGION}`);\n}\n```\n\nThe `waitUntil()` method enqueues an asynchronous task to be performed during the lifecycle of the request. You can use it for anything that can be done after the response is sent, such as logging, sending analytics, or updating a cache, without blocking the response from being sent.\n\nTo use `waitUntil()` in your function:\n\n1.  Install the `@vercel/functions` package:\n\n2.  Import the `@vercel/functions` package, which exposes the `waitUntil()` method:\n\n```\nimport { waitUntil } from '@vercel/functions';\n \nexport function GET() {\n  const country = request.headers.get('x-vercel-ip-country');\n  // Returns a response immediately while keeping the function alive\n  waitUntil(fetch(`https://api.vercel.app/countries/?incr=${country}`));\n  return new Response(`You're visiting from beautiful ${country}`);\n}\n```\n\n`waitUntil()` can be also used with the [Edge Runtime](https://vercel.com/docs/functions/configuring-functions/runtime#edge).\n\nThe promises passed to `waitUntil()` will have the same timeout as the function itself. If the function times out, the promises will be cancelled.\n\nTo configure your function when using the App Router in Next.js, you use [segment options](https://nextjs.org/docs/app/api-reference/file-conventions/route-segment-config), rather than a `config` object.\n\n```\nexport const runtime = 'nodejs';\nexport const maxDuration = 15;\n```\n\nThe table below shows a highlight of the valid config options. For detailed information on all the config options, see the [Configuring Functions](https://vercel.com/docs/functions/configuring-functions) docs.\n\n| Property | Type | Description |\n| --- | --- | --- |\n| [`runtime`](https://vercel.com/docs/functions/configuring-functions/runtime) | `string` | This optional property defines the runtime to use, and if not set the runtime will default to `nodejs`. |\n| [`preferredRegion`](https://vercel.com/docs/functions/configuring-functions/region) | `string` | This optional property and can be used to specify the [regions](https://vercel.com/docs/edge-network/regions#region-list) in which your function should execute. This can only be set when the `runtime` is set to `edge` |\n| [`maxDuration`](https://vercel.com/docs/functions/configuring-functions/duration) | `int` | This optional property can be used to specify the maximum duration in seconds that your function can run for. This can't be set when the `runtime` is set to `edge` |",
  "title": "Functions API Reference",
  "description": "Learn about available APIs when working with Vercel Functions.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/usage-and-pricing",
  "markdown": "# Usage & Pricing for Functions\n\nFunctions using the Node.js runtime are measured in [GB-hours](https://vercel.com/docs/limits/usage#execution), which is the [memory allocated](https://vercel.com/docs/functions/configuring-functions/memory) for each Function in GB, multiplied by the time in hours they were running. For example, a function [configured](https://vercel.com/docs/functions/configuring-functions/memory) to use 3GB of memory that executes for 1 second, would be billed at 3 GB-s, requiring 1,200 executions to reach a full GB-Hr.\n\nFunctions using the edge runtime are measured in the number of [execution units](https://vercel.com/docs/limits/usage#execution-units), which are the amount of CPU time — or time spent performing calculations — used when a function is invoked. CPU time does not include idle time spent waiting for data fetching.\n\nA function can use up to 50 ms of CPU time per execution unit. If a function uses more than 50 ms, it will be divided into multiple 50 ms units for billing purposes.\n\nSee [viewing function usage](#viewing-function-usage) for more information on how to track your usage.\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe following table outlines the price for each resource according to the plan you are on, and the [runtime](https://vercel.com/docs/functions/runtimes) your function is using.\n\nVercel Functions are available for free with the included usage limits. If you exceed the included usage and are on the Pro plan, you will be charged for the additional usage according to the on-demand costs:\n\nVercel will send you emails as you are nearing your usage limits. On the Hobby plan you will not pay for any additional usage. However, your account may be paused if you do exceed the limits.\n\nWhen your [Hobby account](https://vercel.com/docs/accounts/plans/hobby) is set to paused, it remains in this state indefinitely unless you take action. This means all new and existing [deployments](https://vercel.com/docs/deployments/overview) will be paused.\n\nIf you have reached this state, your application is likely a good candidate for a [Pro account](https://vercel.com/docs/accounts/plans/pro).\n\nTo unpause your account, you have two main options:\n\n*   Contact Support: You can reach out to our [support team](https://vercel.com/help) to discuss the reason for the pause and potential resolutions\n*   Transfer to a Pro team: If your Hobby account is paused, you won't have the option to initiate a [Pro trial](https://vercel.com/docs/accounts/plans/pro/trials). Instead, you can set up a Pro team:\n    1.  [Create a Pro team account](https://vercel.com/docs/accounts/create-a-team)\n    2.  Add a valid credit card to this account. Select the Settings tab, then select Billing and Payment Method\n\nOnce set up, a transfer modal will appear, prompting you to [transfer your previous Hobby projects](https://vercel.com/docs/projects/overview#transferring-a-project) to this new team. After transferring, you can continue with your projects as usual.\n\nFor teams on a Pro trial, the [trial will end](https://vercel.com/docs/accounts/plans/pro/trials#post-trial-decision) when your team reaches the [trial limits](https://vercel.com/docs/accounts/plans/pro/trials#trial-limitations).\n\nOnce your team exceeds the included usage, you will continue to be charged the on-demand costs going forward.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nEnterprise agreements provide custom usage and pricing for Vercel Functions, including:\n\n*   Custom [execution units](https://vercel.com/docs/pricing/edge-functions#managing-execution-units)\n*   Increased [maximum duration](https://vercel.com/docs/functions/configuring-functions/duration) up to 900 seconds\n*   Multi-region deployments\n*   [Serverless Function failover](https://vercel.com/docs/functions/configuring-functions/region#automatic-failover)\n\nSee [Vercel Enterprise plans](https://vercel.com/docs/accounts/plans/enterprise) for more information.\n\nUsage metrics can be found in the [Usage tab](https://vercel.com/dashboard/usage) on your [dashboard](https://vercel.com/dashboard). Functions are invoked for every request that is served.\n\nYou can see the usage for functions using the Node.js runtime on the Serverless Functions section of the [Usage tab](https://vercel.com/docs/limits/usage#edge-functions).\n\nYou can see the usage for functions using the edge runtime on the Edge Functions section of the [Usage tab](https://vercel.com/docs/limits/usage#edge-functions). The dashboard tracks the usage values:",
  "title": "Usage & Pricing for Functions",
  "description": "Learn about usage and pricing for Vercel Functions.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-functions/edge-runtime",
  "markdown": "# Edge Runtime\n\n[`AbortController`](https://developer.mozilla.org/docs/Web/API/AbortController)Allows you to abort one or more DOM requests as and when desired[`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal)Represents a signal object that allows you to communicate with a DOM request (such as a [`Fetch`](https://developer.mozilla.org/docs/Web/API/Fetch_API) request) and abort it if required[`DOMException`](https://developer.mozilla.org/docs/Web/API/DOMException)Represents an error that occurs in the DOM[`structuredClone`](https://developer.mozilla.org/docs/Web/API/Web_Workers_API/Structured_clone_algorithm)Creates a deep copy of a value[`URLPattern`](https://developer.mozilla.org/docs/Web/API/URLPattern)Represents a URL pattern[`Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array)Represents an array of values[`ArrayBuffer`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)Represents a generic, fixed-length raw binary data buffer[`Atomics`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Atomics)Provides atomic operations as static methods[`BigInt`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt)Represents a whole number with arbitrary precision[`BigInt64Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array)Represents a typed array of 64-bit signed integers[`BigUint64Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array)Represents a typed array of 64-bit unsigned integers[`Boolean`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)Represents a logical entity and can have two values: `true` and `false`[`clearInterval`](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval)Cancels a timed, repeating action which was previously established by a call to `setInterval()`[`clearTimeout`](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout)Cancels a timed, repeating action which was previously established by a call to `setTimeout()`[`console`](https://developer.mozilla.org/docs/Web/API/Console)Provides access to the browser's debugging console[`DataView`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/DataView)Represents a generic view of an `ArrayBuffer`[`Date`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date)Represents a single moment in time in a platform-independent format[`decodeURI`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/decodeURI)Decodes a Uniform Resource Identifier (URI) previously created by `encodeURI` or by a similar routine[`decodeURIComponent`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)Decodes a Uniform Resource Identifier (URI) component previously created by `encodeURIComponent` or by a similar routine[`encodeURI`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/encodeURI)Encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character[`encodeURIComponent`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent)Encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character[`Error`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error)Represents an error when trying to execute a statement or accessing a property[`EvalError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/EvalError)Represents an error that occurs regarding the global function `eval()`[`Float32Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Float32Array)Represents a typed array of 32-bit floating point numbers[`Float64Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Float64Array)Represents a typed array of 64-bit floating point numbers[`Function`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function)Represents a function[`Infinity`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Infinity)Represents the mathematical Infinity value[`Int8Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Int8Array)Represents a typed array of 8-bit signed integers[`Int16Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Int16Array)Represents a typed array of 16-bit signed integers[`Int32Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Int32Array)Represents a typed array of 32-bit signed integers[`Intl`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl)Provides access to internationalization and localization functionality[`isFinite`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/isFinite)Determines whether a value is a finite number[`isNaN`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/isNaN)Determines whether a value is `NaN` or not[`JSON`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON)Provides functionality to convert JavaScript values to and from the JSON format[`Map`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map)Represents a collection of values, where each value may occur only once[`Math`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math)Provides access to mathematical functions and constants[`Number`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)Represents a numeric value[`Object`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)Represents the object that is the base of all JavaScript objects[`parseFloat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/parseFloat)Parses a string argument and returns a floating point number[`parseInt`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/parseInt)Parses a string argument and returns an integer of the specified radix[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)Represents the eventual completion (or failure) of an asynchronous operation, and its resulting value[`Proxy`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)Represents an object that is used to define custom behavior for fundamental operations (e.g. property lookup, assignment, enumeration, function invocation, etc)[`RangeError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RangeError)Represents an error when a value is not in the set or range of allowed values[`ReferenceError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError)Represents an error when a non-existent variable is referenced[`Reflect`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Reflect)Provides methods for interceptable JavaScript operations[`RegExp`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp)Represents a regular expression, allowing you to match combinations of characters[`Set`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set)Represents a collection of values, where each value may occur only once[`setInterval`](https://developer.mozilla.org/docs/Web/API/setInterval)Repeatedly calls a function, with a fixed time delay between each call[`setTimeout`](https://developer.mozilla.org/docs/Web/API/setTimeout)Calls a function or evaluates an expression after a specified number of milliseconds[`SharedArrayBuffer`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer)Represents a generic, fixed-length raw binary data buffer[`String`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)Represents a sequence of characters[`Symbol`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Symbol)Represents a unique and immutable data type that is used as the key of an object property[`SyntaxError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError)Represents an error when trying to interpret syntactically invalid code[`TypeError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/TypeError)Represents an error when a value is not of the expected type[`Uint8Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)Represents a typed array of 8-bit unsigned integers[`Uint8ClampedArray`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray)Represents a typed array of 8-bit unsigned integers clamped to 0-255[`Uint32Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array)Represents a typed array of 32-bit unsigned integers[`URIError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/URIError)Represents an error when a global URI handling function was used in a wrong way[`URL`](https://developer.mozilla.org/docs/Web/API/URL)Represents an object providing static methods used for creating object URLs[`URLSearchParams`](https://developer.mozilla.org/docs/Web/API/URLSearchParams)Represents a collection of key/value pairs[`WeakMap`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)Represents a collection of key/value pairs in which the keys are weakly referenced[`WeakSet`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakSet)Represents a collection of objects in which each object may occur only once[`WebAssembly`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly)Provides access to WebAssembly",
  "title": "Edge Runtime",
  "description": "Learn about the Edge runtime, the environment in which Edge Functions run.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-middleware/edge-runtime",
  "markdown": "# Edge Runtime\n\n[`AbortController`](https://developer.mozilla.org/docs/Web/API/AbortController)Allows you to abort one or more DOM requests as and when desired[`AbortSignal`](https://developer.mozilla.org/docs/Web/API/AbortSignal)Represents a signal object that allows you to communicate with a DOM request (such as a [`Fetch`](https://developer.mozilla.org/docs/Web/API/Fetch_API) request) and abort it if required[`DOMException`](https://developer.mozilla.org/docs/Web/API/DOMException)Represents an error that occurs in the DOM[`structuredClone`](https://developer.mozilla.org/docs/Web/API/Web_Workers_API/Structured_clone_algorithm)Creates a deep copy of a value[`URLPattern`](https://developer.mozilla.org/docs/Web/API/URLPattern)Represents a URL pattern[`Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Array)Represents an array of values[`ArrayBuffer`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer)Represents a generic, fixed-length raw binary data buffer[`Atomics`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Atomics)Provides atomic operations as static methods[`BigInt`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt)Represents a whole number with arbitrary precision[`BigInt64Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigInt64Array)Represents a typed array of 64-bit signed integers[`BigUint64Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/BigUint64Array)Represents a typed array of 64-bit unsigned integers[`Boolean`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Boolean)Represents a logical entity and can have two values: `true` and `false`[`clearInterval`](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/clearInterval)Cancels a timed, repeating action which was previously established by a call to `setInterval()`[`clearTimeout`](https://developer.mozilla.org/docs/Web/API/WindowOrWorkerGlobalScope/clearTimeout)Cancels a timed, repeating action which was previously established by a call to `setTimeout()`[`console`](https://developer.mozilla.org/docs/Web/API/Console)Provides access to the browser's debugging console[`DataView`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/DataView)Represents a generic view of an `ArrayBuffer`[`Date`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Date)Represents a single moment in time in a platform-independent format[`decodeURI`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/decodeURI)Decodes a Uniform Resource Identifier (URI) previously created by `encodeURI` or by a similar routine[`decodeURIComponent`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/decodeURIComponent)Decodes a Uniform Resource Identifier (URI) component previously created by `encodeURIComponent` or by a similar routine[`encodeURI`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/encodeURI)Encodes a Uniform Resource Identifier (URI) by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character[`encodeURIComponent`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent)Encodes a Uniform Resource Identifier (URI) component by replacing each instance of certain characters by one, two, three, or four escape sequences representing the UTF-8 encoding of the character[`Error`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Error)Represents an error when trying to execute a statement or accessing a property[`EvalError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/EvalError)Represents an error that occurs regarding the global function `eval()`[`Float32Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Float32Array)Represents a typed array of 32-bit floating point numbers[`Float64Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Float64Array)Represents a typed array of 64-bit floating point numbers[`Function`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Function)Represents a function[`Infinity`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Infinity)Represents the mathematical Infinity value[`Int8Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Int8Array)Represents a typed array of 8-bit signed integers[`Int16Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Int16Array)Represents a typed array of 16-bit signed integers[`Int32Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Int32Array)Represents a typed array of 32-bit signed integers[`Intl`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Intl)Provides access to internationalization and localization functionality[`isFinite`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/isFinite)Determines whether a value is a finite number[`isNaN`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/isNaN)Determines whether a value is `NaN` or not[`JSON`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/JSON)Provides functionality to convert JavaScript values to and from the JSON format[`Map`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Map)Represents a collection of values, where each value may occur only once[`Math`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Math)Provides access to mathematical functions and constants[`Number`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Number)Represents a numeric value[`Object`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Object)Represents the object that is the base of all JavaScript objects[`parseFloat`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/parseFloat)Parses a string argument and returns a floating point number[`parseInt`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/parseInt)Parses a string argument and returns an integer of the specified radix[`Promise`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise)Represents the eventual completion (or failure) of an asynchronous operation, and its resulting value[`Proxy`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Proxy)Represents an object that is used to define custom behavior for fundamental operations (e.g. property lookup, assignment, enumeration, function invocation, etc)[`RangeError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RangeError)Represents an error when a value is not in the set or range of allowed values[`ReferenceError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError)Represents an error when a non-existent variable is referenced[`Reflect`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Reflect)Provides methods for interceptable JavaScript operations[`RegExp`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/RegExp)Represents a regular expression, allowing you to match combinations of characters[`Set`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Set)Represents a collection of values, where each value may occur only once[`setInterval`](https://developer.mozilla.org/docs/Web/API/setInterval)Repeatedly calls a function, with a fixed time delay between each call[`setTimeout`](https://developer.mozilla.org/docs/Web/API/setTimeout)Calls a function or evaluates an expression after a specified number of milliseconds[`SharedArrayBuffer`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SharedArrayBuffer)Represents a generic, fixed-length raw binary data buffer[`String`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String)Represents a sequence of characters[`Symbol`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Symbol)Represents a unique and immutable data type that is used as the key of an object property[`SyntaxError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError)Represents an error when trying to interpret syntactically invalid code[`TypeError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/TypeError)Represents an error when a value is not of the expected type[`Uint8Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array)Represents a typed array of 8-bit unsigned integers[`Uint8ClampedArray`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray)Represents a typed array of 8-bit unsigned integers clamped to 0-255[`Uint32Array`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array)Represents a typed array of 32-bit unsigned integers[`URIError`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/URIError)Represents an error when a global URI handling function was used in a wrong way[`URL`](https://developer.mozilla.org/docs/Web/API/URL)Represents an object providing static methods used for creating object URLs[`URLSearchParams`](https://developer.mozilla.org/docs/Web/API/URLSearchParams)Represents a collection of key/value pairs[`WeakMap`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakMap)Represents a collection of key/value pairs in which the keys are weakly referenced[`WeakSet`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WeakSet)Represents a collection of objects in which each object may occur only once[`WebAssembly`](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/WebAssembly)Provides access to WebAssembly",
  "title": "Edge Runtime",
  "description": "Learn about the Edge runtime, the environment in which Edge Functions run.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-middleware/quickstart",
  "markdown": "# Quickstart for Using Edge Middleware\n\nIn this quickstart guide, you'll learn how to get started with Next.js Middleware and using Edge Middleware in Vercel CLI\n\nIn this quickstart guide, you'll learn how to get started with Next.js Middleware and using Edge Middleware in the [Vercel CLI](https://vercel.com/docs/cli/dev). For information on the API and how to use it, see the [Edge Middleware API](https://vercel.com/docs/functions/edge-middleware/middleware-api) documentation.\n\nYou should have the latest version (>= v25) of the Vercel CLI. To check your version, use `vercel --version`. To [install](https://vercel.com/docs/cli#installing-vercel-cli) or update Vercel CLI, use:\n\nBefore you begin, ensure that your app is using the most recent version of Next.js:\n\nEdge Middleware runs _before_ the incoming request and cache, which allows you to personalize cached content. In this quickstart you will create a middleware that runs on a specific route (`/secret-page`). If your visitor is from a specific geographic location, and visits the `/secret-page` route, the request will be rewritten to a `/login` page instead.\n\nAfter completing this quickstart you will have learnt how to:\n\n*   Use the `geo` object to personalise the content based on the visitor's location\n*   Use the custom match config to trigger the middleware to run on a specific route - Edge Middleware is invoked for every route in the app by default\n*   Rewrite to a new URL\n\n1.  Use `create-next-app` to create a new Next.js project or use your existing project:\n    \n    ```\n    npx create-next-app@latest --typescript\n    ```\n    \n    Follow the prompts to set your project up. You'll be using the TypeScript variant of the starter project as you will be importing some helpers from `next/server` in later steps.\n    \n2.  Then, create a `middleware.ts` (or `.js`) file at the same level as your `pages` or `app` directory (even if you're using a `src` directory). This is where the code that will be deployed as middleware will live. The file extension can be `.ts` or `.js`, this guide uses TypeScript.\n    \n    For this quickstart, you should also add some new helper directories to your project: `secret-page`, and `login`. Your folder structure should have the following layout:\n    \n3.  my-project\n    *   middleware.ts\n    *   app\n        *   secret-page\n            *   page.tsx\n        *   login\n            *   page.tsx\n        *   page.tsx\n\n*   The content of these pages are not relevant to this quickstart, but they are used to demonstrate the use of the middleware.\n    \n    ```\n    export default function SecretPage() {\n      return (\n        <div>\n          <h1>Secret Page</h1>\n          <p>This is a secret page!</p>\n        </div>\n      );\n    }\n    ```\n    \n*   The following middleware code takes the geographic location of the visitor from the request, and rewrites the request to a login page if they are from SE (Sweden).\n    \n    When copying this code into your project, you will need to replace the `BLOCKED_COUNTRY` variable with the ISO Alpha-2 code of your location. You can look up this value on the [IBAN country code list](https://www.iban.com/country-codes).\n    \n    ```\n    import { NextResponse } from 'next/server';\n     \n    // The country to block from accessing the secret page\n    const BLOCKED_COUNTRY = 'SE';\n     \n    // Trigger this middleware to run on the `/secret-page` route\n    export const config = {\n      matcher: '/secret-page',\n    };\n     \n    export default function middleware(request: Request) {\n      // Extract country. Default to US if not found.\n      const country = (request.geo && request.geo.country) || 'US';\n     \n      console.log(`Visitor from ${country}`);\n     \n      // Specify the correct route based on the requests location\n      if (country === BLOCKED_COUNTRY) {\n        request.url.pathname = '/login';\n      } else {\n        request.url.pathname = `/secret-page`;\n      }\n     \n      // Rewrite to URL\n      return NextResponse.rewrite(request.url);\n    }\n    ```\n    \n    If you're not using a framework, you must either add `\"type\": \"module\"` to your `package.json` or change your JavaScript Functions' file extensions from `.js` to `.mjs`\n    \n*   When working locally, your IP address will be 127.0.0.1. This means that the `geo` location can't be computed and the middleware location check will default to `US` (as defined in step four).\n    \n    To test your middleware, use the Vercel CLI to deploy your project with `vercel deploy`.\n    \n    Once deployed, open the production url, and edit the url to `https://<your-project-name>.vercel.app/secret-page`, you should be redirected to the `/login` page.\n    \n    Edit the `BLOCKED_COUNTRY` variable to a country you are not in and deploy again with `vercel deploy`. You should now be able to access the `/secret-page` route.\n    \n*   Once your Function is published, go to your project's overview page from your [Vercel dashboard](https://vercel.com/dashboard) and click the Logs tab. This tab allows you to view, search, inspect, and share your runtime logs invoked by Edge Middleware.\n    \n    To view details for these logs click any individual log entry. The information will appear in the right sidebar.\n    \n*   You have created a new Next.js project and deployed Edge Middleware. Based on the incoming requests location, you have rewritten the request to a login page.\n    \n    *   Edge Middleware runs _before_ the cache\n    *   You can import helpers that extend Web API objects (NextResponse, NextRequest, see [Edge Middleware API](https://vercel.com/docs/functions/edge-middleware/middleware-api) for more information on these APIs)\n    *   You can use a custom matcher config to only trigger the middleware in specific routes\n    *   You cannot use Node.js APIs in Edge Middleware\n    \n    To learn more about Edge Middleware, and its use cases, see the [Edge Middleware](https://vercel.com/docs/functions/edge-middleware) documentation.",
  "title": "Quickstart for Using Edge Middleware",
  "description": "In this quickstart guide, you'll learn how to get started with Next.js Middleware and using Edge Middleware in Vercel CLI",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/examples",
  "markdown": "# Examples for Vercel Functions\n\n### Streaming\n\nLearn how Vercel enables streaming Function responses over time for e-commerce, AI, and more.",
  "title": "Examples for Vercel Functions",
  "description": "Vercel supports a wide range of the most popular frontend frameworks, optimizing how your site builds and runs no matter what tool you use.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/edge-middleware/limitations",
  "markdown": "# Edge Middleware Limitations\n\nEdge Middleware is neither a Node.js nor browser application, which means it doesn't have access to all browser and Node.js APIs. Currently, our runtime offers [a subset of browser APIs](https://vercel.com/docs/functions/edge-middleware/middleware-api) and [some Node.js APIs](https://vercel.com/docs/functions/edge-functions/edge-runtime#unsupported-apis), and we plan to implement more functionality in the future.\n\nThere are some restrictions to writing middleware, which is documented in the [Edge Middleware API guide](https://vercel.com/docs/functions/edge-functions/edge-runtime#unsupported-apis).\n\nIn summary:\n\n*   Use ES modules\n*   Most libraries that use Node.js APIs as dependencies can't be used in Edge Middleware. While we're adding support for more Node.js APIs over time, see the [currently available APIs](https://vercel.com/docs/functions/edge-middleware/middleware-api)\n*   Dynamic code execution (such as `eval`) is not allowed (see the next section for more details)\n\nDynamic code execution is not available in Edge Middleware for security reasons. For example, the following APIs cannot be used:\n\nMost importantly, you need to make sure libraries used in your Edge Middleware don't rely on dynamic code execution because it leads to a runtime error.\n\nEdge Middleware must begin sending a response within 25 seconds.\n\nYou may continue streaming a response beyond that time and you can continue with asynchronous workloads in the background, after returning the response.\n\nEdge Middleware can only use up to 128MB. If it exceeds this limit, the execution will be aborted and we will return a `502` error.\n\n| Plan | Limit (after gzip compression) |\n| --- | --- |\n| Hobby | 1 MB |\n| Pro | 2 MB |\n| Enterprise | 4 MB |\n\nThe maximum size for an Edge Function includes your JavaScript code, imported libraries and files (such as fonts), and all files bundled in the function.\n\nIf you reach the limit, make sure the code you are importing in your function is used and is not too heavy. You can use a package size checker tool like [bundle](https://bundle.js.org/) to check the size of a package and search for a smaller alternative.\n\nWhile Vercel allows [Environment Variables up to a total of 64 KB](https://vercel.com/docs/projects/environment-variables#environment-variable-size) in size, Edge Middleware is limited to 5KB per Environment Variable.\n\nEnvironment Variables can be accessed through the `process.env` object. Since JavaScript objects have methods to allow some operations on them, there are limitations on the names of Environment Variables to avoid having ambiguous code.\n\nThe following names will be ignored as Environment Variables to avoid overriding the `process.env` object prototype:\n\n*   `constructor`\n*   `__defineGetter__`\n*   `__defineSetter__`\n*   `hasOwnProperty`\n*   `__lookupGetter__`\n*   `__lookupSetter__`\n*   `isPrototypeOf`\n*   `propertyIsEnumerable`\n*   `toString`\n*   `valueOf`\n*   `__proto__`\n*   `toLocaleString`\n\nTherefore, your code will always be able to use them with their expected behavior:\n\n```\n// returns `true`, if `process.env.MY_VALUE` is used anywhere & defined in the Vercel dashboard\nprocess.env.hasOwnProperty('MY_VALUE');\n```\n\n| Name | Limit |\n| --- | --- |\n| Maximum URL length | 14 KB |\n| Maximum request body length | 4 MB |\n| Maximum number of request headers | 64  |\n| Maximum request headers length | 16 KB |\n\n*   You cannot set non-standard port numbers in the fetch URL (e.g., `https://example.com:8080`). Only `80` and `443` are allowed. If you set a non-standard port number, the port number is ignored, and the request is sent to port `80` for `http://` URL, or port `443` for `https://` URL.\n*   The maximum number of requests from `fetch` API is 950 per Edge Middleware invocation.\n*   The maximum number of open connections is 6.\n    *   Each function invocation can have up to 6 open connections. For example, if you try to send 10 simultaneous fetch requests, only 6 of them can be processed at a time. The remaining requests are put into a waiting queue and will be processed accordingly as those in-flight requests are completed.\n*   If in-flight requests have been waiting for a response for more than 15 seconds with no active reads/writes, the runtime may cancel them based on its LRU (Least Recently Used) logic.\n    *   If you attempt to use a canceled connection, the `Network connection lost.` exception will be thrown.\n    *   You can `catch` on the `fetch` promise to handle this exception gracefully (e.g. with retries). Additionally, you can use the [`AbortController`](https://developer.mozilla.org/en-US/docs/Web/API/AbortController) API to set timeouts for `fetch` requests.\n\nTo avoid CPU timing attacks, like Spectre, date and time functionality is not generally available. In particular, the time returned from `Date.now()` only advances after I/O operations, like `fetch`. For example:\n\n```\nexport default function middleware(request: Request) {\n  for (let i = 0; i < 1000; i++) {\n    console.log(Date.now()); // Prints the same value 1000 times.\n  }\n \n  await fetch('https://vercel.com');\n  console.log(Date.now()); // Prints another value.\n}\n```\n\nIf you're not using a framework, you must either add `\"type\": \"module\"` to your `package.json` or change your JavaScript Functions' file extensions from `.js` to `.mjs`",
  "title": "Edge Middleware Limitations",
  "description": "Learn about the limitations and restrictions of using Edge Middleware with Vercel with this reference.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/functions/serverless-functions/regions",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/limits",
  "markdown": "# Vercel KV Limits\n\n[Vercel KV](https://vercel.com/storage/kv) provides durable, serverless Redis storage. It supports nearly all Redis commands, and is compatible with most Redis clients. This page outlines the limitations of Vercel KV.\n\nVercel KV was built in partnership with [Upstash](https://upstash.com/), which means many of Upstash's features are available with KV. However, there are some differences worth knowing about, including currently unsupported features.\n\nThe following is a list of Upstash features that Vercel KV does not currently support:\n\n*   Managing or creating a Vercel KV store from Upstash's web console\n*   [Backup/Restore](https://docs.upstash.com/redis/features/backuprestore) – Use `redis-cli` instead\n*   [Disabling TLS](#tls-support)\n*   [Detailed runtime metrics](https://docs.upstash.com/redis/howto/metricsandcharts)\n*   [Upstash's Pro and Enterprise addons](https://docs.upstash.com/redis/overall/enterprise#enterprise-addons)\n\nWe also do not support `redis-cli` version 5, due to its lack of [TLS support](#tls-support).\n\nThe following is a general list of limitations with Vercel KV:\n\n*   Provisioning a KV store from the Vercel CLI or [Vercel Terraform Provider](https://vercel.com/guides/integrating-terraform-with-vercel) is not currently supported\n*   Changing the primary region of a Vercel KV store is not currently supported. Instead, you must create a new store and migrate your data\n*   The `node-redis` and `ioredis` modules are not supported in Edge Functions. Instead, use [the SDK](https://vercel.com/docs/storage/vercel-kv/kv-reference)\n*   There is a limit of 3,000 requests per day for users on the [Hobby plan](https://vercel.com/docs/accounts/plans/hobby) and [Pro trial](https://vercel.com/docs/accounts/plans/pro/trials). When this limit is reached, requests to the database will be rate limited. If you are on the Hobby plan, (and your Pro trial ends) you can upgrade to the Pro plan to remove this limit\n*   The Hobby plan has a maximum database size of 256 MB. The database will be rate limited when the maximum requests have been reached. When the maximum storage is reached, writes will fail\n*   Users on the Hobby plan can create 1 database, which can be shared across projects. Users on the Pro plan can create 1 database as part of their plan, then up to a maximum of 5 databases ([each including 5 read replicas](https://vercel.com/docs/storage/vercel-kv/usage-and-pricing#databases-including-read-replicas)) at an [additional cost of 1.00 USD per database](https://vercel.com/docs/storage/vercel-kv/usage-and-pricing#pricing)\n\nThe below table outlines the technical limitations of Vercel KV depending on your plan:\n\n| Limit | Hobby | Pro |\n| --- | --- | --- |\n| Max commands per second | 1000 | 1000 |\n| Max request size | 1 MB | 1 MB |\n| Max record size | 100 MB | 100 MB |\n| Max number of databases | 1   | N/A |\n| Max database size (per database) | 256MB | 10 GB |\n| Max number of concurrent connections | 100 | 1000 |\n| Max number of daily requests | 3000 | N/A |\n| Max daily bandwidth | 50 GB | 50 GB |\n\nExceeding these limits results in being rate-limited. That means you can't write new data until data is deleted.\n\nUnder the Hobby plan, databases that remain inactive for more than 30 days are subject to deletion. Please note that:\n\n*   Databases are considered inactive if there have not been any read or write operations within a 30 day timeframe\n*   When a database qualifies for deletion, you will receive a notification on Vercel, and a banner will be displayed on the database's detail view in the dashboard\n*   If you don't [reactivate your database](#preventing-database-deletion) within seven days of receiving this alert, it will be permanently deleted\n\nTo prevent deletion, you must reactivate your database by executing either a read or write operation. You can do so by either:\n\n*   Connecting to the database using the database's CLI in the dashboard\n*   Using either the `redis-cli` or the [`@vercel/kv`](https://vercel.com/docs/storage/vercel-kv/kv-reference) packages within your application. For example, you can send commands such as `GET mykey` or `SET mykey 1`\n\nOnce Vercel has deleted a database, it cannot be recovered. This policy affects customers on the Hobby plan only.\n\nWhen using a read only token to connect to your KV store, you will not have access to any write commands. You will also not have access to the [`KEYS`](https://redis.io/commands/keys/) command.\n\nVercel KV creates a single Redis store as your primary region. Writes are routed to the primary region, then replicated to other read regions you define.\n\nSupport for replication to other regions is an additional charge. You can have up to four additional read replicas. Learn more about [usage and pricing](https://vercel.com/docs/storage/vercel-kv/usage-and-pricing) for Vercel KV.\n\nVercel KV is a first-party integration with Upstash, using Upstash Global Databases. You can select a single primary region, and up to four additional read replicas.\n\nSupported regions for Vercel KV correspond to Upstash's available regions. The following regions are available for Vercel KV.\n\n| Region Code | Region Name | Location |\n| --- | --- | --- |\n| dub1 | eu-west-1 | Dublin, Ireland |\n| fra1 | eu-central-1 | Frankfurt, Germany |\n| gru1 | sa-east-1 | São Paulo, Brazil |\n| iad1 | us-east-1 | Washington, D.C., USA |\n| pdx1 | us-west-2 | Portland, USA |\n| sfo1 | us-west-1 | San Francisco, USA |\n| sin1 | ap-southeast-1 | Singapore |\n| syd1 | ap-southeast-2 | Sydney, Australia |\n\nWe recommend selecting the same [regions](https://vercel.com/docs/edge-network/regions#region-list) for your store as your Edge and Serverless Functions.\n\nSee what Redis commands we support in [our Redis Compatibility docs](https://vercel.com/docs/storage/vercel-kv/redis-compatibility).\n\nWhen you create a Vercel KV store, a Redis store is provisioned with support for TLS `v1.2` and `v1.3` enabled. There is no way to disable TLS for your KV store.",
  "title": "Vercel KV Limits",
  "description": "Learn about Vercel KV's technical limitations.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/image-optimization/managing-image-optimization-costs",
  "markdown": "# Managing Image Optimization Usage & Costs\n\nWhen using Image Optimization it's important to be aware of your [usage](#measuring-usage) to ensure that you do not get any unexpected costs.\n\n[Source images](https://vercel.com/docs/image-optimization/limits-and-pricing#source-images) are what count towards your Image Optimization usage. Your Image Optimization usage is displayed under the Image Optimization section of the Usage tab on your [dashboard](https://vercel.com/dashboard).\n\nThe Source Image Optimization section of the usage page contains a drop-down, which displays a list of all the source images that have been optimized per-day for your entire team.\n\nSee the [Usage](https://vercel.com/docs/image-optimization/limits-and-pricing#usage) section for more information.\n\nPricing is [based](https://vercel.com/docs/image-optimization/limits-and-pricing#billing) on the number of unique [source images](https://vercel.com/docs/image-optimization/limits-and-pricing#source-images) during the billing period. Another way to think about this is unique `src` prop values, regardless of how many `Image` components you have. The usage count of the source images will be reset at the beginning of each billing period.\n\nTo reduce your Image Optimization usage, you should consider the following:\n\n*   Reduce variability in query string parameters for `src` prop and minimize the amount of times you change the `src` property during a billing period\n*   Reduce the number of entries in domains or `remotePatterns` config or change the pattern to be more specific\n*   Change [`domains`](https://nextjs.org/docs/api-reference/next/image#domains) to [`remotePatterns`](https://nextjs.org/docs/api-reference/next/image#remote-patterns) and configure the pattern to be more specific\n*   When using Next.js, you can disable Image Optimization on a per-image basis, by adding the [`unoptimized`](https://nextjs.org/docs/api-reference/next/image#unoptimized) prop to the `<Image />` tag:\n\n```\nimport Image from 'next/image';\n \nexport default function ImageExample() {\n  return (\n    <Image\n      unoptimized\n      src=\"https://unsplash.com/photos/MpL4w1vb798\"\n      alt=\"Picture of a triangle\"\n      width={500}\n      height={500}\n    />\n  );\n}\n```\n\nAlternatively, you can completely disable Image Optimization by setting `unoptimized: true` in your `next.config.js`:\n\n```\nmodule.exports = {\n  images: {\n    unoptimized: true,\n  },\n};\n```\n\nThe `unoptimized` configuration requires Next.js 12.3.0 or newer. If a 3rd party CDN (such as Cloudflare) is used to cache HTML pages but not images, this can result in previously optimized URLs returning 404.\n\nFor more information on the limits, usage, and everything related to billing for Image Optimization, see the [Limits and Pricing](https://vercel.com/docs/image-optimization/limits-and-pricing#billing) page.",
  "title": "Managing Image Optimization Usage & Costs",
  "description": "Learn how to measure and manage Image Optimization usage with this guide to avoid any unexpected costs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-blob/usage-and-pricing",
  "markdown": "# Vercel Blob Pricing\n\n[Vercel Blob](https://vercel.com/storage/blob) allows you to upload and serve Blob objects for use with your Vercel Projects. Based on the account plan type where these projects are deployed, your Blob stores fall under the following constraints:\n\nVercel Blob usage is measured on the following:\n\n*   Number of basic operations (A basic operation is when the Blob URL is served or when the [head](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#get-blob-metadata) method is called)\\*\n*   Number of advanced operations (An advanced operation is when any of following methods are called: [put](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#upload-a-blob), [del](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#delete-a-blob), [list](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk#list-blobs)). Be aware that `multipart` operations are counted as multiple advanced operations: one when starting the upload, one for each part, and one for completing the upload.\n*   Amount of storage used\n*   Data transferred when the Blob URL is delivered\n\nVercel Blob is currently available in early access. While we will start to collect usage data from the day you upload files, you will not be charged for on-demand usage over the base limits while the project is in Beta.\n\n|     | Hobby | Pro |\n| --- | --- | --- |\n| Basic operations per month | 100,000 | 10 million |\n|     | \\-  | No additional charge while in Beta |\n| Advanced operations per month | 50,000 | 1 million |\n|     | \\-  | No additional charge while in Beta |\n| Storage per month | 250 MB | 10 GB |\n|     | \\-  | No additional charge while in Beta |\n| Data transfer (per month) | 5 GB | 10 GB |\n|     | \\-  | No additional charge while in Beta |\n\n\\* Blob downloads are not counted towards basic operations when the Blob is served from the edge cache. See [caching](https://vercel.com/docs/storage/vercel-blob#caching) for more information.\n\nVercel Blob is free for Hobby users within the [usage limits](#usage).\n\nVercel will send you emails as you are nearing your usage limits. You will not pay for any additional usage. However, you will not be able to access Vercel Blob if limits are exceeded. In this scenario, you will have to wait until 30 days have passed before using Blob storage again.\n\nPro trials have the same limits as [Hobby users](#pricing). If those trial limits are exceeded, you will not be able to use Vercel Blob unless you upgrade to a paid plan. During the trial, you can create a maximum of one database.\n\nVercel will send you emails as you are nearing your [usage](#usage) limits, but you will also be advised of any alerts within the [dashboard](https://vercel.com/dashboard). When you team exceeds the base limits for Vercel Blob on Pro, you will pay for usage on-demand as you use it.\n\nPro teams can [set up Spend Management](https://vercel.com/docs/accounts/spend-management#managing-your-spend-amount) to get notified or to automatically take action, such as [using a webhook](https://vercel.com/docs/accounts/spend-management#configuring-a-webhook) or [pausing your projects](https://vercel.com/docs/accounts/spend-management#pausing-projects) when your usage hits a set spend amount.\n\nVercel Blob is not currently available for Enterprise Teams.",
  "title": "Vercel Blob Pricing",
  "description": "Learn about the pricing for Vercel Blob.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/recipes/add-response-header",
  "markdown": "# Adding a response header\n\nLearn how to add a response header in your Edge Middleware.\n\nThe following example shows how to add a response header in your Edge Middleware.\n\nYour `middleware` file should be placed at the root of your project. If you are using the `src` directory, the file should be placed in the `src` directory.\n\n```\nimport { NextResponse } from 'next/server';\n \nexport function middleware() {\n  // Store the response so we can modify its headers\n  const response = NextResponse.next();\n \n  // Set custom header\n  response.headers.set('x-modified-edge', 'true');\n \n  // Return response\n  return response;\n}\n```\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Adding a response header",
  "description": "Learn how to add a response header in your Edge Middleware.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/limits",
  "markdown": "# Vercel Postgres Limits\n\n[Vercel Postgres](https://vercel.com/storage/postgres) provides managed, serverless SQL. It supports nearly all Postgres commands, and is compatible with most Postgres clients. This page outlines the limitations of Vercel Postgres.\n\nVercel Postgres databases use version 15 of [PostgreSQL](https://www.postgresql.org/docs/). The following features are fully supported:\n\nAccess to usage metrics for [billing](https://vercel.com/docs/storage/vercel-postgres/usage-and-pricing) purposes, which you can view in your dashboard under the Usage tab.\n\nManaging your databases using SQL\n\nConnecting from Serverless and Edge Functions\n\nPrisma does not currently support connections with Edge Functions except with the Prisma Data Proxy. We recommend connecting using Kysely or Drizzle instead.\n\nThe list below shows what is not currently possible with Vercel Postgres:\n\n*   Provisioning a Vercel Postgres database from the Vercel CLI or the [Vercel Terraform Provider](https://vercel.com/guides/integrating-terraform-with-vercel) is not currently supported\n*   Changing the region of a Vercel Postgres database. You can only select a region when creating a database. To change regions, you must create a new database and migrate your data with a tool like [`pg_dump`](https://www.postgresql.org/docs/current/app-pgdump.html)\n*   Databases for those on Hobby plans are configured with 0.25 logical CPUs\n\nAn inactive Vercel Postgres database may experience [cold starts](https://en.wikipedia.org/wiki/Cold_start_(computing)/).\n\nIf your database is not accessed within a 5 minute period, your database will be suspended. The next time it is accessed, you will experience a \"cold start\" of up to 1 second.\n\nPro plan users can [configure](#prevent-vercel-postgres-from-entering-an-idle-state) the inactive time threshold to decrease the frequency of cold starts.\n\nVercel Postgres is a first-party integration with [Neon](https://neon.tech/), and many of Neon's features are [available with Vercel Postgres](#supported-postgresql-features). However, there are some differences worth noting:\n\nAccessing the Neon web console is not supported\n\nDatabase branching is not currently supported, but will be in the future\n\nConfiguring multiple Postgres access roles. Primary role credentials can be reset anytime\n\nVercel Postgres creates a single database as your primary region. You can't change your primary region once your database is created.\n\nWe recommend choosing the same region as your Serverless and Edge Functions for the lowest latency.\n\nThe following regions are available for Vercel Postgres. You can select a single region, which cannot be changed after your database is created.\n\n| Region Code | Region Name | Location |\n| --- | --- | --- |\n| cle1 | us-east-2 | Cleveland, USA |\n| iad1 | us-east-1 | Washington, D.C., USA |\n| pdx1 | us-west-2 | Portland, USA |\n| fra1 | eu-central-1 | Frankfurt, Germany |\n| sin1 | ap-southeast-1 | Singapore |\n| syd1 | ap-southeast-2 | Sydney, Australia |\n\nVercel Postgres is a first-party integration with Neon. Supported regions for Vercel Postgres correspond to Neon's available regions. We recommend selecting the same regions for your database as your Edge and Serverless Functions.\n\nVercel Postgres databases run PostgreSQL version 15. See the [Postgres compatibility](https://vercel.com/docs/storage/vercel-postgres/supported-postgresql-extensions#supported-extensions) documentation for more information.\n\nWe do not currently support version upgrades. Support for upgrades is coming soon.\n\n[`@vercel/postgres`](https://vercel.com/docs/storage/vercel-postgres/sdk) reads database credentials from environment variables in `process.env`, which are typically populated with variables defined in your `.env` file when deploying locally. Vite does not populate `process.env` with the contents of your `.env` file automatically, meaning you may have issues with SvelteKit, Nuxt, or any other frameworks built on Vite.\n\nThere are two workarounds:\n\n*   Populate `process.env` yourself. The following example uses the [`dotenv-expand`](https://www.npmjs.com/package/dotenv-expand) package:\n    \n    ```\n    // Can also be named nuxt.config.js\n    import dotenvExpand from 'dotenv-expand';\n    import { loadEnv, defineConfig } from 'vite';\n     \n    export default defineConfig(({ mode }) => {\n      // Only modify process.env in development mode\n      if (mode === 'development') {\n        const env = loadEnv(mode, process.cwd(), '');\n        dotenvExpand.expand({ parsed: env });\n      }\n     \n      return {\n        ...\n      };\n    });\n    ```\n    \n*   Or, provide the credentials explicitly. The following example creates a client in SvelteKit with [`$env/static/private`](https://kit.svelte.dev/docs/modules#$env-static-private), which makes the variables in your local `.env` files available to your code:\n    \n    ```\n    import { createPool } from '@vercel/postgres';\n    import { POSTGRES_URL } from '$env/static/private';\n     \n    import { createPool } from '@vercel/postgres';\n    export const pool = createPool({\n      /* config */\n      connectionString: POSTGRES_URL,\n    });\n    ```",
  "title": "Vercel Postgres Limits",
  "description": "Learn about Vercel Postgres's technical limitations.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/recipes/modify-request-headers",
  "markdown": "# Modifying request headers\n\nLearn how to modify request headers in your Edge Middleware.\n\nThe following example shows how to modify request headers in your Edge Middleware.\n\nYour `middleware` file should be placed at the root of your project. If you are using the `src` directory, the file should be placed in the `src` directory.\n\n```\nimport { NextResponse } from 'next/server';\n \nexport function middleware(request: Request) {\n  // Clone the request headers\n  // You can modify them with headers API: https://developer.mozilla.org/en-US/docs/Web/API/Headers\n  const requestHeaders = new Headers(request.headers);\n \n  // Add new request headers\n  requestHeaders.set('x-hello-from-middleware1', 'hello');\n  requestHeaders.set('x-hello-from-middleware2', 'world!');\n \n  // Update an existing request header\n  requestHeaders.set('user-agent', 'New User Agent overriden by middleware!');\n \n  // Delete an existing request header\n  requestHeaders.delete('x-from-client');\n \n  // You can also set request headers in NextResponse.rewrite\n  return NextResponse.next({\n    request: {\n      // New request headers\n      headers: requestHeaders,\n    },\n  });\n}\n```\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Modifying request headers",
  "description": "Learn how to modify request headers in your Edge Middleware.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-blob/server-upload",
  "markdown": "# Server Uploads with Vercel Blob\n\nIn this quickstart, you'll learn how to do the following:\n\n*   Use the Vercel dashboard to create a Blob store connected to a project\n*   Upload a file using the Blob SDK from the server\n\nVercel Blob works with any frontend framework. First, install the package:\n\n1.  Navigate to the [Project](https://vercel.com/docs/projects/overview) you'd like to add the blob store to. Select the Storage tab, then select the Connect Database button.\n    \n    Under the Create New tab, select Blob and then the Continue button.\n    \n    Use the name \"Images\" and select Create a new Blob store. Select the environments where you would like the read-write token to be included. You can also update the prefix of the Environment Variable in Advanced Options\n    \n    Once created, you are taken to the Vercel Blob store page.\n    \n2.  Since you created the Blob store in a project, we automatically created and added the following Environment Variable to the project for you.\n    \n    *   `BLOB_READ_WRITE_TOKEN`\n    \n    To use this Environment Variable locally, we recommend pulling it with the Vercel CLI:\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n\nServer uploads are perfectly fine as long as you do not need to upload files larger than [4.5 MB on Vercel](https://vercel.com/docs/functions/serverless-functions/runtimes#request-body-size). If you need to upload larger files, consider using [client uploads](https://vercel.com/docs/storage/vercel-blob/client-upload).\n\nThe following example shows how to use a [Server Action](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations) with Next.js App Router to upload a file to Vercel Blob.\n\n```\nimport { put } from '@vercel/blob';\nimport { revalidatePath } from 'next/cache';\n \nexport async function Form() {\n  async function uploadImage(formData: FormData) {\n    'use server';\n    const imageFile = formData.get('image') as File;\n    const blob = await put(imageFile.name, imageFile, {\n      access: 'public',\n    });\n    revalidatePath('/');\n    return blob;\n  }\n \n  return (\n    <form action={uploadImage}>\n      <label htmlFor=\"image\">Image</label>\n      <input type=\"file\" id=\"image\" name=\"image\" required />\n      <button>Upload</button>\n    </form>\n  );\n}\n```\n\nThen, add the hostname to your `next.config.js` file including the store id from the dashboard:\n\n```\n/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  images: {\n    remotePatterns: [\n      {\n        protocol: 'https',\n        hostname: 'my-blob-store.public.blob.vercel-storage.com',\n        port: '',\n      },\n    ],\n  },\n};\n \nmodule.exports = nextConfig;\n```\n\nThis will allow you to use [`next/image`](https://nextjs.org/docs/app/api-reference/components/image) to display images from your Vercel Blob store.\n\n```\nimport { list } from '@vercel/blob';\nimport Image from 'next/image';\n \nexport async function Images() {\n  async function allImages() {\n    const blobs = await list();\n    return blobs;\n  }\n  const images = await allImages();\n \n  return (\n    <section>\n      {images.blobs.map((image) => (\n        <Image\n          priority\n          key={image.pathname}\n          src={image.url}\n          alt=\"Image\"\n          width={200}\n          height={200}\n        />\n      ))}\n    </section>\n  );\n}\n```\n\nRead more about [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations) and [App Router](https://nextjs.org/docs) on the Next.js documentation.\n\nYou can upload files to Vercel Blob using Route Handlers/API Routes. The following example shows how to upload a file to Vercel Blob using a server upload page and route.\n\n1.  This page will upload files to your server. The files will then be sent to Vercel Blob.\n    \n    ```\n    'use client';\n     \n    import type { PutBlobResult } from '@vercel/blob';\n    import { useState, useRef } from 'react';\n     \n    export default function AvatarUploadPage() {\n      const inputFileRef = useRef<HTMLInputElement>(null);\n      const [blob, setBlob] = useState<PutBlobResult | null>(null);\n      return (\n        <>\n          <h1>Upload Your Avatar</h1>\n     \n          <form\n            onSubmit={async (event) => {\n              event.preventDefault();\n     \n              if (!inputFileRef.current?.files) {\n                throw new Error('No file selected');\n              }\n     \n              const file = inputFileRef.current.files[0];\n     \n              const response = await fetch(\n                `/api/avatar/upload?filename=${file.name}`,\n                {\n                  method: 'POST',\n                  body: file,\n                },\n              );\n     \n              const newBlob = (await response.json()) as PutBlobResult;\n     \n              setBlob(newBlob);\n            }}\n          >\n            <input name=\"file\" ref={inputFileRef} type=\"file\" required />\n            <button type=\"submit\">Upload</button>\n          </form>\n          {blob && (\n            <div>\n              Blob url: <a href={blob.url}>{blob.url}</a>\n            </div>\n          )}\n        </>\n      );\n    }\n    ```\n    \n2.  This route forwards the file to Vercel Blob and returns the URL of the uploaded file to the browser.\n    \n    ```\n    import { put } from '@vercel/blob';\n    import { NextResponse } from 'next/server';\n     \n    export async function POST(request: Request): Promise<NextResponse> {\n      const { searchParams } = new URL(request.url);\n      const filename = searchParams.get('filename');\n     \n      const blob = await put(filename, request.body, {\n        access: 'public',\n      });\n     \n      return NextResponse.json(blob);\n    }\n    ```\n    \n\n1.  Run your application locally and visit `/avatar/upload` to upload the file to your store. The browser will display the unique URL created for the file.\n    \n    When your local website is served on `http://localhost:3000`, then the `onUploadCompleted` step won't succeed as Vercel Blob cannot contact your localhost. Instead, we recommend you run your local application through a tunneling service like [ngrok](https://ngrok.com/), so you can experience the full Vercel Blob development flow locally.\n    \n2.  *   Go to the Vercel Project where you created the store\n    *   Select the Storage tab and select your new store\n    *   Paste the blob object URL returned in the previous step in the Blob URL input box in the Browser section and select Lookup\n    *   The following blob object metadata will be displayed: file name, path, size, uploaded date, content type and HTTP headers\n    *   You also have the option to download and delete the file from this page\n\nYou have successfully uploaded an object to your Vercel Blob store and are able to review it's metadata, download, and delete it from your Vercel Storage Dashboard.\n\n*   Learn how to [use the methods](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk) available with the `@vercel/blob` package",
  "title": "Server Uploads with Vercel Blob",
  "description": "Learn how to upload files to Vercel Blob using Server Actions and Route Handlers",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/edge-config-limits",
  "markdown": "# Edge Config Limits and pricing\n\nAn [Edge Config](https://vercel.com/storage/edge-config) is a global data store that [enables experimentation with feature flags, A/B testing, critical redirects, and IP blocking](#use-cases). It enables you to read data at the edge without querying an external database or hitting upstream servers.\n\nThe following table outlines the price for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe following table outlines the limits for each resource according to the plan you are on:\n\nThe table below shows the metrics for the [Edge Config](https://vercel.com/docs/pricing/edge-config) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize Edge Config usage](https://vercel.com/docs/pricing/edge-config) section for more information on how to optimize your usage.\n\nReads indicate how often your project has requested access to Edge Config to retrieve data through the SDK or the REST API. Vercel counts it as one read, regardless of whether you retrieve one or all items.\n\nWrites represent how often you updated your Edge Config through the SDK or the REST API.\n\nThe maximum store size represents the total size limit of each Edge Config store, including all keys and values of the document.\n\nThe maximum number of stores represents the total number of Edge Config stores that you can create for your account or team.\n\nThe maximum number of stores connected to a project represents the total number of Edge Config stores that you can connect to a single project. Exceeding this amount will result in an [error](https://vercel.com/docs/storage/edge-config/edge-config-limits#edge-config-limit-reached).\n\nThe maximum length of the key name for each item in your Edge Config is determined by the maximum item key name length. The key name must adhere to the regex pattern `^[A-z0-9_-]+$` and should not contain any special characters except for `-` or `_`.\n\nWhen updating an item in your Edge Config, it may take up to 10 seconds for the update to be globally propagated. You should avoid using Edge Configs for frequently updated data or data that needs to be accessed immediately after updating.\n\nBackups are automatically saved when you make any changes, allowing you to [restore](https://vercel.com/docs/storage/edge-config/edge-config-dashboard#restoring-edge-config-backups) to a previous version. See the table above to learn about how long backups are saved for.\n\nTo learn more about backups, see [Edge Config backups](https://vercel.com/docs/storage/edge-config/using-edge-config#edge-config-backups)\n\nIf reading from your Edge Config seems slower than expected, ensure that the following are true:\n\n*   You've set [the connection string](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string) as an environment variable\n*   You are using the [SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk) to read from your Edge Config\n*   You see the Edge Config icon on the row for the connected environment variable on the Environment Variables page of your project settings\n*   You are testing on your Vercel deployment, as the optimizations happen only when you deploy to Vercel\n    \n    ![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793440%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-env-icon-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793440%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-env-icon-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Edge Config icon with connected environment variable\n    \n*   You are testing your Vercel deployment. The optimizations happen only when you deploy to Vercel\n\nError: `Tried to attach 4 Edge Configs. Only 3 can be attached to one Deployment at a time.`\n\nDepending on your plan, you can have up to 10 Edge Config stores created for your account. However, you are limited to a maximum of 3 Edge Config stores connected to any single project.\n\nIf you get this error, review your storage by visiting [the Vercel Dashboard](https://vercel.com/dashboard), selecting your project, and selecting the Storage tab. You can use the search filter to see only your Edge Configs. You will have to disconnect one of the stores and redeploy your project.\n\nTo learn how to prevent this error, see [best practices](#edge-config-best-practices).\n\nUpdates to items in your Edge Config will be rejected if the resulting size of your Edge Config would exceed your account plan's limits. When this happens, all members of your team will receive a [notification](https://vercel.com/docs/dashboard-features/notifications) from Vercel, whether the error originated in the dashboard, an API request, or an [Integration](https://vercel.com/docs/storage/edge-config/integrations). The Edge Config editor in your dashboard can detect many cases where the final size would exceed the limit and warn you upfront without triggering the notification.\n\nTo resolve this issue, you can:\n\n*   Delete unused entries from your Edge Config to free up space\n*   [Upgrade your plan](https://vercel.com/pricing)\n*   [Contact sales](https://vercel.com/contact/sales) to unlock larger Edge Config store sizes\n\n*   Where possible, having fewer large stores is better than having multiple small stores, as having fewer Edge Config stores requested more often leads to lower overall latency.\n\nIf you are developing locally or self-hosting, your Edge Config is loaded through the public internet network. In this case, you may wonder if it's safe to have the token as a parameter in the connection string.\n\n*   It is safe to have the token as a parameter in the connection string, because the SDK parses the passed string, then sends the token through an `Authorization` header instead",
  "title": "Edge Config Limits and pricing",
  "description": "Learn about the Edge Configs limits and pricing based on account plans.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/quickstart",
  "markdown": "# Getting Started with Vercel Postgres\n\nThis page will walk you through setting up basic API routes that use [Vercel Postgres](https://vercel.com/docs/storage/vercel-postgres).\n\nIf you'd prefer to deploy a template, head to the [Templates](#Templates) section.\n\nTo follow this quickstart, you'll need the following:\n\n*   An existing [Vercel Project](https://vercel.com/docs/projects/overview#creating-a-project)\n*   The Vercel Postgres package\n*   The latest version of [Vercel CLI](https://vercel.com/docs/cli#installing-vercel-cli)\n\nIn this quickstart, you'll use Vercel Postgres SDK to create a database of you and your friends' pets.\n\nYou'll learn to:\n\n*   Create a Postgres database that's connected to one of your projects\n*   Create and manage the database in your [dashboard](https://vercel.com/dashboard) on Vercel\n*   Populate the database using [Vercel's Postgres SDK](https://vercel.com/docs/storage/vercel-postgres/sdk)\n*   Send the contents of a PostgreSQL table as a response when someone visits one of your API routes\n\n1.  To get started, let's create a database.\n    \n    1.  In [your dashboard on Vercel](https://vercel.com/dashboard), create or select the project you want to work with\n    2.  Select the Storage tab, then select the Connect Store button\n    3.  Select Postgres\n    4.  Enter a database name. It can only contain alphanumeric letters (including \"\\_\" and \"-\") and can't exceed 32 characters. We'll choose `pets_postgres_db`\n    5.  Select a region. If your project has [Edge](https://vercel.com/docs/edge-network/regions) or [Serverless Functions](https://vercel.com/docs/functions/serverless-functions/regions#), choose an option near their regions for faster responses\n    6.  Select Create and Continue\n    7.  In the next view, change nothing and select Connect\n2.  You now have an empty PostgreSQL database in your selected region!\n    \n    To connect to your database with Vercel Postgres SDK, you need a few credentials. By connecting your database to a project, those credentials are generated and made available as environment variables:\n    \n    *   `POSTGRES_URL`\n    *   `POSTGRES_PRISMA_URL`\n    *   `POSTGRES_URL_NON_POOLING`\n    *   `POSTGRES_USER`\n    *   `POSTGRES_HOST`\n    *   `POSTGRES_PASSWORD`\n    *   `POSTGRES_DATABASE`\n    \n    You can see them by navigating to the Settings tab in your project and selecting the Environment Variables panel.\n    \n3.  When you created your Postgres database and connected it to your project, your API URL and credentials were added to the project as environment variables automatically. You'll need to pull them into your local environment to access your Postgres database.\n    \n    In your terminal, run:\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n4.  Next, let's create an API route that, when visited, creates a `Pets` table in your database. It will hold very basic information about your pets.\n    \n    In the `app/api` directory, create `create-pets-table/route.ts`, and add the following contents to the `route` file:\n    \n    ```\n    import { sql } from '@vercel/postgres';\n    import { NextResponse } from 'next/server';\n     \n    export async function GET(request: Request) {\n      try {\n        const result =\n          await sql`CREATE TABLE Pets ( Name varchar(255), Owner varchar(255) );`;\n        return NextResponse.json({ result }, { status: 200 });\n      } catch (error) {\n        return NextResponse.json({ error }, { status: 500 });\n      }\n    }\n    ```\n    \n    Then, create your Pets table by visiting the API route we've just created:\n    \n    1.  Run `next dev` to start your app locally\n    \n    2.  Visit the route's path in your app: [http://localhost:3000/api/create-pets-table](http://localhost:3000/api/create-pets-table)\n    \n    You should see something like this in your browser:\n    \n    ```\n    {\n      \"result\": {\n      \"command\": \"CREATE\",\n      \"fields\": [],\n      \"rowAsArray\": false,\n      \"rowCount\": null,\n      \"rows\": [],\n      \"viaNeonFetch\": true\n      }\n    };\n    ```\n    \n    You can see the table in your Vercel dashboard as well. In your project's Storage tab, select your database, then select Data on the next page. Search for your table name and select it in the dropdown list. It should be empty.\n    \n5.  Now that our table exists, let's add some data.\n    \n    The following API route:\n    \n    1.  Adds a new row to your PostgreSQL database with both the `ownerName` and `petName` fields taken from the [query string](https://en.wikipedia.org/wiki/Query_string) in the URL when the route is visited\n    2.  Returns the contents of the entire table\n    \n    Add this file to your project:\n    \n    ```\n    import { sql } from '@vercel/postgres';\n    import { NextResponse } from 'next/server';\n     \n    export async function GET(request: Request) {\n      const { searchParams } = new URL(request.url);\n      const petName = searchParams.get('petName');\n      const ownerName = searchParams.get('ownerName');\n     \n      try {\n        if (!petName || !ownerName) throw new Error('Pet and owner names required');\n        await sql`INSERT INTO Pets (Name, Owner) VALUES (${petName}, ${ownerName});`;\n      } catch (error) {\n        return NextResponse.json({ error }, { status: 500 });\n      }\n     \n      const pets = await sql`SELECT * FROM Pets;`;\n      return NextResponse.json({ pets }, { status: 200 });\n    }\n    ```\n    \n    To send data to your database, you must visit the route:\n    \n    1.  Run `next dev` to start your app locally\n    \n    2.  Add data to the query params when you visit your route. Here's an example URL that adds a pet named `Fluffy` with an owner named `John` to your database:\n    \n    You should see something like this in your browser:\n    \n    ```\n    {\n      pets: {\n        command: \"SELECT\",\n        fields: [\n          {\n            columnID: 1,\n            dataTypeID: 1043,\n            dataTypeModifier: 259,\n            dataTypeSize: -1,\n            format: \"text\",\n            name: \"name\",\n            tableID: 12345,\n          },\n          {\n            columnID: 2,\n            dataTypeID: 1043,\n            dataTypeModifier: 259,\n            dataTypeSize: -1,\n            format: \"text\",\n            name: \"owner\",\n            tableID: 12345,\n          },\n        ],\n        rowCount: 1,\n        rows: [\n          {\n            name: \"Fluffy\",\n            owner: \"John\",\n          },\n        ],\n        viaNeonFetch: true,\n      },\n    };\n    ```\n    \n    And in your dashboard, under the Data tab when you view your database, you can search for the Pets table to see the pets and owners you've added.\n    \n6.  You now have API routes that create a table in your PostgreSQL database and add data to it!\n    \n    To learn more about using Vercel Postgres in your projects, read [our SDK reference](https://vercel.com/docs/storage/vercel-postgres/sdk).\n    \n\n## Explore Vercel Postgres with a project template",
  "title": "Getting Started with Vercel Postgres",
  "description": "You can get started with writing to and reading data from Vercel Postgres by following this quickstart guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/quickstart",
  "markdown": "# Vercel KV Quickstart\n\nIn this quickstart, you'll learn how to do the following:\n\n*   Create a KV store called `my-store` that is connected to one of your projects\n*   See how to use the Vercel dashboard to create and manage your database\n*   Populate the KV store using the CLI\n*   Query the KV store using the SDK\n\nLearn more about [how Vercel KV works](https://vercel.com/docs/storage/vercel-kv#how-vercel-kv-works).\n\nVercel KV works with any frontend framework or as a standalone Redis database. First, install the package:\n\nThen, install the Vercel CLI so we can retrieve the Environment Variables:\n\n1.  Navigate to the [Project](https://vercel.com/docs/projects/overview) you'd like to add a KV database to. Select the Storage tab, then select the Connect Database button.\n    \n    Under the Create New tab, select KV and then the Continue button.\n    \n    To use Vercel KV, you must accept the **terms and conditions** notice.\n    \n    Next, create a new store in the dialog:\n    \n    1.  Enter `my-store` (or any other name) under Database Name. The name can not exceed 32 characters\n    2.  Select a [primary region](https://vercel.com/docs/storage/vercel-kv/limits#vercel-kv-region-list)\n    3.  Click Create & Continue\n    4.  Select which [environments](https://vercel.com/docs/projects/environment-variables#environments) of the project to make the database available to. This determines the scope of the environment variables\n    5.  Click Connect\n2.  Your empty store is created in the [primary region](https://vercel.com/docs/storage/vercel-kv/limits#supported-regions) specified. This is the region that all _write operations_ will be routed to.\n    \n    Environment Variables for your KV store were automatically added to your project. These are used to connect to your store. Later in this quickstart, we'll pull them locally so you can use them with your project.\n    \n    *   `KV_URL`\n    *   `KV_REST_API_URL`\n    *   `KV_REST_API_TOKEN`\n    *   `KV_REST_API_READ_ONLY_TOKEN`\n3.  You can send Redis commands to your KV store with the CLI interface in the dashboard. To access the CLI, select your KV store and go to the CLI tab.\n    \n    Use the following command to create a `user:me` [hash](https://redis.io/docs/data-types/hashes/):\n    \n    ```\n    hset user:me email email@me.com id 123\n    ```\n    \n    You can then read the hash with the following command:\n    \n    The CLI will respond with `email, email@me.com, id, 123`.\n    \n    The CLI supports most Redis commands. See our [compatibility docs](https://vercel.com/docs/storage/vercel-kv/redis-compatibility) to learn which commands are available.\n    \n4.  When you created your KV database, your `KV_REST_API_URL` and `KV_REST_API_TOKEN` were created as Environment Variables automatically.\n    \n    To use these Environment Variables in your code, we recommend pulling them with the following Vercel CLI command:\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n5.  You can now retrieve data from your KV Store. The Vercel KV client automatically handles serialization and deserialization of JSON data, so you can easily store JSON objects as well as plain strings.\n    \n    ```\n    import { kv } from '@vercel/kv';\n    import { NextResponse } from 'next/server';\n     \n    export async function GET() {\n      const user = await kv.hgetall('user:me');\n      return NextResponse.json(user);\n    }\n    ```\n    \n    To connect to multiple KV stores, use [`createClient`](https://vercel.com/docs/storage/vercel-kv/kv-reference#createclient):\n    \n    ```\n    import { createClient } from '@vercel/kv';\n    import { NextResponse } from 'next/server';\n     \n    export async function GET() {\n      const users = createClient({\n        url: process.env.USERS_REST_API_URL,\n        token: process.env.USERS_REST_API_TOKEN,\n      });\n     \n      const user = await users.hgetall('user:me');\n     \n      const products = createClient({\n        url: process.env.PRODUCTS_REST_API_URL,\n        token: process.env.PRODUCTS_REST_API_TOKEN,\n      });\n     \n      const product = await products.hgetall('product:shirt');\n     \n      return NextResponse.json({ user, product });\n    }\n    ```\n    \n    See [our Redis compatibility docs](https://vercel.com/docs/storage/vercel-kv/redis-compatibility) to learn more about available commands.\n    \n6.  Run your application locally and visit `/api/user` to see your data.",
  "title": "Vercel KV Quickstart",
  "description": "Start using durable Redis with Vercel KV.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/get-started",
  "markdown": "# Getting Started with Edge Config\n\nYou can get started with reading data from [Edge Config](https://vercel.com/storage/edge-config) by creating a new store in the Edge Config tab of your Project. Follow the [steps below](#quickstart) to learn how to do so.\n\nYou can also create and configure your Edge Config at the account level for all use cases by:\n\n*   Install the Edge Config SDK:\n    \n    ```\n    pnpm i @vercel/edge-config\n    ```\n    \n*   An existing project. This quickstart uses Next.js, but you can use any supported framework with Edge Config storage\n*   [Install](https://vercel.com/docs/cli#installing-vercel-cli) or [update](https://vercel.com/docs/cli#updating-vercel-cli) to the latest version of Vercel CLI\n\nIn this quickstart, you'll create an Edge Config called `hello_world_store` at the project-level, through the Vercel [dashboard](https://vercel.com/dashboard). A token and environment variable `EDGE_CONFIG`, that stores the connection string, will be automatically created for you. We'll update the store with a key-value data pair and you'll then read the value of `\"greeting\"` from a local Next.js project.\n\n1.  Navigate to the [Project](https://vercel.com/docs/projects/overview) you'd like to add an Edge Config store to. Click on the Edge Config tab, then click the Connect Store button.\n    \n    Create a new store by typing `hello_world_store` under Edge Config in the dialog that opens, and click Create.\n    \n    The name can only contain alphanumeric letters, \"\\_\" and \"-\". It cannot exceed 32 characters.\n    \n2.  Once created, select `hello_world_store` to see a summary of what was created for you. Notice the following:\n    \n    *   If you select Project, you'll see that your project was connected to the Edge Config by using an environment variable. If you go to your projects's Settings > Environment Variables, you'll see the newly created environment variable.\n    *   If you select Tokens, you'll see a [read access token](https://vercel.com/docs/storage/edge-config/using-edge-config#creating-a-read-access-token). This token, along with your EDGE CONFIG ID, is used to create a [connection string](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string). This connection string is saved as the value of your `EDGE_CONFIG` environment variable. This enables you to use the SDK in your project to read the store's contents.\n    \n    If you're creating a project at the account-level, we won't automatically create a token, connection string, and environment variable until a project has been connected.\n    \n3.  Under Items, add the following key-value pair and click Save Items:\n    \n    ```\n    {\n      \"greeting\": \"hello world\"\n    }\n    ```\n    \n    You can see more information about what can be stored in an Edge Config in the [limits](https://vercel.com/docs/storage/edge-config/edge-config-limits) documentation.\n    \n4.  Once you've created the store, you need to set up your project to read the contents of the store. This is detailed under Learn how to use this in code in the dashboard, but is described in the following steps in more detail.\n    \n    On your local machine, connect your Vercel Project. If you haven't already, install the Edge Config SDK, as mentioned in [prerequisites](#prerequisites).\n    \n5.  Using Vercel CLI, pull the latest environment variables, specifically `EDGE_CONFIG`, so that it's available to your project locally:\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n6.  Create [Edge Middleware](https://vercel.com/docs/functions/edge-middleware#create-edge-middleware) for your project by creating a new file called `middleware.js` at the root of the project and if using Next.js, add the following code:\n    \n    ```\n    import { NextResponse } from 'next/server';\n    import { get } from '@vercel/edge-config';\n     \n    export const config = { matcher: '/welcome' };\n     \n    export async function middleware() {\n      const greeting = await get('greeting');\n      return NextResponse.json(greeting);\n    }\n    ```\n    \n    `NextResponse.json` requires at least Next v13.1 or enabling `experimental.allowMiddlewareResponseBody` in `next.config.js`.\n    \n7.  Run your application locally and visit `localhost:3000/welcome` to see your greeting. The middleware intercepts requests to `localhost:3000/welcome` and responds with a greeting, read from your Edge Config store.\n    \n\nYour project is now ready to read more key-value data pairs from the `hello_world_store` Edge Config using the [SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk) or [Vercel REST API](https://vercel.com/docs/storage/edge-config/vercel-api).\n\nYour Edge Config uses the public internet for reads when you develop locally. Therefore, you will see higher response times. However, when you deploy your application to Vercel, the reads are optimized to happen at ultra low latency without any network requests.",
  "title": "Getting Started with Edge Config",
  "description": "You can get started with reading data from Edge Config within minutes by following this quickstart guide.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/concepts/incremental-static-regeneration/overview",
  "markdown": null,
  "title": "",
  "description": null,
  "languageCode": null
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/rest-api",
  "markdown": "# Vercel KV Rest API\n\nYou can send Redis commands to [Vercel KV](https://vercel.com/storage/kv) in the following ways:\n\n*   Any Redis client\n*   [Vercel KV SDK](https://vercel.com/docs/storage/vercel-kv/kv-reference)\n*   Vercel KV API\n\nYou should only use Vercel KV API if you're using a runtime that does not have a Redis client, or does not support Node.js or Edge.\n\nTo get started using Vercel KV API, you need your database's REST API URL and REST API token, which Vercel generates when [you connect your project](https://vercel.com/docs/storage/vercel-kv/quickstart#create-a-kv-database). You'll find your URL and token in your project's dashboard under the following environment variables:\n\n*   `KV_REST_API_URL`\n*   `KV_REST_API_TOKEN`\n\nTo access them locally run the following command at the root directory of your project, using [Vercel CLI](https://vercel.com/docs/cli#installing-vercel-cli):\n\n```\nvercel env pull .env.development.local\n```\n\nYou can then use the environment variables in your code with `process.env`:\n\n```\nfetch(`${process.env.KV_REST_API_URL}`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\nOr with the `_token` query parameter to authenticate your requests.\n\n```\nconst { KV_REST_API_URL, KV_REST_API_TOKEN } = process.env;\n \nfetch(`${KV_REST_API_URL}?_token=${KV_REST_API_TOKEN}`)\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\nVercel automatically generates an API URL when you [connect your KV database to a project](https://vercel.com/docs/storage/vercel-kv/quickstart), which you can find under Endpoint on your database information page.\n\nTo make requests to your API URL, pass the API token in the `Authorization` header using the code from the Fetch tab of the dashboard quickstart:\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fvercel-kv%2Ffetch-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fvercel-kv%2Ffetch-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nVercel KV also generates a read-only API token, which grants access only to read commands. It also disables the `KEYS` command. You can access your read-only token with the `KV_REST_API_READ_ONLY_TOKEN` environment variable.\n\nYou can send basic commands in two ways:\n\n*   Add commands to the path of your API URL, separating each element of the command into their own paths with a `/`.\n    *   If a value contains slashes, such as setting a key named `redirectURL` to `https://example.com`, you must send commands in the `body`.\n*   Send Redis commands in the `body` of a `POST` request to your KV API URL. You must break each parameter of the command out into items in an array. Commands can have as many parameters as is allowed by the Redis Protocol.\n\n`[path]/set/{key}/{value}/{options}`\n\nExample\n\nDefine in path:\n\n```\n// SET userId abc EX 100\nfetch(`${process.env.KV_REST_API_URL}/set/userId/abc/ex/100`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\nDefine in body:\n\n```\nfetch(`${process.env.KV_REST_API_URL}/`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n  body: '[\"HSET\", \"sessionData\", \"username\", \"exampleUser123\"]',\n  method: 'POST',\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the key |\n| `value` | Yes | string, number or boolean | The value to set |\n| `options` | No  | object | An object whose keys can be [command arguments](https://redis.io/docs/reference/command-arguments/) |\n\n`[path]/get/{key}`\n\nExample\n\nDefine in path:\n\n```\nfetch(`${process.env.KV_REST_API_URL}/get/userId`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\nDefine in body:\n\n```\nfetch(`${process.env.KV_REST_API_URL}/`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n  body: '[\"GET\", \"userId\"]',\n  method: 'POST',\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the key |\n\n*   url = `${process.env.KV_REST_API_URL}/set/{key}`\n*   method = POST\n*   Body = JSON object\n\n```\n// SET userSession jsonObject\nfetch(`${process.env.KV_REST_API_URL}/set/userSession`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n  body: JSON.stringify({\n    sessid: '12345',\n    session_name: 'abcdef',\n    user: {\n      uid: 31,\n      name: 'test_user',\n      mail: 'user@example.com',\n    },\n  }),\n  method: 'POST',\n})\n  .then((response) => response.json())\n  .then((data) => console.log(data));\n```\n\nPath Parameters\n\n| Path Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the key |\n\nThis allows you to store user file contents in your KV database.\n\nEndpoint:\n\n*   url = `${process.env.KV_REST_API_URL}/set/binaryKey`\n*   method = POST\n*   Body = Binary data, such as files attached through HTML [`<input>`](https://developer.mozilla.org/docs/Web/HTML/Element/input/file) elements\n\nExample\n\n```\nexport default function FileInput() {\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n \n  function setFileToKey() {\n    if (!fileInputRef?.current?.files) {\n      return console.log('No file found');\n    }\n    fetch(`${process.env.KV_REST_API_URL}/set/binaryKey`, {\n      headers: {\n        Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n      },\n      body: fileInputRef.current.files[0],\n      method: 'POST',\n    })\n      .then((response) => response.json())\n      .then((data) => console.log(data));\n  }\n \n  return (\n    <>\n      <input ref={fileInputRef} type=\"file\" />\n      <button onClick={setFileToKey}>Upload file</button>\n    </>\n  );\n}\n```\n\nThere are two ways to send multiple commands to your KV database from the Rest API:\n\n*   [Pipelining](#using-pipelining) - Pipelining executes multiple commands in one network request. However, pipelining is not atomic, so other client requests _can_ be processed in the between.\n*   [Transactions](#sending-redis-transactions) - [Transactions](https://redis.io/docs/manual/transactions) allow you to send multiple commands to your KV database in one network request. However, transactions are executed atomically, which means commands sent from other client instances will not be executed in between a transaction's commands.\n\nEndpoint:\n\n*   url\\= `${process.env.KV_REST_API_URL}/pipeline`\n*   method = POST\n*   body = Redis commands in a two-dimensional array. Define arguments in the same order that you would with a standard Redis command\n\nExample\n\n```\nfetch(`${process.env.KV_REST_API_URL}/pipeline`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n  // SET userEmail example@example.com EX 100\n  // GET userEmail\n  body: `[\n    [\"SET\", \"userEmail\", \"example@example.com\", \"EX\", 100],\n    [\"GET\", \"userEmail\"]\n  ]`,\n  method: 'POST',\n})\n  .then((response) => response.json())\n  .then((data) => console.table(data));\n```\n\nEndpoint:\n\n*   url = `${process.env.KV_REST_API_URL}/multi-exec`\n*   method = POST\n*   body = Redis commands in a two-dimensional array. Define arguments in the same order that you would with a standard Redis command\n\nExample\n\n```\nfetch(`${process.env.KV_REST_API_URL}/multi-exec`, {\n  headers: {\n    Authorization: `Bearer ${process.env.KV_REST_API_TOKEN}`,\n  },\n  // HSET sessionData userEmail example@example.com\n  // HGET sessionData userEmail\n  body: `[\n    [\"HSET\", \"sessionData\", \"userEmail\", \"example@example.com\"],\n    [\"HGET\", \"sessionData\", \"userEmail\"]\n  ]`,\n  method: 'POST',\n})\n  .then((response) => response.json())\n  .then((data) => console.table(data));\n```\n\nResponse\n\nIf your transaction is successful, the response will be an array of result objects in the same order as the commands. The following is an example response array:\n\n```\n[\n  {\n    \"result\": \"OK\"\n  },\n  {\n    \"result\": \"example@example.com\"\n  }\n]\n```\n\nThe following table displays the possible HTTP responses you can receive from API requests, and what they mean.\n\n| HTTP Code | HTTP Status | Meaning |\n| --- | --- | --- |\n| `200` | OK  | The command was successfully executed. |\n| `400` | Bad Request | The command was invalid/[unsupported](https://vercel.com/docs/storage/vercel-kv/redis-compatibility), contained a syntax error, or failed to execute. |\n| `401` | Unauthorized | Authentication failed, likely due to an invalid or missing API token. |\n| `405` | Method Not Allowed | An unsupported HTTP method was used. Only `HEAD`, `GET`, `POST`, and `PUT` methods are allowed when making API requests. |",
  "title": "Vercel KV Rest API",
  "description": "Learn how to access and use your KV database with the Vercel KV Rest API.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/vercel-kv-error-codes",
  "markdown": "# Vercel KV Error Codes\n\n```\nReplyError: NOAUTH Authentication required\n```\n\nYour redis client failed to connect to your KV store. This error occurs when your password is missing from your connection parameters.\n\nYou'll most likely encounter this error when using your favorite redis CLI interface to connect to your KV store.\n\nYou can access the appropriate connection string with your KV store's password in the Quickstart section of [the Storage tab in your vercel dashboard](https://vercel.com/dashboard/stores).\n\nYour connection string should look like the following example:\n\n```\nredis://********example-store-name.redis.vercel-storage.com:12345\n```\n\nTroubleshoot:\n\n*   Check that your connection string does not have a typo, such as a missing `:` before the password\n\n```\nUnhandled error event: Error: read ECONNRESET at TCP.onStreamRead (node:internal/stream_base_commons:123:12)\n```\n\nYour redis client failed to connect to your KV store. This error occurs when your connection is not TLS enabled. All KV stores are TLS enabled by default. You cannot disable TLS.\n\nBe sure to use the `--tls` or equivalent option when connecting to your KV store through a CLI or redis client.\n\nTroubleshoot:\n\n*   Enable TLS in your redis client or CLI when connecting to your KV store\n*   Ensure that your KV store's connection string starts with `redis://`.\n\n```\n\"message\" : \"Unhandled error event:\nReplyError: ERR max concurrent connections exceeded\\r\nat Object.onceWrapper (events.js:286:20)\\r\nat Socket.emit (events.js:203:15)\\r    at Socket.EventEmitter.emit (domain.js:448:20)\\r\nat TCPConnectWrap.afterConnect [as oncomplete] (net.js:1093:10)\\n\"\n```\n\nYour redis client failed to connect to your KV store. This error occurs when your KV store has reached its max concurrent connection limit.\n\nThis can happen if you are not closing connections after opening them, such as in Serverless or Edge functions.\n\nTroubleshoot:\n\n*   Try to create clients within the functions that will use them, then close them when the function is done with them\n*   [Use our `@vercel/kv` SDK or the Vercel KV API](https://vercel.com/docs/storage/vercel-kv/kv-reference) to manage your database using REST. Using REST will allow you to avoid hitting your connection limit\n*   [Upgrade your plan to Pro or Enterprise](https://vercel.com/pricing) to increase your connection limit\n\n```\nReplyError: ERR max request size exceeded\n```\n\nThe command you sent to your KV store exceeds the max request size, which [varies based on your account plan](https://vercel.com/docs/storage/vercel-kv/usage-and-pricing).\n\nTroubleshoot:\n\n*   You can split your data into smaller chunks and send them in separate commands\n*   You can [upgrade your account plan to Pro or Enterprise](https://vercel.com/pricing) to increase your max request size limit\n\n```\nReplyError: ERR max single record size exceeded\n```\n\nAn entry in your KV store has exceeded the max record size limit for your account.\n\nYou may reach this limit either by inserting a single huge value or appending many small values to an entry. This entry can be a `String`, `List`, `Set`, `Hash` etc. Read (`GET`, `LRANGE`, `HMGET`, `ZRANGE` etc) and delete (`DEL`, `LPOP`, `HDEL`, `SREM` etc) requests will not be affected.\n\nTroubleshoot:\n\n*   You can split your data into smaller chunks and store them as separate entries with different keys.\n*   You can [upgrade your account plan to Pro or Enterprise](https://vercel.com/pricing) to increase your max request size limit\n\n```\nReplyError: ERR max key size exceeded. Limit: X bytes, Actual: Z bytes\n```\n\nThe size of the key you're trying to create in your KV store is larger than 32 KB.\n\nTroubleshoot:\n\n*   32 KB is the max size for a data key in your KV store. This size cannot be exceeded\n\n```\nReplyError: ERR max field size exceeded. Limit: X bytes, Actual: Z bytes\n```\n\nThe size of a `HASH` field you're trying to create in your KV store exceeds the max field size limit, which is 32 KB.\n\nTroubleshoot:\n\n*   32 KB is the max size for a `HASH` field in your KV store. This size cannot be exceeded\n\n```\nReplyError: ERR max member size exceeded. Limit: X bytes, Actual: Z bytes\n```\n\nThe size of a SET or ZSET member you're trying to create in your KV store exceeds the max field size limit, which is 32 KB.\n\nTroubleshoot:\n\n*   32 KB is the max size for a `SET` or `ZSET` member in your KV store. This size cannot be exceeded\n\n```\nReplyError: ERR DB capacity quota exceeded\n```\n\nYour KV store has exceeded the max size allowed for your account. See [our docs on Vercel KV usage and pricing](https://vercel.com/docs/storage/vercel-kv/usage-and-pricing) to learn more.\n\nTroubleshoot:\n\n*   You can manually delete some entries to allow further writes\n*   Consider setting TTL (expiration time) for your keys, or [enabling eviction](https://vercel.com/docs/storage/vercel-kv/configuring-a-database#eviction) for your KV store\n*   You can [upgrade your account plan to Pro or Enterprise](https://vercel.com/pricing) to increase your max KV store size limit\n\n```\nReplyError: ERR max daily request limit exceeded\n```\n\nYour KV store has exceeded the max daily request count limit by sending too many commands in a 24 hour period. See [our docs on Vercel KV usage and pricing](https://vercel.com/docs/storage/vercel-kv/usage-and-pricing) to learn more.\n\nTroubleshoot:\n\n*   Try to reduce the amount of commands your application or client sends per day\n*   You can [upgrade your account plan to Pro or Enterprise](https://vercel.com/pricing) to increase your max KV store daily request limit\n\n```\nUpstashError: WRONGPASS invalid or missing auth token\n```\n\nYour redis client failed to connect to your KV database. This error occurs when you try to authenticate with a missing or invalid auth token.\n\nYou can find the auth token in the Vercel dashboard, under the Storage tab. You can also find it in your project's settings, in the Environment Variables section. Your auth tokens should be:\n\n*   `KV_REST_API_TOKEN`\n*   `KV_REST_API_READ_ONLY_TOKEN`\n\nIf your KV database uses a custom Environment Variable prefix, it will replace `KV` in the Environment Variable names. For example, if your prefix is `SESSIONS`, your API token will be `SESSIONS_REST_API_TOKEN`\n\n*   Ensure your KV database is connected to your Vercel project. Follow [the Vercel KV quickstart](https://vercel.com/docs/storage/vercel-kv/quickstart) to learn how\n*   Ensure your KV database's credentials are available in your local environment variables with Vercel CLI. Follow [the Vercel KV quickstart](https://vercel.com/docs/storage/vercel-kv/quickstart) to learn how",
  "title": "Vercel KV Error Codes",
  "description": "This section focuses on errors that can happen while using a client, Vercel KV SDK, or Vercel KV API to interact with your Vercel KV database.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/sdk",
  "markdown": "# @vercel/postgres\n\nThe `@vercel/postgres` SDK provides an efficient way to interact with your Postgres database. It is 100% compatible with the [`node-postgres`](https://node-postgres.com/) library. You can use the following options:\n\n*   [`sql` (recommended)](#sql)\n*   [`db`](#db)\n*   [`createClient()`](#createclient)\n\nConstruct SQL queries with the `sql` [template literal tag](https://developer.mozilla.org/docs/Web/JavaScript/Reference/Template_literals#tagged_templates). This function translates your query into a native Postgres parameterized query to help [prevent SQL injections](#preventing-sql-injections). It is recommended for one-off queries.\n\nThe `sql` function automatically creates a pooled database connection for you and connects to the database specified in the `process.env.POSTGRES_URL` Environment Variable.\n\n```\nimport { sql } from '@vercel/postgres';\n \nconst likes = 100;\nconst { rows, fields } =\n  await sql`SELECT * FROM posts WHERE likes > ${likes} LIMIT 5;`;\n```\n\nWhen querying databases with a large number of rows, you may want to paginate your responses to prevent resource attacks. You can do this by using the `LIMIT` and `OFFSET` clauses in your query.\n\n```\nimport { sql } from '@vercel/postgres';\n \nconst pageSize = 10; // Number of records per page\nconst pageNumber = 1; // Specific page number\n \nconst offset = (pageNumber - 1) * pageSize;\n \n// Fetching records for the specific page number returning 10 records per page\nconst { rows, fields } =\n  await sql`SELECT * FROM posts WHERE likes > ${likes} LIMIT ${pageSize} OFFSET ${offset};`;\n```\n\n| Query | Description |\n| --- | --- |\n| `CREATE TABLE posts (likes INT);` | Create a new table in the database |\n| `SELECT * FROM posts;` | Get all posts in the database |\n| `SELECT * FROM posts WHERE likes > ${likes};` | Get all posts with more than 100 likes |\n| `INSERT INTO posts (likes) VALUES (${likes});` | Insert a new post into the database |\n| `UPDATE posts SET likes = 200;` | Update all posts to have 200 likes |\n| `DELETE FROM posts;` | Delete all posts in the database |\n\nYou can't call `sql` like a regular function. Attempting to do so will throw an error. This is a security measure to prevent the possibility of SQL injections.\n\nYou can run database queries in our built-in data browser. Go to your Postgres database in the dashboard and click on the **Data** tab.\n\nHere's how we process queries sent with the `sql` template tag to prevent SQL injections for you:\n\n1.  The SDK extracts your parameters and adds them to an array\n2.  The SDK sends the query string and the array of parameters to your PostgreSQL server. This is called a [parameterized query](https://node-postgres.com/features/queries#parameterized-query), and it's a common pattern in modern JavaScript SQL libraries\n3.  Your Postgres server sanitizes your parameters and inserts them into your query\n4.  Your query is finally executed\n\nAt every step of this process, until the end, your query is not possible to execute. Only when the parameters are substituted back in by the server can the query execute, and by then the parameters have been sanitized.\n\nYou can create a client to connect to your Postgres database (pooled) using the `db` method. Vercel will automatically manage connections to your database for you.\n\n```\nimport { db } from '@vercel/postgres';\n \nconst client = await db.connect();\nawait client.sql`SELECT 1`;\n```\n\nCreating a client is preferred over the `sql` helper if you need to make multiple queries or want to run transactions, as `sql` will connect for every query.\n\nIf you want to connect to the non-default database using an Environment Variable, you can use the `createPool()` method with the `connectionString` parameter. The pool returned from `createPool` is an instance of the `Pool` class from [`node-postgres`](https://node-postgres.com/apis/pool).\n\nIndividual clients can be created, connected, and disconnected for each query. This method is less efficient than using `db` and should only be used when a single client is required.\n\n```\nimport { createClient } from '@vercel/postgres';\n \nasync function queryPosts() {\n  const client = createClient();\n  await client.connect();\n \n  try {\n    const likes = 100;\n    const { rows, fields } =\n      await client.sql`SELECT * FROM posts WHERE likes > ${likes};`;\n  } finally {\n    await client.end();\n  }\n}\n```\n\nYou can optionally pass `createClient` a `connectionString` parameter to connect to a specific database. If no `connectionString` is provided, the SDK will use the default `process.env.POSTGRES_URL_NON_POOLING` Environment Variable.\n\nThe client returned from `createClient` is an instance of the `Client` class from [`node-postgres`](https://node-postgres.com/apis/client).\n\nWhen using `createClient()`, you must close the connection at the end of your queries. You can do so by using `client.end()`.\n\n```\nimport { createClient } from '@vercel/postgres';\n \nconst client = createClient();\nawait client.connect();\n \ntry {\n  await client.sql`SELECT 1`;\n} finally {\n  await client.end();\n}\n```\n\nYou can use Vercel Postgres with many popular ORMs. In general, we recommend using one of our recommended ORMs, or a client you prefer, to access your Postgres database.\n\nLearn more about [using an ORM with Vercel Postgres](https://vercel.com/docs/storage/vercel-postgres/using-an-orm).\n\n`@vercel/postgres` supports all valid PostgreSQL 15 queries. See [Postgres compatibility](https://vercel.com/docs/storage/vercel-postgres/supported-postgresql-extensions) for more information.\n\nDo not use `@vercel/postgres` in public-facing clients such as the browser. This will expose your database URL, granting write access to those who uses it. We recommend using this SDK only on the server.\n\nAlways use parameterized queries, an ORM, or query builder when creating queries with user-defined inputs to minimize the likelihood of SQL injection attacks. The [`sql`](#sql) function in the `@vercel/postgres` package [translates raw queries to parameterized queries for you](#preventing-sql-injections).",
  "title": "@vercel/postgres",
  "description": "View the API reference for the Vercel Postgres SDK.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/redis-compatibility",
  "markdown": "# Vercel KV Redis Compatibility\n\n[Vercel KV](https://vercel.com/storage/kv) supports commands compatible with [the Redis client protocol](https://redis.io/docs/reference/protocol-spec/) up to `v6.2`.\n\nThis documentation provides an overview and examples of the Redis commands supported by our Redis database. For a comprehensive understanding of each command and its options, please refer to the [official Redis documentation](https://redis.io/commands).\n\nThe Redis String data type is used to store and manipulate an array of bytes representing a sequence of characters. Here's an example using the `SET` and `GET` commands:\n\n```\n> SET user:1 \"John Doe\"\nOK\n> GET user:1\n\"John Doe\"\n```\n\nSupported commands:\n\nRedis Bitmaps are used to store and manipulate bit arrays. Bitmaps are not a separate data type, but a set of bit-oriented operations defined on the String type. Here's an example using the `SETBIT` and `GETBIT` commands:\n\n```\n> SETBIT user:1:flags 0 1\n(integer) 0\n> GETBIT user:1:flags 0\n(integer) 1\n```\n\nSupported commands:\n\nRedis Hash is a data type used to store key-value pairs. Here's an example using the `HSET` and `HGET` commands:\n\n```\n> HSET user:1 name \"John Doe\"\n(integer) 1\n> HGET user:1 name\n\"John Doe\"\n```\n\nSupported commands:\n\nRedis Lists are ordered collections of strings. Here's an example using the `LPUSH` and `LRANGE` commands:\n\n```\n> LPUSH fruits \"apple\"\n(integer) 1\n> LPUSH fruits \"banana\"\n(integer) 2\n> LRANGE fruits 0 -1\n1) \"banana\"\n2) \"apple\"\n```\n\nSupported commands:\n\nRedis Sets are unordered collections of unique strings. Here's an example using the `SADD` and `SMEMBERS` commands:\n\n```\n> SADD colors \"red\"\n(integer) 1\n> SADD colors \"blue\"\n(integer) 1\n> SMEMBERS colors\n1) \"red\"\n2) \"blue\"\n```\n\nSupported commands:\n\nRedis Sorted Sets are non-repeating collections of strings ordered by a score. Here's an example using the `ZADD` and `ZRANGE` commands:\n\n```\n> ZADD scores 10 \"player1\"\n(integer) 1\n> ZADD scores 20 \"player2\"\n(integer) 1\n> ZRANGE scores 0 -1 WITHSCORES\n1) \"player1\"\n2) \"10\"\n3) \"player2\"\n4) \"20\"\n```\n\nSupported commands:\n\nRedis Geo data type is used to store and manipulate geographical information. Here's an example using the `GEOADD` and `GEORADIUS` commands:\n\n```\n> GEOADD cities 13.4050 52.5200 \"Berlin\"\n(integer) 1\n> GEOADD cities 2.3522 48.8566 \"Paris\"\n(integer) 1\n> GEORADIUS cities 13.4050 52.5200 1000 km WITHDIST\n1) 1) \"Berlin\"\n   2) \"0.0000\"\n2) 1) \"Paris\"\n   2) \"878.9692\"\n```\n\nSupported commands:\n\nRedis HyperLogLog is a probabilistic data structure used to estimate the cardinality of a set. Here's an example using the `PFADD` and `PFCOUNT` commands:\n\n```\n> PFADD users \"Alice\"\n(integer) 1\n> PFADD users \"Bob\"\n(integer) 1\n> PFADD users \"Alice\"\n(integer) 0\n> PFCOUNT users\n(integer) 2\n```\n\nSupported commands:\n\nRedis Scripting allows the execution of Lua scripts on the server-side. Here's an example using the `EVAL` command:\n\n```\n> SET counter 10\nOK\n> EVAL \"return redis.call('INCR', KEYS[1])\" 1 counter\n(integer) 11\n```\n\nSupported commands:\n\nPub/Sub is not currently supported through the Vercel KV SDK. Instead, you can use the native Redis client.\n\nRedis Pub/Sub allows sending messages between different clients through channels. Here's an example using the `PUBLISH` command:\n\n```\n> PUBLISH news \"Breaking news: Redis documentation updated!\"\n(integer) 5\n```\n\nSupported commands:\n\nRedis Transactions group multiple commands together, ensuring they are executed sequentially and atomically. Here's an example using the `MULTI`, `INCR`, and `EXEC` commands:\n\n```\n> SET balance 100\nOK\n> MULTI\nOK\n> INCR balance\nQUEUED\n> INCR balance\nQUEUED\n> EXEC\n1) (integer) 101\n2) (integer) 102\n```\n\nSupported commands:\n\nRedis Generic commands provide general functionality for managing keys. Here's an example using the `EXISTS` and `DEL` commands:\n\n```\n> SET key1 \"value1\"\nOK\n> EXISTS key1\n(integer) 1\n> DEL key1\n(integer) 1\n> EXISTS key1\n(integer) 0\n```\n\nSupported commands:\n\nRedis Connection commands are used to manage client connections to the server. Here's an example using the `PING` command:\n\nSupported commands:\n\nRedis Server commands provide information and control over the Redis server. Here's an example using the `DBSIZE` and `FLUSHDB` commands:\n\n```\n> SET key1 \"value1\"\nOK\n> SET key2 \"value2\"\nOK\n> DBSIZE\n(integer) 2\n> FLUSHDB\nOK\n> DBSIZE\n(integer) 0\n```\n\nSupported commands:\n\nRedis JSON provides native support for storing and manipulating JSON data. Here's an example using the `JSON.SET` and `JSON.GET` commands:\n\n```\n> JSON.SET user . '{\"name\": \"Alice\", \"age\": 30}'\nOK\n> JSON.GET user\n\"{\"name\":\"Alice\",\"age\":30}\"\n```\n\nSupported commands:\n\nRedis Streams provide a data structure for managing and processing streams of data. Here's an example using the `XADD` and `XRANGE` commands:\n\n```\n> XADD mystream * sensor-id 1234 temperature 19.8\n\"1623791288816-0\"\n> XADD mystream * sensor-id 5678 temperature 21.3\n\"1623791288816-1\"\n> XRANGE mystream - +\n1) 1) \"1623791288816-0\"\n   2) 1) \"sensor-id\"\n      2) \"1234\"\n      3) \"temperature\"\n      4) \"19.8\"\n2) 1) \"1623791288816-1\"\n   2) 1) \"sensor-id\"\n      2) \"5678\"\n      3) \"temperature\"\n      4) \"21.3\"\n```\n\nSupported commands:\n\nSince Vercel KV is a serverless, durable key-value store, you don't need to manage clusters or horizontal scaling.",
  "title": "Vercel KV Redis Compatibility",
  "description": "Learn about the Redis commands Vercel KV supports.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-kv/kv-reference",
  "markdown": "# @vercel/kv\n\nEvery supported Redis command can be executed with the [Vercel KV](https://vercel.com/storage/kv) SDK by calling it as a method. For example, to set a key value you'd call `kv.set()`, and to increment a key value you'd call `kv.incr()`.\n\nThis page will teach you how to connect to your KV stores, and demonstrate a few example commands you can use to get started and understand how Redis commands map to the KV SDK.\n\n*   For a reference of unsupported Redis commands, see [our Redis Compatibility docs](https://vercel.com/docs/storage/vercel-kv/redis-compatibility)\n*   For a reference of all valid Redis commands, see [the official Redis docs](https://redis.io/commands/)\n*   For a reference of all valid Redis data types, see [the official Redis docs](https://redis.io/docs/data-types/)\n\nThere are two ways to connect to your KV stores:\n\n1.  The `kv` client, which is a pooled client that uses your `KV_REST_API_TOKEN` and `KV_REST_API_URL` to connect to a KV store\n2.  The `createClient` method\n\nSee [our quickstart](https://vercel.com/docs/storage/vercel-kv/quickstart#query-your-kv-store) to learn how to do both.\n\nThe `createClient` method allows you to use a custom database URL and access token to connect to a Vercel KV database. It takes a config object with the following properties:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `url` | Yes | string | The REST\\_API\\_URL generated when you connect your KV store to a Vercel project |\n| `token` | Yes | string | The REST\\_API\\_TOKEN generated when you connect your KV store to a Vercel project |\n\n```\nimport { createClient } from '@vercel/kv';\n \nexport async function GET() {\n  const users = createClient({\n    url: process.env.USERS_REST_API_URL,\n    token: process.env.USERS_REST_API_TOKEN,\n  });\n \n  const user = await users.hgetall('user:me');\n \n  const products = createClient({\n    url: process.env.PRODUCTS_REST_API_URL,\n    token: process.env.PRODUCTS_REST_API_TOKEN,\n  });\n \n  const product = await products.hgetall('product:shirt');\n  return Response.json(\n    {\n      user,\n      product,\n    },\n    {\n      status: 200,\n    },\n  );\n}\n```\n\nThe following commands allow you to interact with key values in your Vercel KV database.\n\n[Review all the string (key value) commands](https://redis.io/commands/?group=string).\n\nTo run the Redis `SET` command to create a key, use the `.set()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the key |\n| `value` | Yes | string, number, object, or boolean | The value to set |\n| `options` | No  | object | An object whose keys can be [command arguments](https://redis.io/docs/reference/command-arguments/) |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.set('setExample', '123abc', { ex: 100, nx: true });\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `GET` command to fetch a key's value, use the `.get()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the key |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    const getExample = await kv.get('getExample');\n    console.log(getExample);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\n[Hashes](https://redis.io/docs/data-types/hashes/) are like JavaScript objects, allowing you to store multiple values. They're typically used for session caches. The following commands allow you to interact with hash values in your Vercel KV database.\n\n[Review all the hash commands](https://redis.io/commands/?group=hash).\n\nTo run the Redis `HSET` command to create a hash, use the `.hset()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the key |\n| `value` | Yes | object | The object value |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.hset('userSession', { userId: 123, email: 'ex@example.com' });\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `HGET` command to fetch a key's value from a hash, use the `.hget()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the hash |\n| `field` | Yes | string | The name of the key to fetch from the hash |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    const userId = await kv.hget('userSession', 'userId');\n    console.log(userId);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\n[Lists](https://redis.io/docs/data-types/lists/) are linked lists of string values. They're typically used for queue management in background worker systems. The following commands allow you to interact with hash values in your Vercel KV database.\n\n[Review all the list commands](https://redis.io/commands/?group=list).\n\nTo run the Redis `LPUSH` command to create a list or append an item to an existing one, use the `.lpush()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the list |\n| `ele1`, `ele2` | Yes | list of the same type | You can pass as many parameters as you want of the same type. They will be the elements of the list. |\n| `options` | No  | object | An object whose keys can be [command arguments](https://redis.io/docs/reference/command-arguments/) |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.lpush(\n      'badIpList',\n      'abc12304040',\n      'xyz98773456',\n      'you can keep going',\n      \"as long as they're\",\n      'all the same type',\n    );\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `LRANGE` command to fetch values from a list, use the `.lrange()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the list |\n| `start` | Yes | number | The beginning index in the range of items to return from the list. `0` is the first element. |\n| `end` | Yes | number | The final index in the range of items to return from the list. `0` is the first element. |\n\nThe start and end indexes can be negative numbers. `-1` is the end of the list.\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    // 0 is the first element; -1 is the last element\n    // So this returns the whole list\n    const list = await kv.lrange('badIpList', 0, -1);\n    console.log(userId);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\n[Sets](https://redis.io/docs/data-types/sets/) are unordered collections of unique string values. They're typically used for tracking unique items and representing relations. The following commands allow you to interact with sets in your Vercel KV database.\n\n[Review all the set commands](https://redis.io/commands/?group=set).\n\nTo run the Redis `SADD` command to add specified members to the set stored at the specified key, use the `.sadd()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the set |\n| `mem1`, `mem2` | Yes | list of strings | You can pass as many members as you want. They will be the members of the list. |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.sadd('myset', 'mem1', 'mem2');\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `SREM` command to remove the specified members from the set stored at the specified key, use the `.srem()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the set |\n| `mem1`, `mem2` | Yes | list of strings | You can pass as many members as you want. They will be the members of the list. |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.srem('myset', 'mem1', 'mem2');\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `SISMEMBER` command to check if the specified member is a member of the set stored at the specified key, use the `.sismember()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the set |\n| `member` | Yes | string | The member that you want to check for |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    const isMember = await kv.sismember('myset', 'member');\n    // returns 1 if the member is part of the set and 0 if not\n    console.log(isMember);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\n[Sorted sets](https://redis.io/docs/data-types/sorted-sets/) are collections of unique string values (members) ordered by an associated score. They're typically used for maintaining ordered lists such as high scores. The following commands allow you to interact with sets in your Vercel KV database.\n\n[Review all the sorted set commands](https://redis.io/commands/?group=sorted-set).\n\nTo run the Redis `ZADD` command to add all the specified members with the specified scores to the sorted set stored at the specified key, use the `.zadd()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the set |\n| `{score: 1, member: 'mem1'}`, `{score: 2, member: 'mem2'}` | Yes | list of score objects: `score: number, member: string` | You can pass as many score-member objects as you want. They will be the members of the list ordered by the score of each object. |\n| `options` | No  | object | An object whose keys can be [command arguments](https://redis.io/docs/reference/command-arguments/) |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.zadd(\n      'mysortedset',\n      { score: 1, member: 'team1' },\n      { score: 2, member: 'team2' },\n    );\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `ZRANGE` command to get the specified member(s) within a specified range of scores in the sorted set stored at the specified key, use the `.zrange()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the set |\n| `start` | Yes | number | The start score of the range |\n| `stop` | Yes | number | The end score of the range |\n| `options` | No  | object | An object whose keys can be [command arguments](https://redis.io/docs/reference/command-arguments/) |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    const data = await kv.zrange('mysortedset', 1, 3);\n    console.log(data);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\n[Bitmaps](https://redis.io/docs/data-types/bitmaps/) are an extension of the string data type with the ability of containing [bit vectors](https://www.gnu.org/software/guile/manual/html_node/Bit-Vectors.html). They're typically used for efficient set representations where the members correspond to integers `0-N` or for object permissions. The following commands allow you to interact with sets in your Vercel KV database.\n\n[Review all the bitmap commands](https://redis.io/commands/?group=bitmap).\n\nTo run the Redis `SETBIT` command to set or clear the bit at the specified offset in the string value stored at the specified key, use the `.setbit()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the string value |\n| `offset` | Yes | number | The offset of the bit to be set or cleared |\n| `value` | Yes | number | Whether to set or clear the bit: `1` to set and `0` to clear |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    await kv.setbit('mybitmap', 7, 1);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```\n\nTo run the Redis `GETBIT` command to get the bit value at the specified offset in the string value stored at the specified key, use the `.getbit()` method, with the following parameters:\n\n| Parameters | Required | Type | Description |\n| --- | --- | --- | --- |\n| `key` | Yes | string | The name of the string value |\n| `offset` | Yes | number | The offset of the bit to be retrieved |\n\n```\nimport { kv } from '@vercel/kv';\n \nasync function exampleCommands() {\n  try {\n    const bitvalue = await kv.setbit('mybitmap', 7);\n    console.log(bitvalue);\n  } catch (error) {\n    // Handle errors\n  }\n}\n```",
  "title": "@vercel/kv",
  "description": "Vercel KV is a durable Redis database that enables you to store and retrieve simple key-value data structures globally at the edge.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/using-an-orm",
  "markdown": "# Using an ORM to access your Postgres database\n\n[Vercel Postgres](https://vercel.com/storage/postgres) provides an [SDK](https://vercel.com/docs/storage/vercel-postgres/sdk), but we recommend using an [ORM](https://en.wikipedia.org/wiki/Object%E2%80%93relational_mapping) for larger applications.\n\n*   [Kysely](#kysely)\n*   [Prisma](#prisma)\n*   [Drizzle](#drizzle)\n\nTo get started using Vercel Postgres with your favorite ORM, follow the instructions in [our Postgres quickstart](https://vercel.com/docs/storage/vercel-postgres/quickstart).\n\nIf your ORM is featured on this page, read the corresponding section for the most optimal configuration instructions.\n\nKysely is a type-safe and autocomplete-friendly TypeScript SQL query builder. Use [our Kysely template](https://vercel.com/templates/next.js/postgres-kysely) to deploy a Next.js project that connects to Vercel Postgres with Kysely now.\n\nTo use Kysely, follow these steps:\n\n1.  Install the Kysely package:\n    \n    ```\n    pnpm i kysely @vercel/postgres-kysely\n    ```\n    \n2.  Use the `createKysely` method from `@vercel/postgres-kysely` to create a client with a pooled connection\n    \n    ```\n    import { createKysely } from '@vercel/postgres-kysely';\n     \n    interface Database {\n      person: PersonTable;\n      pet: PetTable;\n      movie: MovieTable;\n    }\n     \n    const db = createKysely<Database>();\n     \n    await db\n      .insertInto('pet')\n      .values({ name: 'Catto', species: 'cat', owner_id: id })\n      .execute();\n     \n    const person = await db\n      .selectFrom('person')\n      .innerJoin('pet', 'pet.owner_id', 'person.id')\n      .select(['first_name', 'pet.name as pet_name'])\n      .where('person.id', '=', id)\n      .executeTakeFirst();\n    ```\n    \n\nKysely supports all PostgreSQL commands. See [Kysely's docs](https://kysely.dev/docs/intro) for a full reference of the methods used to send the commands.\n\nPrisma is a next-gen ORM that includes a type-safe query builder, migration system, and database management interface. Use [our Prisma template](https://vercel.com/templates/next.js/postgres-prisma) to deploy a Next.js project that connects to Vercel Postgres with Prisma now.\n\nTo use Vercel Postgres with Prisma, you must:\n\n1.  Follow the instructions in [our Postgres quickstart](https://vercel.com/docs/storage/vercel-postgres/quickstart)\n    \n2.  Install [Prisma client](https://www.prisma.io/docs/concepts/components/prisma-client/working-with-prismaclient/generating-prisma-client#the-prismaclient-npm-package) and [Prisma CLI](https://www.prisma.io/docs/concepts/components/prisma-cli/installation):\n    \n    ```\n    pnpm i prisma @prisma/client\n    ```\n    \n3.  Use your environment variables in your `schema.prisma` file as shown below:\n    \n    ```\n    generator client {\n      provider = \"prisma-client-js\"\n    }\n     \n    datasource db {\n      provider = \"postgresql\"\n      // Uses connection pooling\n      url = env(\"POSTGRES_PRISMA_URL\")\n      // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`\n      // or you'll have dangling databases from migrations\n      directUrl = env(\"POSTGRES_URL_NON_POOLING\")\n    }\n     \n    model User {\n      id        Int      @id @default(autoincrement())\n      name      String\n      email     String   @unique\n      image     String\n      createdAt DateTime @default(now())\n    }\n    ```\n    \n4.  Use `@prisma/client` to query your Vercel Postgres database\n    \n    ```\n    import { PrismaClient } from '@prisma/client';\n     \n    const prisma = new PrismaClient();\n     \n    export default async function prismaExample() {\n      const newUser = await prisma.user.create({\n        data: {\n          name: 'Elliott',\n          email: 'xelliottx@example-user.com',\n        },\n      });\n     \n      const users = await prisma.user.findMany();\n    }\n    ```\n    \n5.  Whenever you make changes to your prisma schema, you must [run a migration](#prisma-migrate), then run `prisma generate` to update the generated type generations, which live in the `node_modules/.prisma/client` directory. You can do this by adding the following script to your `package.json`:\n    \n    ```\n    {\n      \"scripts\": {\n        \"vercel-build\": \"prisma generate && prisma migrate deploy && next build\"\n      }\n    }\n    ```\n    \n\nWhen you connect with Prisma using the `POSTGRES_PRISMA_URL` environment variable, the parameters `connect_timeout=10` and `pgbouncer=true` will be set.\n\nSee [the Prisma docs](https://www.prisma.io/docs/concepts/database-connectors/postgresql) to learn more.\n\nSee the [Prisma Migrate docs](https://www.prisma.io/docs/concepts/components/prisma-migrate) to migrate your database.\n\nDrizzle is a TypeScript ORM that enables developers to build type-safe SQL queries. It relies on zero dependencies, and uses a SQL-like syntax to offer a lower learning curve than other ORMs. Use [our Drizzle template](https://vercel.com/templates/next.js/postgres-drizzle) to deploy a Next.js project that connects to Vercel Postgres with Drizzle now.\n\nTo use Drizzle with Vercel Postgres, you must:\n\n1.  Follow the instructions in the [Postgres quickstart](https://vercel.com/docs/storage/vercel-postgres/quickstart)\n    \n2.  Install the [`drizzle-orm`](https://orm.drizzle.team/docs/overview) package to write queries, and the [`drizzle-kit`](https://orm.drizzle.team/kit-docs/overview) package to define your schema and manage migrations:\n    \n3.  Create a `schema.ts` file for your database tables:\n    \n    ```\n    import { drizzle } from 'drizzle-orm/vercel-postgres';\n    import { sql } from '@vercel/postgres';\n    import {\n      pgTable,\n      serial,\n      text,\n      timestamp,\n      uniqueIndex,\n    } from 'drizzle-orm/pg-core';\n     \n    export const UsersTable = pgTable(\n      'users',\n      {\n        id: serial('id').primaryKey(),\n        name: text('name').notNull(),\n        email: text('email').notNull(),\n        image: text('image').notNull(),\n        createdAt: timestamp('createdAt').defaultNow().notNull(),\n      },\n      (users) => {\n        return {\n          uniqueIdx: uniqueIndex('unique_idx').on(users.email),\n        };\n      },\n    );\n    ```\n    \n\n4.  Install the [`@next/env`](https://nextjs.org/docs/app/building-your-application/configuring/environment-variables#loading-environment-variables-with-nextenv) package to load the environment variables outside of the Next.js runtime:\n    \n    ```\n    import { loadEnvConfig } from '@next/env';\n     \n    const projectDir = process.cwd();\n    loadEnvConfig(projectDir);\n    ```\n    \n\n5.  Create a [`drizzle.config.js`](https://orm.drizzle.team/kit-docs/conf) file in the root of your project, import the environment variables config, add the path to your schema file, and your Vercel `POSTGRES_URL` connection string:\n    \n    ```\n    import '@/drizzle/envConfig';\n    import { defineConfig } from 'drizzle-kit';\n     \n    export default defineConfig({\n      schema: './drizzle/schema.ts',\n      driver: 'pg',\n      dbCredentials: {\n        connectionString: process.env.POSTGRES_URL!,\n      },\n    });\n    ```\n    \n6.  Use the `drizzle-kit` CLI to generate your tables:\n    \n\nAfter running this command, you can view your tables in your Vercel [dashboard](https://vercel.com/dashboard), under the Storage tab. Follow the [Drizzle-Kit docs](https://orm.drizzle.team/kit-docs/overview) to migrate and seed your database, and learn how to use the [Drizzle-Studio](https://orm.drizzle.team/drizzle-studio/overview).\n\n7.  Lastly, create a new client to query your database:\n    \n    ```\n    import '@/drizzle/envConfig';\n    import { drizzle } from 'drizzle-orm/vercel-postgres';\n    import { sql } from '@vercel/postgres';\n    import * as schema from './schema';\n     \n    export const db = drizzle(sql, { schema });\n     \n    export const getUsers = async () => {\n      return db.query.users.findMany();\n    };\n    ```",
  "title": "Using an ORM to access your Postgres database",
  "description": "Learn how to use your favorite ORM to access your database from your apps",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/supported-postgresql-extensions",
  "markdown": "# Postgres Compatibility\n\n[Vercel Postgres](https://vercel.com/storage/postgres) has integrated many PostgreSQL extensions, which will be automatically available to your database. Vercel's Postgres compatibility is based on our [Neon](https://neon.tech/docs/reference/compatibility) integration.\n\nThe following table lists the PostgreSQL extensions Vercel Postgres supports.\n\n| Extension | Extension Version (PostgreSQL 15) | Note |\n| --- | --- | --- |\n| `address_standardizer` | 3.3.3 |     |\n| `address_standardizer_data_us` | 3.3.3 |     |\n| `autoinc (spi)` | 1.0 |     |\n| `bloom` | 1.0 |     |\n| `btree_gin` | 1.3 |     |\n| `btree_gist` | 1.7 |     |\n| `citext` | 1.6 |     |\n| `cube` | 1.5 |     |\n| `dict_int` | 1.0 |     |\n| `earthdistance` | 1.1 |     |\n| `fuzzystrmatch` | 1.1 |     |\n| `h3_pg` | 4.1.3 |     |\n| `hll` | 2.18 |     |\n| `hstore` | 1.8 |     |\n| `hypopg` | 1.4.0 |     |\n| `insert_username (spi)` | 1.0 |     |\n| `intagg` | 1.1 |     |\n| `intarray` | 1.5 |     |\n| `ip4r` | 2.4.2 |     |\n| `isn` | 1.2 |     |\n| `lo` | 1.1 |     |\n| `ltree` | 1.2 |     |\n| `moddattime (spi)` | 1.0 |     |\n| `pg_graphql` | 1.4.0 |     |\n| `pg_hashids` | 1.2.1 |     |\n| `pg_hint_plan` | 1.6.0 |     |\n| `pg_ivm` | 1.7 |     |\n| `pg_jsonschema` | 0.2.0 |     |\n| `pg_partman` | 5.0.1 |     |\n| `pg_prewarm` | 1.2 |     |\n| `pg_roaringbitmap` | 0.5 |     |\n| `pg_stat_statements` | 1.10 |     |\n| `pg_tiktoken` | 0.0.1 |     |\n| `pg_trgm` | 1.6 |     |\n| `pg_uuidv7` | 1.0 |     |\n| `pgcrypto` | 1.3 |     |\n| `pgjwt` | 0.2.0 |     |\n| `pgrouting` | 3.4.2 | The PostGIS extension must be installed first. |\n| `pgrowlocks` | 1.2 |     |\n| `pgstattuple` | 1.5 |     |\n| `pgTAP` | 1.2.0 |     |\n| `pgvector` | 0.7.1 | Install with CREATE EXTENSION vector; |\n| `pgx_ulid` | 0.1.3 | Install with CREATE EXTENSION vector; |\n| `plcoffee` | 3.1.8 |     |\n| `plls` | 3.1.8 |     |\n| `plpgsql` | 1.0 | Pre-installed with PostgreSQL. |\n| `plpgsql_check` | 2.5.3 |     |\n| `plv8` | 3.1.10 |     |\n| `postgis` | 3.3.3 |     |\n| `postgis_raster` | 3.3.3 |     |\n| `postgis_tiger_geocoder` | 3.3.3 | Cannot be installed using the Vercel Postgres SQL Editor. Use your `psql` user credentials to install this extension. |\n| `postgis_topology` | 3.3.3 |     |\n| `prefix` | 1.2.0 |     |\n| `rdkit` | 4.3.0 |     |\n| `refint (spi)` | 1.0 |     |\n| `roaringbitmap` | 0.5 |     |\n| `rum` | 1.3 |     |\n| `seg` | 1.4 |     |\n| `tablefunc` | 1.0 |     |\n| `tcn` | 1.0 |     |\n| `timescaledb` | 2.13.0 | Only Apache-2 licensed features are supported. Compression is not supported. |\n| `tsm_system_rows` | 1.0 |     |\n| `tsm_system_time` | 1.0 |     |\n| `unaccent` | 1.1 |     |\n| `unit` | 7   |     |\n| `uuid-ossp` | 1.1 | Double-quote the extension name when installing: CREATE EXTENSION \"uuid-ossp\" |\n| `xml2` | 1.1 |     |\n\n*   Vercel Postgres supports the `uuid-ossp` extension for generating UUIDs instead of the `uuid` extension.\n*   The `sslinfo` extension is not supported. Vercel Postgres handles connections through a proxy that checks SSL.\n*   The `pg_cron` extension is not supported. Vercel Postgres scales to zero when it is not being used, which means that a scheduler that runs inside the database cannot be implemented. Consider using an external scheduler like [Vercel Cron Jobs](https://vercel.com/docs/cron-jobs).\n*   The `file_fdw` extension is not supported. Files would not remain accessible when Vercel Postgres scales to zero.\n\nYou can install extensions from the CLI interface in your dashboard on Vercel, or with a PostgreSQL client of your choice.\n\n```\nALTER EXTENSION extension_name UPDATE TO 'x.x.x';\n```\n\nYou can check the version of an extension with:\n\n```\nSELECT * FROM extension_name;\n```",
  "title": "Postgres Compatibility",
  "description": "See the supported and unsupported Postgres features and extensions Vercel supports.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/errors/FALLBACK_BODY_TOO_LARGE",
  "markdown": "# FALLBACK\\_BODY\\_TOO\\_LARGE\n\nThe `FALLBACK_BODY_TOO_LARGE` error indicates that the size of the fallback body exceeds the maximum cache limit. This error typically occurs in prerendered pages when the response body of a fallback page is larger than the cache can accommodate. Notably, if the fallback exceeds 10MB, it cannot be cached.\n\n502\n\n`FALLBACK_BODY_TOO_LARGE`\n\nPrerender fallback file is too big for cache\n\nTo resolve this error, consider the following steps:\n\n1.  Review response size: Examine the size of the response body for the affected page. If it's too large, try to reduce the content size\n2.  Optimize content: Minimize HTML, CSS, and JavaScript on the fallback page Remove unnecessary assets or data to reduce the page size\n3.  Implement pagination: If the large response body is due to extensive datasets, consider using pagination. This divides the data into smaller, manageable sections\n4.  Dynamic data loading: Where possible, load data dynamically on the client-side instead of sending all data in the initial server response\n\nTo prevent this error, ensure that the size of the fallback page is less than 10 MB.",
  "title": "FALLBACK_BODY_TOO_LARGE",
  "description": "The fallback body is too large for the cache. This is a cache error.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/vercel-postgres-error-codes",
  "markdown": "# Vercel Postgres Error Codes\n\n```\nReplyError: invalid_connection_string\n```\n\nYour postgres client was not able to connect to your Postgres store. This error happens if you provided the wrong type of connection string to a connection method.\n\nFor example, you passed a non pooling postgres URL to the `createPool` method which expects a postgres URL that includes pooling.\n\nTroubleshoot:\n\n*   Check that your connection string does not have a typo, or that it is associated with the correct type of connection (direct or pooled)\n\n```\nReplyError: missing_connection_string\n```\n\nYour postgres client was not able to connect to your Postgres store. This error happens if you did not provide a connection string when using a method that creates a connection with your Postgres store.\n\nTroubleshoot:\n\n*   Ensure you have [set up a Postgres database](https://vercel.com/docs/storage/vercel-postgres/quickstart)\n*   Check that you used the correct parameter name for the connection string.\n*   If the error occurs while developing locally, and you're using a Vite-based framework such as Nuxt or SvelteKit, confirm that you're [providing the connection string explicitly](https://github.com/vercel/storage/tree/main/packages/postgres#a-note-for-vite-users)\n\nThis error occurs when the amount of concurrent connections available have been exhausted. When this is encountered, it is highly likely the result of a direct connection. The recommendation is to use the [pooled connection](https://vercel.com/docs/storage/vercel-postgres/sdk#createclient) instead.\n\n```\nReplyError: kysely_streaming_not_supported\n```\n\nThis error happens if you tried to use the streaming feature with the [Kysely](https://github.com/kysely-org/kysely) client. The [Neon](https://neon.tech/docs/) package does not support streaming.\n\n```\nReplyError: kysely_transactions_not_supported\n```\n\nThis error happens if you tried to use the transactions feature with the [Kysely](https://github.com/kysely-org/kysely) client. The [Neon](https://neon.tech/docs/) package does not support transactions.\n\nThis error is thrown when attempting to perform a Prisma migration using the pooled database connection, you need to use the direct connection when performing Prisma migrations.\n\nThis can be accounted for in the `schema.prisma` file to avoid needing to change connection strings by using a setup similar to the following:\n\n```\ndatasource db {\n  provider  = \"postgresql\"\n  url       = env(\"DATABASE_URL\")\n  directUrl = env(\"DIRECT_DATABASE_URL\")\n}\n```\n\nWhile the database will primarily use the `url` variable for connections (likely to be pooled), it will default to the `directUrl` when attempting to perform migrations.\n\nThis error means that the connection was established. However, the Prisma query engine was unable to process a query in the connection pool within the time limit (the default is 10 seconds).\n\nThere are several ways to fix this error:\n\n1.  Increasing the connection pool size\n    \n    You can increase the connection pool size by setting the `connection_limit` parameter to a higher value. We recommend increasing this value in increments of 10 until Prisma Client is working properly. You can learn more about [optimizing the connection pool size](https://www.prisma.io/docs/guides/performance-and-optimization/connection-management#optimizing-the-connection-pool) in Prisma's documentation.\n    \n    The connection string would be:\n    \n    ```\n    DATABASE_URL=postgres://default:<password>@ep-lingering-cell-123456.eu-central-1.postgres.vercel-storage.com:5432/verceldb?pgbouncer=true&connect_timeout=10&connection_limit=10\n    ```\n    \n2.  Analyzing and optimizing your queries\n    \n    One way to solve this issue is to either reduce the number of queries being executed in the connection pool (modifying your code or introducing a cache) or reduce the execution duration.\n    \n3.  Increasing the timeout duration of the connection pool\n    \n    The default is 10 seconds. We recommend increasing this timeout duration after you have increased the `connection_limit` otherwise, you can run out of RAM. You can learn more about [optimizing the connection pool timeout](https://www.prisma.io/docs/guides/performance-and-optimization/connection-management#increasing-the-pool-timeout) in Prisma's documentation.\n    \n    ```\n    DATABASE_URL=postgres://default:<password>@ep-lingering-cell-123456.eu-central-1.postgres.vercel-storage.com:5432/verceldb?pgbouncer=true&connect_timeout=10&connection_limit=10&pool_timeout=20\n    ```\n    \n\nThis error is thrown when attempting to use the pooled connection string with Prisma and the `?pgbouncer=true` parameter is missing. Adding `?pgbouncer=true` to the end of the query string will resolve this.",
  "title": "Vercel Postgres Error Codes",
  "description": "This section focuses on errors that can happen while using the Vercel Postgres SDK to interact with your Vercel Postgres store.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/infrastructure/data-cache/manage-data-cache",
  "markdown": "# Managing Vercel Data Cache\n\nVercel Data cache is automatically enabled for you when you deploy a Next.js project thats uses [App Router](https://beta.nextjs.org/docs/routing/fundamentals) and Next.js Cache to Vercel.\n\nUse the following in your Next.js application to opt out of fetch caching:\n\n```\nexport const fetchCache = 'force-no-store';\n```\n\nYou can also opt out individual fetches by using the `cache` option:\n\n```\nconst res = await fetch('https://example.com', { cache: 'no-store' });\n```\n\nTo view your usage for Data Cache:\n\n1.  On your [dashboard](https://vercel.com/dashboard/usage), navigate to the Usage tab.\n2.  Under Data Cache, you'll be able to see your the total usage for your team or account including bandwidth, revalidations, and requests.\n\nYou need to have an [owner](https://vercel.com/docs/accounts/team-members-and-roles/access-roles#owner-role) role to perform this task.\n\nIn some circumstances, you may need to delete all cached data and force revalidation. You can do this by purging the Data Cache:\n\n1.  Under your project, go to the Settings tab.\n2.  In the Data Cache section, select Purge Everything.\n3.  On the dialog, confirm that you wish to delete and click the Continue & Purge Everything button.\n\nPurging your Data Cache will create a temporary increase in request times for users as new data needs to be refetched.",
  "title": "Managing Vercel Data Cache",
  "description": "Learn how to enable, disable, and manage your usage for Vercel Data Cache",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/infrastructure/data-cache/limits-and-pricing",
  "markdown": "# Data Cache Usage and Pricing\n\nVercel offers several methods for caching data within Vercel’s managed infrastructure. [Incremental Static Regeneration (ISR)](https://vercel.com/docs/incremental-static-regeneration) caches your data at the edge and persists it to durable storage – data reads and writes from durable storage will incur costs.\n\nThe Vercel Data Cache, currently available in Beta for use with Next.js App Router, caches your granular data close to where your function executes – data reads and writes are free until it becomes generally available.\n\nThe following table outlines the price when using Incremental Static Regeneration for each resource according to the plan you are on:\n\nThis section details our [improved infrastructure pricing](https://vercel.com/blog/improved-infrastructure-pricing). On April 25, 2024, these changes will apply to all new Pro customers. Starting May 25, 2024, current Pro customers will see these changes take effect on their next billing cycle. The Hobby tier remains free.\n\nThe table below shows the metrics for the [Data Cache](https://vercel.com/docs/pricing/data-cache) section of the Usage dashboard.\n\nTo view information on managing each resource, select the resource link in the Metric column. To jump straight to guidance on optimization, select the corresponding resource link in the Optimize column.\n\nSee the [manage and optimize Data Cache usage](https://vercel.com/docs/pricing/data-cache) section for more information on how to optimize your usage.\n\nStorage has a fixed size limit based on your subscription. You cannot exceed your storage limit. When the storage limit is reached, existing items will be evicted based on which items were least recently used.\n\nThe total amount of Write Units used to store new data in the Data Cache, measured in 8KB units.\n\nThe total amount of Read Units used to access the Data Cache, measured in 8KB units.\n\nRevalidations are the total number of tags or items requested to revalidate.\n\n*   Item size – The maximum size of an item in the cache is 2 MB. Items larger than this will not be cached.\n*   Tags per item – A cache item can have a maximum of 64 tags.\n*   Maximum tag length – The maximum tag length is 256 bytes.",
  "title": "Data Cache Usage and Pricing",
  "description": "This page outlines information on the limits that are applicable to using Vercel Data Cache, and the costs they can incur.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-blob/client-upload",
  "markdown": "# Client Uploads with Vercel Blob\n\nIn this quickstart, you'll learn how to do the following:\n\n*   Use the Vercel dashboard to create a Blob store connected to a project\n*   Upload a file using the Blob SDK from a browser\n\nVercel Blob works with any frontend framework. First, install the package:\n\n1.  Navigate to the [Project](https://vercel.com/docs/projects/overview) you'd like to add the blob store to. Select the Storage tab, then select the Connect Database button.\n    \n    Under the Create New tab, select Blob and then the Continue button.\n    \n    Use the name \"Images\" and select Create a new Blob store. Select the environments where you would like the read-write token to be included. You can also update the prefix of the Environment Variable in Advanced Options\n    \n    Once created, you are taken to the Vercel Blob store page.\n    \n2.  Since you created the Blob store in a project, we automatically created and added the following Environment Variable to the project for you.\n    \n    *   `BLOB_READ_WRITE_TOKEN`\n    \n    To use this Environment Variable locally, we recommend pulling it with the Vercel CLI:\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n\nWhen you need to upload files larger than 4.5 MB, you can use client uploads. In this case, the file is sent directly from the client (a browser in this example) to Vercel Blob. This transfer is done securely as to not expose your Vercel Blob store to anonymous uploads. The security mechanism is based on a token exchange between your server and Vercel Blob.\n\n1.  This page allows to upload files to Vercel Blob. The files will go directly from the browser to Vercel Blob without going through your server.\n    \n    Behind the scenes, the upload is done securely by exchanging a token with your server before uploading the file.\n    \n    ```\n    'use client';\n     \n    import { type PutBlobResult } from '@vercel/blob';\n    import { upload } from '@vercel/blob/client';\n    import { useState, useRef } from 'react';\n     \n    export default function AvatarUploadPage() {\n      const inputFileRef = useRef<HTMLInputElement>(null);\n      const [blob, setBlob] = useState<PutBlobResult | null>(null);\n      return (\n        <>\n          <h1>Upload Your Avatar</h1>\n     \n          <form\n            onSubmit={async (event) => {\n              event.preventDefault();\n     \n              if (!inputFileRef.current?.files) {\n                throw new Error('No file selected');\n              }\n     \n              const file = inputFileRef.current.files[0];\n     \n              const newBlob = await upload(file.name, file, {\n                access: 'public',\n                handleUploadUrl: '/api/avatar/upload',\n              });\n     \n              setBlob(newBlob);\n            }}\n          >\n            <input name=\"file\" ref={inputFileRef} type=\"file\" required />\n            <button type=\"submit\">Upload</button>\n          </form>\n          {blob && (\n            <div>\n              Blob url: <a href={blob.url}>{blob.url}</a>\n            </div>\n          )}\n        </>\n      );\n    }\n    ```\n    \n2.  The responsibility of this client upload route is to:\n    \n    1.  Generate tokens for client uploads\n    2.  Listen for completed client uploads, so you can update your database with the URL of the uploaded file for example\n    \n    The `@vercel/blob` npm package exposes a helper to implement said responsibilities.\n    \n    ```\n    import { handleUpload, type HandleUploadBody } from '@vercel/blob/client';\n    import { NextResponse } from 'next/server';\n     \n    export async function POST(request: Request): Promise<NextResponse> {\n      const body = (await request.json()) as HandleUploadBody;\n     \n      try {\n        const jsonResponse = await handleUpload({\n          body,\n          request,\n          onBeforeGenerateToken: async (\n            pathname,\n            /* clientPayload */\n          ) => {\n            // Generate a client token for the browser to upload the file\n            // ⚠️ Authenticate and authorize users before generating the token.\n            // Otherwise, you're allowing anonymous uploads.\n     \n            return {\n              allowedContentTypes: ['image/jpeg', 'image/png', 'image/gif'],\n              tokenPayload: JSON.stringify({\n                // optional, sent to your server on upload completion\n                // you could pass a user id from auth, or a value from clientPayload\n              }),\n            };\n          },\n          onUploadCompleted: async ({ blob, tokenPayload }) => {\n            // Get notified of client upload completion\n            // ⚠️ This will not work on `localhost` websites,\n            // Use ngrok or similar to get the full upload flow\n     \n            console.log('blob upload completed', blob, tokenPayload);\n     \n            try {\n              // Run any logic after the file upload completed\n              // const { userId } = JSON.parse(tokenPayload);\n              // await db.update({ avatar: blob.url, userId });\n            } catch (error) {\n              throw new Error('Could not update user');\n            }\n          },\n        });\n     \n        return NextResponse.json(jsonResponse);\n      } catch (error) {\n        return NextResponse.json(\n          { error: (error as Error).message },\n          { status: 400 }, // The webhook will retry 5 times waiting for a 200\n        );\n      }\n    }\n    ```\n    \n    When your local website is served on `http://localhost:3000`, then the `onUploadCompleted` step won't succeed as Vercel Blob cannot contact your localhost. Instead, we recommend you run your local application through a tunneling service like [ngrok](https://ngrok.com/), so you can experience the full Vercel Blob development flow locally.\n    \n\n1.  Run your application locally and visit `/avatar/upload` to upload the file to your store. The browser will display the unique URL created for the file.\n    \n    When your local website is served on `http://localhost:3000`, then the `onUploadCompleted` step won't succeed as Vercel Blob cannot contact your localhost. Instead, we recommend you run your local application through a tunneling service like [ngrok](https://ngrok.com/), so you can experience the full Vercel Blob development flow locally.\n    \n2.  *   Go to the Vercel Project where you created the store\n    *   Select the Storage tab and select your new store\n    *   Paste the blob object URL returned in the previous step in the Blob URL input box in the Browser section and select Lookup\n    *   The following blob object metadata will be displayed: file name, path, size, uploaded date, content type and HTTP headers\n    *   You also have the option to download and delete the file from this page\n\nYou have successfully uploaded an object to your Vercel Blob store and are able to review it's metadata, download, and delete it from your Vercel Storage Dashboard.\n\n*   Learn how to [use the methods](https://vercel.com/docs/storage/vercel-blob/using-blob-sdk) available with the `@vercel/blob` package",
  "title": "Client Uploads with Vercel Blob",
  "description": "Learn how to upload files larger than 4.5 MB directly from the browser to Vercel Blob",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-postgres/faq",
  "markdown": "# Vercel Postgres FAQ\n\nBy default, Postgres does not allow for a high number of open simultaneous connections. The maximum number of connections is 100, which includes connections reserved for administrative purposes. This would be labeled a direct connection.\n\nThis connection limit of 100 may not be sufficient for some applications with many concurrent users - especially in a serverless environment. To overcome this limitation, Vercel Postgres enables you to connect to your database with [a connection pooler](https://vercel.com/docs/storage/vercel-postgres/sdk#createclient). When this is done, Neon will use [PgBouncer](https://www.pgbouncer.org/) in `transaction mode` to enable connection pooling, which allows for sharing, reusing and queuing database connections.\n\nWe recommend using the pooled connection when deploying your application since it enables Vercel Postgres to handle up to 10,000 simultaneous connections. However, if you use [PostgreSQL features not supported](https://www.pgbouncer.org/features.html) in `transaction mode` which is used in pooled connections, you will need a direct connection to the database.\n\nReview [Connection pooling notes and limitations](https://neon.tech/docs/connect/connection-pooling#connection-pooling-notes-and-limitations) for more information.\n\nThe [default provided connection](https://vercel.com/docs/storage/vercel-postgres/sdk#db) is [pooled](#pooled-vs.-direct-connections), allowing up to 10,000 concurrent connections - this will be the best option in nearly all cases since a \"pooled\" connection avoids expensive connection setup.\n\nYou also have the ability to connect [directly](#pooled-vs.-direct-connections), allowing up to 100 concurrent connections on Hobby and 450 on Pro.\n\nA Vercel Postgres database has two states, `Active` and `Idle`. By default, [after 5 minutes of no active queries](https://vercel.com/docs/storage/vercel-postgres/limits#vercel-postgres-cold-starts) being run against the database, it will be put into an `Idle` state.\n\nUpon a new query being run against the database, it will wake into an `Active` state - this can take a varying amount of time but is usually under ~5 seconds.\n\nVercel Postgres enters an `Idle` state to save compute resources when it is not actively being used.\n\nPro plan users can configure the time after which the database enters the `Idle` state. Alternatively, you can query your database at least once every five minutes to prevent the `idle` state as long as you are ok with the additional compute hours incurred. If you create a new deployment your database will automatically be \"warmed\" and enter the active state.\n\nFor basic queries, we recommend using the [`@vercel/postgres`](https://vercel.com/docs/storage/vercel-postgres/sdk#createclient) client out of the box as it provides an efficient way to interact with your Postgres database, has built-in support for connection pooling, and is compatible with Edge Functions. For more advanced functionality, we recommend using one of our supported [Object-Relational Mapping (ORM)](https://vercel.com/docs/storage/vercel-postgres/using-an-orm) clients.\n\nIf you are having connection issues with using a graphical Postgres client, please check its support for Server Name Indication (SNI) included with the Transport Layer Security (TLS) protocol.\n\nYou can use `pg_dump` to [import a Postgres database into your Vercel Postgres](https://neon.tech/docs/import/import-from-postgres). Use the postgres connection [environment variables](https://vercel.com/storage/vercel-postgres/quickstart#review-what-was-created) created in your Vercel project to define the connection string to use with `pg_dump`.\n\nTo prevent timeouts when using Prisma with Vercel Postgres you can append the following query parameter to the connection string provided by Vercel: `?connect_timeout=0`.\n\nThis helps in cases where the database is in an `Idle` state. The default timeout for a Prisma query is 5 seconds, and this is roughly the time taken to revert the database to an `Active` state - adding the no timeout parameter prevents this issue.\n\nFollow the steps in the [Prisma migration guide](https://neon.tech/docs/guides/prisma-migrate) created by Neon.\n\nAutomated backups are not currently supported.\n\nSelect the database you want to view, select the Browse tab under the Data section, and then select the table you want to view.\n\nVercel Postgres aims to provide the right level of abstraction to allow you to focus on building your application.\n\nIf you are looking to use more advanced features such as branching and auto-scaling, then using the [Neon integration](https://vercel.com/integrations/neon) will let you manage your instance directly with the [Neon.tech](http://neon.tech/) app.\n\nThe vast majority of Postgres features are compatible with Vercel Postgres, however, there are some listed below that are not currently supported:\n\n*   Roles with access permissions other than those granted to standard database owners in PostgreSQL\n*   Unlogged tables are maintained on Neon compute local storage. These tables do not survive compute restarts (including when a Neon compute instance is placed into an `Idle` state)\n*   Temporary tables, which are stored in compute local storage, are limited by compute local storage size\n*   Session context, the Vercel Postgres service automatically closes idle connections after a period of inactivity\n*   Statistics collected by the PostgreSQL [cumulative statistics system](https://www.postgresql.org/docs/14/monitoring-stats.html) are currently not saved when the Neon compute node is placed into an `Idle` state due to inactivity or restarted\n\nVercel Postgres currently supports Postgres version 15.\n\nVercel Postgres enforces SSL by default. Non-SSL connections are not supported.\n\nSee the [Error Codes](https://vercel.com/docs/storage/vercel-postgres/vercel-postgres-error-codes) documentation for more information.",
  "title": "Vercel Postgres FAQ",
  "description": "Discover answers to frequently asked questions about Vercel Postgres.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/recipes/set-cache-control-headers",
  "markdown": "# Set cache control headers for functions\n\nBy default, the Edge Network and browser will not cache, unless you set the following headers in your function as needed: `Cache-Control`,`CDN-Cache-Control`, and `Vercel-CDN-Cache-Contol`. You can set these headers to:\n\n*   [Set the cache depending on location](#set-caching-depending-on-location)\n*   [Set the same cache duration everywhere](#same-cache-duration-everywhere)\n*   [Set caching for Vercel's Edge Cache](#set-caching-for-vercel's-edge-cache)\n*   [Set caching for all CDNs](#set-caching-for-all-cdns)\n\nSetting the cache in functions takes priority over config files.\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'Cache-Control': 'max-age=10',\n      'CDN-Cache-Control': 'max-age=60',\n      'Vercel-CDN-Cache-Control': 'max-age=3600',\n    },\n  });\n}\n```\n\nVercel uses the following priority when you specify multiple cache control headers:\n\n*   `Vercel-CDN-Cache-Control`\n*   `CDN-Cache-Control`\n*   `Cache-Control`\n\nThis sets the same maximum cache duration for Vercel, CDNs, and the client:\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'Cache-Control': 'max-age=3600',\n    },\n  });\n}\n```\n\nThis sets the maximum cache duration for Vercel's Edge Cache only.\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'Vercel-CDN-Cache-Control': 'max-age=3600',\n    },\n  });\n}\n```\n\nThis sets the cache duration on Vercel and also on other CDNs\n\n```\nexport async function GET() {\n  return new Response('Cache Control example', {\n    status: 200,\n    headers: {\n      'CDN-Cache-Control': 'max-age=60',\n    },\n  });\n}\n```",
  "title": "Set cache control headers for functions",
  "description": "Learn how to set headers to cache your function's responses.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/edge-config-dashboard",
  "markdown": "# Managing Edge Configs with the Dashboard\n\nYou can create, view and update your [Edge Configs](https://vercel.com/storage/edge-config), and the data inside them, in your Vercel Dashboard at both the [account level](https://vercel.com/docs/accounts) and the [project level](https://vercel.com/docs/projects/overview).\n\nTo add an Edge Config at the Hobby account or team level, follow these steps:\n\n1.  Make sure that you are in the [right Hobby account or team](https://vercel.com/docs/dashboard-features)\n    \n2.  Click on the Edge Config tab\n    \n3.  Click the Create Store button\n    \n4.  Type a name for your Edge Config in the dialog and click Create. The name shouldn't exceed 32 characters and can only contain alphanumeric letters, \"\\_\", and \"-\".\n    \n5.  On creation, you are taken to the `my_edge_config_id` config page. By default, a key-value pair of `\"greeting\": \"hello world\"` is created. On the detail page of the newly created Edge Config you can:\n    \n    *   View and manage stored items\n    *   Connect projects to and disconnect projects from this Edge Config\n    *   Generate, copy, and delete tokens associated with this Edge Config\n\nYour Edge Config is now ready to be used. You can also [create an Edge Config at the project level](https://vercel.com/docs/storage/edge-config/edge-config-dashboard#at-the-project-level).\n\nIf you're creating a project at the account-level, we won't automatically create a token, connection string, and environment variable until a project has been connected.\n\n1.  Navigate to your [project](https://vercel.com/docs/projects/overview) page and click on the Edge Config tab\n    \n2.  Click Create Project Store and type a name slug for your Edge Config in the dialog that opens. The name shouldn't exceed 32 characters and can only contain alphanumeric letters, \"\\_\", and \"-\".\n    \n3.  Click Create.\n    \n4.  Once created, you can click on the Edge Config to [manage it](#manage-edge-configs). The following items are automatically created:\n    \n    *   An environment variable `EDGE_CONFIG` that holds a [connection string](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string). If you go to your projects's Settings > Environment Variables, you'll see the newly created environment variable.\n    *   A [read access token](https://vercel.com/docs/storage/edge-config/using-edge-config#creating-a-read-access-token). This token, along with your EDGE CONFIG ID is used to create a [connection string](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string). This connection string is saved as the value of your `EDGE_CONFIG` environment variable. Using this enables you to use the SDK in your project to read the contents of the store.\n\nTo view a list of all Edge Configs available in your Hobby account or team, go to Storage then select Edge Config the tab after making sure that you are in the [correct Hobby account or team](https://vercel.com/docs/dashboard-features).\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793444%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-view-all-configs-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793445%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-view-all-configs-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nList of Edge Configs in a team account\n\nIn the Used by column, you can see in which project(s) the Edge Config is used. The right column shows the size of the data contained in the config. To manage the Edge Config, its store and tokens, click on the Edge Config's row to open the detail page.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793441%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-usage-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793443%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-usage-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEdge Config detail page\n\nTo rename the Edge Config, select the Settings item in the sidebar, update the Edge Config Name, and select Save.\n\nTo delete the Edge Config, select the Settings item in the sidebar, then select Delete Edge Config.\n\nThe default view of the Edge Config's detail page shows the list of all items in the store. You will see an open accordion titled Learn how to use this in code if the Edge Config is connected to at least one project. This accordion provides the steps with a code example on how to read your store items.\n\nTo add, edit or delete any item in your store, edit the `json` object in the right panel and click Save Items.\n\nBackups of your Edge Config are automatically created when you make changes, and are stored for a [length of time](https://vercel.com/docs/storage/edge-config/edge-config-limits#backup) determined by your plan. To restore one:\n\n1.  From your dashboard, select the Storage tab and then select your Edge Config\n2.  From the left section, select the Backups tab\n3.  From the list, select the backup that you would like to view. You'll be taken to the Items tab to view a comparison of the backup version and current version\n4.  To restore the backup, select the Restore button and confirm the action\n\nTo learn more about backups, see [Edge Config backups](https://vercel.com/docs/storage/edge-config/using-edge-config#edge-config-backups).\n\nWhen protected by a JSON schema, the backup must pass schema validation to be restored.\n\nYou can protect your Edge Config by adding a JSON schema to it. Vercel uses this schema to validate the data that is added to the store and prevent updates that fail validation. To add a schema:\n\n1.  From your dashboard, select the Storage tab and then select your Edge Config\n2.  Toggle the Schema button to open the schema editing tab\n3.  Enter your [JSON schema](https://json-schema.org/) into the editor. Vercel will use the schema to validate your data in real-time\n4.  Click Save. This will save changes to both the schema and data\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793443%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-projects-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793442%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-projects-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nList of connected projects\n\nClick on Projects in the left panel of the Edge Config detail page to open a view that shows the projects connected with this Edge Config.\n\nTo delete a connection, click on the vertical ellipsis icon on the right hand side of the row and click Delete environment variable and confirm by clicking Delete connection in the dialog.\n\nDeleting a connection does not delete the underlying token used by that Connection String. To learn how to delete tokens, review [Managing read access tokens](#manage-read-access-tokens).\n\nTo connect the Edge Config with another project, click Connect Project, find the project from the drop-down in the dialog and click Connect. If you receive a warning that this project already has an `EDGE_CONFIG` environment variable, open the Advanced Options and change the environment variable name in the corresponding field to a name other than `EDGE_CONFIG`. The Connect button will be enabled once the new enviroment variable does not already exist in the project.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793444%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-tokens-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689793442%2Fdocs-assets%2Fstatic%2Fdocs%2Fstorage%2Fedge-config%2Fedge-config-tokens-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nList of tokens\n\nTo delete a token, click on the vertical ellipsis icon on the right hand side of the token's row and click Delete Token and confirm by clicking Delete Token in the dialog.\n\nYou can copy the connection string to be used in your code by clicking on Copy Connection String from the same pop up from the vertical ellipsis icon.\n\nYou can generate a new token by clicking the Generate Token button, typing a name slug in the dialog that opens and clicking Create.",
  "title": "Managing Edge Configs with the Dashboard",
  "description": "Learn how to create, view and update your Edge Configs and the data inside them in your Vercel Dashboard at the Hobby account, team, and project levels.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/vercel-blob/using-blob-sdk",
  "markdown": "# @vercel/blob\n\nTo start using [Vercel Blob](https://vercel.com/storage/blob) SDK, follow the steps below:\n\nVercel Blob works with any frontend framework. begin by installing the package:\n\n1.  Navigate to the [Project](https://vercel.com/docs/projects/overview) you'd like to add the blob store to. Select the Storage tab, then select the Connect Database button.\n    \n    Under the Create New tab, select Blob and then the Continue button.\n    \n    Choose a name for your store and select Create a new Blob store. Select the environments where you would like the read-write token to be included. You can also update the prefix of the Environment Variable in Advanced Options\n    \n    Once created, you are taken to the Vercel Blob store page.\n    \n2.  Since you created the Blob store in a project, environment variables are automatically created and added to the project for you.\n    \n    *   `BLOB_READ_WRITE_TOKEN`\n    \n    To use this environment variable locally, use the Vercel CLI to [pull the values into your local project](https://vercel.com/docs/cli/env#exporting-development-environment-variables):\n    \n    ```\n    vercel env pull .env.development.local\n    ```\n    \n\nA read-write token is required to interact with the Blob SDK. When you create a Blob store in your Vercel Dashboard, an environment variable with the value of the token is created for you. You have the following options when deploying your application:\n\n*   If you deploy your application in the same Vercel project where your Blob store is located, you _do not_ need to specify the `token` parameter, as it's default value is equal to the store's token environment variable\n*   If you deploy your application in a different Vercel project or scope, you can create an environment variable there and assign the token value from your Blob store settings to this variable. You will then set the `token` parameter to this environment variable\n*   If you deploy your application outside of Vercel, you can copy the `token` value from the store settings and pass it as the `token` parameter when you call a Blob SDK method\n\nTo use the methods of the Blob SDK, you will need to call them inside an [Edge Function](https://vercel.com/docs/functions/edge-functions), a [Serverless Function](https://vercel.com/docs/functions/serverless-functions) or even a browser. In the examples below, we will be using Edge Functions.\n\nThis example creates an Edge Function that accepts a file from a `multipart/form-data` form and uploads it to the Blob store. The function returns a unique URL for the blob.\n\n```\nimport { put } from '@vercel/blob';\n \nexport const runtime = 'edge';\n \nexport async function PUT(request: Request) {\n  const form = await request.formData();\n  const file = form.get('file') as File;\n  const blob = await put(file.name, file, { access: 'public' });\n \n  return Response.json(blob);\n}\n```\n\nThe `put` method uploads a blob object to the Blob store.\n\n```\nput(pathname, body, options);\n```\n\nIt accepts the following parameters:\n\n*   `pathname`: (Required) A string specifying the base value of the return URL\n*   `body`: (Required) A blob object as `ReadableStream`, `String`, `ArrayBuffer` or `Blob` based on these [supported body types](https://developer.mozilla.org/docs/Web/API/fetch#body)\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `contentType` | No  | A string indicating the [media type](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type). By default, it's extracted from the pathname's extension. |\n| `token` | No  | A string specifying the token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token). You can also pass a client token created with the `generateClientTokenFromReadWriteToken` method |\n| `addRandomSuffix` | No  | A boolean specifying whether to add a random suffix to the pathname. It defaults to `true`. |\n| `cacheControlMaxAge` | No  | A number in seconds to configure the edge and browser cache. Defaults to one year. See the [caching](https://vercel.com/docs/storage/vercel-blob#caching) documentation for more details. |\n| `multipart` | No  | Pass `multipart: true` when uploading large files. It will split the file into multiple parts, upload them in parallel and retry failed parts. |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`put()` returns a `JSON` object with the following data for the created blob object:\n\n```\n{\n  pathname: `string`,\n  contentType: `string`,\n  contentDisposition: `string`,\n  url: `string`\n  downloadUrl: `string`\n}\n```\n\nAn example blob is:\n\n```\n{\n  pathname: 'profilesv1/user-12345.txt',\n  contentType: 'text/plain',\n  contentDisposition: 'attachment; filename=\"user-12345.txt\"',\n  url: 'https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345-NoOVGDVcqSPc7VYCUAGnTzLTG2qEM2.txt'\n  downloadUrl: 'https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345-NoOVGDVcqSPc7VYCUAGnTzLTG2qEM2.txt?download=1'\n}\n```\n\nAn example blob uploaded with `addRandomSuffix: false` is:\n\n```\n{\n  pathname: 'profilesv1/user-12345.txt',\n  contentType: 'text/plain',\n  contentDisposition: 'attachment; filename=\"user-12345.txt\"',\n  //                                               no automatic random suffix added 👇\n  url: 'https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345.txt'\n  downloadUrl: 'https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345.txt?download=1'\n}\n```\n\nWhen uploading large files you should use multipart uploads to have a more reliable upload process. A multipart upload splits the file into multiple parts, uploads them in parallel and retries failed parts. This process consists of three phases: creating a multipart upload, uploading the parts and completing the upload. `@vercel/blob` offers three different ways to create multipart uploads:\n\nThis method has everything baked in and is easiest to use. It's part of the `put` and `upload` API's. Under the hood it will start the upload, split your file into multiple parts with the same size, upload them in parallel and complete the upload.\n\n```\nconst blob = await put('large-movie.mp4', file, {\n  access: 'public',\n  multipart: true,\n});\n```\n\nThis method gives you full control over the multipart upload process. It consists of three phases:\n\nPhase 1: Create a multipart upload\n\n```\nconst multipartUpload = await createMultipartUpload(pathname, options);\n```\n\n`createMultipartUpload` accepts the following parameters:\n\n*   `pathname`: (Required) A string specifying the path inside the blob store. This will be the base value of the return URL and includes the filename and extension.\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `contentType` | No  | A string indicating the [media type](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type). By default, it's extracted from the pathname's extension. |\n| `token` | No  | A string specifying the token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token). You can also pass a client token created with the `generateClientTokenFromReadWriteToken` method |\n| `addRandomSuffix` | No  | A boolean specifying whether to add a random suffix to the pathname. It defaults to `true`. |\n| `cacheControlMaxAge` | No  | A number in seconds to configure the edge and browser cache. Defaults to one year. See the [caching](https://vercel.com/docs/storage/vercel-blob#caching) documentation for more details. |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`createMultipartUpload()` returns a `JSON` object with the following data for the created upload:\n\n```\n{\n  key: `string`,\n  uploadId: `string`\n}\n```\n\nPhase 2: Upload all the parts\n\nIn the multipart uploader process, it's necessary for you to manage both memory usage and concurrent upload requests. Additionally, each part must be a minimum of 5MB, except the last one which can be smaller, and all parts should be of equal size.\n\n```\nconst part = await uploadPart(pathname, chunkBody, options);\n```\n\n`uploadPart` accepts the following parameters:\n\n*   `pathname`: (Required) Same value as the `pathname` parameter passed to `createMultipartUpload`\n*   `chunkBody`: (Required) A blob object as `ReadableStream`, `String`, `ArrayBuffer` or `Blob` based on these [supported body types](https://developer.mozilla.org/docs/Web/API/fetch#body)\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `partNumber` | Yes | A number identifying which part is uploaded |\n| `key` | Yes | A string returned from `createMultipartUpload` which identifies the blob object |\n| `uploadId` | Yes | A string returned from `createMultipartUpload` which identifies the multipart upload |\n| `token` | No  | A string specifying the token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token). You can also pass a client token created with the `generateClientTokenFromReadWriteToken` method |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`uploadPart()` returns a `JSON` object with the following data for the uploaded part:\n\n```\n{\n  etag: `string`,\n  partNumber: `string`\n}\n```\n\nPhase 3: Complete the multipart upload\n\n```\nconst blob = await completeMultipartUpload(pathname, parts, options);\n```\n\n`completeMultipartUpload` accepts the following parameters:\n\n*   `pathname`: (Required) Same value as the `pathname` parameter passed to `createMultipartUpload`\n*   `parts`: (Required) An array containing all the uploaded parts\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `key` | Yes | A string returned from `createMultipartUpload` which identifies the blob object |\n| `uploadId` | Yes | A string returned from `createMultipartUpload` which identifies the multipart upload |\n| `contentType` | No  | A string indicating the [media type](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type). By default, it's extracted from the pathname's extension. |\n| `token` | No  | A string specifying the token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token). You can also pass a client token created with the `generateClientTokenFromReadWriteToken` method |\n| `addRandomSuffix` | No  | A boolean specifying whether to add a random suffix to the pathname. It defaults to `true`. |\n| `cacheControlMaxAge` | No  | A number in seconds to configure the edge and browser cache. Defaults to one year. See the [caching](https://vercel.com/docs/storage/vercel-blob#caching) documentation for more details. |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`completeMultipartUpload()` returns a `JSON` object with the following data for the created blob object:\n\n```\n{\n  pathname: `string`,\n  contentType: `string`,\n  contentDisposition: `string`,\n  url: `string`\n  downloadUrl: `string`\n}\n```\n\nA less verbose way than the manual process is the multipart uploader method. It's a wrapper around the manual multipart upload process and takes care of the data that is the same for all the three multipart phases. This results in a simpler API, but still requires you to handle memory usage and concurrent upload requests.\n\nPhase 1: Create the multipart uploader\n\n```\nconst uploader = await createMultipartUploader(pathname, options);\n```\n\n`createMultipartUploader` accepts the following parameters:\n\n*   `pathname`: (Required) A string specifying the path inside the blob store. This will be the base value of the return URL and includes the filename and extension.\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `contentType` | No  | A string indicating the [media type](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type). By default, it's extracted from the pathname's extension. |\n| `token` | No  | A string specifying the token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token). You can also pass a client token created with the `generateClientTokenFromReadWriteToken` method |\n| `addRandomSuffix` | No  | A boolean specifying whether to add a random suffix to the pathname. It defaults to `true`. |\n| `cacheControlMaxAge` | No  | A number in seconds to configure the edge and browser cache. Defaults to one year. See the [caching](https://vercel.com/docs/storage/vercel-blob#caching) documentation for more details. |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`createMultipartUploader()` returns an `Uploader` object with the following methods:\n\n```\n{\n  key: `string`,\n  uploadId: `string`\n  uploadPart: `function`\n  complete: `function`\n}\n```\n\nPhase 2: Upload all the parts\n\nIn the multipart uploader process, it's necessary for you to manage both memory usage and concurrent upload requests. Additionally, each part must be a minimum of 5MB, except the last one which can be smaller, and all parts should be of equal size.\n\n```\nconst part = await uploader.uploadPart(partNumber, chunkBody);\n```\n\n`uploader.uploadPart` accepts the following parameters:\n\n*   `partNumber`: (Required) A number identifying which part is uploaded\n*   `chunkBody`: (Required) A blob object as `ReadableStream`, `String`, `ArrayBuffer` or `Blob` based on these [supported body types](https://developer.mozilla.org/docs/Web/API/fetch#body)\n\n`uploader.uploadPart()` returns a `JSON` object with the following data for the uploaded part:\n\n```\n{\n  etag: `string`,\n  partNumber: `string`\n}\n```\n\nPhase 3: Complete the multipart upload\n\n```\nconst blob = await uploader.complete(partNumber, chunkBody);\n```\n\n`uploader.complete` accepts the following parameters:\n\n*   `parts`: (Required) An array containing all the uploaded parts\n\n`uploader.complete()` returns a `JSON` object with the following data for the created blob object:\n\n```\n{\n  pathname: `string`,\n  contentType: `string`,\n  contentDisposition: `string`,\n  url: `string`\n  downloadUrl: `string`\n}\n```\n\nThis example creates an Edge Function that deletes a blob object from the Blob store.\n\n```\nimport { del } from '@vercel/blob';\n \nexport const runtime = 'edge';\n \nexport async function DELETE(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const urlToDelete = searchParams.get('url') as string;\n  await del(urlToDelete);\n \n  return new Response();\n}\n```\n\nThe `del` method deletes a blob object from the Blob store.\n\nIt accepts the following parameters:\n\n*   `url`: (Required) A string or Array of strings specifying the unique URL(s) of the blob object(s) to delete\n*   `options`: (Optional) A `JSON` object with the following optional parameter:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `token` | No  | A string specifying the read-write token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token) |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`del()` returns a `void` response. A delete action is always successful if the blob url exists. A delete action won't throw if the blob url doesn't exists.\n\nThis example creates an Edge Function that returns a blob object's metadata.\n\n```\nimport { head } from '@vercel/blob';\n \nexport const runtime = 'edge';\n \nexport async function GET(request: Request) {\n  const { searchParams } = new URL(request.url);\n  const blobUrl = searchParams.get('url');\n  const blobDetails = await head(blobUrl);\n \n  return Response.json(blobDetails);\n}\n```\n\nThe `head` method returns a blob object's metadata.\n\nIt accepts the following parameters:\n\n*   `url`: (Required) A string specifying the unique URL of the blob object to read\n*   `options`: (Optional) A `JSON` object with the following optional parameter:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `token` | No  | A string specifying the read-write token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token) |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`head()` returns one of the following:\n\n*   a `JSON` object with the requested blob object's metadata\n*   throws a `BlobNotFoundError` if the blob object was not found\n\n```\n{\n  size: `number`;\n  uploadedAt: `Date`;\n  pathname: `string`;\n  contentType: `string`;\n  contentDisposition: `string`;\n  url: `string`;\n  downloadUrl: `string`\n  cacheControl: `string`;\n}\n```\n\nThis example creates an Edge Function that returns a list of blob objects in a Blob store.\n\n```\nimport { list } from '@vercel/blob';\n \nexport const runtime = 'edge';\n \nexport async function GET(request: Request) {\n  const { blobs } = await list();\n  return Response.json(blobs);\n}\n```\n\nThe `list` method returns a list of blob objects in a Blob store.\n\nIt accepts the following parameters:\n\n*   `options`: (Optional) A `JSON` object with the following optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `token` | No  | A string specifying the read-write token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token) |\n| `limit` | No  | A number specifying the maximum number of blob objects to return. It defaults to 1000 |\n| `prefix` | No  | A string used to filter for blob objects contained in a specific folder assuming that the folder name was used in the `pathname` when the blob object was uploaded |\n| `cursor` | No  | A string obtained from a previous response for pagination of retults |\n| `mode` | No  | A string specifying the response format. Can either be `expanded` (default) or `folded`. In `folded` mode all blobs that are located inside a folder will be folded into a single folder string entry |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`list()` returns a `JSON` object in the following format:\n\n```\nblobs: {\n  size: `number`;\n  uploadedAt: `Date`;\n  pathname: `string`;\n  url: `string`;\n  downloadUrl: `string`\n}[]\ncursor?: `string`;\nhasMore: `boolean`;\nfolders?: `string[]`\n```\n\nFor a long list of blob objects (the default list `limit` is 1000), you can use the `cursor` and `hasMore` parameters to paginate through the results as shown in the example below:\n\n```\nlet hasMore = true;\nlet cursor;\n \nwhile (hasMore) {\n  const listResult = await list({\n    cursor,\n  });\n  hasMore = listResult.hasMore;\n  cursor = listResult.cursor;\n}\n```\n\nTo retrieve the folders from your blob store, alter the `mode` parameter to modify the response format of the list operation. The default value of `mode` is `expanded`, which returns all blobs in a single array of objects.\n\nAlternatively, you can set `mode` to `folded` to roll up all blobs located inside a folder into a single entry. These entries will be included in the response as `folders`. Blobs that are not located in a folder will still be returned in the blobs property.\n\nBy using the `folded` mode, you can efficiently retrieve folders and subsequently list the blobs inside them by using the returned `folders` as a `prefix` for further requests. Omitting the `prefix` parameter entirely, will return all folders in the root of your store. Be aware that the blobs pathnames and the folder names will always be fully quantified and never relative to the prefix you passed.\n\n```\nconst {\n  folders: [firstFolder],\n  blobs: rootBlobs,\n} = await list({ mode: 'folded' });\n \nconst { folders, blobs } = await list({ mode: 'folded', prefix: firstFolder });\n```\n\nThis example creates an Edge Function that copies an existing blob to a new path in the store.\n\n```\nimport { copy } from '@vercel/blob';\n \nexport const runtime = 'edge';\n \nexport async function PUT(request: Request) {\n  const form = await request.formData();\n \n  const fromUrl = form.get('fromUrl') as string;\n  const toPathname = form.get('toPathname') as string;\n \n  const blob = await copy(fromUrl, toPathname, { access: 'public' });\n \n  return Response.json(blob);\n}\n```\n\nThe `copy` method copies an existing blob object to a new path inside the blob store.\n\nThe `contentType` and `cacheControlMaxAge` will not be copied from the source blob. If the values should be carried over to the copy, they need to be defined again in the options object.\n\nContrary to `put()`, `addRandomSuffix` is false by default. This means no automatic random id suffix is added to your blob url, unless you pass `addRandomSuffix: true`. This also means `copy()` overwrites files per default, if the operation targets a pathname that already exists.\n\n```\ncopy(fromUrl, toPathname, options);\n```\n\nIt accepts the following parameters:\n\n*   `fromUrl`: (Required) A blob URL identifying an already existing blob\n*   `toPathname`: (Required) A string specifying the new path inside the blob store. This will be the base value of the return URL\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `contentType` | No  | A string indicating the [media type](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type). By default, it's extracted from the toPathname's extension. |\n| `token` | No  | A string specifying the token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token) |\n| `addRandomSuffix` | No  | A boolean specifying whether to add a random suffix to the pathname. It defaults to `false`. |\n| `cacheControlMaxAge` | No  | A number in seconds to configure the edge and browser cache. Defaults to one year. See the [caching](https://vercel.com/docs/storage/vercel-blob#caching) documentation for more details. |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`copy()` returns a `JSON` object with the following data for the copied blob object:\n\n```\n{\n  pathname: `string`,\n  contentType: `string`,\n  contentDisposition: `string`,\n  url: `string`\n  downloadUrl: `string`\n}\n```\n\nAn example blob is:\n\n```\n{\n  pathname: 'profilesv1/user-12345-copy.txt',\n  contentType: 'text/plain',\n  contentDisposition: 'attachment; filename=\"user-12345-copy.txt\"',\n  url: 'https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345-copy.txt'\n  downloadUrl: 'https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345-copy.txt?download=1'\n}\n```\n\nAs seen in the [client uploads quickstart docs](https://vercel.com/docs/storage/vercel-blob/client-upload), you can upload files directly from clients (like browsers) to the Blob store.\n\nAll client uploads related methods are available under `@vercel/blob/client`.\n\nThe `upload` method is dedicated to [client uploads](https://vercel.com/docs/storage/vercel-blob/client-upload). It fetches a client token on your server using the `handleUploadUrl` before uploading the blob. Read the [client uploads](https://vercel.com/docs/storage/vercel-blob/client-upload) documentation to learn more.\n\n```\nupload(pathname, body, options);\n```\n\nIt accepts the following parameters:\n\n*   `pathname`: (Required) A string specifying the base value of the return URL\n*   `body`: (Required) A blob object as `ReadableStream`, `String`, `ArrayBuffer` or `Blob` based on these [supported body types](https://developer.mozilla.org/docs/Web/API/fetch#body)\n*   `options`: (Required) A `JSON` object with the following required and optional parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `access` | Yes | `public` - Support for `private` is planned |\n| `contentType` | No  | A string indicating the [media type](https://developer.mozilla.org/docs/Web/HTTP/Headers/Content-Type). By default, it's extracted from the pathname's extension. |\n| `handleUploadUrl` | Yes\\* | A string specifying the route to call for generating client tokens for [client uploads](https://vercel.com/docs/storage/vercel-blob/client-upload). |\n| `clientPayload` | No  | A string to be sent to your `handleUpload` server code. Example use-case: attaching the post id an image relates to. So you can use it to update your database. |\n| `multipart` | No  | Pass `multipart: true` when uploading large files. It will split the file into multiple parts, upload them in parallel and retry failed parts. |\n| `abortSignal` | No  | An [AbortSignal](https://developer.mozilla.org/en-US/docs/Web/API/AbortSignal) to cancel the operation |\n\n`upload()` returns a `JSON` object with the following data for the created blob object:\n\n```\n{\n  pathname: `string`;\n  contentType: `string`;\n  contentDisposition: `string`;\n  url: `string`;\n  downloadUrl: `string`;\n}\n```\n\nAn example `url` is:\n\n```\nurl: \"https://ce0rcu23vrrdzqap.public.blob.vercel-storage.com/profilesv1/user-12345-NoOVGDVcqSPc7VYCUAGnTzLTG2qEM2.txt\"\n```\n\nA server-side route helper to manage client uploads, it has two responsibilities:\n\n1.  Generate tokens for client uploads\n2.  Listen for completed client uploads, so you can update your database with the URL of the uploaded file for example\n\nIt accepts the following parameters:\n\n*   `options`: (Required) A `JSON` object with the following parameters:\n\n| Parameter | Required | Values |\n| --- | --- | --- |\n| `token` | No  | A string specifying the read-write token to use when making requests. It defaults to `process.env.BLOB_READ_WRITE_TOKEN` when deployed on Vercel as explained in [Read-write token](#read-write-token) |\n| `request` | Yes | An `IncomingMessage` or `Request` object to be used to determine the action to take |\n| `onBeforeGenerateToken` | Yes | A function to be called right before generating client tokens for client uploads. See below for usage |\n| `onUploadCompleted` | Yes | A function to be called by Vercel Blob when the client upload finishes. This is useful to update your database with the blob url that was uploaded |\n| `body` | Yes | The request body |\n\n`handleUpload()` returns:\n\n```\nPromise<\n  | { type: 'blob.generate-client-token'; clientToken: string }\n  | { type: 'blob.upload-completed'; response: 'ok' }\n>\n```\n\nHere's an example Next.js App Router route handler that uses `handleUpload()`:\n\n```\nimport { handleUpload, type HandleUploadBody } from '@vercel/blob/client';\nimport { NextResponse } from 'next/server';\n \n// Use-case: uploading images for blog posts\nexport async function POST(request: Request): Promise<NextResponse> {\n  const body = (await request.json()) as HandleUploadBody;\n \n  try {\n    const jsonResponse = await handleUpload({\n      body,\n      request,\n      onBeforeGenerateToken: async (pathname, clientPayload) => {\n        // Generate a client token for the browser to upload the file\n        // ⚠️ Authenticate and authorize users before generating the token.\n        // Otherwise, you're allowing anonymous uploads.\n \n        // ⚠️ When using the clientPayload feature, make sure to valide it\n        // otherwise this could introduce security issues for your app\n        // like allowing users to modify other users' posts\n \n        return {\n          allowedContentTypes: ['image/jpeg', 'image/png', 'image/gif'], // optional, default to all content types\n          // maximumSizeInBytes: number, optional, the maximum is 5TB\n          // validUntil: number, optional, timestamp in ms, by default now + 30s (30,000)\n          // addRandomSuffix: boolean, optional, allows to disable or enable random suffixes (defaults to `true`)\n          // cacheControlMaxAge: number, optional, a duration in seconds to configure the edge and browser caches.\n          tokenPayload: JSON.stringify({\n            // optional, sent to your server on upload completion\n            // you could pass a user id from auth, or a value from clientPayload\n          }),\n        };\n      },\n      onUploadCompleted: async ({ blob, tokenPayload }) => {\n        // Get notified of client upload completion\n        // ⚠️ This will not work on `localhost` websites,\n        // Use ngrok or similar to get the full upload flow\n \n        console.log('blob upload completed', blob, tokenPayload);\n \n        try {\n          // Run any logic after the file upload completed,\n          // If you've already validated the user and authorization prior, you can\n          // safely update your database\n        } catch (error) {\n          throw new Error('Could not update post');\n        }\n      },\n    });\n \n    return NextResponse.json(jsonResponse);\n  } catch (error) {\n    return NextResponse.json(\n      { error: (error as Error).message },\n      { status: 400 }, // The webhook will retry 5 times waiting for a 200\n    );\n  }\n}\n```\n\nWhen you make a request to the SDK using any of the above methods, they will return an error if the request fails due to any of the following reasons:\n\n*   Missing required parameters\n*   An invalid token or a token that does have access to the Blob object\n*   Suspended Blob store\n*   Blob file or Blob store not found\n*   Unforeseen or unknown errors\n\nTo catch these errors, wrap your requests with a `try/catch` statement as shown below:\n\n```\nimport { put, BlobAccessError } from '@vercel/blob';\n \ntry {\n  await put(...);\n} catch (error) {\n  if (error instanceof BlobAccessError) {\n    // handle a recognized error\n  } else {\n    // throw the error again if it's unknown\n    throw error;\n  }\n}\n```",
  "title": "@vercel/blob",
  "description": "Learn how to use the Vercel Blob SDK to access your blob store from your apps in Edge Functions.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/integrations",
  "markdown": "# Using Edge Config with an integration\n\nVercel has partnered with A/B testing and feature flag services such as LaunchDarkly and Statsig to make it easier to integrate Edge Config into your workflow. These integrations sync feature flag definitions into Edge Config, allowing you to evaluate flags at the edge without making network calls to your preferred service provider.\n\nTo see these integrations in action, explore a template:\n\n## Explore Edge Config integrations with our templates.\n\nYou can get started with any of these Edge Config integrations by following the quickstart:",
  "title": "Using Edge Config with an integration",
  "description": "Learn how to use Edge Config with popular A/B testing and feature flag service integrations.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/vercel-api",
  "markdown": "# Managing Edge Configs with Vercel REST API\n\nWe recommend you use the Vercel REST API only for creating and updating an [Edge Config](https://vercel.com/storage/edge-config). For reading data (which you should do more often), we highly recommend using the [SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk).\n\nUpdates to your Edge Config can take up to a few seconds to propagate globally, and therefore might not be available from the Edge Config API endpoint immediately. However, fetching your Edge Config data from the Vercel REST API will always return the latest version of your Config. The request will not have Vercel's optimizations, and the response will not be served through Vercel's [Edge Network](https://vercel.com/docs/edge-network/overview).\n\nYou can also request metadata about your Edge Configs through the API.\n\nThis section will show you how to update, read metadata about, and read the contents of your Edge Configs with the Vercel REST API. To learn about other Vercel REST API functionality with Edge Configs, [read our API spec reference](https://vercel.com/docs/rest-api/endpoints#edge-config).\n\nTo create an Edge Config with the [Vercel REST API](https://vercel.com/docs/rest-api), make a `POST` request to the `edge-config` path of the API endpoint. Your URL should look like this:\n\n```\n'https://api.vercel.com/v1/edge-config';\n```\n\nThe request body should be a JSON object containing a `\"slug\"` with the name you would like to call your Edge Config as its value.\n\nThe name can only contain alphanumeric letters, \"\\_\" and \"-\". It cannot exceed 32 characters.\n\nSee the example below:\n\n```\ncurl  -X 'POST' 'https://api.vercel.com/v1/edge-config' \\\n      -H 'Authorization: Bearer your_vercel_api_token_here' \\\n      -H 'Content-Type: application/json; charset=utf-8' \\\n      -d $'{ \"slug\": \"your_edge_config_name_here\" }'\n```\n\nUpon success, you should receive a JSON response similar to the following:\n\n```\n{\n  \"createdAt\": 1234567890123,\n  \"updatedAt\": 1234567890123,\n  \"slug\": \"your_edge_config_slug_here\",\n  \"id\": \"your_edge_config_id_here\",\n  \"digest\": \"abc123efg456hij789\",\n  \"sizeInBytes\": 2,\n  \"itemCount\": 0,\n  \"ownerId\": \"your_id_here\"\n}\n```\n\nThe above example will create an Edge Config scoped to your Hobby account. To scope your Edge Config to a Vercel Team:\n\n*   [Generate a Vercel REST API access token](https://vercel.com/docs/rest-api/vercel-api-integrations#create-an-access-token) that is scoped to the appropriate Vercel Team\n*   Add the `?teamId` query parameter your `POST` request. Set its value to [the Team's ID](https://vercel.com/docs/accounts/create-a-team#find-your-team-id), which you can find under the Settings tab in the Team's Dashboard on Vercel.\n\nThe `\"ownerId\"` key's value will be your [Vercel Team's ID](https://vercel.com/docs/accounts/create-a-team#find-your-team-id) if you created the Edge Config using the `?teamId` query parameter.\n\nTo add an item to or update an item in your Edge Config, send a `PATCH` request to the `edge-config` endpoint, appending `/your_edge_config_id_here/items` to the end.\n\nIf you're requesting an Edge Config scoped to a team, add `?teamId=` to the end of the endpoint, pasting [the Vercel Team's ID](https://vercel.com/docs/accounts/create-a-team#find-your-team-id) after the `=` symbol.\n\nYour URL should look like this:\n\n```\n'https://api.vercel.com/v1/edge-config/your_edge_config_id_here/items?teamId=your_team_id_here';\n```\n\nYour request body should be a JSON object containing an `\"items\"` array. The `\"items\"` array must contain objects that describe the change you want to make to the Edge Config. The following table outlines valid keys and values for these objects:\n\n| Property | Description | Valid values |\n| --- | --- | --- |\n| `\"operation\"` | The change you want to make to your Edge Config. | `\"create\"`, `\"update\"`, `\"upsert\"`, `\"delete\"` |\n| `\"key\"` | The name of the key you want to add to or update within your Edge Config. | String of alphanumeric characters, \"\\_\" and \"-\" only. Up to 256 characters. |\n| `\"value\"` | The value you want to assign to the key. | Strings, JSON objects, `null` objects, Numbers and arrays of the previous four types |\n\nThe following example demonstrates a request body that creates an `\"example_key_1\"` key with a value of `\"example_value_1\"`, then updates the `\"example_key_2\"` key with a new value of `\"new_value\"`:\n\n```\n{\n  \"items\": [\n    {\n      \"operation\": \"create\",\n      \"key\": \"example_key_1\",\n      \"value\": \"example_value_1\"\n    },\n    {\n      \"operation\": \"update\",\n      \"key\": \"example_key_2\",\n      \"value\": \"new_value\"\n    }\n  ]\n}\n```\n\nThe following is an API call that sends the above request body to your Edge Config:\n\n```\ncurl -X 'PATCH' 'https://api.vercel.com/v1/edge-config/your_edge_config_id_here/items' \\\n     -H 'Authorization: Bearer your_vercel_api_token_here' \\\n     -H 'Content-Type: application/json' \\\n     -d $'{ \"items\": [ { \"operation\": \"create\", \"key\": \"example_key_1\", \"value\": \"example_value_1\" }, { \"operation\": \"update\", \"key\": \"example_key_2\", \"value\": \"new_value\" } ] }'\n```\n\nSuccessful requests will receive a response of `{\"status\":\"ok\"}`.\n\nIf only one of the operations in the `\"items\"` array of your `PATCH` request body fails, the entire request will fail. Failed requests will receive a response JSON object containing an `\"error\"` property with an object that contains information about why the request failed.\n\nFor example:\n\n```\n{\n  \"error\": {\n    \"code\": \"forbidden\",\n    \"message\": \"The request is missing an authentication token\",\n    \"missingToken\": true\n  }\n}\n```\n\nReading items from your Edge Configs with the Vercel REST API is not recommended. Instead, you should [use the SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk#read-multiple-values) or fetch Edge Config data with [the Edge Config endpoint](#make-requests-to-the-edge-config-endpoint).\n\nHowever, if you must read your Edge Config with the API, you can do so by making a `GET` request to the `edge-config` endpoint.\n\nYour URL should look like this:\n\n```\n'https://api.vercel.com/v1/edge-config/your_edge_config_id_here/items?teamId=your_team_id_here';\n```\n\nThe following is an example of a request that fetches an Edge Config's items with the Vercel REST API:\n\n```\ncurl \"https://api.vercel.com/v1/edge-config/your_edge_config_id_here/items?teamId=your_team_id_here\" \\\n     -H 'Authorization: Bearer your_vercel_api_token_here'\n```\n\nYou can read your Edge Config's metadata (but not its key-value pair contents) by making a `GET` request to the `edge-config` API endpoint. Append the Edge Config's id to the endpoint as a path, as demonstrated below. If the Edge Config is associated with a Team, add the `teamId` query param to the end.\n\nThe following is an example `GET` request that fetches metadata about an Edge Config associated with a Vercel Team.\n\n```\ncurl \"https://api.vercel.com/v1/edge-config/your_edge_config_id_here?teamId=your_team_id_here\" \\\n     -H 'Authorization: Bearer your_vercel_api_token_here'\n```\n\nIf the Edge Config exists, the response will be the same JSON object you receive when [creating your Edge Config with the Vercel REST API](#create-an-edge-config):\n\n```\n{\n  \"createdAt\": 1234567890123,\n  \"updatedAt\": 1234567890123,\n  \"slug\": \"your_edge_config_slug_here\",\n  \"id\": \"your_edge_config_id_here\",\n  \"digest\": \"abc123efg456hij789\",\n  \"sizeInBytes\": 2,\n  \"itemCount\": 0,\n  \"ownerId\": \"your_id_here\"\n}\n```\n\nYou can list all of your Edge Configs in a specific Hobby account or team with a `GET` request to the `edge-config` API endpoint. For example:\n\n```\ncurl \"https://api.vercel.com/v1/edge-config?teamId=your_team_id_here\" \\\n     -H 'Authorization: Bearer your_vercel_api_token_here'\n```\n\nThe response should be similar to this:\n\n```\n[\n  {\n    \"slug\": \"example_config_1\",\n    \"itemCount\": 0,\n    \"createdAt\": 1234567890123,\n    \"updatedAt\": 1234567890123,\n    \"id\": \"your_edge_config_id_here\",\n    \"digest\": \"abc123efg456hij789\",\n    \"sizeInBytes\": 2,\n    \"ownerId\": \"your_id_here\"\n  },\n  {\n    \"slug\": \"example_config_2\",\n    \"itemCount\": 0,\n    \"createdAt\": 0123456789012,\n    \"updatedAt\": 0123456789012,\n    \"id\": \"your_edge_config_id_here\",\n    \"digest\": \"123efg456hij789abc\",\n    \"sizeInBytes\": 2,\n    \"ownerId\": \"your_id_here\"\n  }\n]\n```\n\nWe recommend storing your [connection string](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string) as an environment variable in your project and [using our SDK](https://vercel.com/docs/storage/edge-config/edge-config-sdk) to read Edge Config data. However, you can make requests to the Edge Config endpoint to read your Edge Config's data as well.\n\nTo do so, create an [Edge Config read access token](https://vercel.com/docs/storage/edge-config/using-edge-config#creating-a-read-access-token), which will be used to authenticate requests to the Edge Config endpoint.\n\nThe Edge Config endpoint used in the connection string is distinct from a Vercel REST API endpoint. Its root is `https://edge-config.vercel.com`. Making requests to the Edge Config endpoint allows you to take advantage of the optimizations that make Vercel's Edge Config reads hundreds of milliseconds faster than alternative options at the edge.\n\nTo read all of your Edge Config's items, send a `GET` request to the appropriate edge config endpoint by adding your Edge Config's ID and Edge Config read access token in the appropriate places in the below URL:\n\n```\ncurl 'https://edge-config.vercel.com/your_edge_config_id_here/items?token=your_edge_config_read_access_token_here'\n```\n\nYou can also send your Edge Config read access token in an Authorization header rather than as a query param.\n\n```\ncurl \"https://edge-config.vercel.com/your_edge_config_id_here/items\" \\\n     -H 'Authorization: Bearer your_edge_config_read_access_token_here'\n```\n\nThe response will be a JSON object containing all key-value pairs in the Edge Config. For example:\n\n```\n{\n  \"example_key_1\": \"example_value_1\",\n  \"example_key_2\": \"example_value_2\",\n  \"example_key_3\": \"example_value_3\"\n}\n```\n\nTo request a single item, you can use the `/item` path instead of `/items`, then add the key of the item you want as the final path as shown below:\n\n```\ncurl \"https://edge-config.vercel.com/your_edge_config_id_here/item/example_key_1?token=your_edge_config_read_access_token_here\" \\\n```\n\nYou can also send your Edge Config read access token in an Authorization header rather than as a query param.\n\n```\ncurl -X 'https://edge-config.vercel.com/your_edge_config_id_here/item/example_key_1' \\\n     -H 'Authorization: Bearer your_edge_config_read_access_token_here'\n```\n\nThe response will be the raw value at the specified key. For example, if `example_key_1` has a string value of `\"example_value\"`, the response will be:\n\nWhen you create an Edge Config, a hash string called a digest is generated and attached to it. This digest is replaced with a new hash string whenever you update your config. You can check this digest to verify whether your Edge Config has properly updated, and confirm which version of the Config you're working with.\n\nTo fetch an Edge Config's digest, send a `GET` request to your edge config endpoint, as shown below:\n\n```\ncurl \"https://edge-config.vercel.com/your_edge_config_id_here/digest?teamId=your_team_id_here&token=your_edge_config_read_access_token_here\"\n```\n\nYou can also send the Edge Config read access token in the `Authorization` header of your request using the `Bearer token` format:\n\n```\ncurl  -X 'GET' 'https://edge-config.vercel.com/your_edge_config_id_here/digest?teamId=your_team_id_here' \\\n      -H 'Authorization: Bearer your_edge_config_read_access_token_here\n```",
  "title": "Managing Edge Configs with Vercel REST API",
  "description": "Learn how to use the Vercel REST API to create and update Edge Configs. You can also read data stored in Edge Configs with the Vercel REST API.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/storage/edge-config/edge-config-sdk",
  "markdown": "# @vercel/edge-config\n\nThe [Edge Config](https://vercel.com/storage/edge-config) client SDK is the most ergonomic way to read data from Edge Configs. It provides several helper methods for reading values from one or multiple Edge Configs, and is compatible with Node.js, [the Edge Runtime](https://vercel.com/docs/functions/edge-functions/edge-runtime), and the browser.\n\nIt does not have functionality for _creating_ new Edge Configs and _writing_ to existing Edge Configs, which can be done [using the Vercel REST API](https://vercel.com/docs/storage/edge-config/vercel-api) or the [Dashboard](https://vercel.com/docs/storage/edge-config/edge-config-dashboard).\n\nYou can also [read Edge Config data with the Vercel REST API](https://vercel.com/docs/storage/edge-config/vercel-api#read-all-items). Review [Reading from an Edge Config](https://vercel.com/docs/storage/edge-config/using-edge-config#reading-data-from-edge-configs) to understand when to use the SDK versus the Vercel REST API.\n\nBefore you can start using the SDK, you need to have done the following:\n\n*   Created an Edge Config, which can be done using the [API](https://vercel.com/docs/storage/edge-config/vercel-api#create-an-edge-config) or the [Dashboard](https://vercel.com/docs/storage/edge-config/edge-config-dashboard#create-an-edge-config)\n*   Added [an Edge Config read access token](https://vercel.com/docs/storage/edge-config/using-edge-config#creating-a-read-access-token) to access your Edge Config\n*   Defined [a connection string](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string) with the Edge Config read access token and Edge Config id and stored it as an environment variable\n\nTo get started, install the SDK:\n\n```\npnpm i @vercel/edge-config\n```\n\nUse connection strings to connect your Edge Config to one or more projects. This allows Vercel to optimize your reads when you read the Edge Config through the SDK. You can learn how to create a connection string [here](https://vercel.com/docs/storage/edge-config/using-edge-config#using-a-connection-string).\n\nBy default, the SDK will run all helper methods using the connection string stored in the `EDGE_CONFIG` environment variable. That means, if you have the `EDGE_CONFIG` environment variable set in your project, you can import any of the helper methods and use them like so:\n\n```\nimport { NextResponse } from 'next/server';\nimport { getAll } from '@vercel/edge-config';\nconst configItems = await getAll();\n```\n\nHowever, you can store your connection string as any environment variable, and even connect to multiple Edge Configs by storing more than one connection string in your environment variables.\n\nTo do so, you must use the `createClient` helper.\n\nThe `createClient` helper method takes a connection string and returns an object that lets you use helper methods on the associated Edge Config. Using `createClient`, you can store multiple Edge Configs as environment variables and read data from all of them.\n\n```\nimport { createClient } from '@vercel/edge-config';\n// Fetch a single value from one config\nconst firstConfig = createClient(process.env.FIRST_EDGE_CONFIG);\nconst firstExampleValue1 = await firstConfig.get('other_example_key_1');\n \n// Fetch all values from another config\nconst secondConfig = createClient(process.env.SECOND_EDGE_CONFIG);\nconst allValues = await secondConfig.getAll();\n```\n\nThe following sections will teach you how to use all of the SDK's helper methods.\n\nThe `get` helper method allows you to fetch a value at a given key in your Edge Config. Create your API route using the `get` helper method in the `pages/api` or `api` directory of your project.\n\n```\nimport { NextResponse } from 'next/server';\nimport { get } from '@vercel/edge-config';\n \nexport const runtime = 'edge';\n \nexport async function GET() {\n  const exampleValue1 = await get('example_key_1');\n  return NextResponse.json({\n    label: `Value of \"example_key_1\" in my Edge Config.`,\n    value: exampleValue1,\n  });\n}\n```\n\nThe `getAll` helper method returns all of your Edge Config's items.\n\n```\nimport { NextResponse } from 'next/server';\nimport { getAll } from '@vercel/edge-config';\n \nexport const runtime = 'edge';\n \nexport async function GET() {\n  const configItems = await getAll();\n  return NextResponse.json({\n    label: `These are all the values in my Edge Config.`,\n    value: configItems,\n  });\n}\n```\n\nPassing an array of key names causes `getAll` to return only the specified keys.\n\n```\nimport { NextResponse } from 'next/server';\nimport { getAll } from '@vercel/edge-config';\n \nexport const runtime = 'edge';\n \nexport async function GET() {\n  const someItems = await getAll(['keyA', 'keyB']);\n  return NextResponse.json({\n    label: `These are a few values in my Edge Config.`,\n    value: someItems,\n  });\n}\n```\n\nThe `has` helper method lets you verify if a key exists in your Edge Config. It returns `true` if the key does, and `false` if it doesn't.\n\n```\nimport { NextResponse } from 'next/server';\nimport { has } from '@vercel/edge-config';\n \nexport const runtime = 'edge';\n \nexport async function GET() {\n  const exampleKeyExists = await has('example_key_1');\n  return NextResponse.json({\n    keyExists: exampleKeyExists ? `The key exists!` : `The key doesn't exist!`,\n  });\n}\n```\n\nEvery Edge Config has a hash string associated with it, which is updated whenever the Config is updated. Checking this digest can help you verify whether your Edge Config has properly updated, and confirm which version of the Config you're working with.\n\nThe `digest` helper method lets you check the version of the Edge Config you're reading.\n\n```\nimport { NextResponse } from 'next/server';\nimport { digest } from '@vercel/edge-config';\n \nexport const runtime = 'edge';\n \nexport async function GET() {\n  const version = await digest();\n  return NextResponse.json({\n    digest: version,\n  });\n}\n```\n\nYou cannot write to Edge Config items using the Edge Config SDK. Instead, you can programmatically write using the [Vercel REST API](https://vercel.com/docs/storage/edge-config/vercel-api#update-your-edge-config-items).\n\nThe Edge Config SDK is designed to read from our `edge-config.vercel.com` endpoint using read only tokens to authenticate reads, while writing requires [Vercel Access Tokens to authenticate with the Vercel REST API](https://vercel.com/docs/rest-api#authentication). This core distinction makes it impractical to use the SDK for writes.\n\nIf your project requires frequent writes, you should [learn more about Vercel KV](https://vercel.com/docs/storage/vercel-kv).\n\nAll helper methods throw errors when:\n\n*   Your Edge Config read access token is invalid\n*   The Edge Config you're reading from doesn't exists\n*   A network error occurs",
  "title": "@vercel/edge-config",
  "description": "The Edge Config client SDK is the most ergonomic way to read data from Edge Configs. Learn how to set up the SDK so you can start reading Edge Configs.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cron-jobs/quickstart",
  "markdown": "# Cron Jobs Quickstart\n\nLearn how to schedule cron jobs to run at specific times or intervals.\n\nThe following guide will show you how to create a cron job on Vercel that executes every day at 5 am UTC.\n\n1.  Begin by creating a [Serverless](https://vercel.com/docs/functions/serverless-functions/quickstart#create-a-serverless-function) or [Edge](https://vercel.com/docs/functions/edge-functions/quickstart#create-an-edge-function) Function for your project. The function will echo the current time using the [World Time API](https://worldtimeapi.org/).\n    \n    ```\n    export async function GET() {\n      const result = await fetch(\n        'http://worldtimeapi.org/api/timezone/America/Chicago',\n        {\n          cache: 'no-store',\n        },\n      );\n      const data = await result.json();\n     \n      return Response.json({ datetime: data.datetime });\n    }\n    ```\n    \n    For those using TypeScript versions below 5.2, it's important to adapt the code to `import NextResponse from 'next/server'` and use `NextResponse.json` for the response. This ensures compatibility with earlier TypeScript versions in Next.js applications. In TypeScript 5.2 and above, the standard `new Response` pattern should be used.\n    \n2.  Create or go to your [`vercel.json`](https://vercel.com/docs/projects/project-configuration#functions) file and add the following code:\n    \n    ```\n    {\n      \"crons\": [\n        {\n          \"path\": \"/api/cron\",\n          \"schedule\": \"0 5 * * *\"\n        }\n      ]\n    }\n    ```\n    \n    The `crons` property is an array of cron jobs. Each cron job has two properties:\n    \n    *   The `path`, which must start with `/`\n    *   The `schedule` property, which must be a string that represents a [cron expression](https://vercel.com/docs/cron-jobs#cron-expressions). In this example, the job is scheduled to execute every day at 5:00 am UTC\n3.  When you deploy your project, Vercel's build process creates the cron job. Vercel invokes cron jobs only for [production](https://vercel.com/docs/deployments/environments#production) deployments and not for [preview](https://vercel.com/docs/deployments/preview-deployments) deployments\n    \n    You can also deploy to your production domain using the CLI:\n    \n\nYour cron job is now active and will call the `/api/cron` path every day at 5:00 am UTC.\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Cron Jobs Quickstart",
  "description": "Learn how to schedule cron jobs to run at specific times or intervals.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/cron-jobs/manage-cron-jobs",
  "markdown": "# Managing Cron Jobs\n\nTo view your active cron jobs:\n\n1.  Select your project from the Vercel dashboard\n2.  Select the Settings tab\n3.  Select the Cron Jobs tab from the left sidebar\n\n*   Updating Cron Jobs: Change the [expression](https://vercel.com/docs/cron-jobs#cron-expressions) in `vercel.json` file or the function's configuration, and then redeploy\n*   Deleting Cron Jobs: Remove the configuration from the `vercel.json` file or the function's configuration, and then redeploy\n*   Disabling Cron Jobs: Navigate to the Cron Jobs tab and then click the Disable Cron Jobs button\n\nDisabled cron jobs will still be listed and will count towards your [cron jobs limits](https://vercel.com/docs/cron-jobs/usage-and-pricing)\n\nIt is possible to secure your cron job invocations by adding an environment variable called `CRON_SECRET` to your Vercel project. We recommend using a random string of at least 16 characters for the value of `CRON_SECRET`. A password generator, like [1Password](https://1password.com/password-generator/), can be used to create one.\n\nThe value of the variable will be automatically sent as an `Authorization` header when Vercel invokes your cron job. Your endpoint can then compare both values, the authorization header and the environment variable, to verify the authenticity of the request.\n\n```\nimport type { NextRequest } from 'next/server';\n \nexport function GET(request: NextRequest) {\n  const authHeader = request.headers.get('authorization');\n  if (authHeader !== `Bearer ${process.env.CRON_SECRET}`) {\n    return new Response('Unauthorized', {\n      status: 401,\n    });\n  }\n \n  return Response.json({ success: true });\n}\n```\n\nThe `authorization` header will have the `Bearer` prefix for the value.\n\nFor those using TypeScript versions below 5.2, it's important to adapt the code to `import NextResponse from 'next/server'` and use `NextResponse.json` for the response. This ensures compatibility with earlier TypeScript versions in Next.js applications. In TypeScript 5.2 and above, the standard `new Response` pattern should be used.\n\nThe duration limits for Cron jobs are identical to those of [Serverless](https://vercel.com/docs/functions/serverless-functions#limits) and [Edge](https://vercel.com/docs/functions/edge-functions/limitations) functions. See the [`maxDuration`](https://vercel.com/docs/functions/serverless-functions/runtimes#max-duration) documentation for more information.\n\nIn most cases, these limits are sufficient. However, if you need more processing time, it's recommended to split your cron jobs into different units or distribute your workload by combining cron jobs with regular HTTP requests with your API.\n\nVercel will not retry an invocation if a cron job fails. You can check for error [logs](https://vercel.com/docs/observability/runtime-logs) through the View Log button in the Cron Jobs tab.\n\nCron jobs can be created for [dynamic routes](https://nextjs.org/docs/routing/dynamic-routes):\n\n```\n{\n  \"crons\": [\n    {\n      \"path\": \"/api/sync-slack-team/T0CAQ10TZ\",\n      \"schedule\": \"0 5 * * *\"\n    },\n    {\n      \"path\": \"/api/sync-slack-team/T4BOE34OP\",\n      \"schedule\": \"0 5 * * *\"\n    }\n  ]\n}\n```\n\nIf you create a cron job for a path that doesn't exist, it generates a [404 error](https://vercel.com/docs/errors/platform-error-codes#404:-not_found). However, Vercel still executes your cron job. You can analyze your logs to check if there are any issues.\n\nCreating a new deployment will not interrupt your running cron jobs; they will continue until they finish.\n\nWhen performing an [instant rollback](https://vercel.com/docs/deployments/instant-rollback), all cron jobs will be reverted to the state of the rolled back deployment.\n\nWhen a cron job takes too long to run, you might encounter two concurrent cron job invocations, which could cause problems. Implementing a lock mechanism in your cron job, for example by using [Redis](https://redis.io/docs/manual/patterns/distributed-locks/), is recommended in such cases.\n\nAlternatively, ensure your cron job is fast enough or set it to timeout if it runs for too long.\n\nCron jobs are API routes. You can run them locally by making a request to their endpoint. For example, if your cron job is in `/api/cron`, you could visit the following endpoint in your browser: `http://localhost:3000/api/cron`. Note, there's currently no support for `vercel dev`, `next dev`, or other framework-native local development servers.\n\nCron jobs do not follow redirects. When a cron-triggered endpoint returns a 3xx redirect status code, the job completes without further requests. Redirect responses are treated as final for each invocation.\n\nThe view logs button on the cron job overview can be used to verify the response of the invocations and gain further insights.",
  "title": "Managing Cron Jobs",
  "description": "Learn how to manage Cron Jobs effectively in Vercel. Explore cron job duration, error handling, deployments, concurrency control, local execution, and more to optimize your serverless workflows.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/migrating-from-legacy",
  "markdown": "# Migrating to the latest Speed Insights package\n\nThe new Speed Insights brings a few changes to the UI and the ingestion mechanism. You find a list of changes below and understand how they affect you.\n\nVercel introduced a package titled [`@vercel/speed-insights`](https://vercel.com/docs/speed-insights/package) as an iteration from the automatic install process. This shift is intended to offer more flexibility and broader framework support.\n\nBy migrating to the new Speed Insights package, you benefit from the following features:\n\n*   First-Party Ingestion: Data is processed directly through your own domain, eliminating the third-party domain lookup\n*   Enhanced Route Support: Dynamic route segment is supported in more frameworks such as Next.js `app` router, Nuxt, Remix, and SvelteKit\n*   Advanced Customization: The updated package provides tools for more granular control, such as the ability to [intercept requests](https://vercel.com/docs/speed-insights/package#beforesend) and [set sample rates](https://vercel.com/docs/speed-insights/package#samplerate) on a project basis\n\nYou should become familiar with the `@vercel/speed-insights` [configuration options](https://vercel.com/docs/speed-insights/package) and upgrade. However, the [intake API](https://vercel.com/docs/speed-insights/api) will still be usable for some time.\n\nSample rate configurations have been relocated from team settings to the [@vercel/speed-insights package](https://vercel.com/docs/speed-insights/package), providing the capability to [set specific rates](https://vercel.com/docs/speed-insights/package#samplerate) for each project.\n\nData ingestion now utilizes a first-party intake during your deployment. Here's how it works:\n\n*   The script is now sourced from your own domain at this endpoint: `https://yourdomain.com/_vercel/speed-insights/script.js`.\n*   Data points are also ingested through your own domain at this endpoint: `https://yourdomain.com/_vercel/speed-insights/vitals`.\n\nWith this change, the script becomes less affected by content blockers and performs fewer DNS lookups, resulting in a faster and more reliable experience. It is no longer required to define a [Content Security Policy](https://developer.mozilla.org/docs/Web/HTTP/CSP) to allow the third-party script.\n\nOur revamped dashboard emphasizes the 75th percentile, a [recommendation](https://web.dev/articles/defining-core-web-vitals-thresholds#choice_of_percentile) from the Core Web Vitals team.\n\nIn other terms, the score is now determined by the experience of the fastest 75% of your users.\n\nThis percentile was chosen because it represents the performance experienced by the majority of visits and is not significantly affected by outliers.\n\nFor deeper insights, it is now possible to view multiple percentiles at once, without affecting the score.\n\nSpeed Insights now uses scoring criteria that are inspired by the improvements found in Lighthouse 10. Below, you'll find a comprehensive comparison of the metrics, thresholds, and their respective weights as per our updated system and its previous iteration.\n\nAll previous (prior to the new Speed Insights) and new data points use this updated scoring criteria.\n\nComparison table between the new and old scoring criteria\n\n| Metric | Old Thresholds | New Thresholds | Old Weights | New Weights |\n| --- | --- | --- | --- | --- |\n| RES | 90~50 | 90~50 | Not applicable | Not applicable |\n| FCP | 0.9~1.6s (Desktop)  <br>2.3~4s (Mobile) | 1.8~3s | 20% | 15% |\n| LCP | 1.2~2.4s (Desktop)  <br>2.5~4s (Mobile) | 2.5~4s | 35% | 30% |\n| INP | Not applicable | 200~500ms | \\-  | 30% |\n| FID | 100~300ms | 100~300ms | 30% | Not applicable |\n| CLS | 0.1~0.25 | 0.1~0.25 | 15% | 25% |\n| TTFB | Not applicable | 0.8~1.8s | \\-  | \\-  |\n\nChanges are highlighted in bold.\n\nThe CLS metric is given more weight in the new version, and the FID metric is replaced with INP. The FCP and LCP metrics now have the same thresholds for both desktop and mobile.\n\nWe've introduced a new metric, [Time to First Byte (TTFB)](https://vercel.com/docs/speed-insights/metrics#time-to-first-byte-ttfb), which measures the time taken by the server to respond to the first request. This metric is not included in the score, but it can offer more insights about performance.",
  "title": "Migrating to the latest Speed Insights package",
  "description": "Understand the transition from Speed Insights to the new version – know the differences and how they affect you.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/quickstart",
  "markdown": "# Vercel Speed Insights QuickstartHTML5\n\nTo view instructions on using the Vercel Speed Insights in your project for your framework, use the Choose a framework dropdown on the right (at the bottom in mobile view).\n\nTo start tracking performance metrics with [Speed Insights](https://vercel.com/docs/speed-insights), use the following steps:\n\n1.  On the [Vercel dashboard](https://vercel.com/dashboard), select your Project followed by the Speed Insights tab. You can also select the button below to be taken there. Then, select Enable from the dialog.\n    \n    [](https://vercel.com/d?to=%2F%5Bteam%5D%2F%5Bproject%5D%2Fspeed-insights&title=Open+Speed+Insights)\n    \n    Enabling Speed Insights will add new routes (scoped at `/_vercel/speed-insights/*`) after your next deployment.\n    \n2.  Using the package manager of your choice, add the `@vercel/speed-insights` package to your project:\n    \n    ```\n    pnpm i @vercel/speed-insights\n    ```\n    \n3.  Add the `SpeedInsights` component to your app\n    \n    The `SpeedInsights` component is a wrapper around the tracking script, offering more seamless integration with Next.js.\n    \n    Add the following component to the root layout:\n    \n    Add the following component to your main app file:\n    \n    ```\n    import { SpeedInsights } from '@vercel/speed-insights/next';\n     \n    export default function RootLayout({\n      children,\n    }: {\n      children: React.ReactNode;\n    }) {\n      return (\n        <html lang=\"en\">\n          <head>\n            <title>Next.js</title>\n          </head>\n          <body>\n            {children}\n            <SpeedInsights />\n          </body>\n        </html>\n      );\n    }\n    ```\n    \n4.  You can deploy your app to Vercel's global [Edge Network](https://vercel.com/docs/edge-network/overview) by running the following command from your terminal:\n    \n    Alternatively, you can [connect your project's git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository), which will enable Vercel to deploy your latest pushes and merges to main.\n    \n    Once your app is deployed, it's ready to begin tracking performance metrics.\n    \n    If everything is set up correctly, you should be able to find the `/_vercel/speed-insights/script.js` script inside the body tag of your page.\n    \n\nLearn more about how Vercel supports [privacy and data compliance standards](https://vercel.com/docs/speed-insights/privacy-policy) with Vercel Speed Insights.\n\nIf you are experiencing a situation where data is not visible in the Speed Insights dashboard, it could be due to a couple of reasons.\n\nHow to fix:\n\n1.  Double check if you followed the quickstart instructions correctly\n2.  Check if your adblocker is interfering with the Speed Insights script. If so, consider disabling it\n\nSpeed Insights may not function when using a proxy, such as [Cloudflare](https://vercel.com/docs/integrations/external-platforms/cloudflare).\n\nHow to fix:\n\n1.  Check your proxy configuration to make sure that all desired pages are correctly proxied to the deployment\n2.  Additionally, forward all requests to `/_vercel/speed-insights/*` to the deployments to ensure proper functioning of Speed Insights through the proxy",
  "title": "Vercel Speed Insights Quickstart",
  "description": "Vercel Speed Insights provides you detailed insights into your website's performance. This quickstart guide will help you get started with using Speed Insights on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/package",
  "markdown": "# Speed Insights Configuration with @vercel/speed-insightsHTML5\n\nWith the `@vercel/speed-insights` npm package, you're able to configure your application to capture and send web performance metrics to Vercel.\n\nTo get started with Speed Insights, refer to our [Quickstart](https://vercel.com/docs/speed-insights/quickstart) guide which will walk you through the process of setting up Speed Insights for your project.\n\nIn prior versions of Speed Insights this was managed in the UI. This option is now managed through code with the package.\n\nThis parameter determines the percentage of events that are sent to the server. By default, all events are sent. Lowering this parameter allows for cost savings but may result in a decrease in the overall accuracy of the data being sent. For example, a `sampleRate` of `0.5` would mean that only 50% of the events will be sent to the server.\n\nWith the `beforeSend` function, you can modify or filter out the event data before it's sent to Vercel. You can use this to redact sensitive data or to avoid sending certain events.\n\nFor instance, if you wish to ignore events from a specific URL or modify them, you can do so with this option.\n\n```\n// Example usage of beforeSend\nbeforeSend: (data) => {\n  if (data.url.includes('/sensitive-path')) {\n    return null; // this will ignore the event\n  }\n  return data; // this will send the event as is\n};\n```\n\nWith the debug mode, you can view all Speed Insights events in the browser's console. This option is especially useful during development.\n\nThis option is automatically enabled if the `NODE_ENV` environment variable is available and either `development` or `test`.\n\nYou can manually disable it to prevent debug messages in your browsers console.\n\nThe `route` option allows you to specify the current dynamic route (such as `/blog/[slug]`). This is particularly beneficial when you need to aggregate performance metrics for similar routes.\n\nThis option is automatically set when using a framework specific import such as for Next.js, Nuxt, SvelteKit and Remix.",
  "title": "Speed Insights Configuration with @vercel/speed-insights",
  "description": "With the @vercel/speed-insights npm package, you can configure your application to capture and send web performance metrics to Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/privacy-policy",
  "markdown": "# Vercel Speed Insights Privacy & Compliance\n\nTo ensure that the Speed Insights feature can be used despite many different regulatory limitations around the world, we've designed it in such a way that it provides you with information without being tied to, or associated with, any individual visitor or IP address.\n\nThe recording of data points is anonymous and the Speed Insights feature does not collect or store information that would enable us to reconstruct a browsing session across pages or identify a user.\n\nThe following information is stored with every data point:\n\n| Collected Value | Example Value |\n| --- | --- |\n| Route | /blog/\\[slug\\] |\n| URL | /blog/nextjs-10 |\n| Network Speed | 4g (or slow-2g, 2g, 3g) |\n| Browser | Chrome 86 (Blink) |\n| Device Type | Mobile (or Desktop/Tablet) |\n| Device OS | Android 10 |\n| Country (ISO 3166-1 alpha-2) | US  |\n| Web Vital | FCP 1.0s |\n| Web Vital Attribution | html>body img.header |\n| SDK Information | @vercel/speed-insights 0.1.0 |\n| Server-Received Event Time | 2023-10-29 09:06:30 |\n\nPlease see our [Privacy Notice](https://vercel.com/legal/privacy-policy) for more information, including how Vercel Speed Insights complies with the GDPR.\n\nOnce you've followed the dashboard's instructions for enabling Speed Insights and installed the `@vercel/speed-insights` package, it will automatically start tracking data points for your project.\n\nThe package injects a script that retrieves the visitor's [Web Vitals](https://vercel.com/docs/speed-insights/metrics) by invoking native browser APIs and reporting them to Vercel's servers on every page load.\n\nOnly fresh page loads report Speed Insights. Client-side page transitions do not. For example, typing `vercel.com/blog` into your address bar and hitting enter will send them but selecting a link on a blog post will not.\n\nLearn more about the [first-party intake data ingestion method](https://vercel.com/docs/speed-insights/migrating-from-legacy#first-party-intake), which enables a faster and more reliable experience.",
  "title": "Vercel Speed Insights Privacy & Compliance",
  "description": "Learn how Vercel follows the latest privacy and data compliance standards with its Speed Insights feature.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/package",
  "markdown": "# Advanced Web Analytics Config with @vercel/analytics\n\nWith the `@vercel/analytics` npm package you're able to configure your application to send analytics data to Vercel.\n\nTo get started with analytics, follow our [Quickstart](https://vercel.com/docs/analytics/quickstart) guide which will walk you through the process of setting up analytics for your project.\n\nOverride the automatic environment detection. This option allows you to force a specific environment for the package. If not defined, it will use `auto` which tries to set the `development` or `production` mode based on available environment variables such as `NODE_ENV`.\n\nIf your used framework does not expose these environment variables, the automatic detection won't work correctly. In this case, you're able to provide the correct `mode` manually or by other helpers that your framework exposes.\n\nIf you're using the `<Analytics />` component, you can pass the `mode` prop to force a specific environment:\n\n```\n'use client';\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics mode={'production'} />;\n      </body>\n    </html>\n  );\n}\n```\n\nYou'll see all analytics events in the browser's console with the debug mode. This option is automatically enabled if the `NODE_ENV` environment variable is available and either `development` or `test`.\n\nYou can manually disable it to prevent debug messages in your browsers console.\n\nTo disable the debug mode for server-side events, you need to set the `VERCEL_WEB_ANALYTICS_DISABLE_LOGS` environment variable to `true`.\n\n```\n'use client';\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics debug={false} />;\n      </body>\n    </html>\n  );\n}\n```\n\nFor plain HTML sites, you have to change the script URL on your `.html` files:\n\n```\n<script defer src=\"https://cdn.vercel-insights.com/v1/script.debug.js\"></script>\n```\n\nMake sure you change the URL back to `/_vercel/insights/script.js` when deploying to production.\n\nWith the `beforeSend` option, you can modify the event data before it's sent to Vercel. Below, you will see an example that ignores all events that have a `/private` inside the URL.\n\nReturning `null` will ignore the event and no data will be sent. You can also modify the URL and check our docs about [redacting sensitive data](https://vercel.com/docs/analytics/redacting-sensitive-data).\n\n```\n'use client';\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics\n          beforeSend={(event) => {\n            if (event.url.includes('/private')) {\n              return null;\n            }\n            return event;\n          }}\n        />\n      </body>\n    </html>\n  );\n}\n```",
  "title": "Advanced Web Analytics Config with @vercel/analytics",
  "description": "With the @vercel/analytics npm package, you are able to configure your application to send analytics data to Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/speed-insights/disable",
  "markdown": "# Disabling Speed Insights\n\nYou may want to disable Speed Insights in your project if you find you no longer need it. You can disable Speed Insights from within the project settings in the Vercel dashboard. If you are unsure if a project has Speed Insights enabled, see [Identifying if Speed Insights is enabled](#identifying-if-speed-insights-is-enabled).\n\nIf you transfer a project with Speed Insights enabled from a Hobby account to a Pro plan, it will continue to be enabled but with increased limits, as documented in the [pricing docs](https://vercel.com/docs/speed-insights/limits-and-pricing) . This means that Speed Insights will be added to your Pro plan invoice automatically.\n\n1.  Select a project from your [dashboard](https://vercel.com/dashboard) and navigate to the Speed Insights tab.\n    \n2.  To disable Speed Insights on a project, click on the ellipsis on the top-right of the Speed Insights page and select Disable Speed Insights.\n    \n    ![Disable Speed Insights option.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fdisable-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Disable Speed Insights option.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fdisable-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n    \n    Disable Speed Insights option.\n    \n\nWhen you disable Speed Insights in the middle of your billing cycle, it will not be removed instantly. Instead it will stop collecting new data points but will continue to show already collected data until the end of the cycle, see the [prorating docs](https://vercel.com/docs/speed-insights/limits-and-pricing#prorating) for more information.\n\nIf you are on an Enterprise plan, please remember to check your contract entitlements as you may have custom limits included. If you have any questions about your billing/contract regarding Speed Insights you can reach out to your CSM or AE for further clarification.\n\nIf you have many projects on your Vercel account and are not sure which of them has Speed Insights enabled, you can see this from the [dashboard](https://vercel.com/dashboard) without needing to check each project separately. The different circles in the right corner of each project card will show the Speed Insights status.\n\nIf Speed Insights is not enabled, then the circle will look like the below:\n\n![Speed Insights not enabled for a project.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fready-to-enable-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Speed Insights not enabled for a project.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fready-to-enable-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSpeed Insights not enabled for a project.\n\nIf Speed Insights is enabled but no data points have been collected yet then it will show an empty circle, like the below:\n\n![Speed Insights enabled for a project but no data points have been collected.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fenabled-no-data-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Speed Insights enabled for a project but no data points have been collected.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fenabled-no-data-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSpeed Insights enabled for a project but no data points have been collected.\n\nIf Speed Insights is enabled and data points have been collected then the circle will be coloured with a number inside, similar to the below image:\n\n![Speed Insights enabled for a project and has data points.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fenabled-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Speed Insights enabled for a project and has data points.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fspeed-insights%2Fv2%2Fenabled-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nSpeed Insights enabled for a project and has data points.",
  "title": "Disabling Speed Insights",
  "description": "How to disable Speed Insights from within the Vercel dashboard",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/filtering",
  "markdown": "# Filtering Analytics\n\nWeb Analytics provides you with a way to filter your data in order to gain a deeper understanding of your website traffic. This guide will show you how to use the filtering feature and provide examples of how to use it to answer specific questions.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Ffiltering-row-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Ffiltering-row-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nTo filter the Web Analytics view, select your project and then click the Analytics tab. From there select on any row within any of the data panels.\n\nYou can filter your data by the following criteria:\n\n*   Referrers\n*   Viewed Pages\n*   Country\n*   Browsers\n*   Operating System\n*   UTM Parameters (available with [Web Analytics Plus](https://vercel.com/docs/analytics/limits-and-pricing) and Enterprise)\n*   Hostname\n\nTo apply a filter, click on any row within a data panel you want to filter by. For example, if you want to see data for visitors from the United States, you would search for \"United States\" within the Country panel and click on it.\n\n![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Ffiltering-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fweb-analytics%2Ffiltering-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nYou can also use multiple filters at once. For example, you could filter for visitors from the United States who used Chrome as their browser.\n\nBy using the filtering feature in Web Analytics, you can gain a deeper understanding of your website traffic and make data-driven decisions.\n\nHere are a few examples of how you can use the filtering feature to gain insights into your website traffic:\n\nLet's say you want to find out where people came from that viewed your \"About Us\" page. To do this, you would first apply a filter in the Pages panel and click on the `/about-us` page. This will show you all of the data for visitors who viewed that page. In the Referrer panel you will see all external pages, that link directly to this page.\n\nYou can use the Web Analytics dashboard to find out what content people from a specific country viewed. For example, to see what pages visitors from Canada viewed, you would go to the Countries panel, search for \"Canada\" and click on the row labeled \"Canada\". This will show you all of the data for visitors from Canada. Next, you can go to the Pages panel to see what specific pages they viewed.\n\nTo find out viewed pages from a specific referrer, such as Google, you can go to the Referrers panel, look for \"google.com\" and click on it. This will show you all of the data for visitors who came from google.com. Next, you can go to the Pages panel to see what specific pages they viewed.\n\nYou can drill down into your data to gain a deeper understanding of your website traffic. By default, the Referrers panel only shows top level domains, but by clicking on one of the domains, you can start a drill-down and reveal all sub-pages that refer to your website.\n\nFor example, by default, you may only see \"github.com\" as a referrer. However, by clicking on it, you will now see all pages on GitHub that drive traffic to your site, such as \"github.com/vercel/next\".\n\nThis feature can be especially useful for identifying the sources of referral traffic, and finding out which specific pages on a website are driving traffic to your site.\n\nThe drill-down feature is only available in the **Referrers** panel and not in other panels.\n\nWeb Analytics allows you to track the origin of traffic from Twitter by using the Twitter Resolver feature.\n\nTo use it, click on the `t.co` referrer to filter for it. This performs a drill-down, which reveals all `t.co` links that refer to your page. By clicking on any of these links a new tab will open and and redirect you to the Twitter search page with the URL as the search parameter. From there, you can find the original post of the link and gain insights into the traffic coming from Twitter.\n\nTwitter search might not always be able to resolve to the original post of that link, and it may appear multiple times.\n\nThis feature can be especially useful for understanding the performance of Twitter campaigns, identifying the sources of referral traffic and finding out the origin of a specific link.\n\nThis feature is only available for `t.co` links and not other short links.",
  "title": "Filtering Analytics",
  "description": "Learn how filters allow you to explore insights about your website's visitors.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/quickstart",
  "markdown": "# Vercel Web Analytics QuickstartHTML5\n\nSelect your framework to view instructions on using the Vercel Web Analytics in your project.\n\nTo start tracking [visitors](https://vercel.com/docs/analytics#visitors) and [page views](https://vercel.com/docs/analytics#page-views) with Web Analytics, use the following steps:\n\n1.  On the [Vercel dashboard](https://vercel.com/dashboard), select your Project and then click the Analytics tab and click Enable from the dialog.\n    \n    [](https://vercel.com/d?to=%2F%5Bteam%5D%2F%5Bproject%5D%2Fanalytics&title=Open+Web+Analytics)\n    \n    Enabling Web Analytics will add new routes (scoped at `/_vercel/insights/*`) after your next deployment.\n    \n*   Using the package manager of your choice, add the `@vercel/analytics` package to your project:\n    3.  The `Analytics` component is a wrapper around the tracking script, offering more seamless integration with Next.js.\n    \n    Add the following component to the root layout.\n    \n    ```\n    import { Analytics } from '@vercel/analytics/react';\n     \n    export default function RootLayout({\n      children,\n    }: {\n      children: React.ReactNode;\n    }) {\n      return (\n        <html lang=\"en\">\n          <head>\n            <title>Next.js</title>\n          </head>\n          <body>\n            {children}\n            <Analytics />\n          </body>\n        </html>\n      );\n    }\n    ```\n    \n4.  You can deploy your app to Vercel's global [Edge Network](https://vercel.com/docs/edge-network/overview) by running the following command from your terminal:\n    \n    Alternatively, you can [connect your project's git repository](https://vercel.com/docs/deployments/git#deploying-a-git-repository), which will enable Vercel to deploy your latest pushes and merges to main.\n    \n    Once your app is deployed, it's ready to begin tracking visitors and page views.\n    \n    If everything is set up properly, you should be able to see a Fetch/XHR request in your browser's Network tab from `/_vercel/insights/view` when you visit any page.\n    \n\nLearn more about how Vercel supports [privacy and data compliance standards](https://vercel.com/docs/analytics/privacy-policy) with Vercel Web Analytics.\n\nIf you are experiencing a situation where data is not visible in the analytics dashboard or a 404 error occurs while loading `script.js`, it could be due to deploying the tracking code before enabling Web Analytics.\n\nHow to fix:\n\n1.  Make sure that you have enabled Analytics in the dashboard\n2.  Re-deploy your app to Vercel\n3.  Promote your latest deployment to production. To do so, visit the project in your dashboard, and select the Deployments tab. From there, select the three dots to the right of the most recent deployment and select Promote to Production\n\nWeb Analytics may not function when using a proxy, such as Cloudflare.\n\nHow to fix:\n\n1.  Check your proxy configuration to make sure that all desired pages are correctly proxied to the deployment\n2.  Additionally, forward all requests to `/_vercel/insights/*` to the deployments to ensure proper functioning of Web Analytics through the proxy",
  "title": "Vercel Web Analytics Quickstart",
  "description": "Vercel Web Analytics provides you detailed insights into your website's visitors. This quickstart guide will help you get started with using Analytics on Vercel.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/privacy-policy",
  "markdown": "# Privacy and Compliance\n\nVercel takes a privacy-focused approach to our products and strive to enable our customers to use Vercel with confidence. The company aim to be as transparent as possible so our customers have the relevant information that they need about Vercel Web Analytics to meet their compliance obligations.\n\nVercel Web Analytics can be used globally, and Vercel have designed it to align with leading data protection authority guidance. When using Vercel Web Analytics, no personal identifiers that track and cross-check end users' data across different applications or websites, are collected. By default, Vercel Web Analytics allows you to use only aggregated data that can not identify or re-identify customers' end users. For more information, see [Configuring Vercel Web Analytics](#configuring-vercel-web-analytics)\n\nThe recording of data points (i.e. pageviews, custom events) is anonymous, so you have insight into your data without it being tied to or associated with any individual, customer, or IP address.\n\nVercel Web Analytics does not collect or store any information that would enable you to reconstruct an end user’s browsing session across different applications or websites and/or personally identify an end user. A minimal amount of data is collected and it is used for aggregated statistics only. For information on the type of data, [see the table below](#data-point-information).\n\nVercel Web Analytics allows you to track your website traffic and gather valuable insights without using any third-party cookies, instead end users are identified by a hash created from the incoming request.\n\nThe lifespan of a visitor session is not stored permanently, it is automatically discarded after 24 hours.\n\nAfter following the dashboard instructions to enable Vercel Web Analytics, see our [Quickstart](https://vercel.com/docs/analytics/quickstart) for a step-by-step tutorial on integrating the Vercel Web Analytics script into your application. After successfully completing the quickstart and deploying your application, the script will begin transmitting page view data to Vercel's servers.\n\nAll page views will automatically be tracked by Vercel Web Analytics, including both fresh page loads and client-side page transitions.\n\nThe following information may be stored with every data point:\n\n| Collected Value | Example Value |\n| --- | --- |\n| Event Timestamp | 2020-10-29 09:06:30 |\n| URL | `/blog/nextjs-10` |\n| Dynamic Path | `/blog/[slug]` |\n| Referrer | [https://news.ycombinator.com/](https://news.ycombinator.com/) |\n| Query Params (Filtered) | `?ref=hackernews` |\n| Geolocation | US, California, San Francisco |\n| Device OS & Version | Android 10 |\n| Browser & Version | Chrome 86 (Blink) |\n| Device Type | Mobile (or Desktop/Tablet) |\n| Web Analytics Script Version | 1.0.0 |\n\nSome URLs and query parameters can include sensitive data and personal information (i.e. user ID, token, order ID or any other information that can individually identify a person). You have the ability to configure Vercel Web Analytics in a manner that suits your security and privacy needs to ensure that no personal information is collected in your custom events or page views, if desired.\n\nFor example, automatic page view tracking may track personal information `https://acme.com/[name of individual]/invoice/[12345]`. You can modify the URL by passing in the `beforeSend` function. For more information see our documentation on [redacting sensitive data](https://vercel.com/docs/analytics/redacting-sensitive-data).\n\nFor [custom events](https://vercel.com/docs/analytics/custom-events), you may want to prevent sending sensitive or personal information, such as email addresses, to Vercel.",
  "title": "Privacy and Compliance",
  "description": "Learn how Vercel supports privacy and data compliance standards with Vercel Web Analytics.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar",
  "markdown": "# Managing the Vercel Toolbar\n\nTo disable the toolbar by default for all projects in your team:\n\n1.  Navigate to [your Vercel dashboard](https://vercel.com/dashboard) and make sure that you have selected your team from the [scope selector](https://vercel.com/docs/dashboard-features#scope-selector)\n2.  From your [dashboard](https://vercel.com/dashboard), select the Settings tab\n3.  In the General section, find Comments\n4.  Choose either On or Off from the dropdown\n5.  You can optionally choose to allow the setting to be overridden at the project level\n\n![The dashboard setting to enable or disable comments at the account level.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fcomments-setting-light.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The dashboard setting to enable or disable comments at the account level.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fcomments-setting-dark.png&w=3840&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe dashboard setting to enable or disable comments at the account level.\n\nTo disable the toolbar project-wide:\n\n1.  From your [dashboard](https://vercel.com/dashboard), select the project you want to enable or disable the Toolbar for\n2.  Navigate to Settings tab\n3.  In the General section, find Comments\n4.  Choose either Default (to respect team-level visibility settings) or Disabled (to disable the toolbar project-wide)\n\n![The dashboard setting to enable or disable comments in a project.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fcomments-project-setting-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![The dashboard setting to enable or disable comments in a project.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fcomments-project-setting-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nThe dashboard setting to enable or disable comments in a project.\n\nTo disable the toolbar, you can do the following:\n\n1.  Ensure you are signed in to the Vercel Toolbar\n2.  From the toolbar, select the menu item (☰)\n3.  From the list, select Disable for Session or Hide Toolbar.\n\nThis action will hide the toolbar in the current browser tab. To show the comments again, open a new browser session.\n\nYou can also show or hide the toolbar by using `⌘ + .` on MacOS (`Ctrl + .` on Windows).\n\nYou can use the `x-vercel-skip-toolbar` header to prevent interference with automated end-to-end tests:\n\n1.  Add the `x-vercel-skip-toolbar` header to the request sent to [the preview deployment URL](https://vercel.com/docs/deployments/preview-deployments#preview-urls)\n2.  Optionally, you can assign the value `1` to the header. However, presence of the header itself triggers Vercel to disable the toolbar\n\nYou can use Vercel's [preview environment variables](https://vercel.com/docs/projects/environment-variables#preview-environment-variables) to manage the toolbar for specific branches or environments\n\nTo enable comments for an individual branch, add the following to the environment variables for the desired preview branch:\n\n```\nVERCEL_PREVIEW_FEEDBACK_ENABLED=1\n```\n\nTo disable comment for an individual branch, set the above environment variable's value to `0`:\n\n```\nVERCEL_PREVIEW_FEEDBACK_ENABLED=0\n```\n\nTo use the toolbar with preview deployments that have [custom alias domains](https://vercel.com/docs/projects/domains/add-a-domain), you must opt into comments explicitly in your project settings on [the dashboard](https://vercel.com/dashboard).\n\nIf you have a [Content Security Policy (CSP)](https://developer.mozilla.org/docs/Web/HTTP/CSP) configured, you may need to adjust the CSP to enable access to the Vercel Toolbar or Comments.\n\nYou can make the following adjustments to the `Content-Security-Policy` [response header](https://vercel.com/docs/edge-network/headers#custom-response-headers):\n\n*   Add the following to `script-src` (Most commonly used):\n    \n    ```\n      script-src https://vercel.live\n    ```\n    \n*   Add the following to `connect-src`:\n    \n    ```\n      connect-src https://vercel.live wss://ws-us3.pusher.com\n    ```\n    \n*   Add the following to `img-src`:\n    \n    ```\n      img-src https://vercel.live https://vercel.com data: blob:\n    ```\n    \n*   Add the following to `frame-src`:\n    \n    ```\n      frame-src https://vercel.live\n    ```\n    \n*   Add the following to `style-src`:\n    \n    ```\n      style-src https://vercel.live 'unsafe-inline'\n    ```\n    \n*   Add the following to `font-src`:\n    \n    ```\n      font-src https://vercel.live https://assets.vercel.com\n    ```",
  "title": "Managing the Vercel Toolbar",
  "description": "Learn how to enable or disable the Vercel Toolbar for your team, project, and session.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/redacting-sensitive-data",
  "markdown": "# Redacting Sensitive Data from Web Analytics EventsHTML5\n\nSometimes, URLs and query parameters may contain sensitive data. This could be a user ID, a token, an order ID, or any other data that you don't want to be sent to Vercel. In this case, you may not want them to be tracked automatically. To prevent sensitive data from being sent to Vercel, you can pass in the `beforeSend` function that modifies the event before it is sent.\n\nReturning `null` will ignore the event, while returning the event or a modified version of it will track it normally.\n\n```\n'use client';\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics\n          beforeSend={(event) => {\n            if (event.url.includes('/private')) {\n              return null;\n            }\n            return event;\n          }}\n        />\n      </body>\n    </html>\n  );\n}\n```\n\nTo apply changes to the event, you can parse the URL and adjust it to your needs before you return the modified event.\n\nIn this example the query parameter `secret` is removed on all events.\n\n```\n'use client';\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics\n          beforeSend={(event) => {\n            const url = new URL(event.url);\n            url.searchParams.delete('secret');\n            return {\n              ...event,\n              url: url.toString(),\n            };\n          }}\n        />\n      </body>\n    </html>\n  );\n}\n```\n\nYou can also use `beforeSend` to allow users to opt-out of all tracking by setting a `localStorage` value (for example `va-disable`).\n\n```\n'use client';\nimport { Analytics } from '@vercel/analytics/react';\n \nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <title>Next.js</title>\n      </head>\n      <body>\n        {children}\n        <Analytics\n          beforeSend={(event) => {\n            if (localStorage.getItem('va-disable')) {\n              return null;\n            }\n            return event;\n          }}\n        />\n      </body>\n    </html>\n  );\n}\n```\n\nTo learn more about the `beforeSend` function and how it can be used with other frameworks, have a look at the [@vercel/analytics](https://vercel.com/docs/analytics/package) package documentation.",
  "title": "Redacting Sensitive Data from Web Analytics Events",
  "description": "Sometimes URLs and query parameters may contain sensitive data, such as User IDs. Learn how to redact sensitive data from your analytics events.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/analytics/custom-events",
  "markdown": "# Tracking custom eventsHTML5\n\nVercel Web Analytics allows you to track custom events in your application using the `track()` function. This is useful for tracking user interactions, such as button clicks, form submissions, or purchases.\n\nMake sure you have version 1.1.0 or later of `@vercel/analytics` installed.\n\nTo track an event:\n\n1.  Make sure you have `@vercel/analytics` version 1.1.0 or later [installed](https://vercel.com/docs/analytics/quickstart#add-@vercel/analytics-to-your-project)\n2.  Import `{ track }` from `@vercel/analytics`\n3.  In most cases you will want to track an event when a user performs an action, such as clicking a button or submitting a form, so you should use this on the button handler\n4.  Call `track` and pass in a string representing the event name as the first argument. You can also pass [custom data](#tracking-an-event-with-custom-data) as the second argument:\n\n```\nimport { track } from '@vercel/analytics';\n \n// Call this function when a user clicks a button or performs an action you want to track\ntrack('Signup');\n```\n\nThis will track an event named **Signup**.\n\nFor example, if you have a button that says Sign Up, you can track an event when the user clicks the button:\n\n```\nimport { track } from '@vercel/analytics';\n \nfunction SignupButton() {\n  return (\n    <button\n      onClick={() => {\n        track('Signup');\n        // ... other logic\n      }}\n    >\n      Sign Up\n    </button>\n  );\n}\n```\n\nYou can also pass custom data along with an event. To do so, pass an object with key-value pairs as the second argument to `track()`:\n\n```\ntrack('Signup', { location: 'footer' });\ntrack('Purchase', { productName: 'Shoes', price: 49.99 });\n```\n\nThis tracks a \"Signup\" event that occurred in the \"footer\" location. The second event tracks a \"Purchase\" event with product name and a price.\n\n*   The number of custom data properties you can pass is limited based on your [plan](https://vercel.com/docs/analytics/limits-and-pricing)\n*   Nested objects are not supported\n*   Allowed values are strings, numbers, booleans, and null\n*   Event name, key, and values must be no longer than 255 characters each\n\nIn scenarios such as when a user signs up or makes a purchase, it's more useful to track an event on the server-side. For this, you can use the `track` function on API routes or server actions.\n\nTo set up server-side events:\n\n1.  Make sure you have `@vercel/analytics` version 1.1.0 or later [installed](https://vercel.com/docs/analytics/quickstart#add-@vercel/analytics-to-your-project)\n2.  Import `{ track }` from `@vercel/analytics/server`\n3.  Use the `track` function in your API routes or server actions\n4.  Pass in a string representing the event name as the first argument to the `track` function. You can also pass [custom data](#tracking-an-event-with-custom-data) as the second argument\n\nFor example, if you want to track a purchase event:\n\n```\n'use server';\nimport { track } from '@vercel/analytics/server';\n \nexport async function purchase() {\n  await track('Item purchased', {\n    quantity: 1,\n  });\n}\n```",
  "title": "Tracking custom events",
  "description": "Learn how to send custom analytics events from your application.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/vercel-toolbar/in-production-and-localhost",
  "markdown": "# Add the Vercel Toolbar to local and production environments\n\n### Add the toolbar to your local environment\n\nLearn how to use the Vercel Toolbar in your local environment.",
  "title": "Add the Vercel Toolbar to local and production environments",
  "description": "Learn how to use the Vercel Toolbar in production and local environments.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/interaction-timing-tool",
  "markdown": "# Interaction Timing Tool\n\nThe interaction timing tool allows you to inspect in detail each interaction's latency and get notified for interactions taking >200ms.\n\nAs you navigate your site, the interaction timing tool allows you to inspect in detail each interaction's latency and get notified with toasts for interactions taking > 200ms. This can help you ensure your site's [Interaction to Next Paint (INP)](https://vercel.com/guides/first-input-delay-vs-interaction-to-next-paint#interaction-to-next-paint-(inp)) (a Core Web Vitals) has a good score.\n\nTo access the interaction timing tool:\n\n1.  Open the Command Menu\n2.  Select the Interaction Timing option. If any interaction has been detected on the page, a badge will display next to the option. The number inside the badge is the current INP\n3.  The Interaction Timing popover will open on the right side of the screen. As you navigate your site, each interaction will appear in this panel. Mouse over the interaction timeline to understand how the duration of input delay, processing (event handlers), and rendering are affecting the interaction's latency\n\nTo change preferences for the interaction timing tool:\n\n1.  Open the Command Menu\n2.  Select the Preferences option\n3.  Select your desired setting for Measure Interaction Timing\n    *   On will show the toasts for interactions taking >200ms\n    *   On (Silent) will not show toasts, but will still track interaction timing and display it in the interaction timing side panel when opened\n    *   Off will turn off tracking for interaction timing\n\nLast updated on\n\nJuly 12, 2024\n\n* * *",
  "title": "Interaction Timing Tool",
  "description": "The interaction timing tool allows you to inspect in detail each interaction's latency and get notified for interactions taking >200ms.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration",
  "markdown": "# Workflow\n\nThese tools help maintain consistent project standards and foster collaboration with both internal and external stakeholders.\n\nLeaving comments on deployments allows team members to discuss changes, provide feedback, and make suggestions directly on deployment previews, improving the communication process and reducing the risk of miscommunication.\n\nLearn how to enable seamless communication and collaboration within your team and with external collaborators.\n\nEdit Mode allows developers and non-technical team members to bridge the gap between content editing on websites and headless CMSs, reducing the need for back-and-forth communication and speeding up content updates.\n\nLearn to use Edit Mode for streamlined content editing.\n\nVercel's Draft Mode enables you to view your unpublished headless CMS content on your site before publishing it.\n\nView and override your application's feature flags from the Vercel Toolbar.\n\nCompatible with all providers, including LaunchDarkly, Optimizely, Statsig, Hypertune, Split, and custom flag setups\n\nLearn how to see and override feature flags in your applications.\n\nConformance enforces best practices and maintains consistency across projects, making it easier for developers to work together and ensures a high standard of code quality.\n\nLearn how to use Conformance to maintain consistency in your projects and adhere to best practices.\n\nCode Owners helps define responsibility for code and access control within Vercel projects, ensuring a smooth and organized development process, and promoting accountability among team members.\n\nLearn how to use Code Owners for improved code management.",
  "title": "Workflow",
  "description": "The following Vercel features allow your team to iterate quickly by streamlining content editing, simplifying feedback-loops, and promoting effective communication.\n",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/comments/using-comments",
  "markdown": "# Using Comments with Preview Deployments\n\nYou must be logged in to create a comment. You can press `c` to enable the comment placement cursor.\n\nAlternatively, select the speech bubble button in the comments toolbar. You can then select a location to place your comment with your cursor.\n\nYou can use `@` to mention team members and alert them to your comment. For example, you might want to request Jennifer's input by writing \"Hey @Jennifer, how do you feel about this?\"\n\n![A comment using the @ symbol to mention someone.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fcomment-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A comment using the @ symbol to mention someone.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fcomment-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA comment using the @ symbol to mention someone.\n\nYou can add emojis by entering `:` (the colon symbol) into your comment input box, then entering the name of the emoji. For example, add a smile by entering `:smile:`. As you enter the name of the emoji you want, suggestions will be offered in a popup modal above the input box. You can select one of the suggestions with your cursor.\n\n![Emoji suggestions appear as you type.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Femojis-light.png&w=640&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Emoji suggestions appear as you type.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Femojis-dark.png&w=640&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nEmoji suggestions appear as you type.\n\nTo add a reaction, select the emoji icon to the right of the name of the commenter whose comment you want to react to. You can then search for the emoji you want to react with.\n\n![A comment with reactions.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Freaction-screenshot-light.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A comment with reactions.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Freaction-screenshot-dark.png&w=828&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA comment with reactions.\n\nCustom emoji from your Slack organization are supported when you integrate the\n\n[\n\nVercel Slack app\n\n](https://vercel.com/docs/workflow-collaboration/comments/integrations#use-the-vercel-slack-app)\n\n.\n\nYou can add screenshots to your comments with Vercel's Chrome extension. Access the Chrome extension in [the preferences menu](https://vercel.com/docs/workflow-collaboration/vercel-toolbar#setting-preferences).\n\nMarkdown is a markup language that allows you to format text, and you can use it to make your comments more readable and visually pleasing.\n\nSupported formatting includes:\n\n| Command | Keyboard Shortcut (Windows) | Keyboard Shortcut (Mac) | Example Input | Example Output |\n| --- | --- | --- | --- | --- |\n| Bold | `Ctrl+B` | `⌘+B` | `*Bold text*` | Bold text |\n| Italic | `Ctrl+I` | `⌘+I` | `_Italic text_` | _Italic text_ |\n| Strikethrough | `Ctrl+Shift+X` | `⌘+⇧+X` | `~Strikethrough text~` | ~Strikethrough text~ |\n| Code-formatted text | `Ctrl+E` | `⌘+E` | `` `Code-formatted text` `` | `Code-formatted text` |\n| Bulleted list | `-` or `*` | `-` or `*` | `- Item 1 - Item 2` | • Item 1 • Item 2 |\n| Numbered list | `1.` | `1.` | `1. Item 1 2. Item 2` | 1\\. Item 1 2. Item 2 |\n| Embedded links | N/A | N/A | `[A link](https://example.com)` | [A link](#supported-markdown-formatting-options) |\n| Quotes | `>` | `>` | `> Quote` | │ Quote |\n\nEvery new comment placed on a page begins a thread. The comment author, PR owner, and anyone participating in the conversation will see the thread listed in their Inbox.\n\nThe Inbox can be opened by selecting the button in the comments menu bar. A small red badge will indicate how many new notifications there are, if any have been added since you last checked. You can navigate between threads using the up and down arrows near the top of the inbox.\n\nTo check notifications within a preview deployment, select the Inbox button on the comments menu bar. You can move the Inbox to the left or right side of the screen by selecting the top of the Inbox modal and dragging it.\n\nYou can filter threads by selecting the branch name at the top of the Inbox. A modal will appear, with the following filter options:\n\n*   Filter by page: Show comments across all pages in the inbox, or only those that appear on the page you're currently viewing\n*   Filter by status: Show comments in the inbox regardless of status, or either show resolved or unresolved\n\nYou can copy a link to a comment in two ways:\n\n*   Select a comment in the Inbox. When you do, the URL will update with an anchor to the selected comment\n*   Select the ellipses (three dots) icon to the right of the commenter's name, then select the Copy Link option in the menu that pops up",
  "title": "Using Comments with Preview Deployments",
  "description": "This guide will help you get started with using Comments with your Vercel Preview Deployments.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/layout-shift-tool",
  "markdown": "# Layout Shift Tool\n\nThe layout shift tool gives you insight into any elements that may cause layout shifts on the page. The cause for a layout shift could be many things:\n\n*   Elements that change in height or width\n*   Custom font loading\n*   Media embeds (images, iframes, videos, etc.) that do not have set dimensions\n*   Dynamic content that's injected at runtime\n*   Animations that affect layout\n\nLayout shifts play a part in [Core Web Vitals](https://vercel.com/docs/speed-insights#core-web-vitals-explained) and contribute to [Speed Insights](https://vercel.com/docs/speed-insights#core-web-vitals-explained) scores. With the layout shift tool, you can see which elements are contributing to a layout shift and by how much.\n\nTo access the layout shift tool:\n\n1.  Open the Command Menu\n2.  Select the Layout Shifts option. If there are layout shifts detected on the page, a badge will display next to the option. The number inside the badge details the number of shifts detected\n3.  The Layout Shifts popover will open on the right side of the screen. Here you can filter, inspect, and replay any detected layout shifts\n\nEach shift details its impact, the responsible element, and a description of the shift if available. For example, \"became taller when its text changed and shifted another element\". Hovering over a layout shift will highlight the affected element. You can also replay layout shifts to get a better understanding of what's happening.\n\nYou can replay a layout shift by either:\n\n*   Double-clicking it\n*   Selecting it and using the Replay selected shift button\n\nYou can also select more than one shift and play them at the same time. You may want to do this to see the combined effect of element shifts on the page.\n\nWhen you replay layout shifts, the Vercel Toolbar will become your stop button. Press this to stop replaying layout shifts. Alternatively, press the  esc key.\n\nYou can also disable layout shift detection on a per element basis. You can do this by adding a `data-allow-shifts` attribute to an element. This will affect the element and its descendants.\n\nTo disable the layout shift tool completely:\n\n1.  Open the Command Menu\n2.  Select Preferences\n3.  Toggle the setting for Layout Shift Detection",
  "title": "Layout Shift Tool",
  "description": "The layout shift tool gives you insight into any elements that may cause layout shifts on the page.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/accessibility-audit-tool",
  "markdown": "# Accessibility Audit Tool\n\nThe accessibility audit tool automatically checks the [Web Content Accessibility Guidelines 2.1](https://www.w3.org/TR/WCAG21/) level A and AA rules, grouping them by impact as defined by [deque axe](https://github.com/dequelabs/axe-core/blob/develop/doc/rule-descriptions.md#wcag-21-level-a--aa-rules), and runs in the background on [all environments the toolbar and added to](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/in-production-and-localhost).\n\nTo access the accessibility audit tool:\n\n1.  From the Toolbar, [open the command menu](https://vercel.com/docs/workflow-collaboration/vercel-toolbar#using-the-command-menu) using `cmd+shift+k` or `ctrl+shift+k` on windows\n2.  Select the Accessibility Audit option. If there are accessibility issues detected on the page, a badge will display next to the option. The number inside the badge details the number of issues detected\n3.  The Accessibility panel will open on the right side of the screen. Here you can filter by All, Critical, Serious, Moderate, and Minor issues\n\nThe accessibility audit tool is enabled by default. To disable it:\n\n1.  Open the Preferences panel by selecting the toolbar menu icon, then scrolling down to the Preferences section\n2.  Toggle the Accessibility Audit option to enable or disable the tool\n\nTo inspect an accessibility issue select the filter option you want to inspect. A list of issues will are displayed as dropdowns. You can select each dropdown to view the issue details, including an explanation of the issue and a link to the relevant WCAG guideline. Hovering over the failing elements markup will highlight the element on the page, while clicking on the element will log it to the devtools console.\n\n![Using the Accessibility Audit Tool](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1707989277%2Ffront%2Fdocs%2Fvercel-toolbar%2Faccessibility-audit-panel-light.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![Using the Accessibility Audit Tool](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1707989278%2Ffront%2Fdocs%2Fvercel-toolbar%2Faccessibility-audit-panel-dark.png&w=1080&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nUsing the Accessibility Audit Tool\n\nBy default the accessibility audit tool will log issues on page load. To test ephemeral states, such as hover or focus, you can record issues by interacting with the page. To record issues select the Start Recording button in the Accessibility panel. This will start recording issues as you interact with the page. To stop recording, select the Stop Recording button. Recording persists for your session, so you can refresh the page, or navigate to a new page and it will continue to record issues while your tab is active.",
  "title": "Accessibility Audit Tool",
  "description": "Learn how to use the Accessibility Audit Tool to automatically check the Web Content Accessibility Guidelines 2.1 level A and AA rules.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/comments/managing-comments",
  "markdown": "# Managing Comments on Preview Deployments\n\nYou can resolve comments by selecting the ☐ Resolve checkbox that appears under each thread or comment. You can access this checkbox by selecting a comment wherever it appears on the page, or by selecting the thread associated with the comment in the Inbox.\n\nParticipants in a thread will receive a notification when that thread is resolved.\n\nBy default, the activity within a comment thread triggers a notification for all participants in the thread. PR owners will also receive notifications for all newly-created comment threads.\n\nActivities that trigger a notification include:\n\n*   Someone creating a comment thread\n*   Someone replying in a comment thread you have enabled notifications for or participated in\n*   Someone resolving a comment thread you're receiving notifications for\n\nWhenever there's new activity within a comment thread, you'll receive a new notification. Notifications can be sent to:\n\n*   [Your Vercel Dashboard](#dashboard-notifications)\n*   [Email](#email)\n*   [Slack](#slack)\n\nTo customize notifications for a deployment:\n\n1.  Visit the deployment\n2.  Log into the Vercel toolbar\n3.  Select the Menu button (☰)\n4.  Select Preferences (⚙)\n5.  In the dropdown beside Notifications, select:\n    *   Never: To disable notifications\n    *   All: To enable notifications\n    *   Replies and Mentions: To enable only some notifications\n\nYou can manage notifications for threads in the Inbox:\n\n1.  Select the three dots (ellipses) near the top of the first comment in a thread\n2.  Select Unfollow to mute the thread, or Follow to subscribe to the thread\n\nWhile logged into Vercel, select the notification bell icon and select the Comments tab to see new Comments notifications. To view specific comments, you can:\n\n*   Filter based on:\n    *   Author\n    *   Status\n    *   Project\n    *   Page\n    *   Branch\n*   Search: Search for comments containing specific text\n\nComments left on pages with query params in the URL may not appear on the page when you visit the base URL. Filter by page and search with a `*` wildcard to see all pages with similar URLs. For example, you might search for `/docs/conformance/rules/req*`.\n\nYou can also resolve comments from your notifications.\n\nTo reply to a comment, or view the deployment it was made on, select it and select the link to the deployment.\n\nEmail notifications will be sent to the email address associated with your Vercel account. Multiple notifications within a short period will be batched into a single email.\n\nWhen you configure Vercel's Slack integration, comment threads on linked branches will create Slack threads. New activity on Slack or in the comment thread will be reflected on both platforms. See [our Slack integration docs](https://vercel.com/docs/workflow-collaboration/comments/integrations#comment-in-slack) to learn more.\n\nSometimes, issues appear on a webpage for certain browsers and devices, but not for others. It's also possible for users to leave comments on a preview while viewing an outdated deployment.\n\nTo get around this issue, you can select the screen icon beside a commenter's name to copy their session info to your clipboard. Doing so will yield a JSON object similar to the following:\n\n```\n{\n  \"browserInfo\": {\n    \"ua\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 9_10_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/106.0.0.0 Safari/537.36\",\n    \"browser\": {\n      \"name\": \"Chrome\",\n      \"version\": \"106.0.0.0\",\n      \"major\": \"106\"\n    },\n    \"engine\": {\n      \"name\": \"Blink\",\n      \"version\": \"106.0.0.0\"\n    },\n    \"os\": {\n      \"name\": \"Mac OS\",\n      \"version\": \"10.15.7\"\n    },\n    \"device\": {},\n    \"cpu\": {}\n  },\n  \"screenWidth\": 1619,\n  \"screenHeight\": 1284,\n  \"devicePixelRatio\": 1.7999999523162842,\n  \"deploymentUrl\": \"vercel-site-7p6d5t8vq.vercel.sh\"\n}\n```\n\nOn desktop, you can hover your cursor over a comment's timestamp to view less detailed session information at a glance, including:\n\n*   Browser name and version\n*   Window dimensions in pixels\n*   Device pixel ratio\n*   Which deployment they were viewing\n\n![A comment's browsing session information.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fdebug-info-light.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)![A comment's browsing session information.](https://vercel.com/_next/image?url=https%3A%2F%2Fassets.vercel.com%2Fimage%2Fupload%2Fv1689795055%2Fdocs-assets%2Fstatic%2Fdocs%2Fconcepts%2Fdeployments%2Fpreview-deployments%2Fcomments%2Fdebug-info-dark.png&w=1920&q=75&dpl=dpl_6RGLzPaeBNhuWHRxN1xTYtAhKUa3)\n\nA comment's browsing session information.",
  "title": "Managing Comments on Preview Deployments",
  "description": "Learn how to manage Comments on your Preview Deployments from Team members and invited collaborators.",
  "languageCode": "en"
},
{
  "url": "https://vercel.com/docs/workflow-collaboration/feature-flags/flags-pattern-sveltekit",
  "markdown": "# Using flags in SvelteKit\n\nThe `@vercel/flags` package exposes the `@vercel/flags/sveltekit` submodule, which implements the [Feature Flags pattern](https://vercel.com/docs/workflow-collaboration/feature-flags/feature-flags-pattern).\n\n1.  Install the Vercel CLI using the following command:\n    \n2.  1.  Set up your SvelteKit application:\n        \n        ```\n        npm create svelte@latest sveltekit-flags-example\n        cd sveltekit-flags-example\n        npm install\n        npm run dev\n        ```\n        \n        This will prompt you with a number of questions to create your app. Choose the following options:\n        *   _Choose demo app_\n        *   _Choose TypeScript_\n        *   _Choose Prettier_\n    2.  At this stage the project only exists locally and not on Vercel. Use the following command to link it to project on Vercel:\n    3.  Add `FLAGS_SECRET` environment variable. Run this command to create a secret:\n        \n        ```\n        node -e \"console.log(crypto.randomBytes(32).toString('base64url'))\"\n        ```\n        \n        Then store the secret as the `FLAGS_SECRET` environment variable, and select all environments when prompted.\n    4.  Finally, pull any env vars from your project on Vercel locally\n3.  1.  Install the `@vercel/toolbar` package:\n    2.  In your `vite.config.ts` file add toolbar plugin for vite:\n        \n        ```\n        import { sveltekit } from '@sveltejs/kit/vite';\n        import { defineConfig } from 'vite';\n        import { vercelToolbar } from '@vercel/toolbar/plugins/vite';\n         \n        export default defineConfig({\n          plugins: [sveltekit(), vercelToolbar()],\n        });\n        ```\n        \n    3.  Next render the toolbar in your layout so that it's visible for your visitors. This renders the toolbar for all visitors. In production you may want to [render it for team members only](https://vercel.com/docs/workflow-collaboration/vercel-toolbar/managing-toolbar):\n        \n        ```\n        <script lang=\"ts\">\n          import type { LayoutData } from './$types';\n         \n          import { mountVercelToolbar } from '@vercel/toolbar/vite';\n          import { onMount } from 'svelte';\n         \n          onMount(() => mountVercelToolbar());\n         \n          export let data: LayoutData;\n        </script>\n         \n        <main>\n          {data.title}\n          <!-- +page.svelte is rendered in this <slot> -->\n          <slot />\n        </main>\n        ```\n        \n    4.  Run your application locally to check that things are working: 