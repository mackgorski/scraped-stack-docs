[
  {
    "url": "https://tailwindcss.com/docs/ring-offset-color",
    "markdown": "# Ring Offset Color - Tailwind CSS\n\nring-offset-inherit--tw-ring-offset-color: inherit; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-current--tw-ring-offset-color: currentColor; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-transparent--tw-ring-offset-color: transparent; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-black--tw-ring-offset-color: #000; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-white--tw-ring-offset-color: #fff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-50--tw-ring-offset-color: #f8fafc; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-100--tw-ring-offset-color: #f1f5f9; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-200--tw-ring-offset-color: #e2e8f0; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-300--tw-ring-offset-color: #cbd5e1; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-400--tw-ring-offset-color: #94a3b8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-500--tw-ring-offset-color: #64748b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-600--tw-ring-offset-color: #475569; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-700--tw-ring-offset-color: #334155; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-800--tw-ring-offset-color: #1e293b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-900--tw-ring-offset-color: #0f172a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-slate-950--tw-ring-offset-color: #020617; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-50--tw-ring-offset-color: #f9fafb; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-100--tw-ring-offset-color: #f3f4f6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-200--tw-ring-offset-color: #e5e7eb; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-300--tw-ring-offset-color: #d1d5db; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-400--tw-ring-offset-color: #9ca3af; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-500--tw-ring-offset-color: #6b7280; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-600--tw-ring-offset-color: #4b5563; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-700--tw-ring-offset-color: #374151; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-800--tw-ring-offset-color: #1f2937; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-900--tw-ring-offset-color: #111827; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-gray-950--tw-ring-offset-color: #030712; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-50--tw-ring-offset-color: #fafafa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-100--tw-ring-offset-color: #f4f4f5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-200--tw-ring-offset-color: #e4e4e7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-300--tw-ring-offset-color: #d4d4d8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-400--tw-ring-offset-color: #a1a1aa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-500--tw-ring-offset-color: #71717a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-600--tw-ring-offset-color: #52525b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-700--tw-ring-offset-color: #3f3f46; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-800--tw-ring-offset-color: #27272a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-900--tw-ring-offset-color: #18181b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-zinc-950--tw-ring-offset-color: #09090b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-50--tw-ring-offset-color: #fafafa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-100--tw-ring-offset-color: #f5f5f5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-200--tw-ring-offset-color: #e5e5e5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-300--tw-ring-offset-color: #d4d4d4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-400--tw-ring-offset-color: #a3a3a3; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-500--tw-ring-offset-color: #737373; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-600--tw-ring-offset-color: #525252; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-700--tw-ring-offset-color: #404040; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-800--tw-ring-offset-color: #262626; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-900--tw-ring-offset-color: #171717; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-neutral-950--tw-ring-offset-color: #0a0a0a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-50--tw-ring-offset-color: #fafaf9; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-100--tw-ring-offset-color: #f5f5f4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-200--tw-ring-offset-color: #e7e5e4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-300--tw-ring-offset-color: #d6d3d1; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-400--tw-ring-offset-color: #a8a29e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-500--tw-ring-offset-color: #78716c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-600--tw-ring-offset-color: #57534e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-700--tw-ring-offset-color: #44403c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-800--tw-ring-offset-color: #292524; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-900--tw-ring-offset-color: #1c1917; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-stone-950--tw-ring-offset-color: #0c0a09; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-50--tw-ring-offset-color: #fef2f2; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-100--tw-ring-offset-color: #fee2e2; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-200--tw-ring-offset-color: #fecaca; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-300--tw-ring-offset-color: #fca5a5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-400--tw-ring-offset-color: #f87171; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-500--tw-ring-offset-color: #ef4444; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-600--tw-ring-offset-color: #dc2626; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-700--tw-ring-offset-color: #b91c1c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-800--tw-ring-offset-color: #991b1b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-900--tw-ring-offset-color: #7f1d1d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-red-950--tw-ring-offset-color: #450a0a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-50--tw-ring-offset-color: #fff7ed; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-100--tw-ring-offset-color: #ffedd5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-200--tw-ring-offset-color: #fed7aa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-300--tw-ring-offset-color: #fdba74; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-400--tw-ring-offset-color: #fb923c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-500--tw-ring-offset-color: #f97316; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-600--tw-ring-offset-color: #ea580c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-700--tw-ring-offset-color: #c2410c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-800--tw-ring-offset-color: #9a3412; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-900--tw-ring-offset-color: #7c2d12; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-orange-950--tw-ring-offset-color: #431407; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-50--tw-ring-offset-color: #fffbeb; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-100--tw-ring-offset-color: #fef3c7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-200--tw-ring-offset-color: #fde68a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-300--tw-ring-offset-color: #fcd34d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-400--tw-ring-offset-color: #fbbf24; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-500--tw-ring-offset-color: #f59e0b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-600--tw-ring-offset-color: #d97706; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-700--tw-ring-offset-color: #b45309; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-800--tw-ring-offset-color: #92400e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-900--tw-ring-offset-color: #78350f; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-amber-950--tw-ring-offset-color: #451a03; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-50--tw-ring-offset-color: #fefce8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-100--tw-ring-offset-color: #fef9c3; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-200--tw-ring-offset-color: #fef08a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-300--tw-ring-offset-color: #fde047; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-400--tw-ring-offset-color: #facc15; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-500--tw-ring-offset-color: #eab308; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-600--tw-ring-offset-color: #ca8a04; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-700--tw-ring-offset-color: #a16207; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-800--tw-ring-offset-color: #854d0e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-900--tw-ring-offset-color: #713f12; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-yellow-950--tw-ring-offset-color: #422006; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-50--tw-ring-offset-color: #f7fee7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-100--tw-ring-offset-color: #ecfccb; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-200--tw-ring-offset-color: #d9f99d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-300--tw-ring-offset-color: #bef264; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-400--tw-ring-offset-color: #a3e635; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-500--tw-ring-offset-color: #84cc16; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-600--tw-ring-offset-color: #65a30d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-700--tw-ring-offset-color: #4d7c0f; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-800--tw-ring-offset-color: #3f6212; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-900--tw-ring-offset-color: #365314; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-lime-950--tw-ring-offset-color: #1a2e05; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-50--tw-ring-offset-color: #f0fdf4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-100--tw-ring-offset-color: #dcfce7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-200--tw-ring-offset-color: #bbf7d0; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-300--tw-ring-offset-color: #86efac; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-400--tw-ring-offset-color: #4ade80; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-500--tw-ring-offset-color: #22c55e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-600--tw-ring-offset-color: #16a34a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-700--tw-ring-offset-color: #15803d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-800--tw-ring-offset-color: #166534; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-900--tw-ring-offset-color: #14532d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-green-950--tw-ring-offset-color: #052e16; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-50--tw-ring-offset-color: #ecfdf5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-100--tw-ring-offset-color: #d1fae5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-200--tw-ring-offset-color: #a7f3d0; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-300--tw-ring-offset-color: #6ee7b7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-400--tw-ring-offset-color: #34d399; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-500--tw-ring-offset-color: #10b981; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-600--tw-ring-offset-color: #059669; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-700--tw-ring-offset-color: #047857; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-800--tw-ring-offset-color: #065f46; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-900--tw-ring-offset-color: #064e3b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-emerald-950--tw-ring-offset-color: #022c22; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-50--tw-ring-offset-color: #f0fdfa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-100--tw-ring-offset-color: #ccfbf1; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-200--tw-ring-offset-color: #99f6e4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-300--tw-ring-offset-color: #5eead4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-400--tw-ring-offset-color: #2dd4bf; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-500--tw-ring-offset-color: #14b8a6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-600--tw-ring-offset-color: #0d9488; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-700--tw-ring-offset-color: #0f766e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-800--tw-ring-offset-color: #115e59; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-900--tw-ring-offset-color: #134e4a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-teal-950--tw-ring-offset-color: #042f2e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-50--tw-ring-offset-color: #ecfeff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-100--tw-ring-offset-color: #cffafe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-200--tw-ring-offset-color: #a5f3fc; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-300--tw-ring-offset-color: #67e8f9; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-400--tw-ring-offset-color: #22d3ee; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-500--tw-ring-offset-color: #06b6d4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-600--tw-ring-offset-color: #0891b2; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-700--tw-ring-offset-color: #0e7490; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-800--tw-ring-offset-color: #155e75; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-900--tw-ring-offset-color: #164e63; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-cyan-950--tw-ring-offset-color: #083344; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-50--tw-ring-offset-color: #f0f9ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-100--tw-ring-offset-color: #e0f2fe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-200--tw-ring-offset-color: #bae6fd; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-300--tw-ring-offset-color: #7dd3fc; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-400--tw-ring-offset-color: #38bdf8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-500--tw-ring-offset-color: #0ea5e9; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-600--tw-ring-offset-color: #0284c7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-700--tw-ring-offset-color: #0369a1; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-800--tw-ring-offset-color: #075985; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-900--tw-ring-offset-color: #0c4a6e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-sky-950--tw-ring-offset-color: #082f49; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-50--tw-ring-offset-color: #eff6ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-100--tw-ring-offset-color: #dbeafe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-200--tw-ring-offset-color: #bfdbfe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-300--tw-ring-offset-color: #93c5fd; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-400--tw-ring-offset-color: #60a5fa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-500--tw-ring-offset-color: #3b82f6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-600--tw-ring-offset-color: #2563eb; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-700--tw-ring-offset-color: #1d4ed8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-800--tw-ring-offset-color: #1e40af; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-900--tw-ring-offset-color: #1e3a8a; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-blue-950--tw-ring-offset-color: #172554; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-50--tw-ring-offset-color: #eef2ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-100--tw-ring-offset-color: #e0e7ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-200--tw-ring-offset-color: #c7d2fe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-300--tw-ring-offset-color: #a5b4fc; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-400--tw-ring-offset-color: #818cf8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-500--tw-ring-offset-color: #6366f1; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-600--tw-ring-offset-color: #4f46e5; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-700--tw-ring-offset-color: #4338ca; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-800--tw-ring-offset-color: #3730a3; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-900--tw-ring-offset-color: #312e81; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-indigo-950--tw-ring-offset-color: #1e1b4b; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-50--tw-ring-offset-color: #f5f3ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-100--tw-ring-offset-color: #ede9fe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-200--tw-ring-offset-color: #ddd6fe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-300--tw-ring-offset-color: #c4b5fd; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-400--tw-ring-offset-color: #a78bfa; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-500--tw-ring-offset-color: #8b5cf6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-600--tw-ring-offset-color: #7c3aed; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-700--tw-ring-offset-color: #6d28d9; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-800--tw-ring-offset-color: #5b21b6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-900--tw-ring-offset-color: #4c1d95; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-violet-950--tw-ring-offset-color: #2e1065; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-50--tw-ring-offset-color: #faf5ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-100--tw-ring-offset-color: #f3e8ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-200--tw-ring-offset-color: #e9d5ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-300--tw-ring-offset-color: #d8b4fe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-400--tw-ring-offset-color: #c084fc; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-500--tw-ring-offset-color: #a855f7; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-600--tw-ring-offset-color: #9333ea; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-700--tw-ring-offset-color: #7e22ce; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-800--tw-ring-offset-color: #6b21a8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-900--tw-ring-offset-color: #581c87; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-purple-950--tw-ring-offset-color: #3b0764; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-50--tw-ring-offset-color: #fdf4ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-100--tw-ring-offset-color: #fae8ff; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-200--tw-ring-offset-color: #f5d0fe; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-300--tw-ring-offset-color: #f0abfc; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-400--tw-ring-offset-color: #e879f9; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-500--tw-ring-offset-color: #d946ef; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-600--tw-ring-offset-color: #c026d3; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-700--tw-ring-offset-color: #a21caf; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-800--tw-ring-offset-color: #86198f; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-900--tw-ring-offset-color: #701a75; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-fuchsia-950--tw-ring-offset-color: #4a044e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-50--tw-ring-offset-color: #fdf2f8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-100--tw-ring-offset-color: #fce7f3; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-200--tw-ring-offset-color: #fbcfe8; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-300--tw-ring-offset-color: #f9a8d4; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-400--tw-ring-offset-color: #f472b6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-500--tw-ring-offset-color: #ec4899; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-600--tw-ring-offset-color: #db2777; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-700--tw-ring-offset-color: #be185d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-800--tw-ring-offset-color: #9d174d; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-900--tw-ring-offset-color: #831843; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-pink-950--tw-ring-offset-color: #500724; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-50--tw-ring-offset-color: #fff1f2; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-100--tw-ring-offset-color: #ffe4e6; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-200--tw-ring-offset-color: #fecdd3; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-300--tw-ring-offset-color: #fda4af; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-400--tw-ring-offset-color: #fb7185; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-500--tw-ring-offset-color: #f43f5e; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-600--tw-ring-offset-color: #e11d48; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-700--tw-ring-offset-color: #be123c; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-800--tw-ring-offset-color: #9f1239; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-900--tw-ring-offset-color: #881337; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow); ring-offset-rose-950--tw-ring-offset-color: #4c0519; box-shadow: 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color), var(--tw-ring-shadow);",
    "title": "Ring Offset Color - Tailwind CSS",
    "description": "Utilities for setting the color of outline ring offsets.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/caret-color",
    "markdown": "# Caret Color - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Setting the caret color](#setting-the-caret-color)\n\nUse the `caret-*` utilities to change the color of the text input cursor.\n\nFocus the textarea to see the new caret color\n\n```\n<textarea class=\"caret-pink-500 ...\"></textarea>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `focus:caret-indigo-500` to only apply the `caret-indigo-500` utility on focus.\n\n```\n<textarea class=\"caret-blue-500 focus:caret-indigo-500\"></textarea>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:caret-indigo-500` to apply the `caret-indigo-500` utility at only medium screen sizes and above.\n\n```\n<textarea class=\"caret-blue-500 md:caret-indigo-500\"></textarea>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind makes the entire [default color palette](https://tailwindcss.com/docs/customizing-colors#default-color-palette) available as caret colors. You can [customize your color palette](https://tailwindcss.com/docs/colors#customizing) by editing `theme.colors` or `theme.extend.colors` in your `tailwind.config.js` file.\n\nAlternatively, you can customize just your caret colors by editing `theme.caretColor` or `theme.extend.caretColor` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `caret-color` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<textarea class=\"caret-[#50d71e]\"></textarea>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Caret Color - Tailwind CSS",
    "description": "Utilities for controlling the color of the text input cursor.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/pointer-events",
    "markdown": "# Pointer Events - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Controlling pointer event behavior](#controlling-pointer-event-behavior)\n\nUse `pointer-events-auto` to revert to the default browser behavior for pointer events (like `:hover` and `click`).\n\nUse `pointer-events-none` to make an element ignore pointer events. The pointer events will still trigger on child elements and pass-through to elements that are “beneath” the target.\n\nTry clicking the search icons to see the expected behaviour\n\n```\n<div class=\"relative ...\">\n  <div class=\"absolute pointer-events-auto ...\">\n    <svg class=\"absolute text-slate-400 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n    </svg>\n  </div>\n  <input type=\"text\" placeholder=\"Search\" class=\"...\">\n</div>\n\n<div class=\"relative ...\">\n  <div class=\"absolute pointer-events-none ...\">\n    <svg class=\"absolute text-slate-400 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n      <path fill-rule=\"evenodd\" d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\" clip-rule=\"evenodd\" />\n    </svg>\n  </div>\n  <input type=\"text\" placeholder=\"Search\" class=\"...\">\n</div>\n```\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `focus:pointer-events-auto` to only apply the `pointer-events-auto` utility on focus.\n\n```\n<div class=\"pointer-events-none focus:pointer-events-auto\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:pointer-events-auto` to apply the `pointer-events-auto` utility at only medium screen sizes and above.\n\n```\n<div class=\"pointer-events-none md:pointer-events-auto\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).",
    "title": "Pointer Events - Tailwind CSS",
    "description": "Utilities for controlling whether an element responds to pointer events.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/resize",
    "markdown": "# Resize - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Resizing in all directions](#resizing-in-all-directions)\n\nUse `resize` to make an element horizontally and vertically resizable.\n\nDrag the textarea handle in the demo to see the expected behaviour\n\n```\n<textarea class=\"resize rounded-md\"></textarea>\n```\n\n### [​Resizing vertically](#resizing-vertically)\n\nUse `resize-y` to make an element vertically resizable.\n\nDrag the textarea handle in the demo to see the expected behaviour\n\n```\n<textarea class=\"resize-y rounded-md\"></textarea>\n```\n\n### [​Resizing horizontally](#resizing-horizontally)\n\nUse `resize-x` to make an element horizontally resizable.\n\nDrag the textarea handle in the demo to see the expected behaviour\n\n```\n<textarea class=\"resize-x rounded-md\"></textarea>\n```\n\n### [​Preventing resizing](#preventing-resizing)\n\nUse `resize-none` to prevent an element from being resizable.\n\nNotice that the textarea handle is gone\n\n```\n<textarea class=\"resize-none rounded-md\"></textarea>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:resize` to only apply the `resize` utility on hover.\n\n```\n<div class=\"resize-none hover:resize\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:resize` to apply the `resize` utility at only medium screen sizes and above.\n\n```\n<div class=\"resize-none md:resize\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).",
    "title": "Resize - Tailwind CSS",
    "description": "Utilities for controlling how an element can be resized.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/box-shadow-color",
    "markdown": "# Box Shadow Color - Tailwind CSS\n\nshadow-inherit--tw-shadow-color: inherit; shadow-current--tw-shadow-color: currentColor; shadow-transparent--tw-shadow-color: transparent; shadow-black--tw-shadow-color: #000; shadow-white--tw-shadow-color: #fff; shadow-slate-50--tw-shadow-color: #f8fafc; shadow-slate-100--tw-shadow-color: #f1f5f9; shadow-slate-200--tw-shadow-color: #e2e8f0; shadow-slate-300--tw-shadow-color: #cbd5e1; shadow-slate-400--tw-shadow-color: #94a3b8; shadow-slate-500--tw-shadow-color: #64748b; shadow-slate-600--tw-shadow-color: #475569; shadow-slate-700--tw-shadow-color: #334155; shadow-slate-800--tw-shadow-color: #1e293b; shadow-slate-900--tw-shadow-color: #0f172a; shadow-slate-950--tw-shadow-color: #020617; shadow-gray-50--tw-shadow-color: #f9fafb; shadow-gray-100--tw-shadow-color: #f3f4f6; shadow-gray-200--tw-shadow-color: #e5e7eb; shadow-gray-300--tw-shadow-color: #d1d5db; shadow-gray-400--tw-shadow-color: #9ca3af; shadow-gray-500--tw-shadow-color: #6b7280; shadow-gray-600--tw-shadow-color: #4b5563; shadow-gray-700--tw-shadow-color: #374151; shadow-gray-800--tw-shadow-color: #1f2937; shadow-gray-900--tw-shadow-color: #111827; shadow-gray-950--tw-shadow-color: #030712; shadow-zinc-50--tw-shadow-color: #fafafa; shadow-zinc-100--tw-shadow-color: #f4f4f5; shadow-zinc-200--tw-shadow-color: #e4e4e7; shadow-zinc-300--tw-shadow-color: #d4d4d8; shadow-zinc-400--tw-shadow-color: #a1a1aa; shadow-zinc-500--tw-shadow-color: #71717a; shadow-zinc-600--tw-shadow-color: #52525b; shadow-zinc-700--tw-shadow-color: #3f3f46; shadow-zinc-800--tw-shadow-color: #27272a; shadow-zinc-900--tw-shadow-color: #18181b; shadow-zinc-950--tw-shadow-color: #09090b; shadow-neutral-50--tw-shadow-color: #fafafa; shadow-neutral-100--tw-shadow-color: #f5f5f5; shadow-neutral-200--tw-shadow-color: #e5e5e5; shadow-neutral-300--tw-shadow-color: #d4d4d4; shadow-neutral-400--tw-shadow-color: #a3a3a3; shadow-neutral-500--tw-shadow-color: #737373; shadow-neutral-600--tw-shadow-color: #525252; shadow-neutral-700--tw-shadow-color: #404040; shadow-neutral-800--tw-shadow-color: #262626; shadow-neutral-900--tw-shadow-color: #171717; shadow-neutral-950--tw-shadow-color: #0a0a0a; shadow-stone-50--tw-shadow-color: #fafaf9; shadow-stone-100--tw-shadow-color: #f5f5f4; shadow-stone-200--tw-shadow-color: #e7e5e4; shadow-stone-300--tw-shadow-color: #d6d3d1; shadow-stone-400--tw-shadow-color: #a8a29e; shadow-stone-500--tw-shadow-color: #78716c; shadow-stone-600--tw-shadow-color: #57534e; shadow-stone-700--tw-shadow-color: #44403c; shadow-stone-800--tw-shadow-color: #292524; shadow-stone-900--tw-shadow-color: #1c1917; shadow-stone-950--tw-shadow-color: #0c0a09; shadow-red-50--tw-shadow-color: #fef2f2; shadow-red-100--tw-shadow-color: #fee2e2; shadow-red-200--tw-shadow-color: #fecaca; shadow-red-300--tw-shadow-color: #fca5a5; shadow-red-400--tw-shadow-color: #f87171; shadow-red-500--tw-shadow-color: #ef4444; shadow-red-600--tw-shadow-color: #dc2626; shadow-red-700--tw-shadow-color: #b91c1c; shadow-red-800--tw-shadow-color: #991b1b; shadow-red-900--tw-shadow-color: #7f1d1d; shadow-red-950--tw-shadow-color: #450a0a; shadow-orange-50--tw-shadow-color: #fff7ed; shadow-orange-100--tw-shadow-color: #ffedd5; shadow-orange-200--tw-shadow-color: #fed7aa; shadow-orange-300--tw-shadow-color: #fdba74; shadow-orange-400--tw-shadow-color: #fb923c; shadow-orange-500--tw-shadow-color: #f97316; shadow-orange-600--tw-shadow-color: #ea580c; shadow-orange-700--tw-shadow-color: #c2410c; shadow-orange-800--tw-shadow-color: #9a3412; shadow-orange-900--tw-shadow-color: #7c2d12; shadow-orange-950--tw-shadow-color: #431407; shadow-amber-50--tw-shadow-color: #fffbeb; shadow-amber-100--tw-shadow-color: #fef3c7; shadow-amber-200--tw-shadow-color: #fde68a; shadow-amber-300--tw-shadow-color: #fcd34d; shadow-amber-400--tw-shadow-color: #fbbf24; shadow-amber-500--tw-shadow-color: #f59e0b; shadow-amber-600--tw-shadow-color: #d97706; shadow-amber-700--tw-shadow-color: #b45309; shadow-amber-800--tw-shadow-color: #92400e; shadow-amber-900--tw-shadow-color: #78350f; shadow-amber-950--tw-shadow-color: #451a03; shadow-yellow-50--tw-shadow-color: #fefce8; shadow-yellow-100--tw-shadow-color: #fef9c3; shadow-yellow-200--tw-shadow-color: #fef08a; shadow-yellow-300--tw-shadow-color: #fde047; shadow-yellow-400--tw-shadow-color: #facc15; shadow-yellow-500--tw-shadow-color: #eab308; shadow-yellow-600--tw-shadow-color: #ca8a04; shadow-yellow-700--tw-shadow-color: #a16207; shadow-yellow-800--tw-shadow-color: #854d0e; shadow-yellow-900--tw-shadow-color: #713f12; shadow-yellow-950--tw-shadow-color: #422006; shadow-lime-50--tw-shadow-color: #f7fee7; shadow-lime-100--tw-shadow-color: #ecfccb; shadow-lime-200--tw-shadow-color: #d9f99d; shadow-lime-300--tw-shadow-color: #bef264; shadow-lime-400--tw-shadow-color: #a3e635; shadow-lime-500--tw-shadow-color: #84cc16; shadow-lime-600--tw-shadow-color: #65a30d; shadow-lime-700--tw-shadow-color: #4d7c0f; shadow-lime-800--tw-shadow-color: #3f6212; shadow-lime-900--tw-shadow-color: #365314; shadow-lime-950--tw-shadow-color: #1a2e05; shadow-green-50--tw-shadow-color: #f0fdf4; shadow-green-100--tw-shadow-color: #dcfce7; shadow-green-200--tw-shadow-color: #bbf7d0; shadow-green-300--tw-shadow-color: #86efac; shadow-green-400--tw-shadow-color: #4ade80; shadow-green-500--tw-shadow-color: #22c55e; shadow-green-600--tw-shadow-color: #16a34a; shadow-green-700--tw-shadow-color: #15803d; shadow-green-800--tw-shadow-color: #166534; shadow-green-900--tw-shadow-color: #14532d; shadow-green-950--tw-shadow-color: #052e16; shadow-emerald-50--tw-shadow-color: #ecfdf5; shadow-emerald-100--tw-shadow-color: #d1fae5; shadow-emerald-200--tw-shadow-color: #a7f3d0; shadow-emerald-300--tw-shadow-color: #6ee7b7; shadow-emerald-400--tw-shadow-color: #34d399; shadow-emerald-500--tw-shadow-color: #10b981; shadow-emerald-600--tw-shadow-color: #059669; shadow-emerald-700--tw-shadow-color: #047857; shadow-emerald-800--tw-shadow-color: #065f46; shadow-emerald-900--tw-shadow-color: #064e3b; shadow-emerald-950--tw-shadow-color: #022c22; shadow-teal-50--tw-shadow-color: #f0fdfa; shadow-teal-100--tw-shadow-color: #ccfbf1; shadow-teal-200--tw-shadow-color: #99f6e4; shadow-teal-300--tw-shadow-color: #5eead4; shadow-teal-400--tw-shadow-color: #2dd4bf; shadow-teal-500--tw-shadow-color: #14b8a6; shadow-teal-600--tw-shadow-color: #0d9488; shadow-teal-700--tw-shadow-color: #0f766e; shadow-teal-800--tw-shadow-color: #115e59; shadow-teal-900--tw-shadow-color: #134e4a; shadow-teal-950--tw-shadow-color: #042f2e; shadow-cyan-50--tw-shadow-color: #ecfeff; shadow-cyan-100--tw-shadow-color: #cffafe; shadow-cyan-200--tw-shadow-color: #a5f3fc; shadow-cyan-300--tw-shadow-color: #67e8f9; shadow-cyan-400--tw-shadow-color: #22d3ee; shadow-cyan-500--tw-shadow-color: #06b6d4; shadow-cyan-600--tw-shadow-color: #0891b2; shadow-cyan-700--tw-shadow-color: #0e7490; shadow-cyan-800--tw-shadow-color: #155e75; shadow-cyan-900--tw-shadow-color: #164e63; shadow-cyan-950--tw-shadow-color: #083344; shadow-sky-50--tw-shadow-color: #f0f9ff; shadow-sky-100--tw-shadow-color: #e0f2fe; shadow-sky-200--tw-shadow-color: #bae6fd; shadow-sky-300--tw-shadow-color: #7dd3fc; shadow-sky-400--tw-shadow-color: #38bdf8; shadow-sky-500--tw-shadow-color: #0ea5e9; shadow-sky-600--tw-shadow-color: #0284c7; shadow-sky-700--tw-shadow-color: #0369a1; shadow-sky-800--tw-shadow-color: #075985; shadow-sky-900--tw-shadow-color: #0c4a6e; shadow-sky-950--tw-shadow-color: #082f49; shadow-blue-50--tw-shadow-color: #eff6ff; shadow-blue-100--tw-shadow-color: #dbeafe; shadow-blue-200--tw-shadow-color: #bfdbfe; shadow-blue-300--tw-shadow-color: #93c5fd; shadow-blue-400--tw-shadow-color: #60a5fa; shadow-blue-500--tw-shadow-color: #3b82f6; shadow-blue-600--tw-shadow-color: #2563eb; shadow-blue-700--tw-shadow-color: #1d4ed8; shadow-blue-800--tw-shadow-color: #1e40af; shadow-blue-900--tw-shadow-color: #1e3a8a; shadow-blue-950--tw-shadow-color: #172554; shadow-indigo-50--tw-shadow-color: #eef2ff; shadow-indigo-100--tw-shadow-color: #e0e7ff; shadow-indigo-200--tw-shadow-color: #c7d2fe; shadow-indigo-300--tw-shadow-color: #a5b4fc; shadow-indigo-400--tw-shadow-color: #818cf8; shadow-indigo-500--tw-shadow-color: #6366f1; shadow-indigo-600--tw-shadow-color: #4f46e5; shadow-indigo-700--tw-shadow-color: #4338ca; shadow-indigo-800--tw-shadow-color: #3730a3; shadow-indigo-900--tw-shadow-color: #312e81; shadow-indigo-950--tw-shadow-color: #1e1b4b; shadow-violet-50--tw-shadow-color: #f5f3ff; shadow-violet-100--tw-shadow-color: #ede9fe; shadow-violet-200--tw-shadow-color: #ddd6fe; shadow-violet-300--tw-shadow-color: #c4b5fd; shadow-violet-400--tw-shadow-color: #a78bfa; shadow-violet-500--tw-shadow-color: #8b5cf6; shadow-violet-600--tw-shadow-color: #7c3aed; shadow-violet-700--tw-shadow-color: #6d28d9; shadow-violet-800--tw-shadow-color: #5b21b6; shadow-violet-900--tw-shadow-color: #4c1d95; shadow-violet-950--tw-shadow-color: #2e1065; shadow-purple-50--tw-shadow-color: #faf5ff; shadow-purple-100--tw-shadow-color: #f3e8ff; shadow-purple-200--tw-shadow-color: #e9d5ff; shadow-purple-300--tw-shadow-color: #d8b4fe; shadow-purple-400--tw-shadow-color: #c084fc; shadow-purple-500--tw-shadow-color: #a855f7; shadow-purple-600--tw-shadow-color: #9333ea; shadow-purple-700--tw-shadow-color: #7e22ce; shadow-purple-800--tw-shadow-color: #6b21a8; shadow-purple-900--tw-shadow-color: #581c87; shadow-purple-950--tw-shadow-color: #3b0764; shadow-fuchsia-50--tw-shadow-color: #fdf4ff; shadow-fuchsia-100--tw-shadow-color: #fae8ff; shadow-fuchsia-200--tw-shadow-color: #f5d0fe; shadow-fuchsia-300--tw-shadow-color: #f0abfc; shadow-fuchsia-400--tw-shadow-color: #e879f9; shadow-fuchsia-500--tw-shadow-color: #d946ef; shadow-fuchsia-600--tw-shadow-color: #c026d3; shadow-fuchsia-700--tw-shadow-color: #a21caf; shadow-fuchsia-800--tw-shadow-color: #86198f; shadow-fuchsia-900--tw-shadow-color: #701a75; shadow-fuchsia-950--tw-shadow-color: #4a044e; shadow-pink-50--tw-shadow-color: #fdf2f8; shadow-pink-100--tw-shadow-color: #fce7f3; shadow-pink-200--tw-shadow-color: #fbcfe8; shadow-pink-300--tw-shadow-color: #f9a8d4; shadow-pink-400--tw-shadow-color: #f472b6; shadow-pink-500--tw-shadow-color: #ec4899; shadow-pink-600--tw-shadow-color: #db2777; shadow-pink-700--tw-shadow-color: #be185d; shadow-pink-800--tw-shadow-color: #9d174d; shadow-pink-900--tw-shadow-color: #831843; shadow-pink-950--tw-shadow-color: #500724; shadow-rose-50--tw-shadow-color: #fff1f2; shadow-rose-100--tw-shadow-color: #ffe4e6; shadow-rose-200--tw-shadow-color: #fecdd3; shadow-rose-300--tw-shadow-color: #fda4af; shadow-rose-400--tw-shadow-color: #fb7185; shadow-rose-500--tw-shadow-color: #f43f5e; shadow-rose-600--tw-shadow-color: #e11d48; shadow-rose-700--tw-shadow-color: #be123c; shadow-rose-800--tw-shadow-color: #9f1239; shadow-rose-900--tw-shadow-color: #881337; shadow-rose-950--tw-shadow-color: #4c0519;",
    "title": "Box Shadow Color - Tailwind CSS",
    "description": "Utilities for controlling the color of a box shadow.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/opacity",
    "markdown": "# Opacity - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Changing an element’s opacity](#changing-an-elements-opacity)\n\nUse the `opacity-*` utilities to control the opacity of an element.\n\n```\n<button class=\"bg-indigo-500 opacity-100 ...\"></button>\n<button class=\"bg-indigo-500 opacity-75 ...\"></button>\n<button class=\"bg-indigo-500 opacity-50 ...\"></button>\n<button class=\"bg-indigo-500 opacity-25 ...\"></button>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:opacity-100` to only apply the `opacity-100` utility on hover.\n\n```\n<div class=\"opacity-50 hover:opacity-100\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:opacity-100` to apply the `opacity-100` utility at only medium screen sizes and above.\n\n```\n<div class=\"opacity-50 md:opacity-100\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind provides several opacity utilities for general purpose use. You can customize these values by editing `theme.opacity` or `theme.extend.opacity` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `opacity` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"opacity-[.67]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Opacity - Tailwind CSS",
    "description": "Utilities for controlling the opacity of an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/box-shadow",
    "markdown": "# Box Shadow - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Adding an outer shadow](#adding-an-outer-shadow)\n\nUse the `shadow-sm`, `shadow`, `shadow-md`, `shadow-lg`, `shadow-xl`, or `shadow-2xl` utilities to apply different sized outer box shadows to an element.\n\n```\n<div class=\"shadow-md ...\"></div>\n<div class=\"shadow-lg ...\"></div>\n<div class=\"shadow-xl ...\"></div>\n<div class=\"shadow-2xl ...\"></div>\n```\n\n### [​Adding an inner shadow](#adding-an-inner-shadow)\n\nUse the `shadow-inner` utility to apply a subtle inset box shadow to an element. This can be useful for things like form controls or wells.\n\n```\n<div class=\"shadow-inner ...\"></div>\n```\n\n### [​Removing the shadow](#removing-the-shadow)\n\nUse `shadow-none` to remove an existing box shadow from an element. This is most commonly used to remove a shadow that was applied at a smaller breakpoint.\n\n```\n<div class=\"shadow-none ...\"></div>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:shadow-lg` to only apply the `shadow-lg` utility on hover.\n\n```\n<div class=\"shadow hover:shadow-lg\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:shadow-lg` to apply the `shadow-lg` utility at only medium screen sizes and above.\n\n```\n<div class=\"shadow md:shadow-lg\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind provides six drop shadow utilities, one inner shadow utility, and a utility for removing existing shadows. You can customize these values by editing `theme.boxShadow` or `theme.extend.boxShadow` in your `tailwind.config.js` file.\n\nIf a `DEFAULT` shadow is provided, it will be used for the non-suffixed `shadow` utility. Any other keys will be used as suffixes, for example the key `'2'` will create a corresponding `shadow-2` utility.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `box-shadow` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"shadow-[0_35px_60px_-15px_rgba(0,0,0,0.3)]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Box Shadow - Tailwind CSS",
    "description": "Utilities for controlling the box shadow of an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/scroll-behavior",
    "markdown": "# Scroll Behavior - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Adding smooth scrolling](#adding-smooth-scrolling)\n\nUse the `scroll-smooth` utility to enable smooth scrolling within an element.\n\n```\n<html class=\"scroll-smooth\">\n  <!-- ... -->\n</html>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `focus:scroll-auto` to only apply the `scroll-auto` utility on focus.\n\n```\n<html class=\"scroll-smooth focus:scroll-auto\">\n  <!-- ... -->\n</html>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:scroll-auto` to apply the `scroll-auto` utility at only medium screen sizes and above.\n\n```\n<html class=\"scroll-smooth md:scroll-auto\">\n  <!-- ... -->\n</html>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).",
    "title": "Scroll Behavior - Tailwind CSS",
    "description": "Utilities for controlling the scroll behavior of an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/mix-blend-mode",
    "markdown": "# Mix Blend Mode - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Setting an element’s blend mode](#setting-an-elements-blend-mode)\n\nUse the `mix-blend-*` utilities to control how an element’s content should be blended with the background.\n\n```\n<div class=\"flex justify-center -space-x-14\">\n  <div class=\"mix-blend-multiply bg-blue-400 ...\"></div>\n  <div class=\"mix-blend-multiply bg-pink-400 ...\"></div>\n</div>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:mix-blend-overlay` to only apply the `mix-blend-overlay` utility on hover.\n\n```\n<div class=\"mix-blend-multiply hover:mix-blend-overlay\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:mix-blend-overlay` to apply the `mix-blend-overlay` utility at only medium screen sizes and above.\n\n```\n<div class=\"mix-blend-multiply md:mix-blend-overlay\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).",
    "title": "Mix Blend Mode - Tailwind CSS",
    "description": "Utilities for controlling how an element should blend with the background.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/scroll-margin",
    "markdown": "# Scroll Margin - Tailwind CSS\n\nscroll-m-0scroll-margin: 0px; scroll-mx-0scroll-margin-left: 0px; scroll-margin-right: 0px; scroll-my-0scroll-margin-top: 0px; scroll-margin-bottom: 0px; scroll-ms-0scroll-margin-inline-start: 0px; scroll-me-0scroll-margin-inline-end: 0px; scroll-mt-0scroll-margin-top: 0px; scroll-mr-0scroll-margin-right: 0px; scroll-mb-0scroll-margin-bottom: 0px; scroll-ml-0scroll-margin-left: 0px; scroll-m-pxscroll-margin: 1px; scroll-mx-pxscroll-margin-left: 1px; scroll-margin-right: 1px; scroll-my-pxscroll-margin-top: 1px; scroll-margin-bottom: 1px; scroll-ms-pxscroll-margin-inline-start: 1px; scroll-me-pxscroll-margin-inline-end: 1px; scroll-mt-pxscroll-margin-top: 1px; scroll-mr-pxscroll-margin-right: 1px; scroll-mb-pxscroll-margin-bottom: 1px; scroll-ml-pxscroll-margin-left: 1px; scroll-m-0.5scroll-margin: 0.125rem; /\\* 2px \\*/ scroll-mx-0.5scroll-margin-left: 0.125rem; /\\* 2px \\*/ scroll-margin-right: 0.125rem; /\\* 2px \\*/ scroll-my-0.5scroll-margin-top: 0.125rem; /\\* 2px \\*/ scroll-margin-bottom: 0.125rem; /\\* 2px \\*/ scroll-ms-0.5scroll-margin-inline-start: 0.125rem; /\\* 2px \\*/ scroll-me-0.5scroll-margin-inline-end: 0.125rem; /\\* 2px \\*/ scroll-mt-0.5scroll-margin-top: 0.125rem; /\\* 2px \\*/ scroll-mr-0.5scroll-margin-right: 0.125rem; /\\* 2px \\*/ scroll-mb-0.5scroll-margin-bottom: 0.125rem; /\\* 2px \\*/ scroll-ml-0.5scroll-margin-left: 0.125rem; /\\* 2px \\*/ scroll-m-1scroll-margin: 0.25rem; /\\* 4px \\*/ scroll-mx-1scroll-margin-left: 0.25rem; /\\* 4px \\*/ scroll-margin-right: 0.25rem; /\\* 4px \\*/ scroll-my-1scroll-margin-top: 0.25rem; /\\* 4px \\*/ scroll-margin-bottom: 0.25rem; /\\* 4px \\*/ scroll-ms-1scroll-margin-inline-start: 0.25rem; /\\* 4px \\*/ scroll-me-1scroll-margin-inline-end: 0.25rem; /\\* 4px \\*/ scroll-mt-1scroll-margin-top: 0.25rem; /\\* 4px \\*/ scroll-mr-1scroll-margin-right: 0.25rem; /\\* 4px \\*/ scroll-mb-1scroll-margin-bottom: 0.25rem; /\\* 4px \\*/ scroll-ml-1scroll-margin-left: 0.25rem; /\\* 4px \\*/ scroll-m-1.5scroll-margin: 0.375rem; /\\* 6px \\*/ scroll-mx-1.5scroll-margin-left: 0.375rem; /\\* 6px \\*/ scroll-margin-right: 0.375rem; /\\* 6px \\*/ scroll-my-1.5scroll-margin-top: 0.375rem; /\\* 6px \\*/ scroll-margin-bottom: 0.375rem; /\\* 6px \\*/ scroll-ms-1.5scroll-margin-inline-start: 0.375rem; /\\* 6px \\*/ scroll-me-1.5scroll-margin-inline-end: 0.375rem; /\\* 6px \\*/ scroll-mt-1.5scroll-margin-top: 0.375rem; /\\* 6px \\*/ scroll-mr-1.5scroll-margin-right: 0.375rem; /\\* 6px \\*/ scroll-mb-1.5scroll-margin-bottom: 0.375rem; /\\* 6px \\*/ scroll-ml-1.5scroll-margin-left: 0.375rem; /\\* 6px \\*/ scroll-m-2scroll-margin: 0.5rem; /\\* 8px \\*/ scroll-mx-2scroll-margin-left: 0.5rem; /\\* 8px \\*/ scroll-margin-right: 0.5rem; /\\* 8px \\*/ scroll-my-2scroll-margin-top: 0.5rem; /\\* 8px \\*/ scroll-margin-bottom: 0.5rem; /\\* 8px \\*/ scroll-ms-2scroll-margin-inline-start: 0.5rem; /\\* 8px \\*/ scroll-me-2scroll-margin-inline-end: 0.5rem; /\\* 8px \\*/ scroll-mt-2scroll-margin-top: 0.5rem; /\\* 8px \\*/ scroll-mr-2scroll-margin-right: 0.5rem; /\\* 8px \\*/ scroll-mb-2scroll-margin-bottom: 0.5rem; /\\* 8px \\*/ scroll-ml-2scroll-margin-left: 0.5rem; /\\* 8px \\*/ scroll-m-2.5scroll-margin: 0.625rem; /\\* 10px \\*/ scroll-mx-2.5scroll-margin-left: 0.625rem; /\\* 10px \\*/ scroll-margin-right: 0.625rem; /\\* 10px \\*/ scroll-my-2.5scroll-margin-top: 0.625rem; /\\* 10px \\*/ scroll-margin-bottom: 0.625rem; /\\* 10px \\*/ scroll-ms-2.5scroll-margin-inline-start: 0.625rem; /\\* 10px \\*/ scroll-me-2.5scroll-margin-inline-end: 0.625rem; /\\* 10px \\*/ scroll-mt-2.5scroll-margin-top: 0.625rem; /\\* 10px \\*/ scroll-mr-2.5scroll-margin-right: 0.625rem; /\\* 10px \\*/ scroll-mb-2.5scroll-margin-bottom: 0.625rem; /\\* 10px \\*/ scroll-ml-2.5scroll-margin-left: 0.625rem; /\\* 10px \\*/ scroll-m-3scroll-margin: 0.75rem; /\\* 12px \\*/ scroll-mx-3scroll-margin-left: 0.75rem; /\\* 12px \\*/ scroll-margin-right: 0.75rem; /\\* 12px \\*/ scroll-my-3scroll-margin-top: 0.75rem; /\\* 12px \\*/ scroll-margin-bottom: 0.75rem; /\\* 12px \\*/ scroll-ms-3scroll-margin-inline-start: 0.75rem; /\\* 12px \\*/ scroll-me-3scroll-margin-inline-end: 0.75rem; /\\* 12px \\*/ scroll-mt-3scroll-margin-top: 0.75rem; /\\* 12px \\*/ scroll-mr-3scroll-margin-right: 0.75rem; /\\* 12px \\*/ scroll-mb-3scroll-margin-bottom: 0.75rem; /\\* 12px \\*/ scroll-ml-3scroll-margin-left: 0.75rem; /\\* 12px \\*/ scroll-m-3.5scroll-margin: 0.875rem; /\\* 14px \\*/ scroll-mx-3.5scroll-margin-left: 0.875rem; /\\* 14px \\*/ scroll-margin-right: 0.875rem; /\\* 14px \\*/ scroll-my-3.5scroll-margin-top: 0.875rem; /\\* 14px \\*/ scroll-margin-bottom: 0.875rem; /\\* 14px \\*/ scroll-ms-3.5scroll-margin-inline-start: 0.875rem; /\\* 14px \\*/ scroll-me-3.5scroll-margin-inline-end: 0.875rem; /\\* 14px \\*/ scroll-mt-3.5scroll-margin-top: 0.875rem; /\\* 14px \\*/ scroll-mr-3.5scroll-margin-right: 0.875rem; /\\* 14px \\*/ scroll-mb-3.5scroll-margin-bottom: 0.875rem; /\\* 14px \\*/ scroll-ml-3.5scroll-margin-left: 0.875rem; /\\* 14px \\*/ scroll-m-4scroll-margin: 1rem; /\\* 16px \\*/ scroll-mx-4scroll-margin-left: 1rem; /\\* 16px \\*/ scroll-margin-right: 1rem; /\\* 16px \\*/ scroll-my-4scroll-margin-top: 1rem; /\\* 16px \\*/ scroll-margin-bottom: 1rem; /\\* 16px \\*/ scroll-ms-4scroll-margin-inline-start: 1rem; /\\* 16px \\*/ scroll-me-4scroll-margin-inline-end: 1rem; /\\* 16px \\*/ scroll-mt-4scroll-margin-top: 1rem; /\\* 16px \\*/ scroll-mr-4scroll-margin-right: 1rem; /\\* 16px \\*/ scroll-mb-4scroll-margin-bottom: 1rem; /\\* 16px \\*/ scroll-ml-4scroll-margin-left: 1rem; /\\* 16px \\*/ scroll-m-5scroll-margin: 1.25rem; /\\* 20px \\*/ scroll-mx-5scroll-margin-left: 1.25rem; /\\* 20px \\*/ scroll-margin-right: 1.25rem; /\\* 20px \\*/ scroll-my-5scroll-margin-top: 1.25rem; /\\* 20px \\*/ scroll-margin-bottom: 1.25rem; /\\* 20px \\*/ scroll-ms-5scroll-margin-inline-start: 1.25rem; /\\* 20px \\*/ scroll-me-5scroll-margin-inline-end: 1.25rem; /\\* 20px \\*/ scroll-mt-5scroll-margin-top: 1.25rem; /\\* 20px \\*/ scroll-mr-5scroll-margin-right: 1.25rem; /\\* 20px \\*/ scroll-mb-5scroll-margin-bottom: 1.25rem; /\\* 20px \\*/ scroll-ml-5scroll-margin-left: 1.25rem; /\\* 20px \\*/ scroll-m-6scroll-margin: 1.5rem; /\\* 24px \\*/ scroll-mx-6scroll-margin-left: 1.5rem; /\\* 24px \\*/ scroll-margin-right: 1.5rem; /\\* 24px \\*/ scroll-my-6scroll-margin-top: 1.5rem; /\\* 24px \\*/ scroll-margin-bottom: 1.5rem; /\\* 24px \\*/ scroll-ms-6scroll-margin-inline-start: 1.5rem; /\\* 24px \\*/ scroll-me-6scroll-margin-inline-end: 1.5rem; /\\* 24px \\*/ scroll-mt-6scroll-margin-top: 1.5rem; /\\* 24px \\*/ scroll-mr-6scroll-margin-right: 1.5rem; /\\* 24px \\*/ scroll-mb-6scroll-margin-bottom: 1.5rem; /\\* 24px \\*/ scroll-ml-6scroll-margin-left: 1.5rem; /\\* 24px \\*/ scroll-m-7scroll-margin: 1.75rem; /\\* 28px \\*/ scroll-mx-7scroll-margin-left: 1.75rem; /\\* 28px \\*/ scroll-margin-right: 1.75rem; /\\* 28px \\*/ scroll-my-7scroll-margin-top: 1.75rem; /\\* 28px \\*/ scroll-margin-bottom: 1.75rem; /\\* 28px \\*/ scroll-ms-7scroll-margin-inline-start: 1.75rem; /\\* 28px \\*/ scroll-me-7scroll-margin-inline-end: 1.75rem; /\\* 28px \\*/ scroll-mt-7scroll-margin-top: 1.75rem; /\\* 28px \\*/ scroll-mr-7scroll-margin-right: 1.75rem; /\\* 28px \\*/ scroll-mb-7scroll-margin-bottom: 1.75rem; /\\* 28px \\*/ scroll-ml-7scroll-margin-left: 1.75rem; /\\* 28px \\*/ scroll-m-8scroll-margin: 2rem; /\\* 32px \\*/ scroll-mx-8scroll-margin-left: 2rem; /\\* 32px \\*/ scroll-margin-right: 2rem; /\\* 32px \\*/ scroll-my-8scroll-margin-top: 2rem; /\\* 32px \\*/ scroll-margin-bottom: 2rem; /\\* 32px \\*/ scroll-ms-8scroll-margin-inline-start: 2rem; /\\* 32px \\*/ scroll-me-8scroll-margin-inline-end: 2rem; /\\* 32px \\*/ scroll-mt-8scroll-margin-top: 2rem; /\\* 32px \\*/ scroll-mr-8scroll-margin-right: 2rem; /\\* 32px \\*/ scroll-mb-8scroll-margin-bottom: 2rem; /\\* 32px \\*/ scroll-ml-8scroll-margin-left: 2rem; /\\* 32px \\*/ scroll-m-9scroll-margin: 2.25rem; /\\* 36px \\*/ scroll-mx-9scroll-margin-left: 2.25rem; /\\* 36px \\*/ scroll-margin-right: 2.25rem; /\\* 36px \\*/ scroll-my-9scroll-margin-top: 2.25rem; /\\* 36px \\*/ scroll-margin-bottom: 2.25rem; /\\* 36px \\*/ scroll-ms-9scroll-margin-inline-start: 2.25rem; /\\* 36px \\*/ scroll-me-9scroll-margin-inline-end: 2.25rem; /\\* 36px \\*/ scroll-mt-9scroll-margin-top: 2.25rem; /\\* 36px \\*/ scroll-mr-9scroll-margin-right: 2.25rem; /\\* 36px \\*/ scroll-mb-9scroll-margin-bottom: 2.25rem; /\\* 36px \\*/ scroll-ml-9scroll-margin-left: 2.25rem; /\\* 36px \\*/ scroll-m-10scroll-margin: 2.5rem; /\\* 40px \\*/ scroll-mx-10scroll-margin-left: 2.5rem; /\\* 40px \\*/ scroll-margin-right: 2.5rem; /\\* 40px \\*/ scroll-my-10scroll-margin-top: 2.5rem; /\\* 40px \\*/ scroll-margin-bottom: 2.5rem; /\\* 40px \\*/ scroll-ms-10scroll-margin-inline-start: 2.5rem; /\\* 40px \\*/ scroll-me-10scroll-margin-inline-end: 2.5rem; /\\* 40px \\*/ scroll-mt-10scroll-margin-top: 2.5rem; /\\* 40px \\*/ scroll-mr-10scroll-margin-right: 2.5rem; /\\* 40px \\*/ scroll-mb-10scroll-margin-bottom: 2.5rem; /\\* 40px \\*/ scroll-ml-10scroll-margin-left: 2.5rem; /\\* 40px \\*/ scroll-m-11scroll-margin: 2.75rem; /\\* 44px \\*/ scroll-mx-11scroll-margin-left: 2.75rem; /\\* 44px \\*/ scroll-margin-right: 2.75rem; /\\* 44px \\*/ scroll-my-11scroll-margin-top: 2.75rem; /\\* 44px \\*/ scroll-margin-bottom: 2.75rem; /\\* 44px \\*/ scroll-ms-11scroll-margin-inline-start: 2.75rem; /\\* 44px \\*/ scroll-me-11scroll-margin-inline-end: 2.75rem; /\\* 44px \\*/ scroll-mt-11scroll-margin-top: 2.75rem; /\\* 44px \\*/ scroll-mr-11scroll-margin-right: 2.75rem; /\\* 44px \\*/ scroll-mb-11scroll-margin-bottom: 2.75rem; /\\* 44px \\*/ scroll-ml-11scroll-margin-left: 2.75rem; /\\* 44px \\*/ scroll-m-12scroll-margin: 3rem; /\\* 48px \\*/ scroll-mx-12scroll-margin-left: 3rem; /\\* 48px \\*/ scroll-margin-right: 3rem; /\\* 48px \\*/ scroll-my-12scroll-margin-top: 3rem; /\\* 48px \\*/ scroll-margin-bottom: 3rem; /\\* 48px \\*/ scroll-ms-12scroll-margin-inline-start: 3rem; /\\* 48px \\*/ scroll-me-12scroll-margin-inline-end: 3rem; /\\* 48px \\*/ scroll-mt-12scroll-margin-top: 3rem; /\\* 48px \\*/ scroll-mr-12scroll-margin-right: 3rem; /\\* 48px \\*/ scroll-mb-12scroll-margin-bottom: 3rem; /\\* 48px \\*/ scroll-ml-12scroll-margin-left: 3rem; /\\* 48px \\*/ scroll-m-14scroll-margin: 3.5rem; /\\* 56px \\*/ scroll-mx-14scroll-margin-left: 3.5rem; /\\* 56px \\*/ scroll-margin-right: 3.5rem; /\\* 56px \\*/ scroll-my-14scroll-margin-top: 3.5rem; /\\* 56px \\*/ scroll-margin-bottom: 3.5rem; /\\* 56px \\*/ scroll-ms-14scroll-margin-inline-start: 3.5rem; /\\* 56px \\*/ scroll-me-14scroll-margin-inline-end: 3.5rem; /\\* 56px \\*/ scroll-mt-14scroll-margin-top: 3.5rem; /\\* 56px \\*/ scroll-mr-14scroll-margin-right: 3.5rem; /\\* 56px \\*/ scroll-mb-14scroll-margin-bottom: 3.5rem; /\\* 56px \\*/ scroll-ml-14scroll-margin-left: 3.5rem; /\\* 56px \\*/ scroll-m-16scroll-margin: 4rem; /\\* 64px \\*/ scroll-mx-16scroll-margin-left: 4rem; /\\* 64px \\*/ scroll-margin-right: 4rem; /\\* 64px \\*/ scroll-my-16scroll-margin-top: 4rem; /\\* 64px \\*/ scroll-margin-bottom: 4rem; /\\* 64px \\*/ scroll-ms-16scroll-margin-inline-start: 4rem; /\\* 64px \\*/ scroll-me-16scroll-margin-inline-end: 4rem; /\\* 64px \\*/ scroll-mt-16scroll-margin-top: 4rem; /\\* 64px \\*/ scroll-mr-16scroll-margin-right: 4rem; /\\* 64px \\*/ scroll-mb-16scroll-margin-bottom: 4rem; /\\* 64px \\*/ scroll-ml-16scroll-margin-left: 4rem; /\\* 64px \\*/ scroll-m-20scroll-margin: 5rem; /\\* 80px \\*/ scroll-mx-20scroll-margin-left: 5rem; /\\* 80px \\*/ scroll-margin-right: 5rem; /\\* 80px \\*/ scroll-my-20scroll-margin-top: 5rem; /\\* 80px \\*/ scroll-margin-bottom: 5rem; /\\* 80px \\*/ scroll-ms-20scroll-margin-inline-start: 5rem; /\\* 80px \\*/ scroll-me-20scroll-margin-inline-end: 5rem; /\\* 80px \\*/ scroll-mt-20scroll-margin-top: 5rem; /\\* 80px \\*/ scroll-mr-20scroll-margin-right: 5rem; /\\* 80px \\*/ scroll-mb-20scroll-margin-bottom: 5rem; /\\* 80px \\*/ scroll-ml-20scroll-margin-left: 5rem; /\\* 80px \\*/ scroll-m-24scroll-margin: 6rem; /\\* 96px \\*/ scroll-mx-24scroll-margin-left: 6rem; /\\* 96px \\*/ scroll-margin-right: 6rem; /\\* 96px \\*/ scroll-my-24scroll-margin-top: 6rem; /\\* 96px \\*/ scroll-margin-bottom: 6rem; /\\* 96px \\*/ scroll-ms-24scroll-margin-inline-start: 6rem; /\\* 96px \\*/ scroll-me-24scroll-margin-inline-end: 6rem; /\\* 96px \\*/ scroll-mt-24scroll-margin-top: 6rem; /\\* 96px \\*/ scroll-mr-24scroll-margin-right: 6rem; /\\* 96px \\*/ scroll-mb-24scroll-margin-bottom: 6rem; /\\* 96px \\*/ scroll-ml-24scroll-margin-left: 6rem; /\\* 96px \\*/ scroll-m-28scroll-margin: 7rem; /\\* 112px \\*/ scroll-mx-28scroll-margin-left: 7rem; /\\* 112px \\*/ scroll-margin-right: 7rem; /\\* 112px \\*/ scroll-my-28scroll-margin-top: 7rem; /\\* 112px \\*/ scroll-margin-bottom: 7rem; /\\* 112px \\*/ scroll-ms-28scroll-margin-inline-start: 7rem; /\\* 112px \\*/ scroll-me-28scroll-margin-inline-end: 7rem; /\\* 112px \\*/ scroll-mt-28scroll-margin-top: 7rem; /\\* 112px \\*/ scroll-mr-28scroll-margin-right: 7rem; /\\* 112px \\*/ scroll-mb-28scroll-margin-bottom: 7rem; /\\* 112px \\*/ scroll-ml-28scroll-margin-left: 7rem; /\\* 112px \\*/ scroll-m-32scroll-margin: 8rem; /\\* 128px \\*/ scroll-mx-32scroll-margin-left: 8rem; /\\* 128px \\*/ scroll-margin-right: 8rem; /\\* 128px \\*/ scroll-my-32scroll-margin-top: 8rem; /\\* 128px \\*/ scroll-margin-bottom: 8rem; /\\* 128px \\*/ scroll-ms-32scroll-margin-inline-start: 8rem; /\\* 128px \\*/ scroll-me-32scroll-margin-inline-end: 8rem; /\\* 128px \\*/ scroll-mt-32scroll-margin-top: 8rem; /\\* 128px \\*/ scroll-mr-32scroll-margin-right: 8rem; /\\* 128px \\*/ scroll-mb-32scroll-margin-bottom: 8rem; /\\* 128px \\*/ scroll-ml-32scroll-margin-left: 8rem; /\\* 128px \\*/ scroll-m-36scroll-margin: 9rem; /\\* 144px \\*/ scroll-mx-36scroll-margin-left: 9rem; /\\* 144px \\*/ scroll-margin-right: 9rem; /\\* 144px \\*/ scroll-my-36scroll-margin-top: 9rem; /\\* 144px \\*/ scroll-margin-bottom: 9rem; /\\* 144px \\*/ scroll-ms-36scroll-margin-inline-start: 9rem; /\\* 144px \\*/ scroll-me-36scroll-margin-inline-end: 9rem; /\\* 144px \\*/ scroll-mt-36scroll-margin-top: 9rem; /\\* 144px \\*/ scroll-mr-36scroll-margin-right: 9rem; /\\* 144px \\*/ scroll-mb-36scroll-margin-bottom: 9rem; /\\* 144px \\*/ scroll-ml-36scroll-margin-left: 9rem; /\\* 144px \\*/ scroll-m-40scroll-margin: 10rem; /\\* 160px \\*/ scroll-mx-40scroll-margin-left: 10rem; /\\* 160px \\*/ scroll-margin-right: 10rem; /\\* 160px \\*/ scroll-my-40scroll-margin-top: 10rem; /\\* 160px \\*/ scroll-margin-bottom: 10rem; /\\* 160px \\*/ scroll-ms-40scroll-margin-inline-start: 10rem; /\\* 160px \\*/ scroll-me-40scroll-margin-inline-end: 10rem; /\\* 160px \\*/ scroll-mt-40scroll-margin-top: 10rem; /\\* 160px \\*/ scroll-mr-40scroll-margin-right: 10rem; /\\* 160px \\*/ scroll-mb-40scroll-margin-bottom: 10rem; /\\* 160px \\*/ scroll-ml-40scroll-margin-left: 10rem; /\\* 160px \\*/ scroll-m-44scroll-margin: 11rem; /\\* 176px \\*/ scroll-mx-44scroll-margin-left: 11rem; /\\* 176px \\*/ scroll-margin-right: 11rem; /\\* 176px \\*/ scroll-my-44scroll-margin-top: 11rem; /\\* 176px \\*/ scroll-margin-bottom: 11rem; /\\* 176px \\*/ scroll-ms-44scroll-margin-inline-start: 11rem; /\\* 176px \\*/ scroll-me-44scroll-margin-inline-end: 11rem; /\\* 176px \\*/ scroll-mt-44scroll-margin-top: 11rem; /\\* 176px \\*/ scroll-mr-44scroll-margin-right: 11rem; /\\* 176px \\*/ scroll-mb-44scroll-margin-bottom: 11rem; /\\* 176px \\*/ scroll-ml-44scroll-margin-left: 11rem; /\\* 176px \\*/ scroll-m-48scroll-margin: 12rem; /\\* 192px \\*/ scroll-mx-48scroll-margin-left: 12rem; /\\* 192px \\*/ scroll-margin-right: 12rem; /\\* 192px \\*/ scroll-my-48scroll-margin-top: 12rem; /\\* 192px \\*/ scroll-margin-bottom: 12rem; /\\* 192px \\*/ scroll-ms-48scroll-margin-inline-start: 12rem; /\\* 192px \\*/ scroll-me-48scroll-margin-inline-end: 12rem; /\\* 192px \\*/ scroll-mt-48scroll-margin-top: 12rem; /\\* 192px \\*/ scroll-mr-48scroll-margin-right: 12rem; /\\* 192px \\*/ scroll-mb-48scroll-margin-bottom: 12rem; /\\* 192px \\*/ scroll-ml-48scroll-margin-left: 12rem; /\\* 192px \\*/ scroll-m-52scroll-margin: 13rem; /\\* 208px \\*/ scroll-mx-52scroll-margin-left: 13rem; /\\* 208px \\*/ scroll-margin-right: 13rem; /\\* 208px \\*/ scroll-my-52scroll-margin-top: 13rem; /\\* 208px \\*/ scroll-margin-bottom: 13rem; /\\* 208px \\*/ scroll-ms-52scroll-margin-inline-start: 13rem; /\\* 208px \\*/ scroll-me-52scroll-margin-inline-end: 13rem; /\\* 208px \\*/ scroll-mt-52scroll-margin-top: 13rem; /\\* 208px \\*/ scroll-mr-52scroll-margin-right: 13rem; /\\* 208px \\*/ scroll-mb-52scroll-margin-bottom: 13rem; /\\* 208px \\*/ scroll-ml-52scroll-margin-left: 13rem; /\\* 208px \\*/ scroll-m-56scroll-margin: 14rem; /\\* 224px \\*/ scroll-mx-56scroll-margin-left: 14rem; /\\* 224px \\*/ scroll-margin-right: 14rem; /\\* 224px \\*/ scroll-my-56scroll-margin-top: 14rem; /\\* 224px \\*/ scroll-margin-bottom: 14rem; /\\* 224px \\*/ scroll-ms-56scroll-margin-inline-start: 14rem; /\\* 224px \\*/ scroll-me-56scroll-margin-inline-end: 14rem; /\\* 224px \\*/ scroll-mt-56scroll-margin-top: 14rem; /\\* 224px \\*/ scroll-mr-56scroll-margin-right: 14rem; /\\* 224px \\*/ scroll-mb-56scroll-margin-bottom: 14rem; /\\* 224px \\*/ scroll-ml-56scroll-margin-left: 14rem; /\\* 224px \\*/ scroll-m-60scroll-margin: 15rem; /\\* 240px \\*/ scroll-mx-60scroll-margin-left: 15rem; /\\* 240px \\*/ scroll-margin-right: 15rem; /\\* 240px \\*/ scroll-my-60scroll-margin-top: 15rem; /\\* 240px \\*/ scroll-margin-bottom: 15rem; /\\* 240px \\*/ scroll-ms-60scroll-margin-inline-start: 15rem; /\\* 240px \\*/ scroll-me-60scroll-margin-inline-end: 15rem; /\\* 240px \\*/ scroll-mt-60scroll-margin-top: 15rem; /\\* 240px \\*/ scroll-mr-60scroll-margin-right: 15rem; /\\* 240px \\*/ scroll-mb-60scroll-margin-bottom: 15rem; /\\* 240px \\*/ scroll-ml-60scroll-margin-left: 15rem; /\\* 240px \\*/ scroll-m-64scroll-margin: 16rem; /\\* 256px \\*/ scroll-mx-64scroll-margin-left: 16rem; /\\* 256px \\*/ scroll-margin-right: 16rem; /\\* 256px \\*/ scroll-my-64scroll-margin-top: 16rem; /\\* 256px \\*/ scroll-margin-bottom: 16rem; /\\* 256px \\*/ scroll-ms-64scroll-margin-inline-start: 16rem; /\\* 256px \\*/ scroll-me-64scroll-margin-inline-end: 16rem; /\\* 256px \\*/ scroll-mt-64scroll-margin-top: 16rem; /\\* 256px \\*/ scroll-mr-64scroll-margin-right: 16rem; /\\* 256px \\*/ scroll-mb-64scroll-margin-bottom: 16rem; /\\* 256px \\*/ scroll-ml-64scroll-margin-left: 16rem; /\\* 256px \\*/ scroll-m-72scroll-margin: 18rem; /\\* 288px \\*/ scroll-mx-72scroll-margin-left: 18rem; /\\* 288px \\*/ scroll-margin-right: 18rem; /\\* 288px \\*/ scroll-my-72scroll-margin-top: 18rem; /\\* 288px \\*/ scroll-margin-bottom: 18rem; /\\* 288px \\*/ scroll-ms-72scroll-margin-inline-start: 18rem; /\\* 288px \\*/ scroll-me-72scroll-margin-inline-end: 18rem; /\\* 288px \\*/ scroll-mt-72scroll-margin-top: 18rem; /\\* 288px \\*/ scroll-mr-72scroll-margin-right: 18rem; /\\* 288px \\*/ scroll-mb-72scroll-margin-bottom: 18rem; /\\* 288px \\*/ scroll-ml-72scroll-margin-left: 18rem; /\\* 288px \\*/ scroll-m-80scroll-margin: 20rem; /\\* 320px \\*/ scroll-mx-80scroll-margin-left: 20rem; /\\* 320px \\*/ scroll-margin-right: 20rem; /\\* 320px \\*/ scroll-my-80scroll-margin-top: 20rem; /\\* 320px \\*/ scroll-margin-bottom: 20rem; /\\* 320px \\*/ scroll-ms-80scroll-margin-inline-start: 20rem; /\\* 320px \\*/ scroll-me-80scroll-margin-inline-end: 20rem; /\\* 320px \\*/ scroll-mt-80scroll-margin-top: 20rem; /\\* 320px \\*/ scroll-mr-80scroll-margin-right: 20rem; /\\* 320px \\*/ scroll-mb-80scroll-margin-bottom: 20rem; /\\* 320px \\*/ scroll-ml-80scroll-margin-left: 20rem; /\\* 320px \\*/ scroll-m-96scroll-margin: 24rem; /\\* 384px \\*/ scroll-mx-96scroll-margin-left: 24rem; /\\* 384px \\*/ scroll-margin-right: 24rem; /\\* 384px \\*/ scroll-my-96scroll-margin-top: 24rem; /\\* 384px \\*/ scroll-margin-bottom: 24rem; /\\* 384px \\*/ scroll-ms-96scroll-margin-inline-start: 24rem; /\\* 384px \\*/ scroll-me-96scroll-margin-inline-end: 24rem; /\\* 384px \\*/ scroll-mt-96scroll-margin-top: 24rem; /\\* 384px \\*/ scroll-mr-96scroll-margin-right: 24rem; /\\* 384px \\*/ scroll-mb-96scroll-margin-bottom: 24rem; /\\* 384px \\*/ scroll-ml-96scroll-margin-left: 24rem; /\\* 384px \\*/",
    "title": "Scroll Margin - Tailwind CSS",
    "description": "Utilities for controlling the scroll offset around items in a snap container.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/background-blend-mode",
    "markdown": "# Background Blend Mode - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Setting the background blend mode](#setting-the-background-blend-mode)\n\nUse the `bg-blend-*` utilities to control how an element’s background image(s) should blend with its background color.\n\n```\n<div class=\"bg-blend-multiply ...\">\n  <!-- ... -->\n</div>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:bg-blend-darken` to only apply the `bg-blend-darken` utility on hover.\n\n```\n<div class=\"bg-blend-lighten hover:bg-blend-darken\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:bg-blend-darken` to apply the `bg-blend-darken` utility at only medium screen sizes and above.\n\n```\n<div class=\"bg-blend-lighten md:bg-blend-darken\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).",
    "title": "Background Blend Mode - Tailwind CSS",
    "description": "Utilities for controlling how an element's background image should blend with its background color.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/scroll-snap-align",
    "markdown": "# Scroll Snap Align - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Snapping to the center](#snapping-to-the-center)\n\nUse the `snap-center` utility to snap an element to its center when being scrolled inside a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\n```\n<div class=\"snap-x ...\">\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-center ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n```\n\n### [​Snapping to the start](#snapping-to-the-start)\n\nUse the `snap-start` utility to snap an element to its start when being scrolled inside a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\n```\n<div class=\"snap-x ...\">\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-start ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n```\n\n### [​Snapping to the end](#snapping-to-the-end)\n\nUse the `snap-end` utility to snap an element to its end when being scrolled inside a snap container.\n\nScroll in the grid of images to see the expected behaviour\n\n```\n<div class=\"snap-x ...\">\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1604999565976-8913ad2ddb7c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1540206351-d6465b3ac5c1?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1622890806166-111d7f6c7c97?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1590523277543-a94d2e4eb00b?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1575424909138-46b05e5919ec?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n  <div class=\"snap-end ...\">\n    <img src=\"https://images.unsplash.com/photo-1559333086-b0a56225a93c?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=320&h=160&q=80\" />\n  </div>\n</div>\n```\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:snap-start` to only apply the `snap-start` utility on hover.\n\n```\n<div class=\"snap-center hover:snap-start\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:snap-start` to apply the `snap-start` utility at only medium screen sizes and above.\n\n```\n<div class=\"snap-center md:snap-start\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).",
    "title": "Scroll Snap Align - Tailwind CSS",
    "description": "Utilities for controlling the scroll snap alignment of an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/brightness",
    "markdown": "# Brightness - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Changing element brightness](#changing-element-brightness)\n\nUse the `brightness-*` utilities to control an element’s brightness.\n\n```\n<div class=\"brightness-50 ...\">\n  <!-- ... -->\n</div>\n<div class=\"brightness-100 ...\">\n  <!-- ... -->\n</div>\n<div class=\"brightness-125 ...\">\n  <!-- ... -->\n</div>\n<div class=\"brightness-200 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert brightness-150 md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:brightness-150` to only apply the `brightness-150` utility on hover.\n\n```\n<div class=\"brightness-110 hover:brightness-150\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:brightness-150` to apply the `brightness-150` utility at only medium screen sizes and above.\n\n```\n<div class=\"brightness-110 md:brightness-150\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `brightness` utilities. You can customize these values by editing `theme.brightness` or `theme.extend.brightness` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `brightness` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"brightness-[1.75]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Brightness - Tailwind CSS",
    "description": "Utilities for applying brightness filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/blur",
    "markdown": "# Blur - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Blurring elements](#blurring-elements)\n\nUse the `blur-*` utilities to blur an element.\n\n```\n<div class=\"blur-none ...\">\n  <!-- ... -->\n</div>\n<div class=\"blur-sm ...\">\n  <!-- ... -->\n</div>\n<div class=\"blur-lg ...\">\n  <!-- ... -->\n</div>\n<div class=\"blur-2xl ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert brightness-150 md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:blur-lg` to only apply the `blur-lg` utility on hover.\n\n```\n<div class=\"blur hover:blur-lg\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:blur-lg` to apply the `blur-lg` utility at only medium screen sizes and above.\n\n```\n<div class=\"blur md:blur-lg\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `blur` utilities. You can customize these values by editing `theme.blur` or `theme.extend.blur` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `blur` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"blur-[2px]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Blur - Tailwind CSS",
    "description": "Utilities for applying blur filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/grayscale",
    "markdown": "# Grayscale - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Making an element grayscale](#making-an-element-grayscale)\n\nUse the `grayscale` and `grayscale-0` utilities to control whether an element should be rendered as grayscale or in full color.\n\n```\n<div class=\"grayscale-0 ...\">\n  <!-- ... -->\n</div>\n<div class=\"grayscale ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert grayscale md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:grayscale-0` to only apply the `grayscale-0` utility on hover.\n\n```\n<div class=\"grayscale hover:grayscale-0\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:grayscale-0` to apply the `grayscale-0` utility at only medium screen sizes and above.\n\n```\n<div class=\"grayscale md:grayscale-0\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `grayscale` utilities. You can customize these values by editing `theme.grayscale` or `theme.extend.grayscale` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `grayscale` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"grayscale-[50%]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Grayscale - Tailwind CSS",
    "description": "Utilities for applying grayscale filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/contrast",
    "markdown": "# Contrast - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Changing element contrast](#changing-element-contrast)\n\nUse the `contrast-*` utilities to control an element’s contrast.\n\n```\n<div class=\"contrast-50 ...\">\n  <!-- ... -->\n</div>\n<div class=\"contrast-100 ...\">\n  <!-- ... -->\n</div>\n<div class=\"contrast-125 ...\">\n  <!-- ... -->\n</div>\n<div class=\"contrast-200 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert contrast-125 md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:contrast-150` to only apply the `contrast-150` utility on hover.\n\n```\n<div class=\"contrast-125 hover:contrast-150\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:contrast-150` to apply the `contrast-150` utility at only medium screen sizes and above.\n\n```\n<div class=\"contrast-125 md:contrast-150\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `contrast` utilities. You can customize these values by editing `theme.contrast` or `theme.extend.contrast` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `contrast` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"contrast-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Contrast - Tailwind CSS",
    "description": "Utilities for applying contrast filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/drop-shadow",
    "markdown": "# Drop Shadow - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Adding a drop shadow](#adding-a-drop-shadow)\n\nUse the `drop-shadow-*` utilities to add a drop shadow to an element.\n\n```\n<div class=\"drop-shadow-md ...\">\n  <!-- ... -->\n</div>\n<div class=\"drop-shadow-lg ...\">\n  <!-- ... -->\n</div>\n<div class=\"drop-shadow-xl ...\">\n  <!-- ... -->\n</div>\n<div class=\"drop-shadow-2xl ...\">\n  <!-- ... -->\n</div>\n```\n\nThis is useful for applying shadows to irregular shapes, like text and SVG elements. For applying shadows to regular elements, you probably want to use [box shadow](https://tailwindcss.com/docs/box-shadow) instead.\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert drop-shadow-xl md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:drop-shadow-xl` to only apply the `drop-shadow-xl` utility on hover.\n\n```\n<div class=\"drop-shadow-md hover:drop-shadow-xl\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:drop-shadow-xl` to apply the `drop-shadow-xl` utility at only medium screen sizes and above.\n\n```\n<div class=\"drop-shadow-md md:drop-shadow-xl\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `dropShadow` utilities. You can customize these values by editing `theme.dropShadow` or `theme.extend.dropShadow` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `drop-shadow` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"drop-shadow-[0_35px_35px_rgba(0,0,0,0.25)]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Drop Shadow - Tailwind CSS",
    "description": "Utilities for applying drop-shadow filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/hue-rotate",
    "markdown": "# Hue Rotate - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Rotating an element’s hue](#rotating-an-elements-hue)\n\nUse the `hue-rotate-*` utilities to rotate the hue of an element.\n\n```\n<div class=\"hue-rotate-15 ...\">\n  <!-- ... -->\n</div>\n<div class=\"hue-rotate-90 ...\">\n  <!-- ... -->\n</div>\n<div class=\"hue-rotate-180 ...\">\n  <!-- ... -->\n</div>\n<div class=\"-hue-rotate-60 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Using negative values](#using-negative-values)\n\nTo use a negative hue-rotate value, prefix the class name with a dash to convert it to a negative value.\n\n```\n<div class=\"-hue-rotate-60 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert hue-rotate-180 md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:hue-rotate-0` to only apply the `hue-rotate-0` utility on hover.\n\n```\n<div class=\"hue-rotate-60 hover:hue-rotate-0\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:hue-rotate-0` to apply the `hue-rotate-0` utility at only medium screen sizes and above.\n\n```\n<div class=\"hue-rotate-60 md:hue-rotate-0\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `hue-rotate` utilities. You can customize these values by editing `theme.hueRotate` or `theme.extend.hueRotate` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `hue-rotate` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"hue-rotate-[270deg]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Hue Rotate - Tailwind CSS",
    "description": "Utilities for applying hue-rotate filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/saturate",
    "markdown": "# Saturate - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Changing element saturation](#changing-element-saturation)\n\nUse the `saturate-*` utilities to control an element’s saturation.\n\n```\n<div class=\"saturate-50 ...\">\n  <!-- ... -->\n</div>\n<div class=\"saturate-100 ...\">\n  <!-- ... -->\n</div>\n<div class=\"saturate-150 ...\">\n  <!-- ... -->\n</div>\n<div class=\"saturate-200 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert saturate-150 md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:saturate-150` to only apply the `saturate-150` utility on hover.\n\n```\n<div class=\"saturate-50 hover:saturate-150\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:saturate-150` to apply the `saturate-150` utility at only medium screen sizes and above.\n\n```\n<div class=\"saturate-50 md:saturate-150\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `saturate` utilities. You can customize these values by editing `theme.saturate` or `theme.extend.saturate` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `saturate` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"saturate-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Saturate - Tailwind CSS",
    "description": "Utilities for applying saturation filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-blur",
    "markdown": "# Backdrop Blur - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Blurring behind an element](#blurring-behind-an-element)\n\nUse the `backdrop-blur-*` utilities to control an element’s backdrop blur.\n\n```\n<div class=\"backdrop-blur-sm bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-blur-md bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-blur-xl bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-brightness-150 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-blur-lg` to only apply the `backdrop-blur-lg` utility on hover.\n\n```\n<div class=\"backdrop-blur-sm hover:backdrop-blur-lg\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-blur-lg` to apply the `backdrop-blur-lg` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-blur-sm md:backdrop-blur-lg\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-blur` utilities. You can customize these values by editing `theme.backdropBlur` or `theme.extend.backdropBlur` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-blur` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-blur-[2px]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Blur - Tailwind CSS",
    "description": "Utilities for applying backdrop blur filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/invert",
    "markdown": "# Invert - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Inverting an element’s color](#inverting-an-elements-color)\n\nUse the `invert` and `invert-0` utilities to control whether an element should be rendered with inverted colors or normally.\n\n```\n<div class=\"invert-0 ...\">\n  <!-- ... -->\n</div>\n<div class=\"invert ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert brightness-150 md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:invert-0` to only apply the `invert-0` utility on hover.\n\n```\n<div class=\"invert hover:invert-0\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:invert-0` to apply the `invert-0` utility at only medium screen sizes and above.\n\n```\n<div class=\"invert md:invert-0\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `invert` utilities. You can customize these values by editing `theme.invert` or `theme.extend.invert` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `invert` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"invert-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Invert - Tailwind CSS",
    "description": "Utilities for applying invert filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/sepia",
    "markdown": "# Sepia - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Adding sepia filters](#adding-sepia-filters)\n\nUse the `sepia` and `sepia-0` utilities to control whether an element should be rendered as sepia or in full color.\n\n```\n<div class=\"sepia-0 ...\">\n  <!-- ... -->\n</div>\n<div class=\"sepia ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing filters](#removing-filters)\n\nTo remove all of the filters on an element at once, use the `filter-none` utility:\n\n```\n<div class=\"blur-md invert sepia md:filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:sepia-0` to only apply the `sepia-0` utility on hover.\n\n```\n<div class=\"sepia hover:sepia-0\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:sepia-0` to apply the `sepia-0` utility at only medium screen sizes and above.\n\n```\n<div class=\"sepia md:sepia-0\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `sepia` utilities. You can customize these values by editing `theme.sepia` or `theme.extend.sepia` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `sepia` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"sepia-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Sepia - Tailwind CSS",
    "description": "Utilities for applying sepia filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-brightness",
    "markdown": "# Backdrop Brightness - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Controlling backdrop brightness](#controlling-backdrop-brightness)\n\nUse the `backdrop-brightness-*` utilities to control an element’s backdrop brightness.\n\n```\n<div class=\"backdrop-brightness-50 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-brightness-125 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-brightness-200 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-brightness-150 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-brightness-150` to only apply the `backdrop-brightness-150` utility on hover.\n\n```\n<div class=\"backdrop-brightness-110 hover:backdrop-brightness-150\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-brightness-150` to apply the `backdrop-brightness-150` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-brightness-110 md:backdrop-brightness-150\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-brightness` utilities. You can customize these values by editing `theme.backdropBrightness` or `theme.extend.backdropBrightness` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-brightness` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-brightness-[1.75]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Brightness - Tailwind CSS",
    "description": "Utilities for applying backdrop brightness filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-grayscale",
    "markdown": "# Backdrop Grayscale - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Making an element grayscale](#making-an-element-grayscale)\n\nUse the `backdrop-grayscale` and `backdrop-grayscale-0` utilities to control whether an element’s backdrop should be rendered as grayscale or in full color.\n\n```\n<div class=\"backdrop-grayscale-0 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-grayscale bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-grayscale md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-grayscale-0` to only apply the `backdrop-grayscale-0` utility on hover.\n\n```\n<div class=\"backdrop-grayscale hover:backdrop-grayscale-0\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-grayscale-0` to apply the `backdrop-grayscale-0` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-grayscale md:backdrop-grayscale-0\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-grayscale` utilities. You can customize these values by editing `theme.backdropGrayscale` or `theme.extend.backdropGrayscale` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-grayscale` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-grayscale-[.5]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Grayscale - Tailwind CSS",
    "description": "Utilities for applying backdrop grayscale filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-invert",
    "markdown": "# Backdrop Invert - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Inverting an element’s backdrop](#inverting-an-elements-backdrop)\n\nUse the `backdrop-invert` and `backdrop-invert-0` utilities to control whether an element should be rendered with inverted backdrop colors or normally.\n\n```\n<div class=\"backdrop-invert-0 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-invert md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-invert-0` to only apply the `backdrop-invert-0` utility on hover.\n\n```\n<div class=\"backdrop-invert hover:backdrop-invert-0\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-invert-0` to apply the `backdrop-invert-0` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-invert md:backdrop-invert-0\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-invert` utilities. You can customize these values by editing `theme.backdropInvert` or `theme.extend.backdropInvert` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-invert` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-invert-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Invert - Tailwind CSS",
    "description": "Utilities for applying backdrop invert filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-contrast",
    "markdown": "# Backdrop Contrast - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Controlling backdrop contrast](#controlling-backdrop-contrast)\n\nUse the `backdrop-contrast-*` utilities to control an element’s backdrop contrast.\n\n```\n<div class=\"backdrop-contrast-50 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-contrast-125 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-contrast-200 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-contrast-125 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-contrast-150` to only apply the `backdrop-contrast-150` utility on hover.\n\n```\n<div class=\"backdrop-contrast-125 hover:backdrop-contrast-150\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-contrast-150` to apply the `backdrop-contrast-150` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-contrast-125 md:backdrop-contrast-150\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-contrast` utilities. You can customize these values by editing `theme.backdropContrast` or `theme.extend.backdropContrast` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-contrast` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-contrast-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Contrast - Tailwind CSS",
    "description": "Utilities for applying backdrop contrast filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-opacity",
    "markdown": "# Backdrop Opacity - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Controlling opacity of backdrop filters](#controlling-opacity-of-backdrop-filters)\n\nUse the `backdrop-opacity-*` utilities to control the opacity of other backdrop filters applied to an element.\n\n```\n<div class=\"backdrop-opacity-10 backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-opacity-60 backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-opacity-95 backdrop-invert bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-opacity-60 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-opacity-60` to only apply the `backdrop-opacity-60` utility on hover.\n\n```\n<div class=\"backdrop-opacity-100 hover:backdrop-opacity-60\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-opacity-60` to apply the `backdrop-opacity-60` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-opacity-100 md:backdrop-opacity-60\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-opacity` utilities. You can customize these values by editing `theme.backdropOpacity` or `theme.extend.backdropOpacity` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-opacity` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-opacity-[.15]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Opacity - Tailwind CSS",
    "description": "Utilities for applying backdrop opacity filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-hue-rotate",
    "markdown": "# Backdrop Hue Rotate - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Rotating the backdrop’s hue](#rotating-the-backdrops-hue)\n\nUse the `backdrop-hue-rotate-*` utilities to rotate the hue of an element’s backdrop.\n\n```\n<div class=\"backdrop-hue-rotate-90 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-hue-rotate-180 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"-backdrop-hue-rotate-60 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Using negative values](#using-negative-values)\n\nTo use a negative backdrop hue rotate value, prefix the class name with a dash to convert it to a negative value.\n\n```\n<div class=\"-backdrop-hue-rotate-60\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-hue-rotate-180 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-hue-rotate-60` to only apply the `backdrop-hue-rotate-60` utility on hover.\n\n```\n<div class=\"backdrop-hue-rotate-15 hover:backdrop-hue-rotate-60\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-hue-rotate-60` to apply the `backdrop-hue-rotate-60` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-hue-rotate-15 md:backdrop-hue-rotate-60\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-hue-rotate` utilities. You can customize these values by editing `theme.backdropHueRotate` or `theme.extend.backdropHueRotate` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-hue-rotate` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-hue-rotate-[270deg]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Hue Rotate - Tailwind CSS",
    "description": "Utilities for applying backdrop hue-rotate filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/backdrop-saturate",
    "markdown": "# Backdrop Saturate - Tailwind CSS\n\n## [​Basic usage](#basic-usage)\n\n### [​Changing backdrop saturation](#changing-backdrop-saturation)\n\nUse the `backdrop-saturate-*` utilities to control an element’s backdrop saturation.\n\n```\n<div class=\"backdrop-saturate-50 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-saturate-125 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n<div class=\"backdrop-saturate-200 bg-white/30 ...\">\n  <!-- ... -->\n</div>\n```\n\n### [​Removing backdrop filters](#removing-backdrop-filters)\n\nTo remove all of the backdrop filters on an element at once, use the `backdrop-filter-none` utility:\n\n```\n<div class=\"backdrop-blur-md backdrop-saturate-150 md:backdrop-filter-none\">\n  <!-- ... -->\n</div>\n```\n\nThis can be useful when you want to remove backdrop filters conditionally, such as on hover or at a particular breakpoint.\n\n* * *\n\n## [​Applying conditionally](#applying-conditionally)\n\n### [​Hover, focus, and other states](#hover-focus-and-other-states)\n\nTailwind lets you conditionally apply utility classes in different states using variant modifiers. For example, use `hover:backdrop-saturate-150` to only apply the `backdrop-saturate-150` utility on hover.\n\n```\n<div class=\"backdrop-saturate-50 hover:backdrop-saturate-150\">\n  <!-- ... -->\n</div>\n```\n\nFor a complete list of all available state modifiers, check out the [Hover, Focus, & Other States](https://tailwindcss.com/docs/hover-focus-and-other-states) documentation.\n\n### [​Breakpoints and media queries](#breakpoints-and-media-queries)\n\nYou can also use variant modifiers to target media queries like responsive breakpoints, dark mode, prefers-reduced-motion, and more. For example, use `md:backdrop-saturate-150` to apply the `backdrop-saturate-150` utility at only medium screen sizes and above.\n\n```\n<div class=\"backdrop-saturate-50 md:backdrop-saturate-150\">\n  <!-- ... -->\n</div>\n```\n\nTo learn more, check out the documentation on [Responsive Design](https://tailwindcss.com/docs/responsive-design), [Dark Mode](https://tailwindcss.com/docs/dark-mode) and [other media query modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#media-and-feature-queries).\n\n* * *\n\n## [​Using custom values](#using-custom-values)\n\n### [​Customizing your theme](#customizing-your-theme)\n\nBy default, Tailwind includes a handful of general purpose `backdrop-saturate` utilities. You can customize these values by editing `theme.backdropSaturate` or `theme.extend.backdropSaturate` in your `tailwind.config.js` file.\n\nLearn more about customizing the default theme in the [theme customization](https://tailwindcss.com/docs/theme#customizing-the-default-theme) documentation.\n\n### [​Arbitrary values](#arbitrary-values)\n\nIf you need to use a one-off `backdrop-saturate` value that doesn’t make sense to include in your theme, use square brackets to generate a property on the fly using any arbitrary value.\n\n```\n<div class=\"backdrop-saturate-[.25]\">\n  <!-- ... -->\n</div>\n```\n\nLearn more about arbitrary value support in the [arbitrary values](https://tailwindcss.com/docs/adding-custom-styles#using-arbitrary-values) documentation.",
    "title": "Backdrop Saturate - Tailwind CSS",
    "description": "Utilities for applying backdrop saturation filters to an element.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/nextjs",
    "markdown": "# Install Tailwind CSS with Next.js\n\n## Create your project\n\nStart by creating a new Next.js project if you don’t have one set up already. The most common approach is to use [Create Next App](https://nextjs.org/docs/api-reference/create-next-app).\n\n```\nnpx create-next-app@latest my-project --typescript --eslintcd my-project\n```\n\nInstall `tailwindcss` and its peer dependencies via npm, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n\n```\nnpm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n```\n\n## Configure your template paths\n\nAdd the paths to all of your template files in your `tailwind.config.js` file.\n\n```\n/** @type {import('tailwindcss').Config} */\nmodule.exports = {\n  content: [\n    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n \n    // Or if using `src` directory:\n    \"./src/**/*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    extend: {},\n  },\n  plugins: [],\n}\n```\n\n## Add the Tailwind directives to your CSS\n\nAdd the `@tailwind` directives for each of Tailwind’s layers to your `globals.css` file.\n\n```\n@tailwind base;\n@tailwind components;\n@tailwind utilities;\n```\n\n## Start your build process\n\nRun your build process with `npm run dev`.\n\n## Start using Tailwind in your project\n\nStart using Tailwind’s utility classes to style your content.\n\n```\nexport default function Home() {\n  return (\n    <h1 className=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n  )\n}\n```",
    "title": "Install Tailwind CSS with Next.js - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Next.js v10+ project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/laravel",
    "markdown": "# Install Tailwind CSS with Laravel\n\n*   ## [Using Vite](https://tailwindcss.com/docs/guides/laravel#vite)\n    \n*   ## [Using Laravel Mix](https://tailwindcss.com/docs/guides/laravel#mix)\n    \n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ```\n    composer create-project laravel/laravel my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies via npm, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    export default {\n      content: [\n        \"./resources/**/*.blade.php\",\n        \"./resources/**/*.js\",\n        \"./resources/**/*.vue\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./resources/css/app.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Make sure your compiled CSS is included in the `<head>` then start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <!doctype html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      @vite('resources/css/app.css')\n    </head>\n    <body>\n      <h1 class=\"text-3xl font-bold underline\">\n        Hello world!\n      </h1>\n    </body>\n    </html>\n    ```",
    "title": "Install Tailwind CSS with Laravel - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Laravel project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/ring-opacity",
    "markdown": "# Ring Color - Tailwind CSS\n\nring-inherit--tw-ring-color: inherit; ring-current--tw-ring-color: currentColor; ring-transparent--tw-ring-color: transparent; ring-black--tw-ring-color: rgb(0 0 0); ring-white--tw-ring-color: rgb(255 255 255); ring-slate-50--tw-ring-color: rgb(248 250 252); ring-slate-100--tw-ring-color: rgb(241 245 249); ring-slate-200--tw-ring-color: rgb(226 232 240); ring-slate-300--tw-ring-color: rgb(203 213 225); ring-slate-400--tw-ring-color: rgb(148 163 184); ring-slate-500--tw-ring-color: rgb(100 116 139); ring-slate-600--tw-ring-color: rgb(71 85 105); ring-slate-700--tw-ring-color: rgb(51 65 85); ring-slate-800--tw-ring-color: rgb(30 41 59); ring-slate-900--tw-ring-color: rgb(15 23 42); ring-slate-950--tw-ring-color: rgb(2 6 23); ring-gray-50--tw-ring-color: rgb(249 250 251); ring-gray-100--tw-ring-color: rgb(243 244 246); ring-gray-200--tw-ring-color: rgb(229 231 235); ring-gray-300--tw-ring-color: rgb(209 213 219); ring-gray-400--tw-ring-color: rgb(156 163 175); ring-gray-500--tw-ring-color: rgb(107 114 128); ring-gray-600--tw-ring-color: rgb(75 85 99); ring-gray-700--tw-ring-color: rgb(55 65 81); ring-gray-800--tw-ring-color: rgb(31 41 55); ring-gray-900--tw-ring-color: rgb(17 24 39); ring-gray-950--tw-ring-color: rgb(3 7 18); ring-zinc-50--tw-ring-color: rgb(250 250 250); ring-zinc-100--tw-ring-color: rgb(244 244 245); ring-zinc-200--tw-ring-color: rgb(228 228 231); ring-zinc-300--tw-ring-color: rgb(212 212 216); ring-zinc-400--tw-ring-color: rgb(161 161 170); ring-zinc-500--tw-ring-color: rgb(113 113 122); ring-zinc-600--tw-ring-color: rgb(82 82 91); ring-zinc-700--tw-ring-color: rgb(63 63 70); ring-zinc-800--tw-ring-color: rgb(39 39 42); ring-zinc-900--tw-ring-color: rgb(24 24 27); ring-zinc-950--tw-ring-color: rgb(9 9 11); ring-neutral-50--tw-ring-color: rgb(250 250 250); ring-neutral-100--tw-ring-color: rgb(245 245 245); ring-neutral-200--tw-ring-color: rgb(229 229 229); ring-neutral-300--tw-ring-color: rgb(212 212 212); ring-neutral-400--tw-ring-color: rgb(163 163 163); ring-neutral-500--tw-ring-color: rgb(115 115 115); ring-neutral-600--tw-ring-color: rgb(82 82 82); ring-neutral-700--tw-ring-color: rgb(64 64 64); ring-neutral-800--tw-ring-color: rgb(38 38 38); ring-neutral-900--tw-ring-color: rgb(23 23 23); ring-neutral-950--tw-ring-color: rgb(10 10 10); ring-stone-50--tw-ring-color: rgb(250 250 249); ring-stone-100--tw-ring-color: rgb(245 245 244); ring-stone-200--tw-ring-color: rgb(231 229 228); ring-stone-300--tw-ring-color: rgb(214 211 209); ring-stone-400--tw-ring-color: rgb(168 162 158); ring-stone-500--tw-ring-color: rgb(120 113 108); ring-stone-600--tw-ring-color: rgb(87 83 78); ring-stone-700--tw-ring-color: rgb(68 64 60); ring-stone-800--tw-ring-color: rgb(41 37 36); ring-stone-900--tw-ring-color: rgb(28 25 23); ring-stone-950--tw-ring-color: rgb(12 10 9); ring-red-50--tw-ring-color: rgb(254 242 242); ring-red-100--tw-ring-color: rgb(254 226 226); ring-red-200--tw-ring-color: rgb(254 202 202); ring-red-300--tw-ring-color: rgb(252 165 165); ring-red-400--tw-ring-color: rgb(248 113 113); ring-red-500--tw-ring-color: rgb(239 68 68); ring-red-600--tw-ring-color: rgb(220 38 38); ring-red-700--tw-ring-color: rgb(185 28 28); ring-red-800--tw-ring-color: rgb(153 27 27); ring-red-900--tw-ring-color: rgb(127 29 29); ring-red-950--tw-ring-color: rgb(69 10 10); ring-orange-50--tw-ring-color: rgb(255 247 237); ring-orange-100--tw-ring-color: rgb(255 237 213); ring-orange-200--tw-ring-color: rgb(254 215 170); ring-orange-300--tw-ring-color: rgb(253 186 116); ring-orange-400--tw-ring-color: rgb(251 146 60); ring-orange-500--tw-ring-color: rgb(249 115 22); ring-orange-600--tw-ring-color: rgb(234 88 12); ring-orange-700--tw-ring-color: rgb(194 65 12); ring-orange-800--tw-ring-color: rgb(154 52 18); ring-orange-900--tw-ring-color: rgb(124 45 18); ring-orange-950--tw-ring-color: rgb(67 20 7); ring-amber-50--tw-ring-color: rgb(255 251 235); ring-amber-100--tw-ring-color: rgb(254 243 199); ring-amber-200--tw-ring-color: rgb(253 230 138); ring-amber-300--tw-ring-color: rgb(252 211 77); ring-amber-400--tw-ring-color: rgb(251 191 36); ring-amber-500--tw-ring-color: rgb(245 158 11); ring-amber-600--tw-ring-color: rgb(217 119 6); ring-amber-700--tw-ring-color: rgb(180 83 9); ring-amber-800--tw-ring-color: rgb(146 64 14); ring-amber-900--tw-ring-color: rgb(120 53 15); ring-amber-950--tw-ring-color: rgb(69 26 3); ring-yellow-50--tw-ring-color: rgb(254 252 232); ring-yellow-100--tw-ring-color: rgb(254 249 195); ring-yellow-200--tw-ring-color: rgb(254 240 138); ring-yellow-300--tw-ring-color: rgb(253 224 71); ring-yellow-400--tw-ring-color: rgb(250 204 21); ring-yellow-500--tw-ring-color: rgb(234 179 8); ring-yellow-600--tw-ring-color: rgb(202 138 4); ring-yellow-700--tw-ring-color: rgb(161 98 7); ring-yellow-800--tw-ring-color: rgb(133 77 14); ring-yellow-900--tw-ring-color: rgb(113 63 18); ring-yellow-950--tw-ring-color: rgb(66 32 6); ring-lime-50--tw-ring-color: rgb(247 254 231); ring-lime-100--tw-ring-color: rgb(236 252 203); ring-lime-200--tw-ring-color: rgb(217 249 157); ring-lime-300--tw-ring-color: rgb(190 242 100); ring-lime-400--tw-ring-color: rgb(163 230 53); ring-lime-500--tw-ring-color: rgb(132 204 22); ring-lime-600--tw-ring-color: rgb(101 163 13); ring-lime-700--tw-ring-color: rgb(77 124 15); ring-lime-800--tw-ring-color: rgb(63 98 18); ring-lime-900--tw-ring-color: rgb(54 83 20); ring-lime-950--tw-ring-color: rgb(26 46 5); ring-green-50--tw-ring-color: rgb(240 253 244); ring-green-100--tw-ring-color: rgb(220 252 231); ring-green-200--tw-ring-color: rgb(187 247 208); ring-green-300--tw-ring-color: rgb(134 239 172); ring-green-400--tw-ring-color: rgb(74 222 128); ring-green-500--tw-ring-color: rgb(34 197 94); ring-green-600--tw-ring-color: rgb(22 163 74); ring-green-700--tw-ring-color: rgb(21 128 61); ring-green-800--tw-ring-color: rgb(22 101 52); ring-green-900--tw-ring-color: rgb(20 83 45); ring-green-950--tw-ring-color: rgb(5 46 22); ring-emerald-50--tw-ring-color: rgb(236 253 245); ring-emerald-100--tw-ring-color: rgb(209 250 229); ring-emerald-200--tw-ring-color: rgb(167 243 208); ring-emerald-300--tw-ring-color: rgb(110 231 183); ring-emerald-400--tw-ring-color: rgb(52 211 153); ring-emerald-500--tw-ring-color: rgb(16 185 129); ring-emerald-600--tw-ring-color: rgb(5 150 105); ring-emerald-700--tw-ring-color: rgb(4 120 87); ring-emerald-800--tw-ring-color: rgb(6 95 70); ring-emerald-900--tw-ring-color: rgb(6 78 59); ring-emerald-950--tw-ring-color: rgb(2 44 34); ring-teal-50--tw-ring-color: rgb(240 253 250); ring-teal-100--tw-ring-color: rgb(204 251 241); ring-teal-200--tw-ring-color: rgb(153 246 228); ring-teal-300--tw-ring-color: rgb(94 234 212); ring-teal-400--tw-ring-color: rgb(45 212 191); ring-teal-500--tw-ring-color: rgb(20 184 166); ring-teal-600--tw-ring-color: rgb(13 148 136); ring-teal-700--tw-ring-color: rgb(15 118 110); ring-teal-800--tw-ring-color: rgb(17 94 89); ring-teal-900--tw-ring-color: rgb(19 78 74); ring-teal-950--tw-ring-color: rgb(4 47 46); ring-cyan-50--tw-ring-color: rgb(236 254 255); ring-cyan-100--tw-ring-color: rgb(207 250 254); ring-cyan-200--tw-ring-color: rgb(165 243 252); ring-cyan-300--tw-ring-color: rgb(103 232 249); ring-cyan-400--tw-ring-color: rgb(34 211 238); ring-cyan-500--tw-ring-color: rgb(6 182 212); ring-cyan-600--tw-ring-color: rgb(8 145 178); ring-cyan-700--tw-ring-color: rgb(14 116 144); ring-cyan-800--tw-ring-color: rgb(21 94 117); ring-cyan-900--tw-ring-color: rgb(22 78 99); ring-cyan-950--tw-ring-color: rgb(8 51 68); ring-sky-50--tw-ring-color: rgb(240 249 255); ring-sky-100--tw-ring-color: rgb(224 242 254); ring-sky-200--tw-ring-color: rgb(186 230 253); ring-sky-300--tw-ring-color: rgb(125 211 252); ring-sky-400--tw-ring-color: rgb(56 189 248); ring-sky-500--tw-ring-color: rgb(14 165 233); ring-sky-600--tw-ring-color: rgb(2 132 199); ring-sky-700--tw-ring-color: rgb(3 105 161); ring-sky-800--tw-ring-color: rgb(7 89 133); ring-sky-900--tw-ring-color: rgb(12 74 110); ring-sky-950--tw-ring-color: rgb(8 47 73); ring-blue-50--tw-ring-color: rgb(239 246 255); ring-blue-100--tw-ring-color: rgb(219 234 254); ring-blue-200--tw-ring-color: rgb(191 219 254); ring-blue-300--tw-ring-color: rgb(147 197 253); ring-blue-400--tw-ring-color: rgb(96 165 250); ring-blue-500--tw-ring-color: rgb(59 130 246); ring-blue-600--tw-ring-color: rgb(37 99 235); ring-blue-700--tw-ring-color: rgb(29 78 216); ring-blue-800--tw-ring-color: rgb(30 64 175); ring-blue-900--tw-ring-color: rgb(30 58 138); ring-blue-950--tw-ring-color: rgb(23 37 84); ring-indigo-50--tw-ring-color: rgb(238 242 255); ring-indigo-100--tw-ring-color: rgb(224 231 255); ring-indigo-200--tw-ring-color: rgb(199 210 254); ring-indigo-300--tw-ring-color: rgb(165 180 252); ring-indigo-400--tw-ring-color: rgb(129 140 248); ring-indigo-500--tw-ring-color: rgb(99 102 241); ring-indigo-600--tw-ring-color: rgb(79 70 229); ring-indigo-700--tw-ring-color: rgb(67 56 202); ring-indigo-800--tw-ring-color: rgb(55 48 163); ring-indigo-900--tw-ring-color: rgb(49 46 129); ring-indigo-950--tw-ring-color: rgb(30 27 75); ring-violet-50--tw-ring-color: rgb(245 243 255); ring-violet-100--tw-ring-color: rgb(237 233 254); ring-violet-200--tw-ring-color: rgb(221 214 254); ring-violet-300--tw-ring-color: rgb(196 181 253); ring-violet-400--tw-ring-color: rgb(167 139 250); ring-violet-500--tw-ring-color: rgb(139 92 246); ring-violet-600--tw-ring-color: rgb(124 58 237); ring-violet-700--tw-ring-color: rgb(109 40 217); ring-violet-800--tw-ring-color: rgb(91 33 182); ring-violet-900--tw-ring-color: rgb(76 29 149); ring-violet-950--tw-ring-color: rgb(46 16 101); ring-purple-50--tw-ring-color: rgb(250 245 255); ring-purple-100--tw-ring-color: rgb(243 232 255); ring-purple-200--tw-ring-color: rgb(233 213 255); ring-purple-300--tw-ring-color: rgb(216 180 254); ring-purple-400--tw-ring-color: rgb(192 132 252); ring-purple-500--tw-ring-color: rgb(168 85 247); ring-purple-600--tw-ring-color: rgb(147 51 234); ring-purple-700--tw-ring-color: rgb(126 34 206); ring-purple-800--tw-ring-color: rgb(107 33 168); ring-purple-900--tw-ring-color: rgb(88 28 135); ring-purple-950--tw-ring-color: rgb(59 7 100); ring-fuchsia-50--tw-ring-color: rgb(253 244 255); ring-fuchsia-100--tw-ring-color: rgb(250 232 255); ring-fuchsia-200--tw-ring-color: rgb(245 208 254); ring-fuchsia-300--tw-ring-color: rgb(240 171 252); ring-fuchsia-400--tw-ring-color: rgb(232 121 249); ring-fuchsia-500--tw-ring-color: rgb(217 70 239); ring-fuchsia-600--tw-ring-color: rgb(192 38 211); ring-fuchsia-700--tw-ring-color: rgb(162 28 175); ring-fuchsia-800--tw-ring-color: rgb(134 25 143); ring-fuchsia-900--tw-ring-color: rgb(112 26 117); ring-fuchsia-950--tw-ring-color: rgb(74 4 78); ring-pink-50--tw-ring-color: rgb(253 242 248); ring-pink-100--tw-ring-color: rgb(252 231 243); ring-pink-200--tw-ring-color: rgb(251 207 232); ring-pink-300--tw-ring-color: rgb(249 168 212); ring-pink-400--tw-ring-color: rgb(244 114 182); ring-pink-500--tw-ring-color: rgb(236 72 153); ring-pink-600--tw-ring-color: rgb(219 39 119); ring-pink-700--tw-ring-color: rgb(190 24 93); ring-pink-800--tw-ring-color: rgb(157 23 77); ring-pink-900--tw-ring-color: rgb(131 24 67); ring-pink-950--tw-ring-color: rgb(80 7 36); ring-rose-50--tw-ring-color: rgb(255 241 242); ring-rose-100--tw-ring-color: rgb(255 228 230); ring-rose-200--tw-ring-color: rgb(254 205 211); ring-rose-300--tw-ring-color: rgb(253 164 175); ring-rose-400--tw-ring-color: rgb(251 113 133); ring-rose-500--tw-ring-color: rgb(244 63 94); ring-rose-600--tw-ring-color: rgb(225 29 72); ring-rose-700--tw-ring-color: rgb(190 18 60); ring-rose-800--tw-ring-color: rgb(159 18 57); ring-rose-900--tw-ring-color: rgb(136 19 55); ring-rose-950--tw-ring-color: rgb(76 5 25);",
    "title": "Ring Color - Tailwind CSS",
    "description": "Utilities for setting the color of outline rings.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/nuxtjs",
    "markdown": "# Install Tailwind CSS with Nuxt\n\nInstallation\n\nSetting up Tailwind CSS in a Nuxt project.\n\n*   ## [Standard installation](https://tailwindcss.com/docs/guides/nuxtjs#standard)\n    \n*   ## [Using Nuxt Modules](https://tailwindcss.com/docs/guides/nuxtjs#modules)\n    \n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Nuxt project if you don’t have one set up already. The most common approach is to use the [Nuxt Command Line Interface](https://nuxt.com/docs/getting-started/installation).\n    \n    ```\n    npx nuxi init my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies via npm, and then run the init command to generate a `tailwind.config.js` file.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init\n    ```\n    \n3.  ## Add Tailwind to your PostCSS configuration\n    \n    Add `tailwindcss` and `autoprefixer` to the `postcss.plugins` object in your `nuxt.config.js` file.\n    \n    ```\n    // https://nuxt.com/docs/api/configuration/nuxt-config\n    export default defineNuxtConfig({\n      devtools: { enabled: true },\n      postcss: {\n        plugins: {\n          tailwindcss: {},\n          autoprefixer: {},\n        },\n      },\n    })\n    ```\n    \n4.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./components/**/*.{js,vue,ts}\",\n        \"./layouts/**/*.vue\",\n        \"./pages/**/*.vue\",\n        \"./plugins/**/*.{js,ts}\",\n        \"./app.vue\",\n        \"./error.vue\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n5.  ## Add the Tailwind directives to your CSS\n    \n    Create an `./assets/css/main.css` file and add the `@tailwind` directives for each of Tailwind’s layers.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n6.  ## Add the CSS file globally\n    \n    Add your newly-created `./assets/css/main.css` to the `css` array in your `nuxt.config.js` file.\n    \n    ```\n    // https://nuxt.com/docs/api/configuration/nuxt-config\n    export default defineNuxtConfig({\n      devtools: { enabled: true },\n      css: ['~/assets/css/main.css'],\n      postcss: {\n        plugins: {\n          tailwindcss: {},\n          autoprefixer: {},\n        },\n      },\n    })\n    ```\n    \n7.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n8.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <template>\n      <h1 class=\"text-3xl font-bold underline\">\n        Hello world!\n      </h1>\n    </template>\n    ```",
    "title": "Install Tailwind CSS with Nuxt - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Nuxt project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/vite",
    "markdown": "# Install Tailwind CSS with Vite\n\n*   ## [Using React](https://tailwindcss.com/docs/guides/vite#react)\n    \n*   ## [Using Vue](https://tailwindcss.com/docs/guides/vite#vue)\n    \n*   ## [Using Svelte](https://tailwindcss.com/docs/guides/vite#svelte)\n    \n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Vite project if you don’t have one set up already. The most common approach is to use [Create Vite](https://vitejs.dev/guide/#scaffolding-your-first-vite-project).\n    \n    ```\n    npm create vite@latest my-project -- --template reactcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies, then generate your `tailwind.config.js` and `postcss.config.js` files.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    export default {\n      content: [\n        \"./index.html\",\n        \"./src/**/*.{js,ts,jsx,tsx}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./src/index.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    export default function App() {\n      return (\n        <h1 className=\"text-3xl font-bold underline\">\n          Hello world!\n        </h1>\n      )\n    }\n    ```",
    "title": "Install Tailwind CSS with Vite - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Vite project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/scroll-padding",
    "markdown": "# Scroll Padding - Tailwind CSS\n\nscroll-p-0scroll-padding: 0px; scroll-px-0scroll-padding-left: 0px; scroll-padding-right: 0px; scroll-py-0scroll-padding-top: 0px; scroll-padding-bottom: 0px; scroll-ps-0scroll-padding-inline-start: 0px; scroll-pe-0scroll-padding-inline-end: 0px; scroll-pt-0scroll-padding-top: 0px; scroll-pr-0scroll-padding-right: 0px; scroll-pb-0scroll-padding-bottom: 0px; scroll-pl-0scroll-padding-left: 0px; scroll-p-pxscroll-padding: 1px; scroll-px-pxscroll-padding-left: 1px; scroll-padding-right: 1px; scroll-py-pxscroll-padding-top: 1px; scroll-padding-bottom: 1px; scroll-ps-pxscroll-padding-inline-start: 1px; scroll-pe-pxscroll-padding-inline-end: 1px; scroll-pt-pxscroll-padding-top: 1px; scroll-pr-pxscroll-padding-right: 1px; scroll-pb-pxscroll-padding-bottom: 1px; scroll-pl-pxscroll-padding-left: 1px; scroll-p-0.5scroll-padding: 0.125rem; /\\* 2px \\*/ scroll-px-0.5scroll-padding-left: 0.125rem; /\\* 2px \\*/ scroll-padding-right: 0.125rem; /\\* 2px \\*/ scroll-py-0.5scroll-padding-top: 0.125rem; /\\* 2px \\*/ scroll-padding-bottom: 0.125rem; /\\* 2px \\*/ scroll-ps-0.5scroll-padding-inline-start: 0.125rem; /\\* 2px \\*/ scroll-pe-0.5scroll-padding-inline-end: 0.125rem; /\\* 2px \\*/ scroll-pt-0.5scroll-padding-top: 0.125rem; /\\* 2px \\*/ scroll-pr-0.5scroll-padding-right: 0.125rem; /\\* 2px \\*/ scroll-pb-0.5scroll-padding-bottom: 0.125rem; /\\* 2px \\*/ scroll-pl-0.5scroll-padding-left: 0.125rem; /\\* 2px \\*/ scroll-p-1scroll-padding: 0.25rem; /\\* 4px \\*/ scroll-px-1scroll-padding-left: 0.25rem; /\\* 4px \\*/ scroll-padding-right: 0.25rem; /\\* 4px \\*/ scroll-py-1scroll-padding-top: 0.25rem; /\\* 4px \\*/ scroll-padding-bottom: 0.25rem; /\\* 4px \\*/ scroll-ps-1scroll-padding-inline-start: 0.25rem; /\\* 4px \\*/ scroll-pe-1scroll-padding-inline-end: 0.25rem; /\\* 4px \\*/ scroll-pt-1scroll-padding-top: 0.25rem; /\\* 4px \\*/ scroll-pr-1scroll-padding-right: 0.25rem; /\\* 4px \\*/ scroll-pb-1scroll-padding-bottom: 0.25rem; /\\* 4px \\*/ scroll-pl-1scroll-padding-left: 0.25rem; /\\* 4px \\*/ scroll-p-1.5scroll-padding: 0.375rem; /\\* 6px \\*/ scroll-px-1.5scroll-padding-left: 0.375rem; /\\* 6px \\*/ scroll-padding-right: 0.375rem; /\\* 6px \\*/ scroll-py-1.5scroll-padding-top: 0.375rem; /\\* 6px \\*/ scroll-padding-bottom: 0.375rem; /\\* 6px \\*/ scroll-ps-1.5scroll-padding-inline-start: 0.375rem; /\\* 6px \\*/ scroll-pe-1.5scroll-padding-inline-end: 0.375rem; /\\* 6px \\*/ scroll-pt-1.5scroll-padding-top: 0.375rem; /\\* 6px \\*/ scroll-pr-1.5scroll-padding-right: 0.375rem; /\\* 6px \\*/ scroll-pb-1.5scroll-padding-bottom: 0.375rem; /\\* 6px \\*/ scroll-pl-1.5scroll-padding-left: 0.375rem; /\\* 6px \\*/ scroll-p-2scroll-padding: 0.5rem; /\\* 8px \\*/ scroll-px-2scroll-padding-left: 0.5rem; /\\* 8px \\*/ scroll-padding-right: 0.5rem; /\\* 8px \\*/ scroll-py-2scroll-padding-top: 0.5rem; /\\* 8px \\*/ scroll-padding-bottom: 0.5rem; /\\* 8px \\*/ scroll-ps-2scroll-padding-inline-start: 0.5rem; /\\* 8px \\*/ scroll-pe-2scroll-padding-inline-end: 0.5rem; /\\* 8px \\*/ scroll-pt-2scroll-padding-top: 0.5rem; /\\* 8px \\*/ scroll-pr-2scroll-padding-right: 0.5rem; /\\* 8px \\*/ scroll-pb-2scroll-padding-bottom: 0.5rem; /\\* 8px \\*/ scroll-pl-2scroll-padding-left: 0.5rem; /\\* 8px \\*/ scroll-p-2.5scroll-padding: 0.625rem; /\\* 10px \\*/ scroll-px-2.5scroll-padding-left: 0.625rem; /\\* 10px \\*/ scroll-padding-right: 0.625rem; /\\* 10px \\*/ scroll-py-2.5scroll-padding-top: 0.625rem; /\\* 10px \\*/ scroll-padding-bottom: 0.625rem; /\\* 10px \\*/ scroll-ps-2.5scroll-padding-inline-start: 0.625rem; /\\* 10px \\*/ scroll-pe-2.5scroll-padding-inline-end: 0.625rem; /\\* 10px \\*/ scroll-pt-2.5scroll-padding-top: 0.625rem; /\\* 10px \\*/ scroll-pr-2.5scroll-padding-right: 0.625rem; /\\* 10px \\*/ scroll-pb-2.5scroll-padding-bottom: 0.625rem; /\\* 10px \\*/ scroll-pl-2.5scroll-padding-left: 0.625rem; /\\* 10px \\*/ scroll-p-3scroll-padding: 0.75rem; /\\* 12px \\*/ scroll-px-3scroll-padding-left: 0.75rem; /\\* 12px \\*/ scroll-padding-right: 0.75rem; /\\* 12px \\*/ scroll-py-3scroll-padding-top: 0.75rem; /\\* 12px \\*/ scroll-padding-bottom: 0.75rem; /\\* 12px \\*/ scroll-ps-3scroll-padding-inline-start: 0.75rem; /\\* 12px \\*/ scroll-pe-3scroll-padding-inline-end: 0.75rem; /\\* 12px \\*/ scroll-pt-3scroll-padding-top: 0.75rem; /\\* 12px \\*/ scroll-pr-3scroll-padding-right: 0.75rem; /\\* 12px \\*/ scroll-pb-3scroll-padding-bottom: 0.75rem; /\\* 12px \\*/ scroll-pl-3scroll-padding-left: 0.75rem; /\\* 12px \\*/ scroll-p-3.5scroll-padding: 0.875rem; /\\* 14px \\*/ scroll-px-3.5scroll-padding-left: 0.875rem; /\\* 14px \\*/ scroll-padding-right: 0.875rem; /\\* 14px \\*/ scroll-py-3.5scroll-padding-top: 0.875rem; /\\* 14px \\*/ scroll-padding-bottom: 0.875rem; /\\* 14px \\*/ scroll-ps-3.5scroll-padding-inline-start: 0.875rem; /\\* 14px \\*/ scroll-pe-3.5scroll-padding-inline-end: 0.875rem; /\\* 14px \\*/ scroll-pt-3.5scroll-padding-top: 0.875rem; /\\* 14px \\*/ scroll-pr-3.5scroll-padding-right: 0.875rem; /\\* 14px \\*/ scroll-pb-3.5scroll-padding-bottom: 0.875rem; /\\* 14px \\*/ scroll-pl-3.5scroll-padding-left: 0.875rem; /\\* 14px \\*/ scroll-p-4scroll-padding: 1rem; /\\* 16px \\*/ scroll-px-4scroll-padding-left: 1rem; /\\* 16px \\*/ scroll-padding-right: 1rem; /\\* 16px \\*/ scroll-py-4scroll-padding-top: 1rem; /\\* 16px \\*/ scroll-padding-bottom: 1rem; /\\* 16px \\*/ scroll-ps-4scroll-padding-inline-start: 1rem; /\\* 16px \\*/ scroll-pe-4scroll-padding-inline-end: 1rem; /\\* 16px \\*/ scroll-pt-4scroll-padding-top: 1rem; /\\* 16px \\*/ scroll-pr-4scroll-padding-right: 1rem; /\\* 16px \\*/ scroll-pb-4scroll-padding-bottom: 1rem; /\\* 16px \\*/ scroll-pl-4scroll-padding-left: 1rem; /\\* 16px \\*/ scroll-p-5scroll-padding: 1.25rem; /\\* 20px \\*/ scroll-px-5scroll-padding-left: 1.25rem; /\\* 20px \\*/ scroll-padding-right: 1.25rem; /\\* 20px \\*/ scroll-py-5scroll-padding-top: 1.25rem; /\\* 20px \\*/ scroll-padding-bottom: 1.25rem; /\\* 20px \\*/ scroll-ps-5scroll-padding-inline-start: 1.25rem; /\\* 20px \\*/ scroll-pe-5scroll-padding-inline-end: 1.25rem; /\\* 20px \\*/ scroll-pt-5scroll-padding-top: 1.25rem; /\\* 20px \\*/ scroll-pr-5scroll-padding-right: 1.25rem; /\\* 20px \\*/ scroll-pb-5scroll-padding-bottom: 1.25rem; /\\* 20px \\*/ scroll-pl-5scroll-padding-left: 1.25rem; /\\* 20px \\*/ scroll-p-6scroll-padding: 1.5rem; /\\* 24px \\*/ scroll-px-6scroll-padding-left: 1.5rem; /\\* 24px \\*/ scroll-padding-right: 1.5rem; /\\* 24px \\*/ scroll-py-6scroll-padding-top: 1.5rem; /\\* 24px \\*/ scroll-padding-bottom: 1.5rem; /\\* 24px \\*/ scroll-ps-6scroll-padding-inline-start: 1.5rem; /\\* 24px \\*/ scroll-pe-6scroll-padding-inline-end: 1.5rem; /\\* 24px \\*/ scroll-pt-6scroll-padding-top: 1.5rem; /\\* 24px \\*/ scroll-pr-6scroll-padding-right: 1.5rem; /\\* 24px \\*/ scroll-pb-6scroll-padding-bottom: 1.5rem; /\\* 24px \\*/ scroll-pl-6scroll-padding-left: 1.5rem; /\\* 24px \\*/ scroll-p-7scroll-padding: 1.75rem; /\\* 28px \\*/ scroll-px-7scroll-padding-left: 1.75rem; /\\* 28px \\*/ scroll-padding-right: 1.75rem; /\\* 28px \\*/ scroll-py-7scroll-padding-top: 1.75rem; /\\* 28px \\*/ scroll-padding-bottom: 1.75rem; /\\* 28px \\*/ scroll-ps-7scroll-padding-inline-start: 1.75rem; /\\* 28px \\*/ scroll-pe-7scroll-padding-inline-end: 1.75rem; /\\* 28px \\*/ scroll-pt-7scroll-padding-top: 1.75rem; /\\* 28px \\*/ scroll-pr-7scroll-padding-right: 1.75rem; /\\* 28px \\*/ scroll-pb-7scroll-padding-bottom: 1.75rem; /\\* 28px \\*/ scroll-pl-7scroll-padding-left: 1.75rem; /\\* 28px \\*/ scroll-p-8scroll-padding: 2rem; /\\* 32px \\*/ scroll-px-8scroll-padding-left: 2rem; /\\* 32px \\*/ scroll-padding-right: 2rem; /\\* 32px \\*/ scroll-py-8scroll-padding-top: 2rem; /\\* 32px \\*/ scroll-padding-bottom: 2rem; /\\* 32px \\*/ scroll-ps-8scroll-padding-inline-start: 2rem; /\\* 32px \\*/ scroll-pe-8scroll-padding-inline-end: 2rem; /\\* 32px \\*/ scroll-pt-8scroll-padding-top: 2rem; /\\* 32px \\*/ scroll-pr-8scroll-padding-right: 2rem; /\\* 32px \\*/ scroll-pb-8scroll-padding-bottom: 2rem; /\\* 32px \\*/ scroll-pl-8scroll-padding-left: 2rem; /\\* 32px \\*/ scroll-p-9scroll-padding: 2.25rem; /\\* 36px \\*/ scroll-px-9scroll-padding-left: 2.25rem; /\\* 36px \\*/ scroll-padding-right: 2.25rem; /\\* 36px \\*/ scroll-py-9scroll-padding-top: 2.25rem; /\\* 36px \\*/ scroll-padding-bottom: 2.25rem; /\\* 36px \\*/ scroll-ps-9scroll-padding-inline-start: 2.25rem; /\\* 36px \\*/ scroll-pe-9scroll-padding-inline-end: 2.25rem; /\\* 36px \\*/ scroll-pt-9scroll-padding-top: 2.25rem; /\\* 36px \\*/ scroll-pr-9scroll-padding-right: 2.25rem; /\\* 36px \\*/ scroll-pb-9scroll-padding-bottom: 2.25rem; /\\* 36px \\*/ scroll-pl-9scroll-padding-left: 2.25rem; /\\* 36px \\*/ scroll-p-10scroll-padding: 2.5rem; /\\* 40px \\*/ scroll-px-10scroll-padding-left: 2.5rem; /\\* 40px \\*/ scroll-padding-right: 2.5rem; /\\* 40px \\*/ scroll-py-10scroll-padding-top: 2.5rem; /\\* 40px \\*/ scroll-padding-bottom: 2.5rem; /\\* 40px \\*/ scroll-ps-10scroll-padding-inline-start: 2.5rem; /\\* 40px \\*/ scroll-pe-10scroll-padding-inline-end: 2.5rem; /\\* 40px \\*/ scroll-pt-10scroll-padding-top: 2.5rem; /\\* 40px \\*/ scroll-pr-10scroll-padding-right: 2.5rem; /\\* 40px \\*/ scroll-pb-10scroll-padding-bottom: 2.5rem; /\\* 40px \\*/ scroll-pl-10scroll-padding-left: 2.5rem; /\\* 40px \\*/ scroll-p-11scroll-padding: 2.75rem; /\\* 44px \\*/ scroll-px-11scroll-padding-left: 2.75rem; /\\* 44px \\*/ scroll-padding-right: 2.75rem; /\\* 44px \\*/ scroll-py-11scroll-padding-top: 2.75rem; /\\* 44px \\*/ scroll-padding-bottom: 2.75rem; /\\* 44px \\*/ scroll-ps-11scroll-padding-inline-start: 2.75rem; /\\* 44px \\*/ scroll-pe-11scroll-padding-inline-end: 2.75rem; /\\* 44px \\*/ scroll-pt-11scroll-padding-top: 2.75rem; /\\* 44px \\*/ scroll-pr-11scroll-padding-right: 2.75rem; /\\* 44px \\*/ scroll-pb-11scroll-padding-bottom: 2.75rem; /\\* 44px \\*/ scroll-pl-11scroll-padding-left: 2.75rem; /\\* 44px \\*/ scroll-p-12scroll-padding: 3rem; /\\* 48px \\*/ scroll-px-12scroll-padding-left: 3rem; /\\* 48px \\*/ scroll-padding-right: 3rem; /\\* 48px \\*/ scroll-py-12scroll-padding-top: 3rem; /\\* 48px \\*/ scroll-padding-bottom: 3rem; /\\* 48px \\*/ scroll-ps-12scroll-padding-inline-start: 3rem; /\\* 48px \\*/ scroll-pe-12scroll-padding-inline-end: 3rem; /\\* 48px \\*/ scroll-pt-12scroll-padding-top: 3rem; /\\* 48px \\*/ scroll-pr-12scroll-padding-right: 3rem; /\\* 48px \\*/ scroll-pb-12scroll-padding-bottom: 3rem; /\\* 48px \\*/ scroll-pl-12scroll-padding-left: 3rem; /\\* 48px \\*/ scroll-p-14scroll-padding: 3.5rem; /\\* 56px \\*/ scroll-px-14scroll-padding-left: 3.5rem; /\\* 56px \\*/ scroll-padding-right: 3.5rem; /\\* 56px \\*/ scroll-py-14scroll-padding-top: 3.5rem; /\\* 56px \\*/ scroll-padding-bottom: 3.5rem; /\\* 56px \\*/ scroll-ps-14scroll-padding-inline-start: 3.5rem; /\\* 56px \\*/ scroll-pe-14scroll-padding-inline-end: 3.5rem; /\\* 56px \\*/ scroll-pt-14scroll-padding-top: 3.5rem; /\\* 56px \\*/ scroll-pr-14scroll-padding-right: 3.5rem; /\\* 56px \\*/ scroll-pb-14scroll-padding-bottom: 3.5rem; /\\* 56px \\*/ scroll-pl-14scroll-padding-left: 3.5rem; /\\* 56px \\*/ scroll-p-16scroll-padding: 4rem; /\\* 64px \\*/ scroll-px-16scroll-padding-left: 4rem; /\\* 64px \\*/ scroll-padding-right: 4rem; /\\* 64px \\*/ scroll-py-16scroll-padding-top: 4rem; /\\* 64px \\*/ scroll-padding-bottom: 4rem; /\\* 64px \\*/ scroll-ps-16scroll-padding-inline-start: 4rem; /\\* 64px \\*/ scroll-pe-16scroll-padding-inline-end: 4rem; /\\* 64px \\*/ scroll-pt-16scroll-padding-top: 4rem; /\\* 64px \\*/ scroll-pr-16scroll-padding-right: 4rem; /\\* 64px \\*/ scroll-pb-16scroll-padding-bottom: 4rem; /\\* 64px \\*/ scroll-pl-16scroll-padding-left: 4rem; /\\* 64px \\*/ scroll-p-20scroll-padding: 5rem; /\\* 80px \\*/ scroll-px-20scroll-padding-left: 5rem; /\\* 80px \\*/ scroll-padding-right: 5rem; /\\* 80px \\*/ scroll-py-20scroll-padding-top: 5rem; /\\* 80px \\*/ scroll-padding-bottom: 5rem; /\\* 80px \\*/ scroll-ps-20scroll-padding-inline-start: 5rem; /\\* 80px \\*/ scroll-pe-20scroll-padding-inline-end: 5rem; /\\* 80px \\*/ scroll-pt-20scroll-padding-top: 5rem; /\\* 80px \\*/ scroll-pr-20scroll-padding-right: 5rem; /\\* 80px \\*/ scroll-pb-20scroll-padding-bottom: 5rem; /\\* 80px \\*/ scroll-pl-20scroll-padding-left: 5rem; /\\* 80px \\*/ scroll-p-24scroll-padding: 6rem; /\\* 96px \\*/ scroll-px-24scroll-padding-left: 6rem; /\\* 96px \\*/ scroll-padding-right: 6rem; /\\* 96px \\*/ scroll-py-24scroll-padding-top: 6rem; /\\* 96px \\*/ scroll-padding-bottom: 6rem; /\\* 96px \\*/ scroll-ps-24scroll-padding-inline-start: 6rem; /\\* 96px \\*/ scroll-pe-24scroll-padding-inline-end: 6rem; /\\* 96px \\*/ scroll-pt-24scroll-padding-top: 6rem; /\\* 96px \\*/ scroll-pr-24scroll-padding-right: 6rem; /\\* 96px \\*/ scroll-pb-24scroll-padding-bottom: 6rem; /\\* 96px \\*/ scroll-pl-24scroll-padding-left: 6rem; /\\* 96px \\*/ scroll-p-28scroll-padding: 7rem; /\\* 112px \\*/ scroll-px-28scroll-padding-left: 7rem; /\\* 112px \\*/ scroll-padding-right: 7rem; /\\* 112px \\*/ scroll-py-28scroll-padding-top: 7rem; /\\* 112px \\*/ scroll-padding-bottom: 7rem; /\\* 112px \\*/ scroll-ps-28scroll-padding-inline-start: 7rem; /\\* 112px \\*/ scroll-pe-28scroll-padding-inline-end: 7rem; /\\* 112px \\*/ scroll-pt-28scroll-padding-top: 7rem; /\\* 112px \\*/ scroll-pr-28scroll-padding-right: 7rem; /\\* 112px \\*/ scroll-pb-28scroll-padding-bottom: 7rem; /\\* 112px \\*/ scroll-pl-28scroll-padding-left: 7rem; /\\* 112px \\*/ scroll-p-32scroll-padding: 8rem; /\\* 128px \\*/ scroll-px-32scroll-padding-left: 8rem; /\\* 128px \\*/ scroll-padding-right: 8rem; /\\* 128px \\*/ scroll-py-32scroll-padding-top: 8rem; /\\* 128px \\*/ scroll-padding-bottom: 8rem; /\\* 128px \\*/ scroll-ps-32scroll-padding-inline-start: 8rem; /\\* 128px \\*/ scroll-pe-32scroll-padding-inline-end: 8rem; /\\* 128px \\*/ scroll-pt-32scroll-padding-top: 8rem; /\\* 128px \\*/ scroll-pr-32scroll-padding-right: 8rem; /\\* 128px \\*/ scroll-pb-32scroll-padding-bottom: 8rem; /\\* 128px \\*/ scroll-pl-32scroll-padding-left: 8rem; /\\* 128px \\*/ scroll-p-36scroll-padding: 9rem; /\\* 144px \\*/ scroll-px-36scroll-padding-left: 9rem; /\\* 144px \\*/ scroll-padding-right: 9rem; /\\* 144px \\*/ scroll-py-36scroll-padding-top: 9rem; /\\* 144px \\*/ scroll-padding-bottom: 9rem; /\\* 144px \\*/ scroll-ps-36scroll-padding-inline-start: 9rem; /\\* 144px \\*/ scroll-pe-36scroll-padding-inline-end: 9rem; /\\* 144px \\*/ scroll-pt-36scroll-padding-top: 9rem; /\\* 144px \\*/ scroll-pr-36scroll-padding-right: 9rem; /\\* 144px \\*/ scroll-pb-36scroll-padding-bottom: 9rem; /\\* 144px \\*/ scroll-pl-36scroll-padding-left: 9rem; /\\* 144px \\*/ scroll-p-40scroll-padding: 10rem; /\\* 160px \\*/ scroll-px-40scroll-padding-left: 10rem; /\\* 160px \\*/ scroll-padding-right: 10rem; /\\* 160px \\*/ scroll-py-40scroll-padding-top: 10rem; /\\* 160px \\*/ scroll-padding-bottom: 10rem; /\\* 160px \\*/ scroll-ps-40scroll-padding-inline-start: 10rem; /\\* 160px \\*/ scroll-pe-40scroll-padding-inline-end: 10rem; /\\* 160px \\*/ scroll-pt-40scroll-padding-top: 10rem; /\\* 160px \\*/ scroll-pr-40scroll-padding-right: 10rem; /\\* 160px \\*/ scroll-pb-40scroll-padding-bottom: 10rem; /\\* 160px \\*/ scroll-pl-40scroll-padding-left: 10rem; /\\* 160px \\*/ scroll-p-44scroll-padding: 11rem; /\\* 176px \\*/ scroll-px-44scroll-padding-left: 11rem; /\\* 176px \\*/ scroll-padding-right: 11rem; /\\* 176px \\*/ scroll-py-44scroll-padding-top: 11rem; /\\* 176px \\*/ scroll-padding-bottom: 11rem; /\\* 176px \\*/ scroll-ps-44scroll-padding-inline-start: 11rem; /\\* 176px \\*/ scroll-pe-44scroll-padding-inline-end: 11rem; /\\* 176px \\*/ scroll-pt-44scroll-padding-top: 11rem; /\\* 176px \\*/ scroll-pr-44scroll-padding-right: 11rem; /\\* 176px \\*/ scroll-pb-44scroll-padding-bottom: 11rem; /\\* 176px \\*/ scroll-pl-44scroll-padding-left: 11rem; /\\* 176px \\*/ scroll-p-48scroll-padding: 12rem; /\\* 192px \\*/ scroll-px-48scroll-padding-left: 12rem; /\\* 192px \\*/ scroll-padding-right: 12rem; /\\* 192px \\*/ scroll-py-48scroll-padding-top: 12rem; /\\* 192px \\*/ scroll-padding-bottom: 12rem; /\\* 192px \\*/ scroll-ps-48scroll-padding-inline-start: 12rem; /\\* 192px \\*/ scroll-pe-48scroll-padding-inline-end: 12rem; /\\* 192px \\*/ scroll-pt-48scroll-padding-top: 12rem; /\\* 192px \\*/ scroll-pr-48scroll-padding-right: 12rem; /\\* 192px \\*/ scroll-pb-48scroll-padding-bottom: 12rem; /\\* 192px \\*/ scroll-pl-48scroll-padding-left: 12rem; /\\* 192px \\*/ scroll-p-52scroll-padding: 13rem; /\\* 208px \\*/ scroll-px-52scroll-padding-left: 13rem; /\\* 208px \\*/ scroll-padding-right: 13rem; /\\* 208px \\*/ scroll-py-52scroll-padding-top: 13rem; /\\* 208px \\*/ scroll-padding-bottom: 13rem; /\\* 208px \\*/ scroll-ps-52scroll-padding-inline-start: 13rem; /\\* 208px \\*/ scroll-pe-52scroll-padding-inline-end: 13rem; /\\* 208px \\*/ scroll-pt-52scroll-padding-top: 13rem; /\\* 208px \\*/ scroll-pr-52scroll-padding-right: 13rem; /\\* 208px \\*/ scroll-pb-52scroll-padding-bottom: 13rem; /\\* 208px \\*/ scroll-pl-52scroll-padding-left: 13rem; /\\* 208px \\*/ scroll-p-56scroll-padding: 14rem; /\\* 224px \\*/ scroll-px-56scroll-padding-left: 14rem; /\\* 224px \\*/ scroll-padding-right: 14rem; /\\* 224px \\*/ scroll-py-56scroll-padding-top: 14rem; /\\* 224px \\*/ scroll-padding-bottom: 14rem; /\\* 224px \\*/ scroll-ps-56scroll-padding-inline-start: 14rem; /\\* 224px \\*/ scroll-pe-56scroll-padding-inline-end: 14rem; /\\* 224px \\*/ scroll-pt-56scroll-padding-top: 14rem; /\\* 224px \\*/ scroll-pr-56scroll-padding-right: 14rem; /\\* 224px \\*/ scroll-pb-56scroll-padding-bottom: 14rem; /\\* 224px \\*/ scroll-pl-56scroll-padding-left: 14rem; /\\* 224px \\*/ scroll-p-60scroll-padding: 15rem; /\\* 240px \\*/ scroll-px-60scroll-padding-left: 15rem; /\\* 240px \\*/ scroll-padding-right: 15rem; /\\* 240px \\*/ scroll-py-60scroll-padding-top: 15rem; /\\* 240px \\*/ scroll-padding-bottom: 15rem; /\\* 240px \\*/ scroll-ps-60scroll-padding-inline-start: 15rem; /\\* 240px \\*/ scroll-pe-60scroll-padding-inline-end: 15rem; /\\* 240px \\*/ scroll-pt-60scroll-padding-top: 15rem; /\\* 240px \\*/ scroll-pr-60scroll-padding-right: 15rem; /\\* 240px \\*/ scroll-pb-60scroll-padding-bottom: 15rem; /\\* 240px \\*/ scroll-pl-60scroll-padding-left: 15rem; /\\* 240px \\*/ scroll-p-64scroll-padding: 16rem; /\\* 256px \\*/ scroll-px-64scroll-padding-left: 16rem; /\\* 256px \\*/ scroll-padding-right: 16rem; /\\* 256px \\*/ scroll-py-64scroll-padding-top: 16rem; /\\* 256px \\*/ scroll-padding-bottom: 16rem; /\\* 256px \\*/ scroll-ps-64scroll-padding-inline-start: 16rem; /\\* 256px \\*/ scroll-pe-64scroll-padding-inline-end: 16rem; /\\* 256px \\*/ scroll-pt-64scroll-padding-top: 16rem; /\\* 256px \\*/ scroll-pr-64scroll-padding-right: 16rem; /\\* 256px \\*/ scroll-pb-64scroll-padding-bottom: 16rem; /\\* 256px \\*/ scroll-pl-64scroll-padding-left: 16rem; /\\* 256px \\*/ scroll-p-72scroll-padding: 18rem; /\\* 288px \\*/ scroll-px-72scroll-padding-left: 18rem; /\\* 288px \\*/ scroll-padding-right: 18rem; /\\* 288px \\*/ scroll-py-72scroll-padding-top: 18rem; /\\* 288px \\*/ scroll-padding-bottom: 18rem; /\\* 288px \\*/ scroll-ps-72scroll-padding-inline-start: 18rem; /\\* 288px \\*/ scroll-pe-72scroll-padding-inline-end: 18rem; /\\* 288px \\*/ scroll-pt-72scroll-padding-top: 18rem; /\\* 288px \\*/ scroll-pr-72scroll-padding-right: 18rem; /\\* 288px \\*/ scroll-pb-72scroll-padding-bottom: 18rem; /\\* 288px \\*/ scroll-pl-72scroll-padding-left: 18rem; /\\* 288px \\*/ scroll-p-80scroll-padding: 20rem; /\\* 320px \\*/ scroll-px-80scroll-padding-left: 20rem; /\\* 320px \\*/ scroll-padding-right: 20rem; /\\* 320px \\*/ scroll-py-80scroll-padding-top: 20rem; /\\* 320px \\*/ scroll-padding-bottom: 20rem; /\\* 320px \\*/ scroll-ps-80scroll-padding-inline-start: 20rem; /\\* 320px \\*/ scroll-pe-80scroll-padding-inline-end: 20rem; /\\* 320px \\*/ scroll-pt-80scroll-padding-top: 20rem; /\\* 320px \\*/ scroll-pr-80scroll-padding-right: 20rem; /\\* 320px \\*/ scroll-pb-80scroll-padding-bottom: 20rem; /\\* 320px \\*/ scroll-pl-80scroll-padding-left: 20rem; /\\* 320px \\*/ scroll-p-96scroll-padding: 24rem; /\\* 384px \\*/ scroll-px-96scroll-padding-left: 24rem; /\\* 384px \\*/ scroll-padding-right: 24rem; /\\* 384px \\*/ scroll-py-96scroll-padding-top: 24rem; /\\* 384px \\*/ scroll-padding-bottom: 24rem; /\\* 384px \\*/ scroll-ps-96scroll-padding-inline-start: 24rem; /\\* 384px \\*/ scroll-pe-96scroll-padding-inline-end: 24rem; /\\* 384px \\*/ scroll-pt-96scroll-padding-top: 24rem; /\\* 384px \\*/ scroll-pr-96scroll-padding-right: 24rem; /\\* 384px \\*/ scroll-pb-96scroll-padding-bottom: 24rem; /\\* 384px \\*/ scroll-pl-96scroll-padding-left: 24rem; /\\* 384px \\*/",
    "title": "Scroll Padding - Tailwind CSS",
    "description": "Utilities for controlling an element's scroll offset within a snap container.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/gatsby",
    "markdown": "# Install Tailwind CSS with Gatsby\n\nInstallation\n\nSetting up Tailwind CSS in a Gatsby project.\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Gatsby project if you don’t have one set up already. The most common approach is to use [Gatsby CLI](https://www.gatsbyjs.com/docs/reference/gatsby-cli/#how-to-use-gatsby-cli).\n    \n    ```\n    gatsby new my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Using npm, install `tailwindcss` and its peer dependencies, as well as `gatsby-plugin-postcss`, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixer gatsby-plugin-postcssnpx tailwindcss init -p\n    ```\n    \n3.  ## Enable the Gatsby PostCSS plugin\n    \n    In your `gatsby-config.js` file, enable the `gatsby-plugin-postcss`. See [the plugin's documentation](https://www.gatsbyjs.com/plugins/gatsby-plugin-postcss/) for more information.\n    \n    ```\n    module.exports = {\n      plugins: [\n        'gatsby-plugin-postcss',\n        // ...\n      ],\n    }\n    ```\n    \n4.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./src/pages/**/*.{js,jsx,ts,tsx}\",\n        \"./src/components/**/*.{js,jsx,ts,tsx}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n5.  ## Add the Tailwind directives to your CSS\n    \n    Create a `./src/styles/global.css` file and add the `@tailwind` directives for each of Tailwind’s layers.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n6.  ## Import the CSS file\n    \n    Create a `gatsby-browser.js` file at the root of your project if it doesn’t already exist, and import your newly-created `./src/styles/global.css` file.\n    \n    ```\n    import './src/styles/global.css'\n    ```\n    \n7.  ## Start your build process\n    \n    Run your build process with `gatsby develop`.\n    \n8.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    export default function IndexPage() {\n      return (\n        <Layout>\n          <h1 className=\"text-3xl font-bold underline\">\n            Hello world!\n          </h1>\n        </Layout>\n      )\n    }\n    ```",
    "title": "Install Tailwind CSS with Gatsby - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Gatsby project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/solidjs",
    "markdown": "# Install Tailwind CSS with SolidJS\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new SolidJS project if you don't have one set up already. The most common approach is to use [the SolidJS Vite template](https://www.solidjs.com/guides/getting-started).\n    \n    ```\n    npx degit solidjs/templates/js my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies via npm, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./src/**/*.{js,jsx,ts,tsx}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./src/index.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    export default function App() {\n      return (\n        <h1 class=\"text-3xl font-bold underline\">\n          Hello world!\n        </h1>\n      )\n    }\n    ```",
    "title": "Install Tailwind CSS with SolidJS - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a SolidJS project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/sveltekit",
    "markdown": "# Install Tailwind CSS with SvelteKit\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new SvelteKit project if you don't have one set up already. The most common approach is outlined in the [Getting Started with SvelteKit](https://kit.svelte.dev/docs#introduction-getting-started) introduction.\n    \n    ```\n    npm create svelte@latest my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies, then generate your `tailwind.config.js` and `postcss.config.js` files.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Enable use of PostCSS in <style> blocks\n    \n    In your `svelte.config.js` file, import `vitePreprocess` to enable processing `<style>` blocks as PostCSS.\n    \n    ```\n    import adapter from '@sveltejs/adapter-auto';\n    import { vitePreprocess } from '@sveltejs/vite-plugin-svelte';\n    /** @type {import('@sveltejs/kit').Config} */\n    const config = {\n      kit: {\n        adapter: adapter()\n      },\n      preprocess: vitePreprocess()\n    };\n    export default config;\n    ```\n    \n4.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    export default {\n      content: ['./src/**/*.{html,js,svelte,ts}'],\n      theme: {\n        extend: {}\n      },\n      plugins: []\n    };\n    ```\n    \n5.  ## Add the Tailwind directives to your CSS\n    \n    Create a `./src/app.css` file and add the `@tailwind` directives for each of Tailwind’s layers.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n6.  ## Import the CSS file\n    \n    Create a `./src/routes/+layout.svelte` file and import the newly-created `app.css` file.\n    \n    ```\n    <script>\n      import \"../app.css\";\n    </script>\n    \n    <slot />\n    ```\n    \n7.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n8.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content, making sure to set `lang=\"postcss\"` for any `<style>` blocks that need to be processed by Tailwind.\n    \n    ```\n    <h1 class=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n    \n    <style lang=\"postcss\">\n      :global(html) {\n        background-color: theme(colors.gray.100);\n      }\n    </style>\n    ```",
    "title": "Install Tailwind CSS with SvelteKit - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a SvelteKit project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/ruby-on-rails",
    "markdown": "# Install Tailwind CSS with Ruby on Rails\n\nThe quickest way to start using Tailwind CSS in your Rails project is to use [Tailwind CSS for Rails](https://github.com/rails/tailwindcss-rails) by running `rails new my-project --css tailwind`. This will automatically configure your Tailwind setup based on the official Rails example. If you'd like to configure Tailwind manually, continue with the rest of this guide.\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Rails project if you don't have one set up already. The most common approach is to use the [Rails Command Line](https://guides.rubyonrails.org/command_line.html).\n    \n    ```\n    rails new my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install the `tailwindcss-rails` gem, and then run the install command to generate a `tailwind.config.js` file in the `./config` directory.\n    \n    ```\n    ./bin/bundle add tailwindcss-rails./bin/rails tailwindcss:install\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files to your `./config/tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        './public/*.html',\n        './app/helpers/**/*.rb',\n        './app/javascript/**/*.js',\n        './app/views/**/*',\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind's layers to your `application.tailwind.css` file located in the `./app/assets/stylesheets` directory.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `./bin/dev`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Start using Tailwind's utility classes to style your content.\n    \n    ```\n    <h1 class=\"text-3xl font-bold underline\">\n        Hello world!\n    </h1>\n    ```",
    "title": "Install Tailwind CSS with Ruby on Rails - Tailwind CSS",
    "description": "Setting up Tailwind CSS in Ruby on Rails v7+ project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/remix",
    "markdown": "# Install Tailwind CSS with Remix\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Remix project if you don’t have one set up already. The most common approach is to use [Create Remix](https://remix.run/docs).\n    \n    ```\n    npx create-remix@latest my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` via npm, and then run the init command to generate a `tailwind.config.ts` and `postcss.config.js` file.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init --ts -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.ts` file.\n    \n    ```\n    import type { Config } from 'tailwindcss'\n    \n    export default {\n      content: ['./app/**/*.{js,jsx,ts,tsx}'],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    } satisfies Config\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Create a `./app/tailwind.css` file and add the `@tailwind` directives for each of Tailwind’s layers.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Import the CSS file\n    \n    Import the newly-created `./app/tailwind.css` file in your `./app/root.tsx` file.\n    \n    ```\n    import type { LinksFunction } from \"@remix-run/node\";\n    import stylesheet from \"~/tailwind.css?url\";\n    \n    export const links: LinksFunction = () => [\n      { rel: \"stylesheet\", href: stylesheet },\n    ];\n    ```\n    \n6.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n7.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    export default function Index() {\n      return (\n        <h1 className=\"text-3xl font-bold underline\">\n          Hello world!\n        </h1>\n      )\n    }\n    ```",
    "title": "Install Tailwind CSS with Remix - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Remix project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/phoenix",
    "markdown": "# Install Tailwind CSS with Phoenix\n\nInstallation\n\nSetting up Tailwind CSS in a Phoenix project.\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Phoenix project if you don't have one set up already. You can follow their [installation guide](https://hexdocs.pm/phoenix/installation.html) to get up and running.\n    \n    ```\n    mix phx.new myprojectcd myproject\n    ```\n    \n2.  ## Install the Tailwind plugin\n    \n    Add the Tailwind plugin to your dependencies and run `mix deps.get` to install it.\n    \n    ```\n    defp deps do\n      [\n        {:tailwind, \"~> 0.1\", runtime: Mix.env() == :dev}\n      ]\n    end\n    ```\n    \n3.  ## Configure the Tailwind plugin\n    \n    In your `config.exs` file you can set which version of Tailwind CSS you want to use, the path to your Tailwind config, and customize your asset paths.\n    \n    ```\n    config :tailwind, version: \"3.4.4\", default: [\n      args: ~w(\n        --config=tailwind.config.js\n        --input=css/app.css\n        --output=../priv/static/assets/app.css\n      ),\n      cd: Path.expand(\"../assets\", __DIR__)\n    ]\n    ```\n    \n4.  ## Update your deployment script\n    \n    Configure your `assets.deploy` alias to build your CSS on deployment.\n    \n    ```\n    defp aliases do\n      [\n        setup: [\"deps.get\", \"ecto.setup\"],\n        \"ecto.setup\": [\"ecto.create\", \"ecto.migrate\", \"run priv/repo/seeds.exs\"],\n        \"ecto.reset\": [\"ecto.drop\", \"ecto.setup\"],\n        test: [\"ecto.create --quiet\", \"ecto.migrate --quiet\", \"test\"],\n        \"assets.deploy\": [\"tailwind default --minify\", \"esbuild default --minify\", \"phx.digest\"]\n      ]\n    end\n    ```\n    \n5.  ## Enable watcher in development\n    \n    Add Tailwind to your list of watchers in your `./config/dev.exs` file.\n    \n    ```\n    watchers: [\n      # Start the esbuild watcher by calling Esbuild.install_and_run(:default, args)\n      esbuild: {Esbuild, :install_and_run, [:default, ~w(--sourcemap=inline --watch)]},\n      tailwind: {Tailwind, :install_and_run, [:default, ~w(--watch)]}\n    ]\n    ```\n    \n6.  ## Install Tailwind CSS\n    \n    Run the install command to download the standalone Tailwind CLI and generate a `tailwind.config.js` file in the `./assets` directory.\n    \n7.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `./assets/tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        './js/**/*.js',\n        '../lib/*_web.ex',\n        '../lib/*_web/**/*.*ex',\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n8.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to `./assets/css/app.css`\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n9.  ## Remove the default CSS import\n    \n    Remove the CSS import from `./assets/js/app.js`, as Tailwind is now handling this for you.\n    \n    ```\n    // Remove this line if you add your own CSS build pipeline (e.g postcss).\n    import \"../css/app.css\"\n    ```\n    \n10.  ## Start your build process\n    \n    Run your build process with `mix phx.server`.\n    \n11.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <h1 class=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n    ```",
    "title": "Install Tailwind CSS with Phoenix - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Phoenix project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/parcel",
    "markdown": "# Install Tailwind CSS with Parcel\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Parcel project if you don’t have one set up already. The most common approach is to add Parcel as a dev-dependency to your project as outlined in their [getting started guide](https://parceljs.org/getting-started/webapp/).\n    \n    ```\n    mkdir my-projectcd my-projectnpm init -ynpm install -D parcelmkdir srctouch src/index.html\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies via npm, and then run the init command to generate `tailwind.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcssnpx tailwindcss init\n    ```\n    \n3.  ## Configure PostCSS\n    \n    Create a `.postcssrc` file in your project root, and enable the `tailwindcss` plugin.\n    \n    ```\n    {\n      \"plugins\": {\n        \"tailwindcss\": {}\n      }\n    }\n    ```\n    \n4.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./src/**/*.{html,js,ts,jsx,tsx}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n5.  ## Add the Tailwind directives to your CSS\n    \n    Create a `./src/index.css` file and add the `@tailwind` directives for each of Tailwind’s layers.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n6.  ## Start your build process\n    \n    Run your build process with `npx parcel src/index.html`.\n    \n    ```\n    npx parcel src/index.html\n    ```\n    \n7.  ## Start using Tailwind in your project\n    \n    Add your CSS file to the `<head>` and start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <!doctype html>\n    <html>\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <link href=\"./index.css\" type=\"text/css\" rel=\"stylesheet\">\n    </head>\n    <body>\n      <h1 class=\"text-3xl font-bold underline\">\n        Hello world!\n      </h1>\n    </body>\n    </html>\n    ```",
    "title": "Install Tailwind CSS with Parcel - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Parcel project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/angular",
    "markdown": "# Install Tailwind CSS with Angular\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Angular project if you don’t have one set up already. The most common approach is to use [Angular CLI](https://angular.io/cli).\n    \n    ```\n    ng new my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` via npm, and then run the init command to generate a `tailwind.config.js` file.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./src/**/*.{html,ts}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./src/styles.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `ng serve`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <h1 class=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n    ```",
    "title": "Install Tailwind CSS with Angular - Tailwind CSS",
    "description": "Setting up Tailwind CSS in an Angular project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/meteor",
    "markdown": "# Install Tailwind CSS with Meteor\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Meteor project if you don't have one set up already. The most common approach is to use [the Meteor CLI](https://www.meteor.com/developers/install).\n    \n    ```\n    meteor create my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies via npm, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./imports/ui/**/*.{js,jsx,ts,tsx}\",\n        \"./client/*.html\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./client/main.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `npm run start`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    export const App = () => (\n      <h1 className=\"text-3xl font-bold underline\">\n        Hello world!\n      </h1>\n    )\n    ```",
    "title": "Install Tailwind CSS with Meteor - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Meteor project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/symfony",
    "markdown": "# Install Tailwind CSS with Symfony\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Symfony project if you don’t have one set up already. The most common approach is to use [the Symfony Installer](https://symfony.com/download).\n    \n    ```\n    symfony new --webapp my-projectcd my-project\n    ```\n    \n2.  ## Install Webpack Encore\n    \n    Install Webpack Encore, which handles building your assets. See [the documentation](https://symfony.com/doc/current/frontend.html) for more information.\n    \n    ```\n    composer require symfony/webpack-encore-bundle\n    ```\n    \n3.  ## Install Tailwind CSS\n    \n    Using npm, install `tailwindcss` and its peer dependencies, as well as `postcss-loader`, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss postcss-loader autoprefixernpx tailwindcss init -p\n    ```\n    \n4.  ## Enable PostCSS support\n    \n    In your `webpack.config.js` file, enable the PostCSS Loader. See [the documentation](https://symfony.com/doc/current/frontend/encore/postcss.html) for more information.\n    \n    ```\n    Encore\n      // ...\n      .enablePostCssLoader()\n    ;\n    ```\n    \n5.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: [\n        \"./assets/**/*.js\",\n        \"./templates/**/*.html.twig\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n6.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./assets/styles/app.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n7.  ## Start your build process\n    \n    Run your build process with `npm run watch`.\n    \n8.  ## Start using Tailwind in your project\n    \n    Make sure your compiled CSS is included in the `<head>` then start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <!doctype html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      {% block stylesheets %}\n        {{ encore_entry_link_tags('app') }}\n      {% endblock %}\n    </head>\n    <body>\n      <h1 class=\"text-3xl font-bold underline\">\n        Hello world!\n      </h1>\n    </body>\n    </html>\n    ```",
    "title": "Install Tailwind CSS with Symfony - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Symfony project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/create-react-app",
    "markdown": "# Install Tailwind CSS with Create React App\n\nCreate React App does not support custom PostCSS configurations and is incompatible with many important tools in the PostCSS ecosystem, like `` `postcss-import` ``.\n\nWe **highly recommend** using [Vite](https://tailwindcss.com/docs/guides/vite), [Parcel](https://tailwindcss.com/docs/guides/parcel), [Next.js](https://tailwindcss.com/docs/guides/nextjs), or [Remix](https://tailwindcss.com/docs/guides/remix) instead of Create React App. They provide an equivalent or better developer experience but with more flexibility, giving you more control over how Tailwind and PostCSS are configured.",
    "title": "Install Tailwind CSS with Create React App - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Create React App project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/astro",
    "markdown": "# Install Tailwind CSS with Astro\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Astro project if you don't have one set up already. The most common approach is to use [create astro](https://docs.astro.build/en/getting-started/#start-your-first-project).\n    \n    ```\n    npm create astro@latest my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Run the `astro add` command to install both `tailwindcss` and `@astro/tailwind` as well as generate a `tailwind.config.cjs` file.\n    \n3.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n4.  ## Start using Tailwind in your project\n    \n    Start using Tailwind's utility classes to style your content.\n    \n    ```\n    <h1 class=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n    ```",
    "title": "Install Tailwind CSS with Astro - Tailwind CSS",
    "description": "Setting up Tailwind CSS in an Astro project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/adonisjs",
    "markdown": "# Install Tailwind CSS with Adonis\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new AdonisJS project if you don’t have one set up already. The most common approach is to use [Create AdonisJS](https://docs.adonisjs.com/guides/installation).\n    \n    ```\n    npm init adonisjs@latest my-project -- --kit=webcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies, then generate your `tailwind.config.js` and `postcss.config.js` files.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    export default {\n      content: [\n        \"./resources/**/*.edge\",\n        \"./resources/**/*.{js,ts,jsx,tsx,vue}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./resources/css/app.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Make sure your compiled CSS is included in the `<head>` then start using Tailwind’s utility classes to style your content.\n    \n    ```\n    <!doctype html>\n    <html>\n    <head>\n      <meta charset=\"utf-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      @vite(['resources/css/app.css', 'resources/js/app.js'])\n    </head>\n    <body>\n      <h1 class=\"text-3xl font-bold underline\">\n        Hello world!\n      </h1>\n    </body>\n    </html>\n    ```",
    "title": "Install Tailwind CSS with Adonis - Tailwind CSS",
    "description": "Tailwind CSS is a utility-first CSS framework for rapidly building modern websites without ever leaving your HTML.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/emberjs",
    "markdown": "# Install Tailwind CSS With Ember.js\n\nInstallation\n\nSetting up Tailwind CSS in an Ember.js project.\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Ember.js project if you don't have one set up already. The most common approach is to use [Ember CLI](https://guides.emberjs.com/release/getting-started/quick-start/#toc_create-a-new-application).\n    \n    ```\n    npx ember-cli new my-project --embroider --no-welcomecd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Using npm, install `tailwindcss` and its peer dependencies, as well as `postcss-loader`, and then run the `init` command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss postcss-loader autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Enable PostCSS support\n    \n    In your `ember-cli-build.js` file, configure PostCSS to process your CSS files.\n    \n    ```\n    'use strict';\n    \n    const EmberApp = require('ember-cli/lib/broccoli/ember-app');\n    \n    module.exports = function (defaults) {\n      const app = new EmberApp(defaults, {\n        // Add options here\n      });\n    \n      const { Webpack } = require('@embroider/webpack');\n      return require('@embroider/compat').compatBuild(app, Webpack, {\n        skipBabel: [\n          {\n            package: 'qunit',\n          },\n        ],\n        packagerOptions: {\n          webpackConfig: {\n            module: {\n              rules: [\n                {\n                  test: /\\.css$/i,\n                  use: [\n                    {\n                      loader: 'postcss-loader',\n                      options: {\n                        postcssOptions: {\n                          config: 'postcss.config.js',\n                        },\n                      },\n                    },\n                  ],\n                },\n              ],\n            },\n          },\n        },\n      });\n    };\n    ```\n    \n4.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: ['./app/**/*.{gjs,gts,hbs,html,js,ts}'],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    };\n    ```\n    \n5.  ## Add the Tailwind directives to your CSS\n    \n    Create a `./app/app.css` file and add the `@tailwind` directives for each of Tailwind's layers.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n6.  ## Import the CSS file\n    \n    Import the newly-created `./app/app.css` file in your `./app/app.js` file.\n    \n    ```\n    import Application from '@ember/application';\n    import Resolver from 'ember-resolver';\n    import loadInitializers from 'ember-load-initializers';\n    import config from 'my-project/config/environment';\n    import 'my-project/app.css';\n    \n    export default class App extends Application {\n      modulePrefix = config.modulePrefix;\n      podModulePrefix = config.podModulePrefix;\n      Resolver = Resolver;\n    }\n    \n    loadInitializers(App, config.modulePrefix);\n    ```\n    \n7.  ## Start your build process\n    \n    Run your build process with `npm run start`.\n    \n8.  ## Start using Tailwind in your project\n    \n    Start using Tailwind's utility classes to style your content.\n    \n    ```\n    {{page-title \"MyProject\"}}\n    \n    <h1 class=\"text-3xl font-bold underline\">\n      Hello world!\n    </h1>\n    \n    {{outlet}}\n    ```",
    "title": "Install Tailwind CSS With Ember.js - Tailwind CSS",
    "description": "Setting up Tailwind CSS in an Ember.js project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/qwik",
    "markdown": "# Install Tailwind CSS with Qwik\n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Qwik project if you don't have one set up already. The most common approach is to use [Create Qwik](https://qwik.builder.io/docs/getting-started/).\n    \n    ```\n    npm create qwik@latest my-projectcd my-project\n    ```\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies via npm, and then run the init command to generate both `tailwind.config.js` and `postcss.config.js`.\n    \n    ```\n    npm install -D tailwindcss postcss autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    module.exports = {\n      content: ['./src/**/*.{js,ts,jsx,tsx,mdx}'],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n4.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./src/global.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n5.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n6.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    import { component$ } from '@builder.io/qwik'\n    \n    export default component$(() => {\n      return (\n        <h1 class=\"text-3xl font-bold underline\">\n          Hello World!\n        </h1>\n      )\n    })\n    ```",
    "title": "Install Tailwind CSS with Qwik - Tailwind CSS",
    "description": "Setting up Tailwind CSS in an Qwik project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/guides/rspack",
    "markdown": "# Install Tailwind CSS with Rspack\n\n*   ## [Using React](https://tailwindcss.com/docs/guides/rspack#react)\n    \n*   ## [Using Vue](https://tailwindcss.com/docs/guides/rspack#vue)\n    \n\n![](https://tailwindcss.com/_next/static/media/installation.50c59fdd.jpg)\n\n1.  ## Create your project\n    \n    Start by creating a new Rspack project if you don’t have one set up already. The most common approach is to use [Rspack CLI](https://www.rspack.dev/guide/quick-start.html#using-the-rspack-cli).\n    \n2.  ## Install Tailwind CSS\n    \n    Install `tailwindcss` and its peer dependencies, then generate your `tailwind.config.js` and `postcss.config.js` files.\n    \n    ```\n    npm install -D tailwindcss postcss postcss-loader autoprefixernpx tailwindcss init -p\n    ```\n    \n3.  ## Enable PostCSS support\n    \n    In your `rspack.config.js` file, enable the PostCSS loader. See [the documentation](https://www.rspack.dev/guide/language-support.html#tailwind-css) for more information.\n    \n    ```\n    module.exports = {\n      // ...\n      module: {\n        rules: [\n          {\n            test: /\\.css$/,\n            use: [\"postcss-loader\"],\n            type: \"css\",\n          },\n      // ...\n    ```\n    \n4.  ## Configure your template paths\n    \n    Add the paths to all of your template files in your `tailwind.config.js` file.\n    \n    ```\n    /** @type {import('tailwindcss').Config} */\n    export default {\n      content: [\n        \"./src/**/*.{js,ts,jsx,tsx}\",\n      ],\n      theme: {\n        extend: {},\n      },\n      plugins: [],\n    }\n    ```\n    \n5.  ## Add the Tailwind directives to your CSS\n    \n    Add the `@tailwind` directives for each of Tailwind’s layers to your `./src/index.css` file.\n    \n    ```\n    @tailwind base;\n    @tailwind components;\n    @tailwind utilities;\n    ```\n    \n6.  ## Start your build process\n    \n    Run your build process with `npm run dev`.\n    \n7.  ## Start using Tailwind in your project\n    \n    Start using Tailwind’s utility classes to style your content.\n    \n    ```\n    export default function App() {\n      return (\n        <h1 className=\"text-3xl font-bold underline\">\n          Hello world!\n        </h1>\n      )\n    }\n    ```",
    "title": "Install Tailwind CSS with Rspack - Tailwind CSS",
    "description": "Setting up Tailwind CSS in a Rspack project.",
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/examples/forms",
    "markdown": "# Tailwind CSS Components - Tailwind UI\n\n![](https://tailwindcss.com/img/beams-basic-transparent.png)\n\n## Marketing\n\nHeroes, feature sections, newsletter sign up forms — everything you need to build beautiful marketing websites.\n\n### Page Sections\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/marketing/faq-sections.png)\n    \n    #### [FAQs](https://tailwindcss.com/components/marketing/sections/faq-sections)\n    \n    10 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/marketing/footers.png)\n    \n    #### [Footers](https://tailwindcss.com/components/marketing/sections/footers)\n    \n    10 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Elements\n\n### Feedback\n\n### Page Examples\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/marketing/landing-pages.png)\n    \n    #### [Landing Pages](https://tailwindcss.com/components/marketing/page-examples/landing-pages)\n    \n    4 examples\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/marketing/pricing-pages.png)\n    \n    #### [Pricing Pages](https://tailwindcss.com/components/marketing/page-examples/pricing-pages)\n    \n    3 examples\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/marketing/about-pages.png)\n    \n    #### [About Pages](https://tailwindcss.com/components/marketing/page-examples/about-pages)\n    \n    3 examples\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n## Application UI\n\nForm layouts, tables, modal dialogs — everything you need to build beautiful responsive web applications.\n\n### Application Shells\n\n### Headings\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/card-headings.png)\n    \n    #### [Card Headings](https://tailwindcss.com/components/application-ui/headings/card-headings)\n    \n    6 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Data Display\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/stats.png)\n    \n    #### [Stats](https://tailwindcss.com/components/application-ui/data-display/stats)\n    \n    5 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/calendars.png)\n    \n    #### [Calendars](https://tailwindcss.com/components/application-ui/data-display/calendars)\n    \n    8 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Lists\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/tables.png)\n    \n    #### [Tables](https://tailwindcss.com/components/application-ui/lists/tables)\n    \n    20 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/grid-lists.png)\n    \n    #### [Grid Lists](https://tailwindcss.com/components/application-ui/lists/grid-lists)\n    \n    7 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/feeds.png)\n    \n    #### [Feeds](https://tailwindcss.com/components/application-ui/lists/feeds)\n    \n    3 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Forms\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/textareas.png)\n    \n    #### [Textareas](https://tailwindcss.com/components/application-ui/forms/textareas)\n    \n    5 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/radio-groups.png)\n    \n    #### [Radio Groups](https://tailwindcss.com/components/application-ui/forms/radio-groups)\n    \n    12 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/checkboxes.png)\n    \n    #### [Checkboxes](https://tailwindcss.com/components/application-ui/forms/checkboxes)\n    \n    4 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/toggles.png)\n    \n    #### [Toggles](https://tailwindcss.com/components/application-ui/forms/toggles)\n    \n    5 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/action-panels.png)\n    \n    #### [Action Panels](https://tailwindcss.com/components/application-ui/forms/action-panels)\n    \n    8 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/comboboxes.png)\n    \n    #### [Comboboxes](https://tailwindcss.com/components/application-ui/forms/comboboxes)\n    \n    5 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Feedback\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/alerts.png)\n    \n    #### [Alerts](https://tailwindcss.com/components/application-ui/feedback/alerts)\n    \n    6 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/empty-states.png)\n    \n    #### [Empty States](https://tailwindcss.com/components/application-ui/feedback/empty-states)\n    \n    6 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Navigation\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/tabs.png)\n    \n    #### [Tabs](https://tailwindcss.com/components/application-ui/navigation/tabs)\n    \n    9 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/breadcrumbs.png)\n    \n    #### [Breadcrumbs](https://tailwindcss.com/components/application-ui/navigation/breadcrumbs)\n    \n    4 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/progress-bars.png)\n    \n    #### [Progress Bars](https://tailwindcss.com/components/application-ui/navigation/progress-bars)\n    \n    8 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Overlays\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/notifications.png)\n    \n    #### [Notifications](https://tailwindcss.com/components/application-ui/overlays/notifications)\n    \n    6 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Elements\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/buttons.png)\n    \n    #### [Buttons](https://tailwindcss.com/components/application-ui/elements/buttons)\n    \n    10 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/button-groups.png)\n    \n    #### [Button Groups](https://tailwindcss.com/components/application-ui/elements/button-groups)\n    \n    5 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Layout\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/containers.png)\n    \n    #### [Containers](https://tailwindcss.com/components/application-ui/layout/containers)\n    \n    5 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/cards.png)\n    \n    #### [Cards](https://tailwindcss.com/components/application-ui/layout/cards)\n    \n    10 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/media-objects.png)\n    \n    #### [Media Objects](https://tailwindcss.com/components/application-ui/layout/media-objects)\n    \n    8 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/dividers.png)\n    \n    #### [Dividers](https://tailwindcss.com/components/application-ui/layout/dividers)\n    \n    8 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Page Examples\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/application-ui/home-screens.png)\n    \n    #### [Home Screens](https://tailwindcss.com/components/application-ui/page-examples/home-screens)\n    \n    2 examples\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n## Ecommerce\n\nCheckout forms, shopping carts, product views — everything you need to build your next ecommerce front-end.\n\n### Components\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/ecommerce/reviews.png)\n    \n    #### [Reviews](https://tailwindcss.com/components/ecommerce/components/reviews)\n    \n    4 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n*   ![](https://tailwindcss.com/img/category-thumbnails/ecommerce/order-history.png)\n    \n    #### [Order History](https://tailwindcss.com/components/ecommerce/components/order-history)\n    \n    4 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n*   ![](https://tailwindcss.com/img/category-thumbnails/ecommerce/incentives.png)\n    \n    #### [Incentives](https://tailwindcss.com/components/ecommerce/components/incentives)\n    \n    8 components\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n### Page Examples\n\n*   ![](https://tailwindcss.com/img/category-thumbnails/ecommerce/product-pages.png)\n    \n    #### [Product Pages](https://tailwindcss.com/components/ecommerce/page-examples/product-pages)\n    \n    5 examples\n    \n    PNG previews only, upgrade to get the HTML.\n    \n\n## Frequently asked questions\n\n### General\n\nWhat does “lifetime access” mean exactly?\n\nTailwind UI products are a **one-time purchase, with no recurring subscription**. When you purchase any Tailwind UI product, you have access to all of the content in that product forever.\n\nWhat does “free updates” include?\n\nWhen you purchase any Tailwind UI product, any improvements we make or new content we add to that product will always be free for anyone who owns that product.\n\n**Individual component packages:** When you buy the Marketing, Application UI, or Ecommerce component packages individually, you'll get any new components we add to those packages in the future at no extra cost.\n\nWe regularly add new components to these packages whenever we have new ideas, and you can see what previous updates have looked like [in our changelog](https://tailwindcss.com/changelog).\n\nAny _new_ component packages we release are considered separate products, and can be purchased at an upgrade price.\n\n**All-access:** When you purchase an all-access license, you get access to every component package _and_ every site template available today, plus any additional component packages or templates we release in the future at no additional cost.\n\nThis means that if we add a brand new component package like “Journalism” or design a new social media website template, access to those products are included in your original purchase, with no upgrade cost.\n\n### Compatibility\n\nAre Figma, Sketch, or Adobe XD files included?\n\nNo, design assets for tools like Figma, Sketch, or Adobe XD are not included.\n\nWe don't produce high-quality design artifacts as part of our own design and development process, so building these extra resources means we can't spend as much time creating new examples in code which is where we believe we can provide the most value.\n\nWhat JS framework is used?\n\nAll of the components in Tailwind UI are provided in three formats: React, Vue, and vanilla HTML.\n\nThe React and Vue examples are fully functional out-of-the-box, and are powered by [Headless UI](https://headlessui.dev/) — a library of unstyled components we designed to integrate perfectly with Tailwind CSS. Headless UI supports both React and Vue 3, but is not compatible with Vue 2.\n\nThe vanilla HTML examples **do not include any JavaScript** and are designed for people who prefer to write any necessary JavaScript themselves.\n\nMost of the components do not rely on JS at all, but for the ones that do (dropdowns, dialogs, etc.) we've provided some simple comments in the HTML to explain things like what classes you need to use for different states (like a toggle switch being on or off), or what classes we recommend for transitioning elements on to or off of the screen (like a dialog opening).\n\nTo get a better idea of how this looks in practice, [check out our documentation](https://tailwindcss.com/documentation#integrating-with-javascript-frameworks).\n\nWhat version of Tailwind CSS is used?\n\nEverything in Tailwind UI is designed and developed for the latest version of Tailwind CSS, which is currently Tailwind CSS v3.4.\n\nWhat browsers are supported?\n\nThe components in Tailwind UI are designed to work in the latest, stable releases of all major browsers, including Chrome, Firefox, Safari, and Edge.\n\nWe don't support Internet Explorer 11.\n\n### Licensing\n\nCan I upgrade to a team license later?\n\nYup! If you're a solo developer you can start with a personal license, and then upgrade to the team license later if other developers join your team.\n\nThere is an \"Upgrade to Team License\" option under the \"Account\" menu within the Tailwind UI app after logging in.\n\nNote that we only offer team all-access licenses, and do not offer team licenses for the individual component packages.\n\nDo I need to purchase a license for each project I work on?\n\nUnlike most other templates/themes, you don't have to buy a new Tailwind UI license every time you want to use it on a new project.\n\nAs long as what you're building is allowed as per the license, you can build as many sites as you want without ever having to buy an additional license.\n\nFor more information and examples, [read through our license](https://tailwindcss.com/license).\n\nCan I use Tailwind UI for client projects?\n\nYes! As long what you're building is a custom website developed for a single client, you can totally use components and templates in Tailwind UI to help build it.\n\nThe only thing you can't do is use Tailwind UI to build a website or template that is resold to multiple clients.\n\nFor more information and examples, [read through our license](https://tailwindcss.com/license).\n\nCan I use Tailwind UI for my own commercial projects?\n\nAbsolutely! Your license gives you permission to build as many of your own projects as you like, whether those are simple public websites or SaaS applications that end users need to pay to access.\n\nAs long as what you’re building isn’t a website builder or other tool that customers can use to create their own sites using elements that originate from Tailwind UI, you’re good to go.\n\nFor more information and examples, [read through our license](https://tailwindcss.com/license)..\n\nCan I use Tailwind UI in open source projects?\n\nYep! As long as what you're building is some sort of actual website and not a derivative component library, theme builder, or other product where the primary purpose is clearly to repackage and redistribute our components, it's totally okay for that project to be open source.\n\nFor more information and examples of what is and isn't okay, [read through our license](https://tailwindcss.com/license).\n\nCan I sell templates/themes I build with Tailwind UI?\n\nNo, you cannot use Tailwind UI to create derivative products like themes, UI kits, page builders, or anything else where you would be repackaging and redistributing our components or templates for someone else to use to build their own sites.\n\nFor more information and examples of what is and isn't okay, [read through our license](https://tailwindcss.com/license).\n\n### Support\n\nDo you offer technical support?\n\nTailwind UI is a self-serve product, meaning that while we do offer customer support for account management and licensing related concerns, the expectation is that customers have the requisite knowledge of Tailwind CSS, HTML, React, and Vue to use the product successfully.\n\nBecause every project is different and the way independently authored pieces of code interact can be complex and time-consuming to understand, **we do not offer technical support or consulting**.\n\nTailwind UI customers do get access to a private Discord community where you can ask questions and help others with their questions in return, but we don't offer first-party technical support or consulting here ourselves.\n\nWhat is your refund policy?\n\nIf you're unhappy with your purchase for any reason, email us at [support@tailwindui.com](mailto:support@tailwindui.com) within 30 days and we'll refund you in full, no questions asked.",
    "title": "Tailwind CSS Components - Tailwind UI",
    "description": null,
    "languageCode": "en"
  },
  {
    "url": "https://tailwindcss.com/docs/typography-plugin",
    "markdown": "# tailwindlabs/tailwindcss-typography: Beautiful typographic defaults for HTML you don't control.\n\n  [![Tailwind CSS Typography](https://raw.githubusercontent.com/tailwindlabs/tailwindcss-typography/HEAD/.github/logo-light.svg)](https://tailwindcss.com/docs/typography-plugin)\n\nThe official Tailwind CSS Typography plugin provides a set of `prose` classes you can use to add beautiful typographic defaults to any vanilla HTML you don’t control, like HTML rendered from Markdown, or pulled from a CMS.\n\n<article class\\=\"prose lg:prose-xl\"\\>{{ markdown }}</article\\>\n\nTo see what it looks like in action, check out our [live demo](https://play.tailwindcss.com/uj1vGACRJA?layout=preview) on Tailwind Play.\n\n* * *\n\n## Installation\n\nInstall the plugin from npm:\n\nnpm install -D @tailwindcss/typography\n\nThen add the plugin to your `tailwind.config.js` file:\n\n/\\*\\* @type {import('tailwindcss').Config} \\*/\nmodule.exports \\= {\n  theme: {\n    // ...\n  },\n  plugins: \\[\n    require('@tailwindcss/typography'),\n    // ...\n  \\],\n}\n\n* * *\n\n## Basic usage\n\nNow you can use the `prose` classes to add sensible typography styles to any vanilla HTML:\n\n<article class\\=\"prose lg:prose-xl\"\\>\n  <h1\\>Garlic bread with cheese: What the science tells us</h1\\>\n  <p\\>\n    For years parents have espoused the health benefits of eating garlic bread with cheese to their\n    children, with the food earning such an iconic status in our culture that kids will often dress\n    up as warm, cheesy loaf for Halloween.\n  </p\\>\n  <p\\>\n    But a recent study shows that the celebrated appetizer may be linked to a series of rabies cases\n    springing up around the country.\n  </p\\>\n  <!-- ... -->\n</article\\>\n\n### Choosing a gray scale\n\nThis plugin includes a modifier class for each of the five gray scales Tailwind includes by default so you can easily style your content to match the grays you're using in your project.\n\n<article class\\=\"prose prose-slate\"\\>{{ markdown }}</article\\>\n\nHere are the classes that are generated using a totally default Tailwind CSS v2.0 build:\n\n| Class | Gray scale |\n| --- | --- |\n| `prose-gray` _(default)_ | Gray |\n| `prose-slate` | Slate |\n| `prose-zinc` | Zinc |\n| `prose-neutral` | Neutral |\n| `prose-stone` | Stone |\n\nModifier classes are designed to be used with the [multi-class modifier pattern](http://nicolasgallagher.com/about-html-semantics-front-end-architecture/#component-modifiers) and must be used in conjunction with the base `prose` class.\n\nNote\n\nAlways include the `prose` class when adding a gray scale modifier\n\n<article class\\=\"prose prose-stone\"\\>{{ markdown }}</article\\>\n\nTo learn about creating your own color themes, read the [adding custom color themes](#adding-custom-color-themes) documentation.\n\n### Applying a type scale\n\nSize modifiers allow you to adjust the overall size of your typography for different contexts.\n\n<article class\\=\"prose prose-xl\"\\>{{ markdown }}</article\\>\n\nFive different typography sizes are included out of the box:\n\n| Class | Body font size |\n| --- | --- |\n| `prose-sm` | 0.875rem _(14px)_ |\n| `prose-base` _(default)_ | 1rem _(16px)_ |\n| `prose-lg` | 1.125rem _(18px)_ |\n| `prose-xl` | 1.25rem _(20px)_ |\n| `prose-2xl` | 1.5rem _(24px)_ |\n\nThese can be used in combination with Tailwind's [breakpoint modifiers](https://tailwindcss.com/docs/responsive-design) to change the overall font size of a piece of content at different viewport sizes:\n\n<article class\\=\"prose md:prose-lg lg:prose-xl\"\\>{{ markdown }}</article\\>\n\nEverything about the provided size modifiers has been hand-tuned by professional designers to look as beautiful as possible, including the relationships between font sizes, heading spacing, code block padding, and more.\n\nSize modifiers are designed to be used with the [multi-class modifier pattern](http://nicolasgallagher.com/about-html-semantics-front-end-architecture/#component-modifiers) and must be used in conjunction with the base `prose` class.\n\nNote\n\nAlways include the `prose` class when adding a size modifier\n\n<article class\\=\"prose prose-lg\"\\>{{ markdown }}</article\\>\n\nTo learn about customizing the included type scales, read the documentation on [customizing the CSS](#customizing-the-css).\n\n### Adapting to dark mode\n\nEach default color theme includes a hand-designed dark mode version that you can trigger by adding the `prose-invert` class:\n\n<article class\\=\"prose dark:prose-invert\"\\>{{ markdown }}</article\\>\n\nTo learn about creating your own color themes, read the [adding custom color themes](#adding-custom-color-themes) documentation.\n\n### Element modifiers\n\nUse element modifiers to customize the style of individual elements in your content directly in your HTML:\n\n<article class\\=\"prose prose-img:rounded-xl prose-headings:underline prose-a:text-blue-600\"\\>\n  {{ markdown }}\n</article\\>\n\nThis makes it easy to do things like style links to match your brand, add a border radius to images, and tons more.\n\nHere's a complete list of available element modifiers:\n\n| Modifier | Target |\n| --- | --- |\n| `prose-headings:{utility}` | `h1`, `h2`, `h3`, `h4`, `th` |\n| `prose-lead:{utility}` | `[class~=\"lead\"]` |\n| `prose-h1:{utility}` | `h1` |\n| `prose-h2:{utility}` | `h2` |\n| `prose-h3:{utility}` | `h3` |\n| `prose-h4:{utility}` | `h4` |\n| `prose-p:{utility}` | `p` |\n| `prose-a:{utility}` | `a` |\n| `prose-blockquote:{utility}` | `blockquote` |\n| `prose-figure:{utility}` | `figure` |\n| `prose-figcaption:{utility}` | `figcaption` |\n| `prose-strong:{utility}` | `strong` |\n| `prose-em:{utility}` | `em` |\n| `prose-kbd:{utility}` | `kbd` |\n| `prose-code:{utility}` | `code` |\n| `prose-pre:{utility}` | `pre` |\n| `prose-ol:{utility}` | `ol` |\n| `prose-ul:{utility}` | `ul` |\n| `prose-li:{utility}` | `li` |\n| `prose-table:{utility}` | `table` |\n| `prose-thead:{utility}` | `thead` |\n| `prose-tr:{utility}` | `tr` |\n| `prose-th:{utility}` | `th` |\n| `prose-td:{utility}` | `td` |\n| `prose-img:{utility}` | `img` |\n| `prose-video:{utility}` | `video` |\n| `prose-hr:{utility}` | `hr` |\n\nWhen stacking these modifiers with other modifiers like `hover`, you most likely want the other modifier to come first:\n\n<article class\\=\"prose prose-a:text-blue-600 hover:prose-a:text-blue-500\"\\>{{ markdown }}</article\\>\n\nRead the Tailwind CSS documentation on [ordering stacked modifiers](https://tailwindcss.com/docs/hover-focus-and-other-states#ordering-stacked-modifiers) to learn more.\n\n### Overriding max-width\n\nEach size modifier comes with a baked in `max-width` designed to keep the content as readable as possible. This isn't always what you want though, and sometimes you'll want the content to just fill the width of its container.\n\nIn those cases, all you need to do is add `max-w-none` to your content to override the embedded max-width:\n\n<div class\\=\"grid grid-cols-4\"\\>\n  <div class\\=\"col-span-1\"\\>\n    <!-- ... -->\n  </div\\>\n  <div class\\=\"col-span-3\"\\>\n    <article class\\=\"prose max-w-none\"\\>{{ markdown }}</article\\>\n  </div\\>\n</div\\>\n\n* * *\n\n## Advanced topics\n\n### Undoing typography styles\n\nIf you have a block of markup embedded in some content that shouldn't inherit the `prose` styles, use the `not-prose` class to sandbox it:\n\n<article class\\=\"prose\"\\>\n  <h1\\>My Heading</h1\\>\n  <p\\>...</p\\>\n\n  <div class\\=\"not-prose\"\\>\n    <!-- Some example or demo that needs to be prose-free -->\n  </div\\>\n\n  <p\\>...</p\\>\n  <!-- ... -->\n</article\\>\n\nNote that you can't nest new `prose` instances within a `not-prose` block at this time.\n\n### Adding custom color themes\n\nYou can create your own color theme by adding a new key in the `typography` section of your `tailwind.config.js` file and providing your colors under the `css` key:\n\n/\\*\\* @type {import('tailwindcss').Config} \\*/\nmodule.exports \\= {\n  theme: {\n    extend: {\n      typography: ({ theme }) \\=> ({\n        pink: {\n          css: {\n            '--tw-prose-body': theme('colors.pink\\[800\\]'),\n            '--tw-prose-headings': theme('colors.pink\\[900\\]'),\n            '--tw-prose-lead': theme('colors.pink\\[700\\]'),\n            '--tw-prose-links': theme('colors.pink\\[900\\]'),\n            '--tw-prose-bold': theme('colors.pink\\[900\\]'),\n            '--tw-prose-counters': theme('colors.pink\\[600\\]'),\n            '--tw-prose-bullets': theme('colors.pink\\[400\\]'),\n            '--tw-prose-hr': theme('colors.pink\\[300\\]'),\n            '--tw-prose-quotes': theme('colors.pink\\[900\\]'),\n            '--tw-prose-quote-borders': theme('colors.pink\\[300\\]'),\n            '--tw-prose-captions': theme('colors.pink\\[700\\]'),\n            '--tw-prose-code': theme('colors.pink\\[900\\]'),\n            '--tw-prose-pre-code': theme('colors.pink\\[100\\]'),\n            '--tw-prose-pre-bg': theme('colors.pink\\[900\\]'),\n            '--tw-prose-th-borders': theme('colors.pink\\[300\\]'),\n            '--tw-prose-td-borders': theme('colors.pink\\[200\\]'),\n            '--tw-prose-invert-body': theme('colors.pink\\[200\\]'),\n            '--tw-prose-invert-headings': theme('colors.white'),\n            '--tw-prose-invert-lead': theme('colors.pink\\[300\\]'),\n            '--tw-prose-invert-links': theme('colors.white'),\n            '--tw-prose-invert-bold': theme('colors.white'),\n            '--tw-prose-invert-counters': theme('colors.pink\\[400\\]'),\n            '--tw-prose-invert-bullets': theme('colors.pink\\[600\\]'),\n            '--tw-prose-invert-hr': theme('colors.pink\\[700\\]'),\n            '--tw-prose-invert-quotes': theme('colors.pink\\[100\\]'),\n            '--tw-prose-invert-quote-borders': theme('colors.pink\\[700\\]'),\n            '--tw-prose-invert-captions': theme('colors.pink\\[400\\]'),\n            '--tw-prose-invert-code': theme('colors.white'),\n            '--tw-prose-invert-pre-code': theme('colors.pink\\[300\\]'),\n            '--tw-prose-invert-pre-bg': 'rgb(0 0 0 / 50%)',\n            '--tw-prose-invert-th-borders': theme('colors.pink\\[600\\]'),\n            '--tw-prose-invert-td-borders': theme('colors.pink\\[700\\]'),\n          },\n        },\n      }),\n    },\n  },\n  plugins: \\[\n    require('@tailwindcss/typography'),\n    // ...\n  \\],\n}\n\nSee our internal [style definitions](https://github.com/tailwindlabs/tailwindcss-typography/blob/master/src/styles.js) for some more examples.\n\n### Changing the default class name\n\nIf you need to use a class name other than `prose` for any reason, you can do so using the `className` option when registering the plugin:\n\n/\\*\\* @type {import('tailwindcss').Config} \\*/\nmodule.exports \\= {\n  theme: {\n    // ...\n  },\n  plugins: \\[\n    require('@tailwindcss/typography')({\n      className: 'wysiwyg',\n    }),\n  \\]\n  ...\n}\n\nNow every instance of `prose` in the default class names will be replaced by your custom class name:\n\n<article class\\=\"wysiwyg wysiwyg-slate lg:wysiwyg-xl\"\\>\n  <h1\\>My Heading</h1\\>\n  <p\\>...</p\\>\n\n  <div class\\=\"not-wysiwyg\"\\>\n    <!-- Some example or demo that needs to be prose-free -->\n  </div\\>\n\n  <p\\>...</p\\>\n  <!-- ... -->\n</article\\>\n\n### Customizing the CSS\n\nIf you want to customize the raw CSS generated by this plugin, add your overrides under the `typography` key in the `theme` section of your `tailwind.config.js` file:\n\n/\\*\\* @type {import('tailwindcss').Config} \\*/\nmodule.exports \\= {\n  theme: {\n    extend: {\n      typography: {\n        DEFAULT: {\n          css: {\n            color: '#333',\n            a: {\n              color: '#3182ce',\n              '&:hover': {\n                color: '#2c5282',\n              },\n            },\n          },\n        },\n      },\n    },\n  },\n  plugins: \\[\n    require('@tailwindcss/typography'),\n    // ...\n  \\],\n}\n\nLike with all theme customizations in Tailwind, you can also define the `typography` key as a function if you need access to the `theme` helper:\n\n/\\*\\* @type {import('tailwindcss').Config} \\*/\nmodule.exports \\= {\n  theme: {\n    extend: {\n      typography: (theme) \\=> ({\n        DEFAULT: {\n          css: {\n            color: theme('colors.gray.800'),\n\n            // ...\n          },\n        },\n      }),\n    },\n  },\n  plugins: \\[\n    require('@tailwindcss/typography'),\n    // ...\n  \\],\n}\n\nCustomizations should be applied to a specific modifier like `DEFAULT` or `xl`, and must be added under the `css` property. Customizations are authored in the same [CSS-in-JS syntax](https://tailwindcss.com/docs/plugins#css-in-js-syntax) used to write Tailwind plugins.\n\nSee [the default styles](https://github.com/tailwindlabs/tailwindcss-typography/blob/master/src/styles.js) for this plugin for more in-depth examples of configuring each modifier.\n\n* * *\n\n## Community\n\nFor help, discussion about best practices, or any other conversation that would benefit from being searchable:\n\n[Discuss the Tailwind CSS Typography plugin on GitHub](https://github.com/tailwindlabs/tailwindcss/discussions)\n\nFor casual chit-chat with others using the framework:\n\n[Join the Tailwind CSS Discord Server](https://tailwindcss.com/discord)",
    "title": "GitHub - tailwindlabs/tailwindcss-typography: Beautiful typographic defaults for HTML you don't control.",
    "description": "Beautiful typographic defaults for HTML you don't control. - tailwindlabs/tailwindcss-typography",
    "languageCode": "en"
  }
]